[{"title":"个人网络笔记本TiddlyWiki","url":"/2022/02/21/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0%E6%9C%ACTiddlyWiki/","content":"<p>老苏一个朋友最近跟 <code>wiki</code> 干上了，他跟老苏提了 <code>3</code> 个，分别是 <code>TiddlyWiki</code> 、<code>MediaWiki</code>  和 <code>BookStack</code> ，虽然在折腾 <code>MediaWiki</code> 时遇到了不少问题，但好在幸不辱命</p>\n<p><strong>什么是 TiddlyWiki ？</strong></p>\n<blockquote>\n<p><code>TiddlyWiki</code> 是一个仅由单个 <code>HTML</code> 文件组成的非网络应用的 <code>Wiki</code> 程序。这个程序仅使用 <code>HTML</code>、<code>CSS</code> 及 <code>JavaScript</code> 技术，完全不需要任何的数据库及动态程序语言。因此任何人皆可以自官方站点下载该程序页面后，即可开始使用。适合一般个人单机的使用和对个人电脑的管理工作。</p>\n</blockquote>\n<p><code>TiddlyWiki</code> 专为定制而设计，可根据用户的特定需求进行塑造，可以被塑造成广泛且任意范围的特殊应用。包括笔记应用程序、待办事项列表、演示文稿、收藏、创作工具、个人数据库、食谱收藏等。</p>\n<h1 id=\"版本\"><a href=\"#版本\" class=\"headerlink\" title=\"版本\"></a>版本</h1><p><code>TiddlyWiki</code> 有 3 种安装方式的版本</p>\n<ul>\n<li><code>html</code> 版：这是最简单的版本，就一个 <code>html</code> 文件；</li>\n<li><code>TiddlyDesktop</code> 版：这是一个特殊用途的网络浏览器，用于处理本地存储的 <code>TiddlyWiki</code>，基于 <code>nw.js</code>；</li>\n<li><code>Node.js</code> 版：这是基于 <code>Node.js</code> 搭建的服务器版，用 <code>Docker</code> 搭建的就是这个版本，官网文档中称为 <code>Client-Server Configuration</code>；</li>\n</ul>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>tiddlywiki</code> ，选择第二个 <code>nicolaw/tiddlywiki</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201292058599.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>tiddlywiki</code>，记得给目录添加 <code>everyone</code> 的读写权限</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201292232967.png\"></p>\n<p>不然会报错</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Error: Error creating directory &#39;&#x2F;var&#x2F;lib&#x2F;tiddlywiki&#x2F;mywiki&#39;</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/tiddlywiki</code></td>\n<td align=\"center\"><code>/var/lib/tiddlywiki</code></td>\n<td align=\"center\">存放数据</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201292202820.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>本地端口不冲突就行，不确定的话可以用命令查一下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看端口占用</span></span><br><span class=\"line\">netstat -tunlp | grep 端口号</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>8080</code></td>\n<td align=\"center\"><code>8080</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201292207145.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><p>默认情况下，用户名设置为 <code>anonymous</code> 而且无密码，你可以按照需要进行修改</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201292213410.png\"></p>\n<p>如果您在群晖内存比较小，可以设置 <code>NODE_MEM</code> 指定 <code>NodeJS</code> 可以使用的最大内存（以 <code>MB</code> 为单位）</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>NODE_MEM</code></td>\n<td align=\"center\">例如设为 <code>400</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201292226351.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:8080</code> 就能看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201292234674.png\"></p>\n<h2 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h2><p>按照前面的版本划分， <code>node.js</code> 版不能直接使用 <code>TiddlyWiki</code> 官方插件库，只能通过配置文件 <code>tiddlywiki.info</code> 来添加</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201301021620.png\"></p>\n<h3 id=\"简体中文\"><a href=\"#简体中文\" class=\"headerlink\" title=\"简体中文\"></a>简体中文</h3><p>在官方的插件库的 <code>Languages</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201301037534.png\"></p>\n<p>找到简体中文</p>\n<blockquote>\n<p><code>$:/languages/zh-Hans</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201301036250.png\"></p>\n<p>将 <code>tiddlywiki.info</code> 修改扩展名为 <code>txt</code> ，或者下载到本地进行编辑</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201301044747.png\"></p>\n<p>在 <code>tiddlywiki.info</code> 中添加下面这段</p>\n<blockquote>\n<p>对应前面的 <code>$:/languages/zh-Hans</code></p>\n</blockquote>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">&quot;languages&quot;: [</span><br><span class=\"line\">    <span class=\"string\">&quot;zh-Hans&quot;</span></span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n\n<p>本质上 <code>tiddlywiki.info</code> 是个 <code>json</code> 文件，所以语法上遵从的规范是 <code>json</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201301043630.png\"></p>\n<p>恢复名称或者上传修改文件后，需要重启容器</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201301101130.png\"></p>\n<p>才能生效</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201301047980.png\"></p>\n<h3 id=\"Markdown\"><a href=\"#Markdown\" class=\"headerlink\" title=\"Markdown\"></a>Markdown</h3><p>在官方的插件库的 <code>Plugins</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201301052677.png\"></p>\n<p>找到 <code>markdown</code> 插件</p>\n<blockquote>\n<p><code>$:/plugins/tiddlywiki/markdown</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201301051568.png\"></p>\n<p>在 <code>tiddlywiki.info</code> 中的 <code>plugins</code> 中添加下面这段</p>\n<blockquote>\n<p>对应前面的  <code>$:/plugins/tiddlywiki/markdown</code></p>\n</blockquote>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;tiddlywiki/markdown&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201301058190.png\"></p>\n<p>修改完成后需要重启容器才能生效</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201301103898.png\"></p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>接下来您可以根据自己的需要安装插件，将 <code>TiddlyWiki</code> 打造成自己的专属应用。当然插件不是越多越好，一方面要考虑程序会不会变得臃肿，另一方面也要考虑未来的兼容性。</p>\n<p>老苏个人觉得入门并不难，但是要用好还是有点小门槛的。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Jermolene/TiddlyWiki5: A self-contained JavaScript wiki for the browser, Node.js, AWS Lambda etc.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0plcm1vbGVuZS9UaWRkbHlXaWtpNQ==\">https://github.com/Jermolene/TiddlyWiki5<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Installing custom plugins on Node.js: TiddlyWiki — a non-linear personal web notebook<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly90aWRkbHl3aWtpLmNvbS9zdGF0aWMvSW5zdGFsbGluZyUyNTIwY3VzdG9tJTI1MjBwbHVnaW5zJTI1MjBvbiUyNTIwTm9kZS5qcy5odG1s\">https://tiddlywiki.com/static/Installing%2520custom%2520plugins%2520on%2520Node.js.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>TiddlyWiki 舞 — 基礎文件正體中文版<br>地址：<span class=\"exturl\" data-url=\"aHR0cDovL3R3NS16aC50aWRkbHlzcG90LmNvbS8=\">http://tw5-zh.tiddlyspot.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Jermolene/TiddlyDesktop: A custom desktop browser for TiddlyWiki 5 and TiddlyWiki Classic, based on nw.js<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0plcm1vbGVuZS9UaWRkbHlEZXNrdG9w\">https://github.com/Jermolene/TiddlyDesktop<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>tiddly-gittly/TidGi-Desktop: TidGi is an auto-git-backup, privatcy-in-mind, freely-deployed Tiddlywiki knowledgement Desktop app, with local REST API. 「 太记 」是一个基于「 太微 TiddlyWiki 」的知识管理桌面应用，能自动用Git备份、保护隐私内容、部署为博客，且可通过RESTAPI与Anki等应用连接。（迭代开发中欢迎试用，开发进度见下方链接，点 Watch 里面选 Release 可以在更新修复的时候收到通知！）(Under active development, see website below for details, click Watch and select “release” to get update!!)<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RpZGRseS1naXR0bHkvVGlkR2ktRGVza3RvcA==\">https://github.com/tiddly-gittly/TidGi-Desktop<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","wiki"]},{"title":"Prowlarr：一个新的索引聚合器","url":"/2022/02/18/Prowlarr%EF%BC%9A%E4%B8%80%E4%B8%AA%E6%96%B0%E7%9A%84%E7%B4%A2%E5%BC%95%E8%81%9A%E5%90%88%E5%99%A8/","content":"<p><strong>什么是 Prowlarr ？</strong></p>\n<blockquote>\n<p><code>Prowlarr</code> 是建立在流行的 <code>arr .net/reactjs</code> 基础堆栈上的索引器管理器/代理，可与您的各种 <code>PVR</code> 应用程序集成。<code>Prowlarr</code> 支持对 <code>Torrent Trackers</code> 和 <code>Usenet Indexers</code> 管理。它与 <code>Lidarr</code>、<code>Mylar3</code>、<code>Radarr</code>、<code>Readarr</code> 和 <code>Sonar</code> 无缝集成，为您的索引器提供完整的管理，无需为每个应用程序设置索引器。【百度翻译】</p>\n</blockquote>\n<p>功能上来说和之前介绍的 <code>Jackett</code> 是一样的，而界面风格则继承了 <code>arr</code> 系列的一贯风格，所以上手还是很简单的</p>\n<blockquote>\n<p>如果你还不了解 <code>Jackett</code> ，可以看看老苏写的 『 <a href=\"https://laosu.ml/2021/02/08/%E8%B5%84%E6%BA%90%E8%81%9A%E5%90%88%E6%90%9C%E7%B4%A2%E7%A5%9E%E5%99%A8Jackett\">资源聚合搜索神器Jackett</a> 』</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>prowlarr</code> ，选择第一个 <code>linuxserver/prowlarr</code>，版本选择 <code>develop</code>。</p>\n<blockquote>\n<p>这个镜像有三个 <code>tags</code>，分别是 <code>develop</code>、<code>nightly</code>、<code>nightly-alpine</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201231943955.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>prowlarr</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/prowlarr</code></td>\n<td align=\"center\"><code>/config</code></td>\n<td align=\"center\">存放设置</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201231949103.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>本地端口不冲突就行，不确定的话可以用命令查一下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看端口占用</span></span><br><span class=\"line\">netstat -tunlp | grep 端口号</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>9696</code></td>\n<td align=\"center\"><code>9696</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201231949366.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>PUID</code></td>\n<td align=\"center\">设为 <code>1000</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>PGID</code></td>\n<td align=\"center\">设为 <code>1000</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>TZ</code></td>\n<td align=\"center\">设为 <code>Asia/Shanghai</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201232007641.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:9696</code> 就能看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201232008255.png\"></p>\n<h2 id=\"添加索引器\"><a href=\"#添加索引器\" class=\"headerlink\" title=\"添加索引器\"></a>添加索引器</h2><p>点 <code>Add New Indexer</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201232058586.png\"></p>\n<p>搜素支持过滤，例如支持 <code>中文</code> 的 <code>public</code> 类型的搜索网站</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201232101858.png\"></p>\n<p>不过似乎都是搜动漫的，老苏想添加 <code>Zooqle</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201232118042.png\"></p>\n<p>结果发现 <code>Base Url</code> 只有选 <code>https://zooqle.unblockninja.com/</code>  时 <code>Test</code> 才能通过</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201232124350.png\"></p>\n<p>其他地址都会报错</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201232123840.png\"></p>\n<p>添加完成后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201232127767.png\"></p>\n<p>在顶部的搜索栏中输入 <code>狙击手</code>，回车后会返回结果</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201232128037.png\"></p>\n<h2 id=\"下载客户端\"><a href=\"#下载客户端\" class=\"headerlink\" title=\"下载客户端\"></a>下载客户端</h2><p>以 <code>aira</code> 为例，<code>Settings</code> –&gt; <code>Download Clients</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201291452541.png\"></p>\n<p>点 <code>+</code> 号添加下载客户端</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201291500994.png\"></p>\n<p><code>Secret token</code> 需要从 <code>Aira</code> 的环境变量中获取</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201291529239.png\"></p>\n<p>设置很简单，只要 <code>Test</code> 通过就可以点 <code>Save</code> 保存</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201291507163.png\"></p>\n<p>现在可以直接下载</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201291513510.png\"></p>\n<p>打开下载器界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201291517594.png\"></p>\n<h2 id=\"整合应用端\"><a href=\"#整合应用端\" class=\"headerlink\" title=\"整合应用端\"></a>整合应用端</h2><p>以 <code>Sonarr</code> 为例，<code>Settings</code> –&gt; <code>Apps</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201291525414.png\"></p>\n<p>点 <code>+</code> 号添加应用</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201291526956.png\"></p>\n<p>进入 <code>Sonarr</code></p>\n<blockquote>\n<p> 需要说明的是 <code>Sync Level</code> </p>\n<ul>\n<li>  <code>Add and Remove Only</code>：在 <code>Prowlarr</code> 添加或删除索引器时，将其同步到应用程序。如果索引器在同步时关闭 - 它将被删除；</li>\n<li>  <code>Full Sync</code>- 完全同步将使您的应用程序和 <code>Prowlarr</code> 完全同步。然后，在 Prowlarr 中所做的任何更改都会同步到其他程序。远程进行的任何更改都将在下次同步时被 <code>Prowlarr</code> 覆盖；</li>\n<li>  <code>Disabled</code>- 将阻止索引器与程序完全同步；</li>\n</ul>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201291538494.png\"></p>\n<p>打开  <code>Sonarr</code>，<code>ApiKey</code> 需要从 <code>Sonarr</code> 的 <code>Settings</code> –&gt; <code>General</code> 获取</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201291847253.png\"></p>\n<p>设置比较简单，只要 <code>Test</code> 通过就可以点 <code>Save</code> 保存</p>\n<blockquote>\n<p>老苏偶然发现，如果你的 <code>Sonarr</code> 不是 <code>v3</code> 而是 <code>v2</code>，测试是通不过的😳</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201291849926.png\"></p>\n<p>回到 <code>Sonarr</code> ，在 <code>Settings</code> –&gt; <code>Indexers</code> 中会自动增加 <code>Zooqle (Prowlarr)</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201291911176.png\"></p>\n<p>当然你直接在 <code>Sonarr</code> 中增加 <code>Indexers</code> 也是一样的</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Prowlarr/Prowlarr<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1Byb3dsYXJyL1Byb3dsYXJy\">https://github.com/Prowlarr/Prowlarr<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>linuxserver/prowlarr - Docker Image | Docker Hub<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9yZWdpc3RyeS5odWIuZG9ja2VyLmNvbS9yL2xpbnV4c2VydmVyL3Byb3dsYXJyLw==\">https://registry.hub.docker.com/r/linuxserver/prowlarr/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Prowlarr API Docs<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm93bGFyci5jb20vZG9jcy9hcGkv\">https://prowlarr.com/docs/api/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Prowlarr Quick Start Guide | WikiArr<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLnNlcnZhcnIuY29tL3Byb3dsYXJyL3F1aWNrLXN0YXJ0LWd1aWRl\">https://wiki.servarr.com/prowlarr/quick-start-guide<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","多媒体","搜索","BitTorrent"]},{"title":"多用户在线书签管理工具My-BookMark","url":"/2022/02/16/%E5%A4%9A%E7%94%A8%E6%88%B7%E5%9C%A8%E7%BA%BF%E4%B9%A6%E7%AD%BE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7My-BookMark/","content":"<p><strong>什么是 My-BookMark ？</strong></p>\n<blockquote>\n<p><code>My-BookMark</code> 是在线的书签管理工具，帮助你快速记录你喜欢的网站，并可以随时随地查看这些站点，而不必拘泥于使用的浏览器。无论在什么地方，只要能接入网络，就能打开属于你自己的网络书签，看到自己收藏的页面网址。</p>\n</blockquote>\n<p>官方提供了在线体验的网站：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iLmx1Y3EuZnVuLw==\">https://b.lucq.fun/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<blockquote>\n<p>体验账号：<code>test</code>；密码：<code>123456</code>。</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>mybookmark</code> ，选择第一个 <code>luchenqun/mybookmark</code>，双击直接下载。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202202012043704.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>本地端口不冲突就行，不确定的话可以用命令查一下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看端口占用</span></span><br><span class=\"line\">netstat -tunlp | grep 端口号</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>2000</code></td>\n<td align=\"center\"><code>2000</code></td>\n<td align=\"center\"><code>web</code> 端口</td>\n</tr>\n<tr>\n<td align=\"center\"><code>3310</code></td>\n<td align=\"center\"><code>3306</code></td>\n<td align=\"center\"><code>MySQL</code> 端口</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202202012116917.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:2000</code> 就能看到主界面，切换至登录界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202202012137868.png\"></p>\n<p>登录成功还是空空的</p>\n<blockquote>\n<p>默认的账号：<code>test</code>，密码：<code>123456</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202202012137035.png\"></p>\n<p>你也可以注册自己的账号</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202202012141725.png\"></p>\n<p>软件支持导入浏览器的书签，因此可以快速使用</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202202031352960.png\"></p>\n<p>导入完成后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202202031355914.png\"></p>\n<p>支持对书签的编辑</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202202031357631.png\"></p>\n<p>功能还是比较简单的，上一张官方的动图</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202202031401001.gif\"></p>\n<h2 id=\"Chrome-插件\"><a href=\"#Chrome-插件\" class=\"headerlink\" title=\"Chrome 插件\"></a>Chrome 插件</h2><p>作为书签应用，收藏的便利性是非常重要的，<code>My-BookMark</code> 提供了 <code>Chrome</code> 插件</p>\n<p>如果你能科学上网，可以在 <code>Chrome 网上应用店</code> 中找</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202202031414318.png\"></p>\n<p>如果访问不了 <code>Chrome 网上应用店</code> 也别担心，先到 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2x1Y2hlbnF1bi9ib29rbWFyay1wbHVnaW4=\">https://github.com/luchenqun/bookmark-plugin<i class=\"fa fa-external-link-alt\"></i></span> 下载代码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202202031418567.png\"></p>\n<p>将下载的 <code>bookmark-plugin-master.zip</code> 解压，在 <code>Chrome 浏览器</code> 中打开 <code>开发者模式</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202202031421685.png\"></p>\n<p>然后选 <code>加载已解压的扩展程序</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202202031425123.png\"></p>\n<p>插件安装完成后并不能直接使用，因为默认登录的是官方服务器</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202202031426027.png\"></p>\n<p>进入插件的 <code>选项</code> 设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202202031431794.png\"></p>\n<p>例如输入 <code>http://192.168.0.197:2000/</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202202031435778.png\"></p>\n<p>再次打开插件，服务器地址已经改成了自己的服务器地址</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202202031436182.png\"></p>\n<p>登录后就可以直接添加书签了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202202031438163.png\"></p>\n<h2 id=\"数据备份\"><a href=\"#数据备份\" class=\"headerlink\" title=\"数据备份\"></a>数据备份</h2><p>因为数据库在容器内，而且没有持久化，所以数据库的备份可能用客户端会比较方便，但默认情况下，容器内的 <code>MySQL</code> 不支持远程访问，需要我们做一些处理：</p>\n<ol>\n<li>进入容器之后更新 <code>/etc/mysql/mysql.conf.d/mysqld.cnf</code>，将绑定地址 <code>127.0.0.1</code> 改为 <code>0.0.0.0</code></li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202202031606755.png\"></p>\n<p>因为容器内未带编辑器，所以老苏只能将 <code>mysqld.cnf</code> 拷贝到容器外编辑完后再拷贝回去</p>\n<blockquote>\n<p>在 <code>SSH</code> 客户端中执行👇下面的命令</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 新建目录</span></span><br><span class=\"line\">mkdir /volume2/docker/mybookmark</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /volume2/docker/mybookmark</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 mysqld.cnf 文件拷贝到容器外当前目录</span></span><br><span class=\"line\">docker cp luchenqun-mybookmark1:/etc/mysql/mysql.conf.d/mysqld.cnf mysqld.cnf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改文件权限</span></span><br><span class=\"line\">chmod -R 777 mysqld.cnf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改 mysqld.cnf 中的绑定地址</span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\"># 将 mysqld.cnf 文件拷贝到容器内  </span></span><br><span class=\"line\">docker cp mysqld.cnf luchenqun-mybookmark1:/etc/mysql/mysql.conf.d/mysqld.cnf</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>执行命令重启数据库服务</li>\n</ol>\n<blockquote>\n<p>在容器的 <code>终端机</code> 中执行👇下面的命令</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 修改文件权限</span></span><br><span class=\"line\">chmod -R 644 mysqld.cnf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启数据库服务</span></span><br><span class=\"line\">service mysql restart</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202202031644600.png\"></p>\n<ol start=\"3\">\n<li>创建 <code>MySQL</code> 远程访问的账号、密码</li>\n</ol>\n<blockquote>\n<p>在容器的 <code>终端机</code> 中执行👇下面的命令</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 用 root 登录，无密码</span></span><br><span class=\"line\">mysql -u root -p</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建远程访问账号 mbm ，密码 123456</span></span><br><span class=\"line\">CREATE USER <span class=\"string\">&#x27;mbm&#x27;</span>@<span class=\"string\">&#x27;%&#x27;</span> IDENTIFIED BY <span class=\"string\">&#x27;123456&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 授予用户在所有数据库上的所有权限</span></span><br><span class=\"line\">GRANT ALL ON *.* TO <span class=\"string\">&#x27;mbm&#x27;</span>@<span class=\"string\">&#x27;%&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 刷新系统权限表</span></span><br><span class=\"line\">flush privileges;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 退出</span></span><br><span class=\"line\">quit</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202202031802496.png\"></p>\n<p>以 <code>Navicat for MySQL</code> 为例</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202202031857937.png\"></p>\n<p>接下来就可以对数据库修改、备份等各种操作了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202202031859383.png\"></p>\n<h1 id=\"小彩蛋\"><a href=\"#小彩蛋\" class=\"headerlink\" title=\"小彩蛋\"></a>小彩蛋</h1><p><code>app-angular.js</code> 中发现的 <code>ASCII</code> 字符图</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202202012142845.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>luchenqun/my-bookmark: 在线书签管理工具<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2x1Y2hlbnF1bi9teS1ib29rbWFyaw==\">https://github.com/luchenqun/my-bookmark<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>luchenqun/bookmark-plugin: 配合my-bookmart快速添加书签到系统<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2x1Y2hlbnF1bi9ib29rbWFyay1wbHVnaW4=\">https://github.com/luchenqun/bookmark-plugin<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","书签"]},{"title":"多功能Web文件管理器Filestash","url":"/2022/02/14/%E5%A4%9A%E5%8A%9F%E8%83%BDWeb%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%99%A8Filestash/","content":"<p>今天是情人节，㊗️大家情人节快乐！</p>\n<p>明天是元宵节，元宵节一过，“年”就算是过完了，老苏提前预㊗️大家元宵节快乐，新年更上一层楼！</p>\n<hr>\n<p><strong>什么是 Filestash ？</strong></p>\n<blockquote>\n<p><code>Filestash</code> 是一个类似 <code>Dropbox</code> 的文件管理器，旨在通过抽象存储来解决 <code>Dropbox</code> 问题，通过实现一个简单的接口来引入自己的后端或创建自己的后端。可以通过浏览器管理您的文件，包括上传文件和文件夹，编辑文件，音频播放器，视频播放器，图像查看器、图像转码，还支持全文检索。目前支持 <code>FTP</code>、<code>FTPS</code>、<code>SFTP</code>、<code>WebDAV</code>、<code>Git</code>、<code>S3</code>、<code>LDAP</code>、<code>Mysql</code>、<code>CardDAV</code>、<code>CalDAV</code>、<code>Backblaze B2</code>、 <code>Minio</code>、<code>Dropbox</code>、<code>Google Drive</code>。</p>\n</blockquote>\n<p>简单概括一下就是 <code>Filestash</code> 支持大量开放和专有协议，可以从任何地方访问您在云中的数据。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/02/202202141023906.gif\"></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>filestash</code> ，选择第一个 <code>machines/filestash</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201091308210.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>filestash</code>，在 <code>filestash</code> 中再建一个子文件夹 <code>config</code></p>\n<ul>\n<li>在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL21pY2thZWwta2VyamVhbi9maWxlc3Rhc2gvbWFzdGVyL2NvbmZpZy9jb25maWcuanNvbg==\">https://raw.githubusercontent.com/mickael-kerjean/filestash/master/config/config.json<i class=\"fa fa-external-link-alt\"></i></span> 下载 <code>config.json</code> 文件</li>\n<li>将 <code>config.json</code> 文件放入 <code>config</code> 目录</li>\n<li>修改 <code>config.json</code> 文件的权限，新增 <code>Everyone</code> 读写权限</li>\n</ul>\n<blockquote>\n<p>如果没有正确设置权限的话，第一次登录修改密码时会报错</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201091454713.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/filestash</code></td>\n<td align=\"center\"><code>/app/data/state</code></td>\n<td align=\"center\">存放设置</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201091345893.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不冲突就行，不确定的话可以用命令查一下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看端口占用</span></span><br><span class=\"line\">netstat -tunlp | grep 端口号</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>8334</code></td>\n<td align=\"center\"><code>8334</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201091332810.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>APPLICATION_URL</code></td>\n<td align=\"center\">公网地址，应该是用于 <code>GDrive</code>、<code>Dropbox</code>获取参数的回调地址</td>\n</tr>\n<tr>\n<td align=\"center\"><code>GDRIVE_CLIENT_ID</code></td>\n<td align=\"center\"><code>GDrive</code> 客户端 <code>ID</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>GDRIVE_CLIENT_SECRET</code></td>\n<td align=\"center\"><code>GDrive</code> 客户端密匙</td>\n</tr>\n<tr>\n<td align=\"center\"><code>DROPBOX_CLIENT_ID</code></td>\n<td align=\"center\"><code>Dropbox</code> 客户端 <code>ID</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>ONLYOFFICE_URL</code></td>\n<td align=\"center\"><code>onlyoffice</code> 地址</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>老苏没有 <code>GDrive</code> 和  <code>Dropbox</code>，也没打算预览 <code>docx</code>、<code>xlsx</code> 等文件，所以这里没有设置环境变量</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201091350692.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:8334</code> 就能看到主界面，第一次需要创建密码，所以会跳转到后台管理界面</p>\n<ul>\n<li><p>后端地址： <code>http://群晖IP:8334/admin</code></p>\n</li>\n<li><p>前台地址 <code>http://群晖IP:8334</code></p>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201091447033.png\"></p>\n<p>接下来就会进入管理控制台</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201091456913.png\"></p>\n<p>进入 <code>Backend</code> 会显示所有支持的存储类型</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201091514045.png\"></p>\n<h2 id=\"WebDAV\"><a href=\"#WebDAV\" class=\"headerlink\" title=\"WebDAV\"></a>WebDAV</h2><p><code>WebDAV</code> 的参数比较简单，只要 <code>url</code>、<code>username</code> 和 <code>password</code></p>\n<blockquote>\n<p>老苏填的是 <code>webdav-aliyundriver</code> 的地址</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201091945581.png\"></p>\n<p>在浏览器中打开  <code>http://群晖IP:8334</code> 前台页面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201091959516.png\"></p>\n<p>点 <code>连接</code>，如果设置没有错误的话，会看到文件列表</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201092000956.png\"></p>\n<h2 id=\"SAMBA\"><a href=\"#SAMBA\" class=\"headerlink\" title=\"SAMBA\"></a>SAMBA</h2><p>用 <code>samba</code> 协议挂载了 <code>Airdisk Q1</code>，这是老苏玩群晖之前买的，直接挂个 <code>U盘</code> 就能远程访问</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201092107502.png\"></p>\n<p>在浏览器中打开  <code>http://群晖IP:8334</code> 前台页面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201092112525.png\"></p>\n<p>选择 <code>SAMBA</code> 点 <code>连接</code>，如果设置没有错误的话，会看到文件列表</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201092113142.png\"></p>\n<h2 id=\"MySQL\"><a href=\"#MySQL\" class=\"headerlink\" title=\"MySQL\"></a>MySQL</h2><p>用 <code>mysql</code> 挂载了 <code>MariaDB 5</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201092127232.png\"></p>\n<p>在浏览器中打开  <code>http://群晖IP:8334</code> 前台页面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201092126563.png\"></p>\n<p>选择 <code>MYSQL</code> 点 <code>连接</code>，会看到库</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201092124669.png\"></p>\n<p>进入表单</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201092134033.png\"></p>\n<h2 id=\"GIT\"><a href=\"#GIT\" class=\"headerlink\" title=\"GIT\"></a>GIT</h2><p>用 <code>GIT</code> 挂载了个 <code>repo</code> 测试了一下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201102153026.png\"></p>\n<p>不过 <code>github</code> 总是抽风，容器内能看到在下载，但总下不完全</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201102140524.png\"></p>\n<p>每次报错也不一样</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201102117689.png\"></p>\n<p>也会出现</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201102150573.png\"></p>\n<h1 id=\"功能\"><a href=\"#功能\" class=\"headerlink\" title=\"功能\"></a>功能</h1><p>功能方面有点类似 <code>PanIndex</code>，同样只能在不同的存储间切换，而不是能同时使用。</p>\n<p>但也有自己的特色：</p>\n<ol>\n<li> 对图像的支持：<code>Filestash</code> 非常擅长浏览大量图像库，如果您有数码单反相机，它还可以很好地支持 <code>RAW</code> 图像。</li>\n<li> 支持视频：<code>Filestash</code> 可以对一系列视频格式进行即时转码。</li>\n<li> 搜索：<code>Filestash</code>  可以进行全文搜索，也可以根据您的选择搜索文件名</li>\n<li> 共享链接：允许您使用内置机制的链接与他人共享文件和文件夹</li>\n<li>强大的文本编辑器：具有完整 <code>org 模式</code> 客户端支持的文本编辑器</li>\n<li>与 <code>Onlyoffice</code> 集成：有一个易于部署的 <code>OnlyOffice</code> 解决方案</li>\n</ol>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p><code>FileStash</code> 是一个简单易用，功能强大的文件管理器，具有许多附加组件和扩展，虽然老苏并没有都去试用，但是可玩性还是很高的，如果你愿意花时间去尝试的话。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>mickael-kerjean/filestash: 🦄 A modern web client for SFTP, S3, FTP, WebDAV, Git, Minio, LDAP, CalDAV, CardDAV, Mysql, Backblaze, …<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21pY2thZWwta2VyamVhbi9maWxlc3Rhc2g=\">https://github.com/mickael-kerjean/filestash<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Filestash — Self-hosted client for your data<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZmlsZXN0YXNoLmFwcC8=\">https://www.filestash.app/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Getting started<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZmlsZXN0YXNoLmFwcC9kb2NzLw==\">https://www.filestash.app/docs/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","网盘"]},{"title":"用Dim搭建轻量级媒体服务器","url":"/2022/02/11/%E7%94%A8Dim%E6%90%AD%E5%BB%BA%E8%BD%BB%E9%87%8F%E7%BA%A7%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8/","content":"<p><strong>什么是 Dim ？</strong></p>\n<blockquote>\n<p><code>Dim</code> 是一个自托管媒体管理器。通过最少的设置，<code>Dim</code> 将组织和美化您的媒体收藏，让您随时随地访问和播放它们。</p>\n</blockquote>\n<p>从功能上来说，<code>Dim</code> 像简版的 <code>Jellyfin</code>，设置也更简单。</p>\n<h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><p>和 <code>Jellyfin</code> 一样，<code>Dim</code> 也支持硬件转码。关于硬件转码老苏查了一下，有限定条件：</p>\n<ul>\n<li>首先、群晖的系统版本需要 <code>DS918+</code>，反正 <code>DS3617xs</code> 不支持，但跟白裙、黑裙没啥关系；</li>\n<li>其次、要有 <code>DRM( Direct Rendering Manager)</code>，这是 <code>Linux</code> 内核的一个子系统，负责与显卡的 <code>GPU</code> 连接；</li>\n<li>最后、一般来说主板上都有集显，理论上越厉害的 <code>CPU</code> 带的集显也越牛，但是有些可能需要打补丁，还有些打了补丁可能也没用；</li>\n</ul>\n<p> 如何快速知道自己的群晖是否支持呢？最简单的办法还是 <code>SSH</code> 客户端登录到群晖，通过下面的命令来检测</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看系统是否支持显卡硬件转码</span></span><br><span class=\"line\">ls /dev/dri</span><br></pre></td></tr></table></figure>\n\n<p><code>DS3617xs</code> 显然是不支持</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201261708339.png\"></p>\n<p>而另一台 <code>DS918+</code> 则是支持</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201261709796.png\"></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，将其命名为 <code>dim</code>，然后在其中建两个子目录 <code>config</code> 和 <code>media</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201252117585.png\"></p>\n<p>其实 <code>Dim</code> 是个单容器的项目，但是官方没有在 <code>Docker Hub</code> 上托管镜像，这就有点尴尬了，所以老苏决定还是用 <code>portainer</code> 来安装。</p>\n<p>官方提供了 <code>docker-compose.yml</code> 文件，原版在这里：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0R1c2stTGFicy9kaW0vYmxvYi9tYXN0ZXIvZG9ja2VyLWNvbXBvc2UtdGVtcGxhdGUueW1s\">https://github.com/Dusk-Labs/dim/blob/master/docker-compose-template.yml<i class=\"fa fa-external-link-alt\"></i></span> </p>\n<blockquote>\n<p>老苏的 <code>docker</code> 目录在 <code>volume2</code> 上，注意根据自己的修改</p>\n</blockquote>\n<p>支持硬件转码的机器上用下面👇这段脚本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">version: <span class=\"string\">&quot;3.8&quot;</span></span><br><span class=\"line\">services:</span><br><span class=\"line\">  dim:</span><br><span class=\"line\">    container_name: dim</span><br><span class=\"line\">    image: ghcr.io/dusk-labs/dim:dev</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - 8585:8000</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - /volume2/docker/dim/config:/opt/dim/config</span><br><span class=\"line\">      - /volume2/docker/dim/media:/media</span><br><span class=\"line\">      <span class=\"comment\"># 像下面这样添加更多文件夹:</span></span><br><span class=\"line\">      <span class=\"comment\"># - /&lt;host_media_path&gt;:/media2</span></span><br><span class=\"line\">    <span class=\"comment\"># 使用以下几行通过硬件加速您的设备</span></span><br><span class=\"line\">    devices:</span><br><span class=\"line\">      <span class=\"comment\"># VAAPI Device example:</span></span><br><span class=\"line\">      - /dev/dri/renderD128:/dev/dri/renderD128</span><br></pre></td></tr></table></figure>\n\n<p>不支持硬件转码的机器上用上面那段会报错： <code>no such file or directory Encountered errors while bringing up the project</code>，所以要去掉 <code>devices</code> 的部分👇</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">version: <span class=\"string\">&quot;3.8&quot;</span></span><br><span class=\"line\">services:</span><br><span class=\"line\">  dim:</span><br><span class=\"line\">    container_name: dim</span><br><span class=\"line\">    image: ghcr.io/dusk-labs/dim:dev</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - 8585:8000</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - /volume2/docker/dim/config:/opt/dim/config</span><br><span class=\"line\">      - /volume2/docker/dim/media:/media</span><br><span class=\"line\">      <span class=\"comment\"># 像下面这样添加更多文件夹:</span></span><br><span class=\"line\">      <span class=\"comment\"># - /&lt;host_media_path&gt;:/media2</span></span><br></pre></td></tr></table></figure>\n\n<p>在 <code>poratiner</code> 左侧菜单找到 <code>Stack</code> –&gt; <code>Add stack</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201141901198.png\"></p>\n<p>将上面的内容贴入 <code>Web editor</code>，别忘了填上 <code>Name</code></p>\n<blockquote>\n<p><code>Name</code> 注意不要用大写字母和特殊字符</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201261740004.png\"></p>\n<p>点最下面的 <code>Deploy the stack</code>，然后等待完成</p>\n<blockquote>\n<p>下载镜像的速度有点慢，说实话挺煎熬的，老苏是先用命令行 <code>docker pull ghcr.io/dusk-labs/dim:dev</code> 下载之后再执行 <code>docker-compose.yml</code>，虽然不会加速，但是好歹能看到下载的进度，所以感觉要好很多😂</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201252138841.png\"></p>\n<p>不出意外的话，在 <code>Containers</code> 中应该可以看到容器 <code>dim</code> 正在 <code>running</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201261753085.png\"></p>\n<p>在群晖 <code>Docker</code> 管理器中也是一样的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201261755082.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:8585</code> 就能看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201261758069.png\"></p>\n<h2 id=\"注册管理员\"><a href=\"#注册管理员\" class=\"headerlink\" title=\"注册管理员\"></a>注册管理员</h2><p>第一次需要注册账号，注册的第一个用户就是管理员</p>\n<blockquote>\n<p>密码不能少于 <code>8</code> 位</p>\n</blockquote>\n<p>登录之后就是主界面，开始并没有内容</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201261821782.png\"></p>\n<p>点中间橘黄色的 <code>Add library</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201261845019.png\"></p>\n<p>开始扫描加载</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201261847013.png\"></p>\n<p>扫描完成后的 <code>Libraries</code> 界面</p>\n<blockquote>\n<ol>\n<li>从日志看匹配影片是通过 <code>tmdb</code>，但匹配度非常低，而且即便你已经通过刮削器处理过依然不能识别，可能还需要手动匹配；</li>\n<li>如果不将 <code>themoviedb.org</code> 加入科学上网，在手动匹配的时候会没有反应；</li>\n</ol>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201262147823.png\"></p>\n<p><code>Dashboard</code> 界面还是非常炫酷的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201262225367.png\"></p>\n<h2 id=\"注册新用户\"><a href=\"#注册新用户\" class=\"headerlink\" title=\"注册新用户\"></a>注册新用户</h2><p>除了管理员之外，如果再注册用户，需要提供 <code>Invite token</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201262222273.png\"></p>\n<p>管理员登录后，<code>Preferences</code> –&gt; <code>Invites</code> –&gt; <code>Generate a new token</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201262230046.png\"></p>\n<p>新生成的 <code>Token</code> ，状态是 <code>Available</code>，可以用于注册用户，当 <code>Token</code> 注册了用户之后，状态会变成注册的用户名</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201262247555.png\"></p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p> <code>Dim</code> 作为轻量级媒体服务器，基本的播放都是没问题的，不仅可以选择播放质量</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201262310038.png\"></p>\n<p>还可以设置硬件转码，当然首先要设备支持才行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201262311720.png\"></p>\n<blockquote>\n<p>老苏并没有验证硬件转码，不过 <code>VA-API</code> 应该没问题，是否支持 <code>QSV</code> 就不确定了，虽然有驱动，但毕竟 <code>Dim</code> 不像 <code>Jellyfin</code> 有专门的设置项</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/02/202202111119649.png\"></p>\n<p> <code>Dim</code> 从功能上不如 <code>Jellyfin</code> 多，但设置比 <code>Jellyfin</code> 简单，没有一堆让你晕晕乎乎的专业名词，这是 <code>Dim</code> 的优点。</p>\n<p> 要说缺点，就是在影片的识别方面还亟待提高。总的来说还是值得持续关注。</p>\n<h1 id=\"附录\"><a href=\"#附录\" class=\"headerlink\" title=\"附录\"></a>附录</h1><p>如果镜像实在下不动，可以到老苏的天翼云共享</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbG91ZC4xODkuY24vd2ViL3NoYXJlP2NvZGU9ZWFVYnVxYWFZenlx\">https://cloud.189.cn/web/share?code=eaUbuqaaYzyq<i class=\"fa fa-external-link-alt\"></i></span>（访问码：mf6h）</p>\n<p>中下载 <code>ghcr-io-dusk-labs-dim(dev).syno.tar</code> 文件，然后将其上传到群晖的一个目录中</p>\n<p>打开群晖 <code>docker</code> 管理器，<code>映像</code> –&gt; <code>新增</code> –&gt; <code>从文件添加</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/02/202202111059325.png\"></p>\n<p>选择上传的文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/02/202202111102271.png\"></p>\n<p>然后在 <code>SSH</code> 客户端中执行下面👇的命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run -d \\</span><br><span class=\"line\">--name dim \\</span><br><span class=\"line\">--device /dev/dri/renderD128:/dev/dri/renderD128 \\</span><br><span class=\"line\">-p 8585:8000 \\</span><br><span class=\"line\">-v /volume1/docker/dim/config:/opt/dim/config \\</span><br><span class=\"line\">-v /volume1/docker/dim/media:/media \\</span><br><span class=\"line\">ghcr.io/dusk-labs/dim:dev</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Dusk-Labs/dim: Dim, a media manager fueled by dark forces.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0R1c2stTGFicy9kaW0=\">https://github.com/Dusk-Labs/dim<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","多媒体"]},{"title":"开源全文搜索引擎MeiliSearch","url":"/2022/02/09/%E5%BC%80%E6%BA%90%E5%85%A8%E6%96%87%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8EMeiliSearch/","content":"<blockquote>\n<p>单独安装 <code>MeiliSearch</code> 似乎并没有什么实际的用途，本文只是记录了老苏一次失败的探索。想法应该是没问题的，奈何实力不够啊。</p>\n</blockquote>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>老苏博客上的搜索变得越来越慢，慢的原因应该主要是 <code>2</code> 个：一个是 <code>search.json</code> 的加载速度，一个是全文检索的速度。前者可以通过 <code>CDN</code> 或者其他方式来解决，后者老苏想将 <code>hexo-generator-searchdb</code> 生成的搜索索引文件放到一个 <code>真正的</code> 全文搜索引擎中，而不是继续使用 <code>Local Search</code>。</p>\n<blockquote>\n<p>其实目前慢的主要原因应该还是前者；</p>\n</blockquote>\n<p>找来找去找到了 <code>MeiliSearch</code> ，这是一个建立在 <code>LMDB键值</code> 存储之上的全文搜索引擎。与 <code>Elasticsearch</code> 类似，但 <code>MeiliSearch</code> 可能更适合中等规模的数据集（即少于 <code>500</code> 万行）和较小的应用程序。<code>MeiliSearch</code> 提供快速、相关且可容忍错字的搜索，几乎不需要设置时间，对于任何需要专注于最终用户的强大且易于访问的搜索引擎的开发人员来说，它都是一个很好的解决方案。</p>\n<p>老苏想研究一下技术可行性，但是搜索了一下并没有找到现成的方案，第一步打算先安装一个 <code>MeiliSearch</code>，亲自感受下具体的功能，如果没问题的话再来研究下一步</p>\n<p><strong>什么是 MeiliSearch ？</strong></p>\n<blockquote>\n<p><code>MeiliSearch</code> 是一个基于 <code>Rust</code> 语言开发的强大、快速、开源、易于使用和部署的搜索引擎。搜索和索引都是高度可定制的。提供开箱即用的功能，例如错字容忍、过滤器和同义词，支持中文。</p>\n</blockquote>\n<p><strong>什么是 LMDB ？</strong></p>\n<blockquote>\n<p><code>LMDB</code> 数据库和常用的 <code>SQLite</code> ，<code>MySQL</code> 等关系型数据库不同, 它是一种非关系型数据库，以键值对的方式进行存储（更像是字典），其中 <code>“键”</code> 和 <code>“值”</code> 的类型都是字符串类型。</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>meilisearch</code> ，选择第一个 <code>getmeili/meilisearch</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112251503273.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>meilisearch</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/meilisearch</code></td>\n<td align=\"center\"><code>/data.ms</code></td>\n<td align=\"center\">存放数据</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112251535519.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不冲突就行，不确定的话可以用命令查一下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看端口占用</span></span><br><span class=\"line\">netstat -tunlp | grep 端口号</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>7700</code></td>\n<td align=\"center\"><code>7700</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112251535288.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><p>环境变量是可选的，默认是 <code>developer</code> 模式，可以不设置 <code>master key</code> ，只有在指定为 <code>product</code> 模式才必须设置的 </p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>MEILI_MASTER_KEY</code></td>\n<td align=\"center\"><code>master key</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112292001130.png\"></p>\n<p><code>MeiliSearch</code> 的每个实例都有三个键：<code>master</code>、<code>private</code> 和 <code>public</code>。每个密钥在 <code>API</code> 路由上都有一组给定的权限。每当您设置或更改 <code>master key</code> 时，都会自动生成 <code>private key</code> 和 <code>public key</code>。</p>\n<ul>\n<li><code>master key</code> 可以用来存取所有的路由</li>\n<li><code>private key</code> 可以用来存取除了 <code>/keys</code> （用来获取 <code>master key</code> 和 <code>private key</code> ）的所有路由。</li>\n<li><code>public key</code> 只能用来进行搜索操作。</li>\n</ul>\n<p> 老苏生成 <code>master key</code> 的方式是在 <code>Bitwarden</code> 中用密码生成器</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112291958358.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:7700</code> 就能看到主界面</p>\n<blockquote>\n<p>由于生产环境需要 <code>API-key</code> 进行搜索，因此 <code>Web</code> 界面仅在开发模式下可用。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112251537579.png\"></p>\n<p>日志中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112251654041.png\"></p>\n<h2 id=\"官方示例\"><a href=\"#官方示例\" class=\"headerlink\" title=\"官方示例\"></a>官方示例</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 获取private key和public key</span></span><br><span class=\"line\">curl \\</span><br><span class=\"line\">  -H <span class=\"string\">&quot;X-Meili-API-Key: 27bb9198372f81f8b95fb75d0252912de061fb6fa90d0ad6eb347cc051f0abe3&quot;</span> \\</span><br><span class=\"line\">  -X GET <span class=\"string\">&#x27;http://192.168.0.197:7700/keys&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112292053240.png\"></p>\n<p>官方提供了一个电影数据库 <code>movie.json</code> ，文件下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1laWxpc2VhcmNoLmNvbS9tb3ZpZXMuanNvbg==\">https://docs.meilisearch.com/movies.json<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>将文件上传到群晖的 <code>meilisearch</code> 目录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入到 movie.json 所在的目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /volume2/docker/meilisearch</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 用命令行下载文件，已经下了可以跳过</span></span><br><span class=\"line\">curl -L <span class=\"string\">&#x27;https://docs.meilisearch.com/movies.json&#x27;</span> -o movies.json</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加文档到 movies 索引</span></span><br><span class=\"line\">curl -i -X POST <span class=\"string\">&#x27;http://192.168.0.197:7700/indexes/movies/documents&#x27;</span> \\</span><br><span class=\"line\">  --header <span class=\"string\">&#x27;content-type: application/json&#x27;</span> \\</span><br><span class=\"line\">  --data-binary @movies.json</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112261120977.png\"></p>\n<p>回到 <code>web</code> 界面，刷新一下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112272059030.png\"></p>\n<p>官网的动图能清晰的显示如何使用</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112272057609.gif\"></p>\n<h2 id=\"search-json\"><a href=\"#search-json\" class=\"headerlink\" title=\"search.json\"></a>search.json</h2><p>默认情况下 <code>hexo-generator-searchdb</code> 生成的搜索索引文件是 <code>search.xml</code>，但其本身支持 <code>XML</code> 和 <code>JSON</code> 格式输出，所以只要改一下配置即可，<code>search.json</code> 位于博客的根目录下，需将其上传到群晖的 <code>meilisearch</code> 目录，然后执行下面的命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 添加文档到 movies 索引</span></span><br><span class=\"line\">curl -i -X POST <span class=\"string\">&#x27;http://192.168.0.197:7700/indexes/search/documents&#x27;</span> \\</span><br><span class=\"line\">  --header <span class=\"string\">&#x27;content-type: application/json&#x27;</span> \\</span><br><span class=\"line\">  --data-binary @search.json</span><br></pre></td></tr></table></figure>\n\n<p>但是并没有像官方示例一样，老苏尝试过增加 <code>primaryKey</code>，但始终没有结果，可能是格式不对吧，一时半会儿也没研究明白，先这样吧，等有精力了再说</p>\n<p>本来还想着是不是在 <code>vercel</code> 上搭个搜索服务，这下都省了</p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>目前情况下，博客上点 <code>搜索</code> 后弹出的搜索界面，如果是一直转圈，最好是等一会儿，或者重新再刷新一下页面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201271223105.png\"></p>\n<p>如果直接显示 <code>放大镜</code>，也就是下面👇这样</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201271151477.png\"></p>\n<p>那就可以直接输入关键词进行搜索，基本上是秒开</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201271218520.png\"></p>\n<p>所以再一次证实了慢的原因是加载 <code>search.json</code> 慢，而不是搜索本身慢，因此 <code>MeiliSearch</code> 的研究也就不急在一时。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>meilisearch/MeiliSearch: Powerful, fast, and an easy to use search engine<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21laWxpc2VhcmNoL01laWxpU2VhcmNo\">https://github.com/meilisearch/MeiliSearch<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>MeiliSearch<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWVpbGlzZWFyY2guY29tLw==\">https://www.meilisearch.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>MeiliSearch Documentation | MeiliSearch Documentation v0.24<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1laWxpc2VhcmNoLmNvbS8=\">https://docs.meilisearch.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>MeiliSearch vs Elasticsearch<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLm1laWxpc2VhcmNoLmNvbS93aHktc2hvdWxkLXlvdS11c2UtbWVpbGlzZWFyY2gtb3Zlci1lbGFzdGljc2VhcmNoLw==\">https://blog.meilisearch.com/why-should-you-use-meilisearch-over-elasticsearch/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>We Built A Search Engine With MeiliSearch and JavaScript: Here’s How You Can Too | Hacker Noon<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWNrZXJub29uLmNvbS93ZS1idWlsdC1hLXNlYXJjaC1lbmdpbmUtd2l0aC1tZWlsaXNlYXJjaC1hbmQtamF2YXNjcmlwdC1oZXJlcy1ob3cteW91LWNhbi10b28tenoyZDN6YWU=\">https://hackernoon.com/we-built-a-search-engine-with-meilisearch-and-javascript-heres-how-you-can-too-zz2d3zae<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>meilisearch/docs-searchbar.js: Front-end search bar for documentation with MeiliSearch<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21laWxpc2VhcmNoL2RvY3Mtc2VhcmNoYmFyLmpzLw==\">https://github.com/meilisearch/docs-searchbar.js/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>90pixel/MeiliAdmin: Open Source MeiliSearch Management Tool<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tLzkwcGl4ZWwvTWVpbGlBZG1pbg==\">https://github.com/90pixel/MeiliAdmin<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>PHP使用MeiliSearch实现全文检索_织梦猫的博客-CSDN博客_meilisearch文档<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2phc29uMTk5MDUvYXJ0aWNsZS9kZXRhaWxzLzExNTA1NTY2Ng==\">https://blog.csdn.net/jason19905/article/details/115055666<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>使用MeiliSearch实现Hugo博客搜索 - Jefferywang的烂笔头<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLndhbmdqdW5mZW5nLmNvbS9wb3N0L2h1Z28tbWVpbGlzZWFyY2gv\">https://blog.wangjunfeng.com/post/hugo-meilisearch/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","搜索"]},{"title":"跨平台的文件服务器Oasis","url":"/2022/02/07/%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%9A%84%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8Oasis/","content":"<p><strong>什么是 Oasis ？</strong></p>\n<blockquote>\n<p><code>Oasis</code> 是文件服务器，支持文件上传、下载和预览，格式包括文本、<code>PDF</code>、图片、音频和视频，还支持多平台（ <code>Linux</code>、<code>MacOS</code>、<code>Windows</code>、<code>Docker</code>）。</p>\n</blockquote>\n<p>这是国人开发的项目，所以有中文说明：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21hY2hlbmdpbS9vYXNpcy9ibG9iL21haW4vUkVBRE1FX2NuLm1k\">https://github.com/machengim/oasis/blob/main/README_cn.md<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>oasis</code> ，选择第二个 <code>machengim/oasis</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201052014640.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>oasis</code>，然后建两个子目录，分别是 <code>db</code> 和 <code>file</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/oasis/db</code></td>\n<td align=\"center\"><code>/opt/oasis/db</code></td>\n<td align=\"center\">存放数据库</td>\n</tr>\n<tr>\n<td align=\"center\"><code>docker/oasis/file</code></td>\n<td align=\"center\"><code>/home/storage</code></td>\n<td align=\"center\">存放文件</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201052019895.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不冲突就行，不确定的话可以用命令查一下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看端口占用</span></span><br><span class=\"line\">netstat -tunlp | grep 端口号</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201052021703.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>8012</code></td>\n<td align=\"center\"><code>8000</code></td>\n</tr>\n</tbody></table>\n<p>默认并没有端口</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201052023273.png\"></p>\n<p>需要点 <code>+</code> 号新增端口</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201052022460.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:8012</code> 就能看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201052025355.png\"></p>\n<p>设置为中文，填入你想设置的账号和密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201052026998.png\"></p>\n<p>存储–&gt;选择 –&gt; 分区 –&gt;  <code>/home/storage</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201052026485.png\"></p>\n<p>完成后点 <code>启动</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201052029504.png\"></p>\n<p>会跳转到登录界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201052030655.png\"></p>\n<p>输入前面设置的用户名和密码，登录成功后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201052031503.png\"></p>\n<p>可以通过 <code>新建</code> –&gt; <code>上传文件</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201061246672.png\"></p>\n<p>也可以直接将文件上传到 <code>/oasis/file</code> 目录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201061250832.png\"></p>\n<p>刷新页面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201061251373.png\"></p>\n<p>图片支持直接预览</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201061252844.png\"></p>\n<p>还支持分享</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201061257799.png\"></p>\n<p>老苏测试了几种文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201061950271.png\"></p>\n<p><code>txt</code> 文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201061959416.png\"></p>\n<p><code>pdf</code> 文件 </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201061951852.png\"></p>\n<p><code>mp4</code> 文件 </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201061957508.png\"></p>\n<p><code>mkv</code> 文件 </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201062013527.png\"></p>\n<p>对于不支持的文件，例如 <code>avi</code>，虽然出现了视频播放的窗口，但是并不能播放</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201062039930.png\"></p>\n<p>不过可以通过共享链接在 <code>PotPlayer</code> 中播放</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201062041999.png\"></p>\n<p>如果你用浏览器中的链接，那是不行的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201062044653.png\"></p>\n<p>除此之外还支持简单的搜索</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201062000827.png\"></p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p><code>Oasis</code> 是一个简单的文件服务器，要说特点，就是易于安装，也非常易于使用。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>machengim/oasis: Self-hosted file server<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21hY2hlbmdpbS9vYXNpcw==\">https://github.com/machengim/oasis<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","网盘"]},{"title":"音乐流媒体应用Polaris","url":"/2022/02/04/%E9%9F%B3%E4%B9%90%E6%B5%81%E5%AA%92%E4%BD%93%E5%BA%94%E7%94%A8Polaris/","content":"<p><strong>什么是 Polaris ？</strong></p>\n<blockquote>\n<p><code>Polaris</code> 是一款音乐流媒体应用程序，旨在让您从任何计算机或移动设备欣赏您的音乐收藏。<code>Polaris</code> 的工作原理是直接从您自己的计算机上流式传输您的音乐，而无需将其上传到第三方。它是免费的开源软件，没有任何高级版本。</p>\n</blockquote>\n<p><code>Polaris</code> 支持在 <code>Windows</code>、<code>Linux</code>、<code>BSD</code> 系统上运行，也可以通过 <code>Docker</code> 运行，支持 <code>flac</code> ，<code>mp3</code> ，<code>mp4</code> ，<code>mpc</code> ，<code>ogg</code> ，<code>opus</code> ，<code>ape</code> ，<code>wav</code> 和 <code>aiff</code> 文件格式，但不支持转码。提供 <code>API</code>，但并不兼容 <code>subsonic server API</code>，有自己的 <code>Android</code> 客户端。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>polaris</code> ，选择第一个 <code>ogarcia/polaris</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201221355058.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，将其命名为 <code>polaris</code>，然后再建 <code>3</code> 个子目录 <code>music</code>、<code>cache</code> 和 <code>data</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201221406931.png\"></p>\n<blockquote>\n<p>【重要：】下面👇这步很重要，不然容器会崩溃，原因是创建 <code>SQLite</code> 失败，需在 <code>SSH</code> 客户端上执行</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 进入主目录</span></span><br><span class=\"line\">cd /volume2/docker/polaris/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 修改子目录的所有权</span></span><br><span class=\"line\">chown -R 100:100 ./cache ./data</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201221433637.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/polaris/music</code></td>\n<td align=\"center\"><code>/music</code></td>\n<td align=\"center\">存放音乐</td>\n</tr>\n<tr>\n<td align=\"center\"><code>docker/polaris/cache</code></td>\n<td align=\"center\"><code>/var/cache/polaris</code></td>\n<td align=\"center\">缓存目录</td>\n</tr>\n<tr>\n<td align=\"center\"><code>docker/polaris/data</code></td>\n<td align=\"center\"><code>/var/lib/polaris</code></td>\n<td align=\"center\">存放设置，例如数据库</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201221422801.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>本地端口不冲突就行，不确定的话可以用命令查一下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看端口占用</span></span><br><span class=\"line\">netstat -tunlp | grep 端口号</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>5050</code></td>\n<td align=\"center\"><code>5050</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201221425727.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:5050</code> 就能看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201221436045.png\"></p>\n<p>设置本机的音乐目录，前面是路径，后面是别名</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201222050187.png\"></p>\n<p>设置账号、密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201221530721.png\"></p>\n<p>登录成功后的主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201221530648.png\"></p>\n<h2 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h2><p>封面默认为 <code>Folder</code>，老苏习惯一直用的 <code>cover</code>，所以这里改了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201221935888.png\"></p>\n<p>列表中会显示文件的别名，而不是实际名称</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201222053340.png\"></p>\n<p>完整的界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201222101586.png\"></p>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>在浏览器中输入 <code>http://群晖IP:5050/swagger/</code>  可以看到 <code>Polaris</code> 服务器的 <code>API</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201231110837.png\"></p>\n<h2 id=\"移动端\"><a href=\"#移动端\" class=\"headerlink\" title=\"移动端\"></a>移动端</h2><p>移动端似乎只有 <code>android</code> 平台，有两个下载地址：</p>\n<p>国外的同学可以访问 <code>Google Play Store</code>：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYXBwcy9kZXRhaWxzP2lkPWFnZXJzYW50LnBvbGFyaXM=\">https://play.google.com/store/apps/details?id=agersant.polaris<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>国内的同学可以试试 <code>F-Droid</code>：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9mLWRyb2lkLm9yZy9wYWNrYWdlcy9hZ2Vyc2FudC5wb2xhcmlzLw==\">https://f-droid.org/packages/agersant.polaris/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>安装完成后的主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201230953935.png\"></p>\n<p>点右上角的小齿轮进入设置界面，需设置服务器地址、账号和密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201230954093.png\"></p>\n<p>开始播放</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201230955807.png\"></p>\n<h1 id=\"高级\"><a href=\"#高级\" class=\"headerlink\" title=\"高级\"></a>高级</h1><p>虽然官方未提及 <code>Docker</code> 支持多音乐目录，但是考虑到 <code>Polaris</code> 在其他系统上支持，所以老苏实践了一下</p>\n<ol>\n<li>停止容器，进入编辑状态，新增一个文件夹，例如 <code>/music2</code>，应用后启动容器</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202202041050930.png\"></p>\n<ol start=\"2\">\n<li>进入设置，通过 <code>Add more</code> 添加前面增加的目录 <code>/music2</code>，完成后 <code>Scan now</code> 扫描一下</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202202041055789.png\"></p>\n<ol start=\"3\">\n<li>再回到播放列表就能看到刚刚添加的目录了</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/02/202202041059853.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>polaris/SETUP.md at master · agersant/polaris<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FnZXJzYW50L3BvbGFyaXM=\">https://github.com/agersant/polaris<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>ogarcia/docker-polaris: Small docker of Polaris based on Alpine Linux<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL29nYXJjaWEvZG9ja2VyLXBvbGFyaXM=\">https://github.com/ogarcia/docker-polaris<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Polaris Swagger UI<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZ2Vyc2FudC5naXRodWIuaW8vcG9sYXJpcy9zd2FnZ2VyLw==\">https://agersant.github.io/polaris/swagger/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>agersant/polaris-android: Android client for Polaris<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FnZXJzYW50L3BvbGFyaXMtYW5kcm9pZA==\">https://github.com/agersant/polaris-android<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>basings/selfhosted-music-overview: A table listing software network services which can be hosted on your own servers<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2Jhc2luZ3Mvc2VsZmhvc3RlZC1tdXNpYy1vdmVydmlldw==\">https://github.com/basings/selfhosted-music-overview<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","音乐"]},{"title":"LazyDocker：基于终端UI管理Docker","url":"/2022/02/02/LazyDocker%EF%BC%9A%E5%9F%BA%E4%BA%8E%E7%BB%88%E7%AB%AFUI%E7%AE%A1%E7%90%86Docker/","content":"<p><strong>什么是 LazyDocker ？</strong></p>\n<blockquote>\n<p><code>LazyDocker</code> 是适用于 <code>Docker</code> 和 <code>Docker Compose</code> 的新的免费开源的终端 <code>UI</code> ，用于显示 <code>Docker</code> 或 <code>Docker-compose</code> 容器的状态，日志以及重新启动/删除/重建容器等，采用 <code>Go</code> 语言编写，使用了 <code>gocui</code> 库。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112022036358.gif\"></p>\n<p>在 <code>Linux</code> 服务器上管理 <code>Docker</code> 容器时，通常有两种选择：安装或部署基于 <code>Web</code> 的 <code>GUI</code> 或从命令行管理容器，而 <code>LazyDocker</code> 介于两者之间，采用了基于 <code>terminal</code> 的 简单 <code>UI</code></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>与容器相关的应用，都需要绑定挂载 <code>/var/run/docker.sock</code> ，包括我们之前安装的 <code>portainer</code>、<code>watchtower</code>，<code>Glances</code>，<code>Netdata</code> 等。</p>\n<p><strong>什么是 <code>/var/run/docker.sock</code> ?</strong></p>\n<blockquote>\n<p><code>/var/run/docker.sock</code> 是 <code>Docker API</code> 的主要入口，简单地说，它是 <code>Docker</code> 守护进程（<code>Docker daemon</code>）默认监听的 <code>Unix</code> 域套接字（<code>Unix domain socket</code>），容器中的进程可以通过它与 <code>Docker</code> 守护进程进行通信。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/1600233408261-1600233408269.png\" alt=\"title\"></p>\n<blockquote>\n<p>图片来自：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iZXR0ZXJwcm9ncmFtbWluZy5wdWIvYWJvdXQtdmFyLXJ1bi1kb2NrZXItc29jay0zYmZkMjc2ZTEyZmQ=\">https://betterprogramming.pub/about-var-run-docker-sock-3bfd276e12fd<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<p>但是群晖的 <code>Docker</code> 管理器并不支持挂载 <code>/var/run/docker.sock</code> 文件，所以这次我们需用命令行来安装</p>\n<p>命令行安装还是比较简单的，用 <code>SSH</code> 客户端连上群晖，执行下面👇的命令</p>\n<blockquote>\n<p>老苏常用的<code>SSH</code> 客户端主要是 <code>Finalshell</code> 和 <code>PuTTY</code></p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在 docker 中新建目录 lazydocker</span></span><br><span class=\"line\">mkdir -p /volume2/docker/lazydocker</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入 lazydocker</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /volume2/docker/lazydocker</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动容器</span></span><br><span class=\"line\">docker run --rm -it \\</span><br><span class=\"line\">--name lazydocker \\</span><br><span class=\"line\">-v /var/run/docker.sock:/var/run/docker.sock \\</span><br><span class=\"line\">-v /volume2/docker/lazydocker:/.config/jesseduffield/lazydocker \\</span><br><span class=\"line\">lazyteam/lazydocker</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201081041257.png\"></p>\n<p>也可以直接进 <code>终端机</code> 使用</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201081120412.png\"></p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><p>键盘和鼠标都支持 <code>LazyDocker</code> 界面上的导航操作</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201081055806.png\"></p>\n<p>其中每个命令都有一个预定义的键，用于快速执行常用操作。官网提供了一个多语言的键值说明，不过没有中文，只能凑合着看看英文的：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2plc3NlZHVmZmllbGQvbGF6eWRvY2tlci9ibG9iL21hc3Rlci9kb2NzL2tleWJpbmRpbmdzL0tleWJpbmRpbmdzX2VuLm1k\">https://github.com/jesseduffield/lazydocker/blob/master/docs/keybindings/Keybindings_en.md<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>可一键实现：</p>\n<ul>\n<li>查看 <code>Docker</code> 或 <code>Docker-Compose</code> 容器环境的状态；</li>\n<li>查看容器/服务日志；</li>\n<li>查看容器 <code>ASCII</code> 图；</li>\n<li>定制图表以查看更详细的信息；</li>\n<li>绑定容器/服务；</li>\n<li>重启/移除/重建容器或服务；</li>\n<li>查看给定镜像的父层；</li>\n<li>修改占用磁盘空间的容器、镜像或卷；</li>\n</ul>\n<h2 id=\"自定义设置\"><a href=\"#自定义设置\" class=\"headerlink\" title=\"自定义设置\"></a>自定义设置</h2><p>在 <code>lazydocker</code> 中有个 <code>config.yml</code> 文件，但是现在打开只有一行 </p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">reporting:</span> <span class=\"string\">&quot;on&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>在块 <code>commandTemplates</code> 和 <code>customCommands</code> 配置中可以修改命令，也可以补充您自己的命令。在 ➡️  <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2plc3NlZHVmZmllbGQvbGF6eWRvY2tlci9ibG9iL21hc3Rlci9kb2NzL0NvbmZpZy5tZA==\">https://github.com/jesseduffield/lazydocker/blob/master/docs/Config.md<i class=\"fa fa-external-link-alt\"></i></span> 有详细的说明。</p>\n<blockquote>\n<p>不过老苏改了半天并没发现有什么明显的变化，可能是因为本身就是 <code>Default</code>，也没有再继续深入研究下去😅</p>\n</blockquote>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>命令行管理容器，需要记命令，<code>LazyDocker</code> 将其简化为了快捷键，所以难度上比命令行方式简单得多。</p>\n<p>但是相比基于 <code>Web</code> 的 <code>GUI</code> 界面，显然易用性还是有差距的，但胜在灵活。</p>\n<p>老苏个人觉得如果在 <code>linux</code> 上，<code>LazyDocker</code> 可能是一个不错的选择，但是在群晖上似乎没什么必要。</p>\n<p>另外也不建议用 <code>Docker</code> 方式安装 <code>LazyDocker</code>，会看不到日志或 <code>CPU</code> 使用率，这是一个已知的 <code>Bug</code>。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>jesseduffield/lazydocker: The lazier way to manage everything docker<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2plc3NlZHVmZmllbGQvbGF6eWRvY2tlcg==\">https://github.com/jesseduffield/lazydocker<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>A Look at Lazydocker, a Cursor-Based Docker Management Tool – The New Stack<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly90aGVuZXdzdGFjay5pby9hLWxvb2stYXQtbGF6eWRvY2tlci1hLWN1cnNvci1iYXNlZC1kb2NrZXItbWFuYWdlbWVudC10b29sLw==\">https://thenewstack.io/a-look-at-lazydocker-a-cursor-based-docker-management-tool/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","运维"]},{"title":"支持加密的开源笔记Joplin","url":"/2022/01/31/%E6%94%AF%E6%8C%81%E5%8A%A0%E5%AF%86%E7%9A%84%E5%BC%80%E6%BA%90%E7%AC%94%E8%AE%B0Joplin/","content":"<p>今天既是腊月二十九，也是除夕，是牛年的最后一天，辞别旧岁，迎来新年。在新的一年，愿您平安健康，家人常伴；财运滚滚，大吉大利！</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201310022132.png\"></p>\n<p><strong>什么是 Joplin ？</strong></p>\n<blockquote>\n<p><code>Joplin</code> 是一个免费的开源笔记和待办事项应用程序，可以处理组织到笔记本中的大量笔记。笔记是可搜索的，可以直接从应用程序或从您自己的文本编辑器中复制、标记和修改，笔记采用 <code>Markdown</code> 格式，并支持所有应用程序的端到端加密 （<code>E2EE</code>）。</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p><code>Joplin</code> 涉及到两个镜像，比较简单的安装方式是编排 <code>docker-compose.yml</code> 文件，然后用 <code>docker-compose up -d</code> 命令启动。</p>\n<blockquote>\n<p><code>docker-compose.yml</code> 文件可以在这里下载：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2xhdXJlbnQyMi9qb3BsaW4vZGV2L2RvY2tlci1jb21wb3NlLnNlcnZlci55bWw=\">https://raw.githubusercontent.com/laurent22/joplin/dev/docker-compose.server.yml<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<p>双容器还是可以用群晖的 <code>Docker</code> 管理器来安装，其安装步骤和 <code>wekan</code> 非常类似</p>\n<h2 id=\"镜像下载\"><a href=\"#镜像下载\" class=\"headerlink\" title=\"镜像下载\"></a>镜像下载</h2><p>在注册表中搜索 <code>joplin</code> ，选择第一个 <code>joplin/server</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201081624382.png\"></p>\n<p>镜像比较大，要有耐心</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201081721215.png\"></p>\n<p>另外因为 <code>joplin</code>  依赖 <code>PostgreSQL</code> 而不是 <code>MySQL</code> 做数据库，所以数据库也需要进行安装</p>\n<blockquote>\n<p><code>joplin</code> 也支持 <code>SQLite</code>，在数据量较大时，还是用 <code>PostgreSQL</code> 效率更高一些</p>\n</blockquote>\n<p>在注册表中搜索 <code>postgres</code> ，选择第一个 <code>postgres</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111081507935.png\"></p>\n<h2 id=\"安装-PostgreSQL\"><a href=\"#安装-PostgreSQL\" class=\"headerlink\" title=\"安装 PostgreSQL\"></a>安装 PostgreSQL</h2><p>容器名称这次没有用默认的，改为了 <code>jp-postgres</code>，因为这个名称后面会用到，当然你不改也可以，修改只是为了更容易识别</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201081722655.png\"></p>\n<h3 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h3><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>joplin</code>，再建一个子目录 <code>postgres</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201081640756.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/joplin/postgres</code></td>\n<td align=\"center\"><code>/var/lib/postgresql/data</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201081725463.png\"></p>\n<h3 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看端口占用</span></span><br><span class=\"line\">netstat -tunlp | grep 端口号</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201081726802.png\"></p>\n<p>默认端口被占用，所以改了个相邻、但是没被占用的</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>5435</code></td>\n<td align=\"center\"><code>5432</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201081727863.png\"></p>\n<h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>POSTGRES_DB</code></td>\n<td align=\"center\">数据库名称</td>\n</tr>\n<tr>\n<td align=\"center\"><code>POSTGRES_USER</code></td>\n<td align=\"center\">数据库用户</td>\n</tr>\n<tr>\n<td align=\"center\"><code>POSTGRES_PASSWORD</code></td>\n<td align=\"center\">数据库密码</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>数据库的各项参数后面安装 <code>joplin</code> 还会用到</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201081730473.png\"></p>\n<p>如果运行正常并且不报错的话，就可以进行 <code>joplin</code> 的安装了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201081731660.png\"></p>\n<h2 id=\"安装-Joplin\"><a href=\"#安装-Joplin\" class=\"headerlink\" title=\"安装 Joplin\"></a>安装 Joplin</h2><p>接下来安装 <code>Joplin</code>，名字设为了 <code>jp-server</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201081737096.png\"></p>\n<h3 id=\"端口-1\"><a href=\"#端口-1\" class=\"headerlink\" title=\"端口\"></a>端口</h3><table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>22300</code></td>\n<td align=\"center\"><code>22300</code></td>\n</tr>\n</tbody></table>\n<p>默认没有映射端口</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201081740785.png\"></p>\n<p>需点 <code>+</code> 号自己增加</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201081741339.png\"></p>\n<h3 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h3><p>点 <code>+</code> 号新增，容器名称中找到前面创建的 <code>jp-postgres</code>，别名简单点，就叫 <code>db</code> ，这是会在 <code>环境变量</code> 中用到</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201081744281.png\"></p>\n<h3 id=\"环境变量\"><a href=\"#环境变量\" class=\"headerlink\" title=\"环境变量\"></a>环境变量</h3><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>APP_PORT</code></td>\n<td align=\"center\">应用程序端口，默认为 <code>22300</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>APP_BASE_URL</code></td>\n<td align=\"center\">应用程序地址，需要带上端口</td>\n</tr>\n<tr>\n<td align=\"center\"><code>DB_CLIENT</code></td>\n<td align=\"center\">数据库类型，默认设为 <code>pg</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>POSTGRES_HOST</code></td>\n<td align=\"center\">数据库主机名，这里就是前面设置的别名</td>\n</tr>\n<tr>\n<td align=\"center\"><code>POSTGRES_PORT</code></td>\n<td align=\"center\">数据库端口</td>\n</tr>\n<tr>\n<td align=\"center\"><code>POSTGRES_DATABASE</code></td>\n<td align=\"center\">数据库名称</td>\n</tr>\n<tr>\n<td align=\"center\"><code>POSTGRES_USER</code></td>\n<td align=\"center\">数据库用户名</td>\n</tr>\n<tr>\n<td align=\"center\"><code>POSTGRES_PASSWORD</code></td>\n<td align=\"center\">数据库密码</td>\n</tr>\n</tbody></table>\n<blockquote>\n<ul>\n<li><code>APP_BASE_URL</code>：要填完整路径，如果你的域名没有备案，也需要带上端口，例如：<code>http://joplin.laosu.ml:444</code></li>\n<li><code>POSTGRES_PORT</code>：因为容器间访问是基于 <code>bridge</code> 的局域网，所以要填容器的内部端口 <code>5432</code></li>\n</ul>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201081951617.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:22300</code> 就能看到登录界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201081911759.png\"></p>\n<p>用默认的账号密码登录</p>\n<blockquote>\n<p>缺省的账号：<code>admin@localhost</code>，密码：<code>admin</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201081923434.png\"></p>\n<p>第一次登录，系统会提示默认管理员密码不安全，记得修改！</p>\n<h2 id=\"客户端\"><a href=\"#客户端\" class=\"headerlink\" title=\"客户端\"></a>客户端</h2><p>老苏在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xhdXJlbnQyMi9qb3BsaW4vcmVsZWFzZXM=\">https://github.com/laurent22/joplin/releases<i class=\"fa fa-external-link-alt\"></i></span> 下了个最新版的 <code>windows</code> 客户端。</p>\n<p>设置很简单，同步目标选择我们刚刚安装好的 <code>Joplin Server</code>，完成设置之后，点 <code>检查同步配置</code>，如果显示 <code>成功！</code> 就可以开始使用了 </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201082027085.png\"></p>\n<p>创建我们的第一篇 <code>Markdown</code> 笔记</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201082039442.png\"></p>\n<h2 id=\"网页插件\"><a href=\"#网页插件\" class=\"headerlink\" title=\"网页插件\"></a>网页插件</h2><p><code>Web Clippe</code> 支持 <code>Joplin</code>，需要的 <code>authorization token</code> 可以在客户端的 <code>网页剪辑器</code> 中找到</p>\n<p>打开客户端的 <code>网页剪辑器</code> ，按步骤操作</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201082052548.png\"></p>\n<p>首先 <code>启用网页剪辑服务</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201082056508.png\"></p>\n<p>接着安装扩展，官方跳转的地址是  <code>Joplin Web Clipper</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201082058372.png\"></p>\n<p>老苏用的是  <code>Web Clipper</code>，这是第三方的，通用性更高一些，不仅仅只是支持 <code>Joplin</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201082059083.png\"></p>\n<p>填入 <code>高级选项</code> 中的 <code>授权令牌</code> 后，先执行 <code>校验</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201082110935.png\"></p>\n<p>校验成功后，会返回知识库和图床，<code>添加</code> 即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201310931865.png\"></p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>除了各平台客户端和网页插件外，甚至还有 <code>Visual studio code</code> 的插件，所以 <code>Joplin</code> 可玩性挺高的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201082116932.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>laurent22/joplin: Joplin - an open source note taking and to-do application with synchronization capabilities for Windows, macOS, Linux, Android and iOS. Forum: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaXNjb3Vyc2Uuam9wbGluYXBwLm9yZy8=\">https://discourse.joplinapp.org/<i class=\"fa fa-external-link-alt\"></i></span><br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xhdXJlbnQyMi9qb3BsaW4=\">https://github.com/laurent22/joplin<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Joplin<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9qb3BsaW5hcHAub3JnLw==\">https://joplinapp.org/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>joplin/README.md at dev · laurent22/joplin<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xhdXJlbnQyMi9qb3BsaW4vYmxvYi9kZXYvcGFja2FnZXMvc2VydmVyL1JFQURNRS5tZA==\">https://github.com/laurent22/joplin/blob/dev/packages/server/README.md<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Evernote 强力替代品：开源加密笔记本 Joplin - 小众软件<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYXBwaW5uLmNvbS9qb3BsaW4v\">https://www.appinn.com/joplin/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","笔记"]},{"title":"家用服务器的终极主页Dashy","url":"/2022/01/28/%E5%AE%B6%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E7%BB%88%E6%9E%81%E4%B8%BB%E9%A1%B5Dashy/","content":"<p><strong>什么是 Dashy ？</strong></p>\n<blockquote>\n<p><code>Dashy</code> 是一个开源、高度可定制、易于使用、尊重隐私的仪表板应用程序。<code>Dashy</code> 提供了易于使用的可视化编辑器、状态检查、小部件、主题等等！</p>\n</blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0xpc3N5OTMvZGFzaHkvYmxvYi9tYXN0ZXIvZG9jcy9zaG93Y2FzZS5tZA==\">https://github.com/Lissy93/dashy/blob/master/docs/showcase.md<i class=\"fa fa-external-link-alt\"></i></span>  有一些样例，可以找你喜欢的风格</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>dashy</code> ，选择第一个 <code>lissy93/dashy</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201060958194.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不冲突就行，不确定的话可以用命令查一下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看端口占用</span></span><br><span class=\"line\">netstat -tunlp | grep 端口号</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>4000</code></td>\n<td align=\"center\"><code>80</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201061003947.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>第一次时间比较长，似乎有个 <code>build</code> 的过程</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201061015645.png\"></p>\n<p>当你在日志中看到 <code>DONE  Build complete. Watching for changes...</code>，就可以在浏览器中输入 <code>http://群晖IP:4000</code> 并看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201061024400.png\"></p>\n<h2 id=\"切换中文\"><a href=\"#切换中文\" class=\"headerlink\" title=\"切换中文\"></a>切换中文</h2><p><code>Update Configuration</code> –&gt; <code>Change App Language</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201061027086.png\"></p>\n<p>选择 <code>简体中文</code>，保存即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201061028212.png\"></p>\n<h2 id=\"代码编辑器\"><a href=\"#代码编辑器\" class=\"headerlink\" title=\"代码编辑器\"></a>代码编辑器</h2><p>从 <code>主菜单</code> –&gt; <code>编辑设置</code> 可以进入</p>\n<blockquote>\n<p>配置文件以 <code>YAML</code> 格式编写，保存在容器的 <code>/app/public/conf.yml</code> 中，界面上可以直接启动编辑器，对 <code>conf.yml</code> 进行源代码编辑</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201061037672.png\"></p>\n<p>配置文件的格式非常简单。存在三个根属性：</p>\n<ul>\n<li>  <a href=\"https://github.com/Lissy93/dashy/blob/master/docs/configuring.md#appconfig-optional\"><code>appConfig</code></a> - 仪表板设置，如主题、身份验证、语言和自定义</li>\n<li>  <a href=\"https://github.com/Lissy93/dashy/blob/master/docs/configuring.md#pageinfo\"><code>pageInfo</code></a> - 仪表盘元数据，如标题、描述、导航栏链接和页脚文本</li>\n<li>  <a href=\"https://github.com/Lissy93/dashy/blob/master/docs/configuring.md#section\"><code>sections</code></a> - 组部分，每个部分包括一组项目</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201061041461.png\"></p>\n<p>支持常用的编辑功能，可以拖动来更改顺序</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201061046003.png\"></p>\n<p>上一张官网的动图</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201061055937.gif\"></p>\n<p>详细的说明可以看看 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0xpc3N5OTMvZGFzaHkvYmxvYi9tYXN0ZXIvZG9jcy9jb25maWd1cmluZy5tZA==\">https://github.com/Lissy93/dashy/blob/master/docs/configuring.md<i class=\"fa fa-external-link-alt\"></i></span>，不过这种方式比较容易出错，并不适合大多数人，包括老苏自己也是一样</p>\n<h2 id=\"UI-编辑器\"><a href=\"#UI-编辑器\" class=\"headerlink\" title=\"UI 编辑器\"></a>UI 编辑器</h2><p>这是交互式的所见即所得的编辑器</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201061059955.png\"></p>\n<p>点红框中的按钮进入编辑模式</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201061100703.png\"></p>\n<p><code>Add New Section</code> 保存</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201061140650.png\"></p>\n<p>按道理应该有 <code>Add New Item</code>，但是老苏的没有</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201061142829.png\"></p>\n<p><code>Section</code> 上右键菜单也没有</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201061144799.png\"></p>\n<p>不过官网的动图上是有滴，也许哪里操作的不正确？</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201061104402.gif\"></p>\n<p>在保存时有 <code>Save Locally</code> 和 <code>Save to Disk</code></p>\n<ul>\n<li>  <code>Save Locally</code> 本地保存的更改只会通过浏览器应用于当前用户，不会应用于其他实例。您需要使用云同步功能，或者手动更新 <code>conf.yml</code> 文件。</li>\n<li>  <code>Save to Disk</code> 写入磁盘，那么您的主 <code>conf.yml</code> 文件将被更新，并且更改将应用于所有用户，并在所有设备上可见。</li>\n</ul>\n<h2 id=\"widgets\"><a href=\"#widgets\" class=\"headerlink\" title=\"widgets\"></a>widgets</h2><p><code>Dashy</code> 支持以小部件的形式显示动态内容。有几个开箱即用的内置小部件，并且支持自定义小部件以显示来自几乎所有具有 <code>API</code> 的服务的统计信息。</p>\n<p>具体说明在👇这里：<br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0xpc3N5OTMvZGFzaHkvYmxvYi9tYXN0ZXIvZG9jcy93aWRnZXRzLm1k\">https://github.com/Lissy93/dashy/blob/master/docs/widgets.md<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"使用样例\"><a href=\"#使用样例\" class=\"headerlink\" title=\"使用样例\"></a>使用样例</h1><p>官方提供了一些 <code>conf.yml</code> 样例，可以直接修改使用。</p>\n<blockquote>\n<p>效果在👇下面可以看到：<br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0xpc3N5OTMvZGFzaHkvYmxvYi9tYXN0ZXIvZG9jcy9zaG93Y2FzZS5tZA==\">https://github.com/Lissy93/dashy/blob/master/docs/showcase.md<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<blockquote>\n<p><code>conf.yml</code> 下载地址就在👇这里：<br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vTGlzc3k5My8wMDBmNzEyYTVjZTk4ZjIxMjgxN2QyMGJjMTZiYWIxMA==\">https://gist.github.com/Lissy93/000f712a5ce98f212817d20bc16bab10<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<p>老苏用了 <code>Example 8 - Dashy Crypto Widgets - conf.yml</code>，可以学习下怎么使用 <code>widgets</code>。</p>\n<ul>\n<li>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>dashy</code></li>\n<li>将 <code>conf.yml</code> 放入 <code>dashy</code> 目录</li>\n<li>停止容器，并进入 <code>编辑</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201061416753.png\"></p>\n<p>在 <code>存储空间</code> –&gt; <code>添加文件</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/dashy/conf.yml</code></td>\n<td align=\"center\"><code>/app/public/conf.yml</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201061423599.png\"></p>\n<p>完成之后重新启动容器，稍等一下再刷新页面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201061427652.png\"></p>\n<p>功能确实强大，敢说自己是 <code>The Ultimate Homepage</code> 也不是没道理的👍，但自己要做得这么漂亮也不容易</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Lissy93/dashy: 🚀 A self-hosted startpage for your server. Easy to use visual editor, status checking, themes and tons more!<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0xpc3N5OTMvZGFzaHk=\">https://github.com/Lissy93/dashy<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Dashy | Dashy<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kYXNoeS50by8=\">https://dashy.to/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Example Config Files for Dashy<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vTGlzc3k5My8wMDBmNzEyYTVjZTk4ZjIxMjgxN2QyMGJjMTZiYWIxMA==\">https://gist.github.com/Lissy93/000f712a5ce98f212817d20bc16bab10<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","导航"]},{"title":"放假了","url":"/2022/01/27/%E6%94%BE%E5%81%87%E4%BA%86/","content":"<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201261854819.png\"></p>\n<p>放假第一天，本想睡个懒觉的，结果还忘了关闹钟</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201270834021.png\"></p>\n","categories":["美好生活"],"tags":["美好生活"]},{"title":"问题需求跟踪工具ActionView","url":"/2022/01/26/%E9%97%AE%E9%A2%98%E9%9C%80%E6%B1%82%E8%B7%9F%E8%B8%AA%E5%B7%A5%E5%85%B7ActionView/","content":"<p>本文是应网友要求而写，<code>ActionView</code> 主要用于问题、需求的跟踪，适用的人群包括但不限于管理人员、开发人员、分析人员、测试人员和其他人员。</p>\n<h1 id=\"关于工具的说明\"><a href=\"#关于工具的说明\" class=\"headerlink\" title=\"关于工具的说明\"></a>关于工具的说明</h1><p>在群晖上安装 <code>Docker</code> ，目前老苏主要用了两种方法：</p>\n<ul>\n<li>群晖的 <code>Docker</code> 管理器：作为群晖自带的 <code>Docker</code> 管理器，简单易用，适合单容器或者双容器的项目，但是如果容器再增加，步骤就会很繁琐；</li>\n<li>基于 <code>SSH</code> 客户端的命令行：比较合适 <code>Docker Compose</code> 方式一次性运行多个容器 ，虽然在老苏看来这种方式简单快捷，但是大多数人不习惯这种方式，其实这种方式难点在于 <code>docker-compose.yml</code> 文件的编排，而不是命令行本身；</li>\n</ul>\n<p>当然也尝试过其他方式：</p>\n<ul>\n<li>一种是用 <code>计划任务</code>：其实这种方式还是可以归到命令行方式，比如这篇文章『 <a href=\"https://laosu.ml/2021/01/12/Linux%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7Netdata%EF%BC%88%E4%BF%AE%E8%AE%A2%EF%BC%89/\">Linux性能监控工具Netdata（修订）</a> 』</li>\n<li>还有就是用 <code>portainer</code> 来安装 ：比如这篇文章『 <a href=\"https://laosu.ml/2020/10/16/%E9%83%A8%E7%BD%B2Guacamole%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E7%BD%91%E5%85%B3%E6%9C%8D%E5%8A%A1/\">部署Guacamole远程桌面网关服务</a> 』</li>\n</ul>\n<p><strong>为什么改用 <code>portainer</code> ？</strong></p>\n<blockquote>\n<p><code>Portainer</code> 是一个轻量级的 <code>docker</code> 图像管理软件，可以用来管理 <code>docker</code> 宿主机和<code>docker swarm</code> 集群。不仅能像群晖的 <code>docker</code> 管理器一样管理单个容器的安装，也支持 <code>stack</code> 管理，也就是 <code>Docker Compose</code>，所以后续命令行方式的容器安装，老苏将逐渐改用  <code>portainer</code>。</p>\n</blockquote>\n<p>关于 <code>portainer</code> 的安装可以看看老苏写的旧文：『 <a href=\"https://laosu.ml/2020/09/16/%E7%94%A8portainer%E7%AE%A1%E7%90%86docker%E6%9C%8D%E5%8A%A1/\">用portainer管理docker服务</a> 』，但是需要<strong>注意</strong>，搜索时请找 <code>portainer/portainer-ce</code> 而不是 <code>portainer/portainer</code>，原因看👇下图：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201141736939.png\"></p>\n<p>不过不太好找，建议用命令行安装会更快捷：</p>\n<blockquote>\n<p>很奇怪，现在很多镜像都找不到，群晖的 <code>docker</code> 注册表不知道做了什么处理😓</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单机启动方式</span></span><br><span class=\"line\">docker run -d \\</span><br><span class=\"line\">-p 9000:9000 \\</span><br><span class=\"line\">--restart=always \\</span><br><span class=\"line\">--name portainer \\</span><br><span class=\"line\">-v /var/run/docker.sock:/var/run/docker.sock \\</span><br><span class=\"line\">portainer/portainer-ce</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p><strong>什么是 ActionView ？</strong></p>\n<blockquote>\n<p><code>ActionView</code> 是一个面向中小企业的、开源免费的、简单易用的、类 <code>Jira</code> 的问题需求跟踪工具。前端基于 <code>reactjs＋redux</code>、后端基于 <code>php laravel-framework</code>，内置使用了 <code>MongoDB</code> 数据库。</p>\n</blockquote>\n<p><strong>什么是 Jira ？</strong></p>\n<blockquote>\n<p><code>Jira</code> 是 <code>Atlassian</code> 公司出品的项目与事务跟踪工具，被广泛应用于缺陷跟踪、客户服务、需求收集、流程审批、任务跟踪、项目跟踪和敏捷管理等工作领域。<code>Jira</code> 中配置灵活、功能全面、部署简单、扩展丰富，其超过 <code>150</code> 项特性得到了全球 <code>115</code>个国家超过 <code>19,000</code> 家客户的认可。【百度百科】</p>\n</blockquote>\n<p><code>ActionView</code> 作为 <code>Jira</code> 的追随者，功能也还是很丰富的。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201132304285.png\"></p>\n<p>官方提供了在线 <code>demo</code>：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5hY3Rpb252aWV3LmNuLw==\">http://www.actionview.cn<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201132256670.png\"></p>\n<p>可以先去体验，如果合适再考虑是否需要自己搭建。</p>\n<h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，将其命名为 <code>actionview</code>，然后在其中建两个子目录 <code>uploads</code> 和 <code>db</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201132348324.png\"></p>\n<p>记得给 <code>actionview</code> 目录增加 <code>Everyone</code> 的读写权限</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201141438284.png\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 新建目录</span></span><br><span class=\"line\">mkdir -p /volume2/docker/actionview/&#123;uploads,db&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改 actionview 目录权限</span></span><br><span class=\"line\">chmod -R 777 /volume2/docker/actionview</span><br></pre></td></tr></table></figure>\n\n<p>官方提供了 <code>docker-compose.yml</code> 文件，原版在这里：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2x4ZXJ4YS9hY3Rpb252aWV3L2Jsb2IvbWFzdGVyL2RvY2tlci9kb2NrZXItY29tcG9zZS55bWw=\">https://github.com/lxerxa/actionview/blob/master/docker/docker-compose.yml<i class=\"fa fa-external-link-alt\"></i></span> </p>\n<p>如果像原来用命令行安装，还得下载 <code>docker-compose.yml</code> 文件将其放入 <code>actionview</code> 目录，现在用 <code>portainer</code> 就不需要了。为了方便管理数据，老苏对原版的 <code>docker-compose.yml</code> 做了微调</p>\n<blockquote>\n<p>老苏的 <code>docker</code> 目录在 <code>volume2</code> 上，注意根据自己的修改</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">version: <span class=\"string\">&#x27;2&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">services:</span><br><span class=\"line\">  web:</span><br><span class=\"line\">    image: lxerxa/actionview:latest</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - /volume2/docker/actionview/uploads:/var/www/actionview/storage/app</span><br><span class=\"line\">    expose:</span><br><span class=\"line\">      - 80</span><br><span class=\"line\">    depends_on:</span><br><span class=\"line\">      - db</span><br><span class=\"line\">    links:</span><br><span class=\"line\">      - db:db</span><br><span class=\"line\">    <span class=\"built_in\">command</span>: /bin/bash /scripts/run.sh</span><br><span class=\"line\"></span><br><span class=\"line\">  cron:</span><br><span class=\"line\">    image: lxerxa/actionview:latest</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    volumes_from:</span><br><span class=\"line\">      - web</span><br><span class=\"line\">    depends_on:</span><br><span class=\"line\">      - db</span><br><span class=\"line\">    links:</span><br><span class=\"line\">      - db:db</span><br><span class=\"line\">    <span class=\"built_in\">command</span>: /bin/bash /scripts/cronrun.sh</span><br><span class=\"line\"></span><br><span class=\"line\">  nginx:</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    image: lxerxa/actionviewnginx:latest</span><br><span class=\"line\">    depends_on:</span><br><span class=\"line\">      - web</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - 8300:80</span><br><span class=\"line\">    links:</span><br><span class=\"line\">      - web:web</span><br><span class=\"line\"></span><br><span class=\"line\">  db:</span><br><span class=\"line\">    image: lxerxa/actionviewdb:latest</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    expose:</span><br><span class=\"line\">      - 27017</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - /volume2/docker/actionview/db:/data</span><br><span class=\"line\">    <span class=\"built_in\">command</span>: /bin/bash /scripts/run.sh</span><br></pre></td></tr></table></figure>\n\n<p><code>Stack</code> –&gt; <code>Add stack</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201141901198.png\"></p>\n<p>将上面的内容贴入 <code>Web editor</code>，别忘了填上 <code>Name</code></p>\n<blockquote>\n<p><code>Name</code> 注意不要用大写字母和特殊字符</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201140004619.png\"></p>\n<p>点最下面的 <code>Deploy the stack</code>，然后等待完成</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201140008485.png\"></p>\n<p>不出意外的话，在 <code>Containers</code> 中应该可以看到 <code>4</code> 个 <code>actionview</code> 开头的容器正在 <code>running</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201141924918.png\"></p>\n<p>在群晖 <code>Docker</code> 管理器中也是一样的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201140918484.png\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /volume2/docker/actionview</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 docker-compose.yml 放到 actionview 目录</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 一键启动</span></span><br><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n\n<p>如果你发现👇这样的信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ERROR: for actionview_nginx_1  Cannot restart container e04fa9f9b94588f8d06e31417f599225be3a71ae9b152b8709bde40bb14ae807: OCI runtime create failed: container_linux.go:367: starting container process caused: process_linux.go:495: container init caused: process_linux.go:458: setting cgroup config for procHooks process caused: failed to write &quot;0&quot;: write &#x2F;sys&#x2F;fs&#x2F;cgroup&#x2F;memory&#x2F;docker&#x2F;e04fa9f9b94588f8d06e31417f599225be3a71ae9b152b8709bde40bb14ae807&#x2F;memory.swappiness: invalid argument: unknown</span><br></pre></td></tr></table></figure>\n\n<p>请检查 <code>portainer</code> 的版本，如果你还在用 <code>portainer/portainer</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201150844410.png\"></p>\n<p>请务必升级到 <code>portainer/portainer-ce</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201150843345.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:8300</code> 就能看到登录界面</p>\n<blockquote>\n<p> 管理员账号: <code>admin@action.view</code>；密码: <code>actionview</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201140920716.png\"></p>\n<p>登录成功后的主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201141130934.png\"></p>\n<p>这种专业性的软件，使用的都是专业的人员，所以这里就不展开了</p>\n<h1 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h1><p>不建议将 <code>docker</code> 安装方式用于生产环境，这不是老苏说的，而是官方 <code>FAQ</code> 说的，至于原因人家没说，老苏也没问😁</p>\n<h1 id=\"祝福\"><a href=\"#祝福\" class=\"headerlink\" title=\"祝福\"></a>祝福</h1><p>今天是农历腊月廿四，南方小年，小年一到，这年就算来了。不管您是选择原地留守，还是回家过年，老苏都祝愿您如意顺心，平安吉祥……</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201260917684.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>lxerxa/actionview: An issue tracking tool based on laravel+reactjs for small and medium-sized enterprises, open-source and free, similar to Jira.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2x4ZXJ4YS9hY3Rpb252aWV3\">https://github.com/lxerxa/actionview<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>ActionView - 更好用的问题需求跟踪工具<br>地址：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5hY3Rpb252aWV3LmNuLw==\">http://www.actionview.cn/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>FAQ · lxerxa/actionview Wiki<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2x4ZXJ4YS9hY3Rpb252aWV3L3dpa2kvRkFR\">https://github.com/lxerxa/actionview/wiki/FAQ<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Docker Installation · lxerxa/actionview Wiki<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2x4ZXJ4YS9hY3Rpb252aWV3L3dpa2kvRG9ja2VyLUluc3RhbGxhdGlvbg==\">https://github.com/lxerxa/actionview/wiki/Docker-Installation<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","问题跟踪","需求跟踪"]},{"title":"用GitHub Actions自动部署Hexo","url":"/2022/01/24/%E7%94%A8GitHub%20Actions%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2Hexo/","content":"<p>老苏一直用 <code>hexo</code> 发博文，发布过程经历了 <code>三个阶段</code></p>\n<p><strong>第一阶段</strong> ： 在家里的台式机上发布 <code>hexo</code> ，流程是先把要发布博文的 <code>md</code> 文件放到 <code>_posts</code> 目录，然后在 <code>Git Bash Here</code> 命令行中执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 清除缓存</span></span><br><span class=\"line\">hexo clean</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成静态网页并开始部署</span></span><br><span class=\"line\">hexo g -d</span><br></pre></td></tr></table></figure>\n\n<p><strong>第二阶段</strong> ：在其他机器上发博文，不仅要安装 <code>hexo</code> 的支撑环境，还要做文件同步，所以后来又折腾了 <code>hexo-admin</code> 和 <code>hexon</code>。</p>\n<p><strong>第三阶段</strong> ：折腾了自动化的工具 <code>Github Action</code> ，用来完成 <code>hexo</code> 的自动化部署，已经稳定运行了一段时间，而且解决了 <code>Gitee</code> 必须手动发布的问题。</p>\n<p><strong>什么是 GitHub Actions ？</strong></p>\n<blockquote>\n<p><code>GitHub Actions</code> 是一个 <code>CI/CD</code>（持续集成/持续部署）工具，<code>GitHub</code> 于 <code>2018</code> 年 <code>10</code> 月推出，正式版于 <code>2019</code> 年 <code>11</code> 月正式推出。</p>\n</blockquote>\n<p>本文假设你已经有了自己的 <code>hexo</code> 静态博客，因此只简单介绍了自动化部署需要的设置。</p>\n<h1 id=\"创建代码仓库\"><a href=\"#创建代码仓库\" class=\"headerlink\" title=\"创建代码仓库\"></a>创建代码仓库</h1><ol>\n<li>老苏已经有了 <code>wbsu2003.github.io</code> 仓库用来存放静态博客页面，仓库类型是 <code>public</code> </li>\n<li>新建一个 <code>myblog</code> 仓库用来存放 <code>Hexo</code> 项目的源码，这个仓库的类型是 <code>private</code></li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112041232989.png\"></p>\n<p>记得勾选 <code>Add a Readme file</code> 来完成 <code>repository</code> 的初始化</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112041236046.png\"></p>\n<h1 id=\"生成部署密钥\"><a href=\"#生成部署密钥\" class=\"headerlink\" title=\"生成部署密钥\"></a>生成部署密钥</h1><p>在 <code>Git Bash Here</code> 中执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 生成秘钥</span></span><br><span class=\"line\">ssh-keygen -f github-deploy-key</span><br></pre></td></tr></table></figure>\n\n<p>一路按回车直到生成成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201240850707.png\"></p>\n<p>会在当前目录中生成两个文件，私钥文件 <code>github-deploy-key</code> 和公钥文件 <code>github-deploy-key.pub</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112041144736.png\"></p>\n<h1 id=\"配置部署密钥\"><a href=\"#配置部署密钥\" class=\"headerlink\" title=\"配置部署密钥\"></a>配置部署密钥</h1><h2 id=\"私钥\"><a href=\"#私钥\" class=\"headerlink\" title=\"私钥\"></a>私钥</h2><p>复制 <code>github-deploy-key</code> 文件内容，在 <code>myblog</code> 仓库 <code>Settings</code> -&gt; <code>Secrets</code> -&gt; <code>New repository secret</code> 页面上添加。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112041153978.png\"></p>\n<ol>\n<li> 在 <code>Name</code> 输入框填写 <code>HEXO_DEPLOY_PRI</code></li>\n<li> 在 <code>Value</code> 输入框填写 <code>github-deploy-key</code> 文件内容</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112041155284.png\"></p>\n<p>添加完成</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112041156807.png\"></p>\n<p>另外建一个用于同步到 <code>gitee</code> 的私钥，用于存储 <code>gitee</code> 的密码</p>\n<ol>\n<li> 在 <code>Name</code> 输入框填写 <code>GITEE_PASSWORD</code></li>\n<li> 在 <code>Value</code> 输入框填写 <code>gitee</code> 的密码</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112041849896.png\"></p>\n<h2 id=\"公钥\"><a href=\"#公钥\" class=\"headerlink\" title=\"公钥\"></a>公钥</h2><p>复制 <code>github-deploy-key.pub</code> 文件内容，在 <code>wbsu2003.github.io</code> 仓库 <code>Settings -&gt; Deploy keys -&gt; Add deploy key</code> 页面上添加。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112041158431.png\"></p>\n<ol>\n<li>在 <code>Title</code> 输入框填写 <code>HEXO_DEPLOY_PUB</code></li>\n<li>在 <code>Key</code> 输入框填写 <code>github-deploy-key.pub</code> 文件内容</li>\n<li>勾选 <code>Allow write access</code> 选项</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112041201009.png\"></p>\n<p>添加完成</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201240954913.png\"></p>\n<h1 id=\"同步代码\"><a href=\"#同步代码\" class=\"headerlink\" title=\"同步代码\"></a>同步代码</h1><p>接下来老苏把群晖上的 <code>blog</code> 提交到了 <code>myblog</code> 仓库</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 将 blog 目录变成 git 可以管理的仓库</span></span><br><span class=\"line\">git init</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 把文件添加到版本库中</span></span><br><span class=\"line\">git add .</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 把文件提交到仓库。引号内为提交注释</span></span><br><span class=\"line\">git commit -m <span class=\"string\">&#x27;第一次提交&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 关联到远程库</span></span><br><span class=\"line\">git remote add origin https://github.com/wbsu2003/myblog.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 或者</span></span><br><span class=\"line\">git remote add origin git@github.com:wbsu2003/myblog.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 把本地库的内容推送到远程</span></span><br><span class=\"line\"><span class=\"comment\">## 第一次使用加上了-u参数，是推送内容并关联分支。</span></span><br><span class=\"line\">git push -u origin main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 下次直接提交</span></span><br><span class=\"line\">git push origin main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 强制更新</span></span><br><span class=\"line\">git push -f origin main</span><br></pre></td></tr></table></figure>\n\n<p>如果要同步到本地，可以执行下面的命令进行拉取</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 同步下拉代码</span></span><br><span class=\"line\">git pull origin main</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"创建-Workflow\"><a href=\"#创建-Workflow\" class=\"headerlink\" title=\"创建 Workflow\"></a>创建 Workflow</h1><p>在 <code>myblog</code> 根目录下创建 <code>.github/workflows/deploy.yml</code> 文件，目录结构如下。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">myblog (repository)  </span><br><span class=\"line\">└── .github  </span><br><span class=\"line\"> └── workflows  </span><br><span class=\"line\"> └── deploy.yml</span><br></pre></td></tr></table></figure>\n\n<p><code>deploy.yml</code> 的内容如下</p>\n<blockquote>\n<p>理论上只要修改环境变量 <code>env</code> 部分和 <code>Install dependencies</code></p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Action 的名字</span></span><br><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Hexo</span> <span class=\"string\">Auto</span> <span class=\"string\">Deploy</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"comment\"># 触发条件1：main 分支收到 push 后执行任务。</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">main</span></span><br><span class=\"line\">  <span class=\"comment\"># 触发条件2：手动按钮</span></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 这里放环境变量,需要替换成你自己的</span></span><br><span class=\"line\"><span class=\"attr\">env:</span></span><br><span class=\"line\">  <span class=\"comment\"># Hexo 编译后使用此 git 用户部署到 github 仓库</span></span><br><span class=\"line\">  <span class=\"attr\">GIT_USER:</span> <span class=\"string\">wbsu2003</span></span><br><span class=\"line\">  <span class=\"comment\"># Hexo 编译后使用此 git 邮箱部署到 github 仓库</span></span><br><span class=\"line\">  <span class=\"attr\">GIT_EMAIL:</span> <span class=\"string\">wbsu2003@gmail.com</span></span><br><span class=\"line\">  <span class=\"comment\"># Hexo 编译后要部署的 github 仓库</span></span><br><span class=\"line\">  <span class=\"attr\">GIT_DEPLOY_REPO:</span> <span class=\"string\">wbsu2003/wbsu2003.github.io</span></span><br><span class=\"line\">  <span class=\"comment\"># Hexo 编译后要部署到的分支</span></span><br><span class=\"line\">  <span class=\"attr\">GIT_DEPLOY_BRANCH:</span> <span class=\"string\">master</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># Hexo 编译后使用此 gitee 用户部署到gitee仓库</span></span><br><span class=\"line\">  <span class=\"attr\">GITEE_USER:</span> <span class=\"string\">wbsu2003</span></span><br><span class=\"line\">  <span class=\"comment\"># Hexo 编译后要部署的 gitee 仓库</span></span><br><span class=\"line\">  <span class=\"attr\">GITEE_DEPLOY_REPO:</span> <span class=\"string\">wbsu2003/wbsu2003</span></span><br><span class=\"line\">  <span class=\"comment\"># Hexo 编译后要部署到的分支</span></span><br><span class=\"line\">  <span class=\"attr\">GITEE_DEPLOY_BRANCH:</span> <span class=\"string\">master</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># 注意替换为你的 GitHub 源仓库地址</span></span><br><span class=\"line\">  <span class=\"attr\">GIT_SOURCE_REPO:</span> <span class=\"string\">git@github.com:wbsu2003/wbsu2003.github.io.git</span></span><br><span class=\"line\">  <span class=\"comment\"># 注意替换为你的 Gitee 目标仓库地址</span></span><br><span class=\"line\">  <span class=\"attr\">GITEE_DESTINATION_REPO:</span> <span class=\"string\">git@gitee.com:wbsu2003/wbsu2003.git</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">build:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">Build</span> <span class=\"string\">on</span> <span class=\"string\">node</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">matrix.node_version</span> <span class=\"string\">&#125;&#125;</span> <span class=\"string\">and</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">matrix.os</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">if:</span> <span class=\"string\">github.event.repository.owner.id</span> <span class=\"string\">==</span> <span class=\"string\">github.event.sender.id</span></span><br><span class=\"line\">    <span class=\"attr\">strategy:</span></span><br><span class=\"line\">      <span class=\"attr\">matrix:</span></span><br><span class=\"line\">        <span class=\"attr\">os:</span> [<span class=\"string\">ubuntu-18.04</span>]</span><br><span class=\"line\">        <span class=\"attr\">node_version:</span> [<span class=\"number\">12.</span><span class=\"string\">x</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span> <span class=\"string\">deploy</span> <span class=\"string\">repo</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">repository:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">env.GIT_DEPLOY_REPO</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">          <span class=\"attr\">ref:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">env.GIT_DEPLOY_BRANCH</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">          <span class=\"attr\">path:</span> <span class=\"string\">.deploy_git</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Use</span> <span class=\"string\">Node.js</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">matrix.node_version</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">matrix.node_version</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Configuration</span> <span class=\"string\">environment</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">HEXO_DEPLOY_PRI:</span> <span class=\"string\">$&#123;&#123;secrets.HEXO_DEPLOY_PRI&#125;&#125;</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">sudo</span> <span class=\"string\">timedatectl</span> <span class=\"string\">set-timezone</span> <span class=\"string\">&quot;Asia/Shanghai&quot;</span></span><br><span class=\"line\">          <span class=\"string\">mkdir</span> <span class=\"string\">-p</span> <span class=\"string\">~/.ssh/</span></span><br><span class=\"line\">          <span class=\"string\">echo</span> <span class=\"string\">&quot;$HEXO_DEPLOY_PRI&quot;</span> <span class=\"string\">&gt;</span> <span class=\"string\">~/.ssh/id_rsa</span></span><br><span class=\"line\">          <span class=\"string\">chmod</span> <span class=\"number\">600</span> <span class=\"string\">~/.ssh/id_rsa</span></span><br><span class=\"line\">          <span class=\"string\">ssh-keyscan</span> <span class=\"string\">-t</span> <span class=\"string\">rsa</span> <span class=\"string\">github.com</span> <span class=\"string\">&gt;&gt;</span> <span class=\"string\">~/.ssh/known_hosts</span></span><br><span class=\"line\">          <span class=\"comment\"># coding 已取消同步</span></span><br><span class=\"line\">          <span class=\"string\">ssh-keyscan</span> <span class=\"string\">-t</span> <span class=\"string\">rsa</span> <span class=\"string\">e.coding.net</span> <span class=\"string\">&gt;&gt;</span> <span class=\"string\">~/.ssh/known_hosts</span></span><br><span class=\"line\">          <span class=\"string\">ssh-keyscan</span> <span class=\"string\">-t</span> <span class=\"string\">rsa</span> <span class=\"string\">gitee.com</span> <span class=\"string\">&gt;&gt;</span> <span class=\"string\">~/.ssh/known_hosts</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">$GIT_USER</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">$GIT_EMAIL</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">dependencies</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">install</span> <span class=\"string\">hexo-cli</span> <span class=\"string\">-g</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">install</span></span><br><span class=\"line\">\t\t  <span class=\"comment\"># 根据你安装的组件进行安装</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">uninstall</span> <span class=\"string\">hexo-generator-index</span> <span class=\"string\">--save</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">install</span> <span class=\"string\">hexo-baidu-url-submit</span> <span class=\"string\">hexo-generator-index2</span> <span class=\"string\">hexo-symbols-count-time</span> <span class=\"string\">hexo-blog-encrypt</span> <span class=\"string\">hexo-deployer-git</span> <span class=\"string\">--save</span></span><br><span class=\"line\">          <span class=\"comment\"># 复制中文语言包，解决菜单英文的问题</span></span><br><span class=\"line\">          <span class=\"string\">cp</span> <span class=\"string\">zh-CN.yml</span> <span class=\"string\">node_modules/hexo-theme-next/languages/</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Deploy</span> <span class=\"string\">hexo</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">run</span> <span class=\"string\">deploy</span></span><br><span class=\"line\">\t\t  </span><br><span class=\"line\">      <span class=\"comment\"># 以下为发布到gitee</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Sync</span> <span class=\"string\">to</span> <span class=\"string\">Gitee</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">wearerequired/git-mirror-action@master</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"comment\"># 直接使用了 HEXO_DEPLOY_PRI</span></span><br><span class=\"line\">          <span class=\"attr\">SSH_PRIVATE_KEY:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.HEXO_DEPLOY_PRI</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"comment\"># GitHub 源仓库地址</span></span><br><span class=\"line\">          <span class=\"attr\">source-repo:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">env.GIT_SOURCE_REPO</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">          <span class=\"comment\"># Gitee 目标仓库地址</span></span><br><span class=\"line\">          <span class=\"attr\">destination-repo:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">env.GITEE_DESTINATION_REPO</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Build</span> <span class=\"string\">Gitee</span> <span class=\"string\">Pages</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">yanglbme/gitee-pages-action@main</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"comment\"># 你的 Gitee 用户名</span></span><br><span class=\"line\">          <span class=\"attr\">gitee-username:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">env.GITEE_USER</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">          <span class=\"comment\"># 注意在 Settings-&gt;Secrets 配置 GITEE_PASSWORD</span></span><br><span class=\"line\">          <span class=\"attr\">gitee-password:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.GITEE_PASSWORD</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">          <span class=\"comment\"># 你的 Gitee 仓库，仓库名严格区分大小写，请准确填写，否则会出错</span></span><br><span class=\"line\">          <span class=\"attr\">gitee-repo:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">env.GITEE_DEPLOY_REPO</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">          <span class=\"comment\"># 要部署的分支，默认是 master，若是其他分支，则需要指定（指定的分支必须存在）</span></span><br><span class=\"line\">          <span class=\"attr\">branch:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">env.GITEE_DEPLOY_BRANCH</span> <span class=\"string\">&#125;&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"触发部署\"><a href=\"#触发部署\" class=\"headerlink\" title=\"触发部署\"></a>触发部署</h1><p>老苏在 <code>hexo</code> 的菜单中建了一个 <code>发文</code> 菜单，地址指向了 <code>myblog</code> 仓库中的 <code>_post</code> 目录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112251332420.png\"></p>\n<p>只要将 <code>md</code> 文件通过 <code>Add file</code> –&gt; <code>Upload files</code> 上传到仓库，就会自动触发自动部署</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112061215178.png\"></p>\n<p>第一篇自动部署的文章是『 <a href=\"https://laosu.ml/2021/12/06/%E5%BE%B7%E4%B8%9ADYD-T22A3%E9%99%A4%E6%B9%BF%E6%9C%BA%E6%8E%A5%E5%85%A5HomeAssistant%E8%AE%B0%E5%BD%95/\">德业DYD-T22A3除湿机接入HomeAssistant记录</a> 』</p>\n<p>目前的发布时间都在 <code>3</code> 分钟以内</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112251346548.png\"></p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>本文是照着参考文档做的，如果您在实践中遇到什么问题，请多看看原文，不管怎么说，老苏都能成功，你也一样可以的</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>利用 Github Actions 自动部署 Hexo 博客 | Sanonz<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zYW5vbnouZ2l0aHViLmlvLzIwMjAvZGVwbG95LWEtaGV4by1ibG9nLWZyb20tZ2l0aHViLWFjdGlvbnMv\">https://sanonz.github.io/2020/deploy-a-hexo-blog-from-github-actions/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>利用github Actions自动同步项目到gitee并自动部署Gitee Pages<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ib3JlLnZpcC9hcmNoaXZlcy9naXRodWItYWN0aW9ucy1zeW5jLXRvLWdpdGVlLw==\">https://bore.vip/archives/github-actions-sync-to-gitee/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["自动化","hexo","博客"]},{"title":"音乐流媒体服务器Gonic","url":"/2022/01/21/%E9%9F%B3%E4%B9%90%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8Gonic/","content":"<p><strong>什么是 Gonic ？</strong></p>\n<blockquote>\n<p><code>Gonic</code>  是一款音乐流媒体服务器，兼容 <code>subsonic server API</code>，这意味着可以使用众多的客户端。</p>\n</blockquote>\n<p><strong>什么是 Last.fm ？</strong></p>\n<blockquote>\n<p><code>Last·fm</code> 是一个音乐推荐服务，充分利用集体的智慧，通过每个用户的音乐收听情况提供个性化推荐、联系品味相近的用户、提供定制的电台广播及更多其他服务。</p>\n</blockquote>\n<p><strong>什么是 ListenBrainz ？</strong></p>\n<blockquote>\n<p><code>ListenBrainz</code> 是完全开源的，它会跟踪您收听的音乐，并让您深入了解您的收听习惯。</p>\n</blockquote>\n<p><strong>什么是 Podcast ？</strong></p>\n<blockquote>\n<p><code>Podcast</code> 又称为 <code>“播客”</code>，这个词来源自苹果电脑的 <code>“iPod”</code> 与 <code>“广播”（broadcast）</code>的混成词。是指一种在互联网上发布文件并允许用户订阅 <code>feed</code> 以自动接收新文件的方法，或用此方法来制作的电台节目。</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>gonic</code> ，选择第一个 <code>sentriz/gonic</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111302050693.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>gonic</code>，再建 <code>3</code> 个子目录，分别为 <code>music</code>、<code>data</code> 和 <code>cache</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111302054382.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/gonic/data</code></td>\n<td align=\"center\"><code>/data</code></td>\n<td align=\"center\">存放数据库</td>\n</tr>\n<tr>\n<td align=\"center\"><code>docker/gonic/music</code></td>\n<td align=\"center\"><code>/music</code></td>\n<td align=\"center\">存放音乐</td>\n</tr>\n<tr>\n<td align=\"center\"><code>docker/gonic/cache</code></td>\n<td align=\"center\"><code>/cache</code></td>\n<td align=\"center\">存放转码、封面等</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p><code>music</code> 可以设为只读的，防止误删除</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111302058764.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不冲突就行，不确定的话可以用命令查一下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看端口占用</span></span><br><span class=\"line\">netstat -tunlp | grep 端口号</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>4048</code></td>\n<td align=\"center\"><code>80</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111302100033.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>TZ</code></td>\n<td align=\"center\">设为 <code>Asia/Shanghai</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111302103839.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:4048</code> 就能看到主界面</p>\n<blockquote>\n<p>默认的账号和密码为 <code>admin/admin</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111302105994.png\"></p>\n<p>这界面让老苏有种穿越的感觉😓</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111302106152.png\"></p>\n<h2 id=\"第三方\"><a href=\"#第三方\" class=\"headerlink\" title=\"第三方\"></a>第三方</h2><p>除了可以链接到 <code>Last.fm</code>，还可以链接到 <code>ListenBrainz</code>，这两个网站都提供音乐推荐服务，但是对老苏来说用处不大，直接忽略了</p>\n<h2 id=\"音乐文件\"><a href=\"#音乐文件\" class=\"headerlink\" title=\"音乐文件\"></a>音乐文件</h2><p>将音乐文件放入到 <code>docker/gonic/music</code>，然后在界面上点 <code>scan now</code>，完成后会看到目录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112211406939.png\"></p>\n<h2 id=\"转码\"><a href=\"#转码\" class=\"headerlink\" title=\"转码\"></a>转码</h2><p>设置很简单，对于常用的客户端直接写客户端名称，然后选择编码格式即可</p>\n<p>如果要强制全部转码，客户端名称写 <code>*</code> 即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112211414552.png\"></p>\n<p>可以在日志中看到转码的相关信息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112211419223.png\"></p>\n<h2 id=\"app播放器\"><a href=\"#app播放器\" class=\"headerlink\" title=\"app播放器\"></a>app播放器</h2><p>其实 <code>Gonic</code> 主要当服务用的，播放还是要靠客户端，老苏还是习惯用 <code>Subsonic</code></p>\n<p>从下图可以看到老苏现在用过的支持 <code>subsonic api</code> 的服务器已经很多了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112211422595.png\"></p>\n<p>在 <code>LIBRARY</code> 中可以看到文件目录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112211424110.png\"></p>\n<h2 id=\"podcasts\"><a href=\"#podcasts\" class=\"headerlink\" title=\"podcasts\"></a>podcasts</h2><p>这个老苏没玩过，有兴趣去百度搜一下吧</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>sentriz/gonic: music streaming server / subsonic server API implementation<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NlbnRyaXovZ29uaWM=\">https://github.com/sentriz/gonic<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>sentriz/gonic - Docker Image | Docker Hub<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9yL3NlbnRyaXovZ29uaWM=\">https://hub.docker.com/r/sentriz/gonic<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>有哪些值得订阅的中文播客？ - 知乎<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzI3Nzk4OTUy\">https://www.zhihu.com/question/27798952<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","音乐"]},{"title":"Firefly III 搭建个人财务记账平台","url":"/2022/01/19/Firefly%20III%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E8%B4%A2%E5%8A%A1%E8%AE%B0%E8%B4%A6%E5%B9%B3%E5%8F%B0/","content":"<p>有网友留言需要 <code>适配移动平台可以私有化部署的记账软件</code>，但是一直没有找到合适的国产软件。<code>Firefly III</code> 是国外一款开源的记账软件，提供开放的接口，支持跨平台使用和同步，所以从软件开发角度看，这是一款不错的产品，是否符合国人的使用习惯，只有亲自使用了才知道</p>\n<p><strong>什么是 Firefly III ？</strong></p>\n<blockquote>\n<p><code>Firefly-iii</code> 是一个开源的记账软件，可以自主搭建个人的财务管理服务，帮助用户记录和追踪收入与开销。</p>\n</blockquote>\n<p>老苏记账差不多经历了三个阶段：</p>\n<ul>\n<li><strong>第一阶段</strong>：<code>2011</code> 年以前，一直用 <code>excel</code> 记账；</li>\n<li><strong>第二阶段</strong>：<code>2011</code> ~ <code>2013</code> 年开始用金蝶旗下的 <code>随手记</code>，因为是在手机上记账，比 <code>excel</code> 方便多了；</li>\n<li><strong>第三阶段</strong>：<code>2013</code> 年以后，工资卡被老婆忽悠走了，从此老苏达到了 <code>手中无卡，心中无账</code> 的境界🙂</li>\n</ul>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"数据库\"><a href=\"#数据库\" class=\"headerlink\" title=\"数据库\"></a>数据库</h2><p>通过 <code>phpMyAdmin</code> 在 <code>MariaDB 10</code> 中新建用户 <code>firefly</code>，创建同名的库 <code>firefly</code> 并授予所有权限。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201121705752.png\"></p>\n<h2 id=\"安装镜像\"><a href=\"#安装镜像\" class=\"headerlink\" title=\"安装镜像\"></a>安装镜像</h2><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>firefly</code> ，选择第二个 <code>fireflyiii/core</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201121639687.png\"></p>\n<blockquote>\n<p>第一个镜像 <code>jc5x/firefly-iii</code> 也是官网的，只是自 <code>2021年7月1日</code> 起，已经被弃用</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201121642366.png\"></p>\n<h3 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h3><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>firefly</code>，然后在 <code>firefly</code> 中再建两个子目录 <code>upload</code> 和 <code>export</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201131654195.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/firefly/export </code></td>\n<td align=\"center\"><code>/var/www/html/storage/export</code></td>\n<td align=\"center\">存放导出文件</td>\n</tr>\n<tr>\n<td align=\"center\"><code>docker/firefly/upload</code></td>\n<td align=\"center\"><code>/var/www/html/storage/upload</code></td>\n<td align=\"center\">存放上传文件</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201131657856.png\"></p>\n<h3 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h3><p>端口不冲突就行，不确定的话可以用命令查一下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看端口占用</span></span><br><span class=\"line\">netstat -tunlp | grep 端口号</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>8888</code></td>\n<td align=\"center\"><code>8080</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201121713883.png\"></p>\n<h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>APP_KEY</code></td>\n<td align=\"center\">必须是 <code>32</code> 位</td>\n</tr>\n<tr>\n<td align=\"center\"><code>DB_HOST</code></td>\n<td align=\"center\">数据库地址</td>\n</tr>\n<tr>\n<td align=\"center\"><code>DB_PORT</code></td>\n<td align=\"center\">数据库端口</td>\n</tr>\n<tr>\n<td align=\"center\"><code>DB_CONNECTION</code></td>\n<td align=\"center\">数据库类型</td>\n</tr>\n<tr>\n<td align=\"center\"><code>DB_DATABASE</code></td>\n<td align=\"center\">数据库库名</td>\n</tr>\n<tr>\n<td align=\"center\"><code>DB_USERNAME</code></td>\n<td align=\"center\">数据库用户</td>\n</tr>\n<tr>\n<td align=\"center\"><code>DB_PASSWORD</code></td>\n<td align=\"center\">数据库密码</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>老苏群晖的 <code>IP</code> 为 <code>192.168.0.197</code>， <code>MariaDB 10</code> 的端口是 <code>3307</code> </p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201121719101.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>日志中看到👇下面的信息就可以开始使用了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201121725211.png\"></p>\n<p>在浏览器中输入 <code>http://群晖IP:8888</code> 就能看到登录界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201121723206.png\"></p>\n<p>第一次需要注册用户</p>\n<blockquote>\n<p>注意：密码不能少于 <code>16</code> 位，建议用密码生成器，使用类似 <code>LZ8xEJ6EPToTboxm</code> 这样的密码</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201121728583.png\"></p>\n<p>登录成功后的欢迎界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201121733811.png\"></p>\n<h2 id=\"设置中文\"><a href=\"#设置中文\" class=\"headerlink\" title=\"设置中文\"></a>设置中文</h2><p>第一件事当然是设置语言啦，在欢迎界面中</p>\n<ul>\n<li><code>Bank name</code>：老苏随便填了个 <code>交通银行</code></li>\n<li><code>Balance</code>：应该是余额，默认是<code>欧元</code>，点前面的三角下箭头，找到 <code>chinese yuan</code>，后面填 <code>0</code></li>\n<li><code>Savings balance</code>：储蓄卡余额，先默认没动</li>\n<li><code>language</code> 中下拉到底，选择 <code>Chinese Simplified</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201131400265.png\"></p>\n<p><code>Submit</code> 之后就是中文界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201131401373.png\"></p>\n<p>老苏在移动端直接使用 <code>Web</code> 的效果也还可以</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201131602798.png\"></p>\n<p>现在您可以开启记账之旅，创建预算，跟踪支出，通过报表了解收支情况了。</p>\n<h1 id=\"应用\"><a href=\"#应用\" class=\"headerlink\" title=\"应用\"></a>应用</h1><h2 id=\"接口\"><a href=\"#接口\" class=\"headerlink\" title=\"接口\"></a>接口</h2><p>除了 <code>Web</code> 应用外，<code>Firefly III</code> 还具备 <code>JSON API</code>，提供了专门的 <code>Swagger</code> 文档：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcGktZG9jcy5maXJlZmx5LWlpaS5vcmcv\">https://api-docs.firefly-iii.org<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201121943299.png\"></p>\n<p>除非你想做基于 <code>Firefly III</code> 的二次开发，否则作为一般用户来说，这个没啥用处，老苏也就顺便提一下。</p>\n<p>官方没有提供除了 <code>Web</code> 之外的应用，移动端都是第三方基于👆的 <code>API</code> 开发的，所有的移动客户端都在这里 👉 ：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmZpcmVmbHktaWlpLm9yZy9maXJlZmx5LWlpaS9vdGhlci1wYWdlcy8zcmRwYXJ0eS8=\">https://docs.firefly-iii.org/firefly-iii/other-pages/3rdparty/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"Android\"><a href=\"#Android\" class=\"headerlink\" title=\"Android\"></a>Android</h2><p><code>Android</code> 平台有 <code>2</code> 个，分别是 <code>Firefly Personal Finance</code> 和 <code>Photuris III</code>，老苏只下了 <code>Photuris III</code> 简单测试了一下</p>\n<blockquote>\n<p>需要的朋友可以在后台回复 <code>记账</code> 即可获取下载地址</p>\n</blockquote>\n<ol>\n<li>在 <code>Web</code> 端获取 <code>个人访问令牌</code></li>\n</ol>\n<blockquote>\n<p>主页 –&gt; <code>选项</code> –&gt; <code>个人档案</code> –&gt; <code>OAuth 授权</code> –&gt; <code>个人访问令牌</code> –&gt; <code>创建新令牌</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201131553003.png\"></p>\n<p>名称只是为了标识，方便多令牌的管理</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201131554567.png\"></p>\n<p>令牌只显示一次，所以要妥善保管</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201131556254.png\"></p>\n<ol start=\"2\">\n<li>登录 <code>android</code> 客户端</li>\n</ol>\n<p>打开 <code>app</code>，点 <code>PERSONAL ACCESS TOKEN</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201131639045.png\"></p>\n<p>输入 <code>服务器地址</code> 和 <code>个人访问令牌</code>后，点 <code>SIGN IN</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201131643141.png\"></p>\n<p>进入 <code>Options</code> –&gt; <code>Settings</code> –&gt; <code>Language</code> 可以改为 <code>简体中文</code> 界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201131644477.png\"></p>\n<p>从界面看基本上就是高仿的 <code>Web</code> ，简单用了下，比较容易闪退😅</p>\n<h2 id=\"iOS\"><a href=\"#iOS\" class=\"headerlink\" title=\"iOS\"></a>iOS</h2><p><code>iOS</code> 只有基于 <code>Workflow</code> 的快捷方式，老苏没有 <code>iOS</code> 设备，给个动图自己研究吧</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201131605823.gif\"></p>\n<p>动图地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RteXRyby9maXJlZmx5LWlvcy1zaG9ydGN1dHM=\">https://github.com/tmytro/firefly-ios-shortcuts<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>firefly-iii/firefly-iii: Firefly III: a personal finances manager<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ZpcmVmbHktaWlpL2ZpcmVmbHktaWlp\">https://github.com/firefly-iii/firefly-iii<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Firefly III - A free and open source personal finances manager<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZmlyZWZseS1paWkub3JnLw==\">https://www.firefly-iii.org/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Docker - Firefly III documentation<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmZpcmVmbHktaWlpLm9yZy9maXJlZmx5LWlpaS9pbnN0YWxsYXRpb24vZG9ja2VyLw==\">https://docs.firefly-iii.org/firefly-iii/installation/docker/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","记账","财务"]},{"title":"反向代理服务器nginx-proxy-manager","url":"/2022/01/17/%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8nginx-proxy-manager/","content":"<p>一直以来，老苏都是使用群晖内置的反向代理，虽然很方便易用，但在某些情况下显得并不灵活。比如老苏打算安装 <code>Authelia</code>，需要修改 <code>nginx</code> 转发规则，必须通过 <code>SSH</code> 登录后找到相应的文件修改，这一点上不如 <code>nginx-proxy-manager</code>，当你习惯后，你会发现 <code>npm</code> 的优点远不止这点。</p>\n<p><strong>什么是 Nginx Proxy Manager ？</strong></p>\n<blockquote>\n<p><code>Nginx Proxy Manager</code> 是用于管理 <code>Nginx</code> 代理主机的 <code>Docker</code> 容器，具有简单、强大的界面。它使您可以轻松地转发到您在家里或其他地方运行的网站，包括免费的 <code>SSL</code>，而无需对 <code>Nginx</code> 或 <code>Letsencrypt</code> 了解太多。</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"数据库\"><a href=\"#数据库\" class=\"headerlink\" title=\"数据库\"></a>数据库</h2><p>通过 <code>phpMyAdmin</code> 在 <code>MariaDB 10</code> 中新建用户 <code>npm</code>，创建同名的库 <code>npm</code> 并授予所有权限。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201030958071.png\"></p>\n<blockquote>\n<p>老苏试过 <code>MariaDB 5</code>，写数据库有问题，表现为登录不成功，显示 <code>Bad Gateway</code> 错误</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201031058622.png\"></p>\n<h2 id=\"安装镜像\"><a href=\"#安装镜像\" class=\"headerlink\" title=\"安装镜像\"></a>安装镜像</h2><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>nginx-proxy-manager</code> ，选择第一个 <code>jc21/nginx-proxy-manager</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201031025479.png\"></p>\n<h3 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h3><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>npm</code>，再建 <code>2</code> 个子目录，分别命名为 <code>data</code> 和 <code>letsencrypt</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201031023029.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/npm/data</code></td>\n<td align=\"center\"><code>/data</code></td>\n<td align=\"center\">存放数据</td>\n</tr>\n<tr>\n<td align=\"center\"><code>docker/npm/letsencrypt</code></td>\n<td align=\"center\"><code>/etc/letsencrypt</code></td>\n<td align=\"center\">存放自动申请证书</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201031029053.png\"></p>\n<h3 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h3><p>端口不冲突就行，不确定的话可以用命令查一下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看端口占用</span></span><br><span class=\"line\">netstat -tunlp | grep 端口号</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>2443</code></td>\n<td align=\"center\"><code>443</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>2080</code></td>\n<td align=\"center\"><code>80</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>2081</code></td>\n<td align=\"center\"><code>81</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201031031055.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>DB_MYSQL_HOST</code></td>\n<td align=\"center\">群晖主机 <code>IP</code> 地址</td>\n</tr>\n<tr>\n<td align=\"center\"><code>DB_MYSQL_PORT</code></td>\n<td align=\"center\">默认为 <code>3306</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>DB_MYSQL_USER</code></td>\n<td align=\"center\">根据前面的设置，数据库用户为 <code>npm</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>DB_MYSQL_PASSWORD</code></td>\n<td align=\"center\">数据库用户 <code>npm</code> 的密码</td>\n</tr>\n<tr>\n<td align=\"center\"><code>DB_MYSQL_NAME</code></td>\n<td align=\"center\">根据前面的设置，库名为 <code>npm</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201031037836.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:2081</code> 就能看到主界面</p>\n<blockquote>\n<p>默认的账号：<code>admin@example.com</code>，密码：<code>changeme</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201031045336.png\"></p>\n<p>登录后可以编辑用户信息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201031116777.png\"></p>\n<p>之后是密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201031119573.png\"></p>\n<h2 id=\"frp\"><a href=\"#frp\" class=\"headerlink\" title=\"frp\"></a>frp</h2><p>因为老苏的宽带没有公网 <code>IP</code> ，一直以来都是用 <code>frp</code> 做内网穿透，所以首先要对 <code>frpc.ini</code> 做相应的修改</p>\n<blockquote>\n<ul>\n<li><code>local_ip</code> 是运行 <code>frpc</code> 的群晖的 <code>IP</code></li>\n<li><code>local_port</code> 要根据前面设置的端口进行变更</li>\n<li><code>custom_domains</code> 用了泛域名，没有像在『 <a href=\"https://laosu.ml/2020/05/28/frp%E5%9F%BA%E7%A1%80%E8%AE%BE%E7%BD%AE%E7%A4%BA%E4%BE%8B%E8%AF%A6%E8%A7%A3/\">frp基础设置示例详解</a>  』一文中指向了具体的子域名，例如： <code>nas.laosu.ml</code></li>\n</ul>\n</blockquote>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[http_xxxxxx]</span></span><br><span class=\"line\"><span class=\"attr\">type</span> = http</span><br><span class=\"line\"><span class=\"attr\">local_ip</span> = <span class=\"number\">192.168</span>.<span class=\"number\">0.199</span></span><br><span class=\"line\"><span class=\"attr\">local_port</span> = <span class=\"number\">2080</span></span><br><span class=\"line\"><span class=\"attr\">custom_domains</span> = *.laosu.ml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[https_xxxxxx]</span></span><br><span class=\"line\"><span class=\"attr\">type</span> = https</span><br><span class=\"line\"><span class=\"attr\">local_ip</span> = <span class=\"number\">192.168</span>.<span class=\"number\">0.199</span></span><br><span class=\"line\"><span class=\"attr\">local_port</span> = <span class=\"number\">2443</span></span><br><span class=\"line\"><span class=\"attr\">custom_domains</span> = *.laosu.ml</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"证书\"><a href=\"#证书\" class=\"headerlink\" title=\"证书\"></a>证书</h2><p>进入主菜单的 <code>SSL Certificates</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201031200113.png\"></p>\n<p><code>Add SSL Certificate</code> 有两种方式，一种是在线申请，另一种是添加已有证书</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201031225397.png\"></p>\n<p>在线申请和我们在『 <a href=\"https://laosu.ml/2020/07/31/%E5%85%8D%E8%B4%B9%E7%9A%84%E6%B3%9B%E5%9F%9F%E5%90%8Dhttps%E8%AF%81%E4%B9%A6%E8%87%AA%E5%8A%A8%E7%BB%AD%E6%9C%9F/\">免费的泛域名https证书自动续期</a> 』一文中介绍的非常类似，需要选择 <code>DNS</code> 解析服务提供商，以及填写 <code>token</code> 等参数</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201031237674.png\"></p>\n<p>老苏因为已经配置了 <code>Certbot</code> 并实现了自动续期，所以只需要导入现有证书就可以了，<code>Name</code> 老苏用了域名，这样比较容易识别</p>\n<blockquote>\n<ul>\n<li>私钥 <code>Certificate Key</code> 对应 <code>privkey.pem</code></li>\n<li>证书 <code>Certificate</code> 对应 <code>fullchain.pem</code></li>\n<li>中间证书 <code>Intermediate Certificate</code> 对应 <code>chain.pem</code></li>\n</ul>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201031243777.png\"></p>\n<p>上传成功后，证书存放在 <code>/data/custom_ssl/</code> 目录中以 <code>npm-1</code> 、 <code>npm-2</code> 等子目录保存</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201031301426.png\"></p>\n<h2 id=\"反向代理\"><a href=\"#反向代理\" class=\"headerlink\" title=\"反向代理\"></a>反向代理</h2><p>进入主菜单的 <code>Hosts</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201031302999.png\"></p>\n<p>以将 <code>http://192.168.0.197:5000</code> 映射到 <code>https://nas.laosu.ml</code> 为例</p>\n<blockquote>\n<ul>\n<li>因为是 <code>Docker</code> 容器方式运行的，所以即便是本机也不要用 <code>localhost</code>，一定要用 <code>IP</code></li>\n<li>默认 <code>Cache Aeeets</code>、<code>Block Common Exploits</code>、<code>Websocket Support</code> 建议都勾上</li>\n</ul>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201170918750.png\"></p>\n<p>选择 <code>SSL</code> 证书</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201031329998.png\"></p>\n<p>因为准备用 <code>https</code> 协议访问，所以必须勾选 <code>Force SSL</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201031330023.png\"></p>\n<p>其他的 <code>HTTP/2</code> 和 <code>HSTS</code> 和群晖内置的是一样的，可根据需要勾选，没啥问题的话老苏建议都勾上</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201031335340.png\"></p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>为什么要另外安装 <code>nginx proxy manager</code> 而不是用群晖内置的反向代理的原因，老苏在一开始就讲了，装完之后老苏还发现了几个优点：</p>\n<ol>\n<li>不用再依赖群晖，这使得老苏将来可以很方便的切换到其他平台</li>\n<li>即便是 <code>DSM6.1.7</code> 也不再有 『 <a href=\"https://laosu.ml/2020/08/09/HomeAssistant%E8%AE%BE%E7%BD%AEhttps%E8%AE%BF%E9%97%AE%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91\">HomeAssistant设置https访问后的问题</a> 』一文中的情况，只要简单勾选 <code>Websockets support</code> 即可，而不需要各种修改</li>\n<li>速度快，也许只是心理感觉</li>\n</ol>\n<h1 id=\"题外\"><a href=\"#题外\" class=\"headerlink\" title=\"题外\"></a>题外</h1><p>最终 <code>Authelia</code> 并没安装成功，原因是不能在非标的端口上使用。</p>\n<p>由于没有备案的缘故，<code>https</code> 协议不能使用 <code>443</code> 端口</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/images2022@main/picgo/2022/01/202201121549191.png\"></p>\n<p>假设你用了非标的 <code>444</code>， <code>Authelia</code> 会自动截掉端口（因为 <code>443</code> 是可以不用写的），从而导致资源加载失败👇</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Refused to load the image &#39;https:&#x2F;&#x2F;auth.laosu.ml&#x2F;favicon.ico&#39; because it violates the following Content Security Policy directive: &quot;default-src &#39;self&#39;&quot;. Note that &#39;img-src&#39; was not explicitly set, so &#39;default-src&#39; is used as a fallback.</span><br></pre></td></tr></table></figure>\n\n<p>已经在 <code>Authelia</code> 的 <code>issues</code> 提了，但是作者目前没有回复</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Nginx Proxy Manager<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9uZ2lueHByb3h5bWFuYWdlci5jb20v\">https://nginxproxymanager.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>jc21/nginx-proxy-manager: Docker container for managing Nginx proxy hosts with a simple, powerful interface<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2pjMjEvbmdpbngtcHJveHktbWFuYWdlcg==\">https://github.com/jc21/nginx-proxy-manager<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>NGINX proxy manager<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmxhY2t2b2lkLmNsdWIvbmdpbngtcHJveHktbWFuYWdlci8=\">https://www.blackvoid.club/nginx-proxy-manager/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Running authelia on a non standard HTTPs port. Base href is not valid. · Issue #2765 · authelia/authelia<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2F1dGhlbGlhL2F1dGhlbGlhL2lzc3Vlcy8yNzY1\">https://github.com/authelia/authelia/issues/2765<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","nginx","反向代理"]},{"title":"书签仪表板管理软件DashMachine","url":"/2022/01/14/%E4%B9%A6%E7%AD%BE%E4%BB%AA%E8%A1%A8%E6%9D%BF%E7%AE%A1%E7%90%86%E8%BD%AF%E4%BB%B6DashMachine/","content":"<p><strong>什么是 DashMachine ？</strong></p>\n<blockquote>\n<p><code>DashMachine</code> 是一个具有有趣功能的 <code>Web</code> 书签仪表板应用程序，让你能够从一个仪表板管理所有自托管应用程序。</p>\n</blockquote>\n<p> <code>DashMachine</code> 使用单个 <code>.ini</code> 文件进行配置，管理起来比较方便；支持数据源，因此可以实现的不仅仅是书签功能，而且支持高大上的 <code>Dashboard</code>，实现数据可视化。不过需要说明的是，代码已经有 1 年多没更新了，当然这并不影响我们的研究、试用。</p>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112051211295.png\"></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>dashmachine</code> ，选择第一个 <code>rmountjoy/dashmachine</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112051214704.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>dashmachine</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/dashmachine</code></td>\n<td align=\"center\"><code>/dashmachine/dashmachine/user_data</code></td>\n<td align=\"center\">存放设置</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112051245195.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不冲突就行，不确定的话可以用命令查一下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看端口占用</span></span><br><span class=\"line\">netstat -tunlp | grep 端口号</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>5233</code></td>\n<td align=\"center\"><code>5000</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112051300689.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:5233</code> 就能看到一段说明，往下拉会看到两个按钮</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112051253833.png\"></p>\n<p>接下来需要登录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112051254897.png\"></p>\n<p>点 <code>GO TO LOGIN</code> 登录</p>\n<blockquote>\n<p>默认的账号：<code>admin</code>，密码：<code>admin</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112051255100.png\"></p>\n<p>第一次进入后台，什么都没有</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112051302529.png\"></p>\n<p>点 <code>Setting</code> 开始编辑，左侧是 <code>Config.ini</code> 的内容，右侧是说明</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112051305479.png\"></p>\n<h2 id=\"卡片\"><a href=\"#卡片\" class=\"headerlink\" title=\"卡片\"></a>卡片</h2><p>搜索支持联想功能，比如输入 <code>Ho</code> 会自动过滤</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112051645317.png\"></p>\n<p>再试试 <code>Ja</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112051536390.png\"></p>\n<p>自动生成的示例，直接复制到左侧</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112051537881.png\"></p>\n<p>一般只要修改 <code>prefix</code> 和 <code>url</code> 后即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112051541055.png\"></p>\n<p>保存之后回到首页</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112051545103.png\"></p>\n<h2 id=\"数据源\"><a href=\"#数据源\" class=\"headerlink\" title=\"数据源\"></a>数据源</h2><p>这是 <code>DashMachine</code> 最有趣的地方，可以通过不同的数据源，在 <code>DashMachine</code> 上显示数据，类似于仪表板（<code>DashBoard</code>）的功能</p>\n<h3 id=\"curl\"><a href=\"#curl\" class=\"headerlink\" title=\"curl\"></a>curl</h3><p>以官方提供的 <code>MyIP</code> 为例，如果您在浏览器中输入 <code>https://api.myip.com</code> 会返回👇这样的数据</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"attr\">&quot;ip&quot;</span>:<span class=\"string\">&quot;114.93.213.71&quot;</span>,<span class=\"attr\">&quot;country&quot;</span>:<span class=\"string\">&quot;China&quot;</span>,<span class=\"attr\">&quot;cc&quot;</span>:<span class=\"string\">&quot;CN&quot;</span>&#125;</span><br></pre></td></tr></table></figure>\n\n<p>而我们需要的是 <code>ip</code>，所以第一段用于 <code>获取数据</code> 是👇这样的</p>\n<blockquote>\n<p>关于各字段的含义，请阅读官方的文档</p>\n</blockquote>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[test]</span></span><br><span class=\"line\"><span class=\"attr\">platform</span> = curl</span><br><span class=\"line\"><span class=\"attr\">resource</span> = https://api.myip.com</span><br><span class=\"line\"><span class=\"attr\">value_template</span> = My IP: &#123;&#123;value.ip&#125;&#125;</span><br><span class=\"line\"><span class=\"attr\">response_type</span> = json</span><br></pre></td></tr></table></figure>\n\n<p>第二段则用于 <code>展示数据</code></p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[MyIp.com]</span></span><br><span class=\"line\"><span class=\"attr\">prefix</span> = https://</span><br><span class=\"line\"><span class=\"attr\">url</span> = myip.com</span><br><span class=\"line\"><span class=\"attr\">icon</span> = static/images/apps/default.png</span><br><span class=\"line\"><span class=\"attr\">description</span> = Link to myip.com</span><br><span class=\"line\"><span class=\"attr\">open_in</span> = new_tab</span><br><span class=\"line\"><span class=\"attr\">data_sources</span> = test</span><br></pre></td></tr></table></figure>\n<p>呈现的效果</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112301015212.png\"></p>\n<p>再以老苏常用的天气为例子（ <code>DashMachine</code> 也有专门的 <code>Weather</code> 数据源）</p>\n<blockquote>\n<p>关于天气数据，可以参考『 <a href=\"https://laosu.ml/2021/09/03/%E7%94%A8Changedetection%E7%9B%91%E6%8E%A7%E7%BD%91%E9%A1%B5%E7%9A%84%E5%8F%98%E5%8C%96#JSON-API-%E7%9B%91%E6%8E%A7\">用Changedetection监控网页的变化</a> 』一文中的 <code>JSON-API-监控</code> 部分</p>\n</blockquote>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[shtq]</span></span><br><span class=\"line\"><span class=\"attr\">platform</span> = curl</span><br><span class=\"line\"><span class=\"attr\">resource</span> = http://t.weather.itboy.net/api/weather/city/<span class=\"number\">101020100</span></span><br><span class=\"line\"><span class=\"attr\">value_template</span> = 今天&#123;&#123;value.data.forecast[<span class=\"number\">0</span>].type&#125;&#125;，&#123;&#123;value.data.forecast[<span class=\"number\">0</span>].high&#125;&#125;，&#123;&#123;value.data.forecast[<span class=\"number\">0</span>].low&#125;&#125;，&#123;&#123;value.data.forecast[<span class=\"number\">0</span>].notice&#125;&#125;</span><br><span class=\"line\"><span class=\"attr\">response_type</span> = json</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[上海天气预报]</span></span><br><span class=\"line\"><span class=\"attr\">prefix</span> = https://</span><br><span class=\"line\"><span class=\"attr\">url</span> = www.sojson.com</span><br><span class=\"line\"><span class=\"attr\">icon</span> = static/images/apps/default.png</span><br><span class=\"line\"><span class=\"attr\">description</span> = 免费天气API</span><br><span class=\"line\"><span class=\"attr\">open_in</span> = new_tab</span><br><span class=\"line\"><span class=\"attr\">data_sources</span> = shtq</span><br></pre></td></tr></table></figure>\n<p>展示效果</p>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112301113839.png\"></p>\n<h3 id=\"http-status\"><a href=\"#http-status\" class=\"headerlink\" title=\"http_status\"></a>http_status</h3><p>通过对给定 <code>URL</code> 进行 <code>http</code> 调用，并显示服务是否联机。</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[http_status_test]</span></span><br><span class=\"line\"><span class=\"attr\">platform</span> = http_status</span><br><span class=\"line\"><span class=\"attr\">resource</span> = https://baidu.com</span><br><span class=\"line\"><span class=\"attr\">return_codes</span> = <span class=\"number\">2</span>xx,<span class=\"number\">3</span>xx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[Baidu]</span></span><br><span class=\"line\"><span class=\"attr\">prefix</span> = https://</span><br><span class=\"line\"><span class=\"attr\">url</span> = baidu.com</span><br><span class=\"line\"><span class=\"attr\">icon</span> = static/images/apps/default.png</span><br><span class=\"line\"><span class=\"attr\">open_in</span> = this_tab</span><br><span class=\"line\"><span class=\"attr\">data_sources</span> = http_status_test</span><br></pre></td></tr></table></figure>\n<p>展示效果</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202201041345143.png\"></p>\n<h3 id=\"ping\"><a href=\"#ping\" class=\"headerlink\" title=\"ping\"></a>ping</h3><p>通过 <code>ping</code> 检查服务是否在线</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[ping_laosu_ml]</span></span><br><span class=\"line\"><span class=\"attr\">platform</span> = ping</span><br><span class=\"line\"><span class=\"attr\">resource</span> = laosu.ml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[laosu_ml]</span></span><br><span class=\"line\"><span class=\"attr\">prefix</span> = https://</span><br><span class=\"line\"><span class=\"attr\">url</span> = laosu.ml</span><br><span class=\"line\"><span class=\"attr\">icon</span> = static/images/apps/default.png</span><br><span class=\"line\"><span class=\"attr\">open_in</span> = this_tab</span><br><span class=\"line\"><span class=\"attr\">data_sources</span> = ping_laosu_ml</span><br></pre></td></tr></table></figure>\n<p>展示效果和 <code>http_status</code>，卡片右侧有个颜色按钮</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202201041354119.png\"></p>\n<p>将 <code>[ping_laosu_ml]</code> 中 <code>resource</code> 改为错误的地址，比如 <code>laosu.mll</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202201041356338.png\"></p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>老苏测试了几个通用的数据源，但数据源 <code>Docker</code> 老苏尝试失败了，原因没找到，配置用的是官方提供的，老苏只改了 <code>IP</code> 和端口，还是把设置贴出来吧，也许有人知道原因呢</p>\n<blockquote>\n<p><code>http://192.168.0.197:9000</code> 是 <code>Portainer</code> 的本地访问地址，可正常使用</p>\n</blockquote>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[docker-endpoint-1]</span></span><br><span class=\"line\"><span class=\"attr\">platform</span> = docker</span><br><span class=\"line\"><span class=\"attr\">prefix</span> = http://</span><br><span class=\"line\"><span class=\"attr\">host</span> = <span class=\"number\">192.168</span>.<span class=\"number\">0.197</span></span><br><span class=\"line\"><span class=\"attr\">port</span> = <span class=\"number\">9000</span></span><br><span class=\"line\"><span class=\"attr\">value_template</span> = &#123;&#123;error&#125;&#125;&lt;p style=<span class=\"string\">&quot;text-align:right;text-transform:uppercase;font-size:14px;font-family: monospace;&quot;</span>&gt;&#123;&#123;name&#125;&#125;&lt;br /&gt;&lt;i style=<span class=\"string\">&quot;position: relative; top: .2rem&quot;</span> class=<span class=\"string\">&quot;material-icons md-18 theme-success-text&quot;</span> title=<span class=\"string\">&quot;Running&quot;</span>&gt;fiber_manual_record&lt;/i&gt;&#123;&#123;containers_running&#125;&#125;&lt;i style=<span class=\"string\">&quot;position: relative; top: .2rem&quot;</span> class=<span class=\"string\">&quot;material-icons md-18 theme-warning-text&quot;</span> title=<span class=\"string\">&quot;Paused&quot;</span>&gt;fiber_manual_record&lt;/i&gt;&#123;&#123;containers_paused&#125;&#125;&lt;i style=<span class=\"string\">&quot;position: relative; top: .2rem&quot;</span> class=<span class=\"string\">&quot;material-icons md-18 theme-failure-text&quot;</span> title=<span class=\"string\">&quot;Stopped&quot;</span>&gt;fiber_manual_record&lt;/i&gt;&#123;&#123;containers_stopped&#125;&#125;&lt;/p&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[Portainer]</span></span><br><span class=\"line\"><span class=\"attr\">prefix</span> = http://</span><br><span class=\"line\"><span class=\"attr\">url</span> = <span class=\"number\">192.168</span>.<span class=\"number\">0.197</span>:<span class=\"number\">9000</span></span><br><span class=\"line\"><span class=\"attr\">icon</span> = static/images/apps/portainer.png</span><br><span class=\"line\"><span class=\"attr\">sidebar_icon</span> = static/images/apps/portainer.png</span><br><span class=\"line\"><span class=\"attr\">description</span> = Making Docker management easy</span><br><span class=\"line\"><span class=\"attr\">open_in</span> = this_tab</span><br><span class=\"line\"><span class=\"attr\">data_sources</span> = docker-endpoint-<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<p> 除此之外还有一些跟应用相关的数据源，比如 <code>PiHole</code>、<code>Sonarr</code>、<code>Radarr</code> 之类的，有兴趣可以研究看看。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>rmountjoy92/DashMachine: Another web application bookmark dashboard, with fun features.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Jtb3VudGpveTkyL0Rhc2hNYWNoaW5l\">https://github.com/rmountjoy92/DashMachine<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Manage your Self Hosted Applications using DashMachine – NAS Hosted<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9nZWVrZWQuaG9zdC9tYW5hZ2UteW91ci1zZWxmLWhvc3RlZC1hcHBsaWNhdGlvbnMtdXNpbmctZGFzaG1hY2hpbmUv\">https://geeked.host/manage-your-self-hosted-applications-using-dashmachine/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","导航"]},{"title":"用CMS平台Grav搭建博客","url":"/2022/01/12/%E7%94%A8CMS%E5%B9%B3%E5%8F%B0Grav%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/","content":"<p><strong>什么是 CMS ？</strong></p>\n<blockquote>\n<p><code>CMS</code> 是英语 <code>Content Management System</code> 的缩写，按英语的字面翻译就是内容管理系统，顾名思义，它主要是为了方便发布网络内容而存在的一体化 <code>Web</code> 管理系统。</p>\n</blockquote>\n<p><strong>什么是 Grav ？</strong></p>\n<blockquote>\n<p><code>Grav</code> 是一个快速简单灵活的基于文件的 <code>Web</code> 平台。能够让你在家中轻松创建自己的网站，支持 <code>Markdown</code> 写作编辑，支持非常丰富的插件和主题，可用来写书、博客、图床、说明书等等。</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>grav</code> ，找到 <code>linuxserver/grav</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110071324166.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>grav</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/grav</code></td>\n<td align=\"center\"><code>/config</code></td>\n<td align=\"center\">存放设置</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110071330654.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不冲突就行，</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>4580</code></td>\n<td align=\"center\"><code>80</code></td>\n</tr>\n</tbody></table>\n<p><code>443</code> 保持默认的 <code>自动</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110071332355.png\"></p>\n<p>或者删掉也可以</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110071333910.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">TZ</td>\n<td align=\"center\">设置为 <code>Asia/Shanghai</code></td>\n</tr>\n<tr>\n<td align=\"center\">PGID</td>\n<td align=\"center\"><code>&lt;gid&gt;</code> 设为 <code>1000</code></td>\n</tr>\n<tr>\n<td align=\"center\">PUID</td>\n<td align=\"center\"><code>&lt;uid&gt;</code> 设为 <code>1000</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110071335645.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:4580</code> 就能看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110071337776.png\"></p>\n<p>第一次需要创建管理员账号，完成之后会自动跳转到管理后台</p>\n<blockquote>\n<p>有可能会报错，那是因为没有带端口，比如打开的地址为：<code>http://群晖IP/admin</code>，如果出现这种情况，请手动加上端口</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110071342083.png\"></p>\n<ul>\n<li><p>后端地址： <code>http://群晖IP:4580/admin</code></p>\n</li>\n<li><p>前端地址 <code>http://群晖IP:4580</code></p>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110071410927.png\"></p>\n<h2 id=\"简体中文\"><a href=\"#简体中文\" class=\"headerlink\" title=\"简体中文\"></a>简体中文</h2><p><code>Configuration</code> –&gt; <code>Languages</code>，在 <code>Supported</code> 后面的文本框中输入 <code>zh</code>，点弹出的 <code>Add zh</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110071349977.png\"></p>\n<p>然后点右上角的 <code>SAVE</code>，界面就会切换为中文</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110071353037.png\"></p>\n<h2 id=\"安装主题\"><a href=\"#安装主题\" class=\"headerlink\" title=\"安装主题\"></a>安装主题</h2><p>在 <code>主题</code> 页面点 <code>新增</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110071401192.png\"></p>\n<p>在选中的主题 <code>Ceevee</code> 上点 <code>安装</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110071402037.png\"></p>\n<p>开始安装</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110071403149.png\"></p>\n<p>出现安装失败</p>\n<blockquote>\n<p>很可能是网络问题</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110071403441.png\"></p>\n<p>但实际上主题也已经有了</p>\n<blockquote>\n<p>如果没有就多试几次吧</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110071416079.png\"></p>\n<p>激活就可以切换了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110071418250.png\"></p>\n<p>刷新前端主页 <code>http://群晖IP:4580</code>，已经切换成功了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110071426181.png\"></p>\n<h2 id=\"发布文章\"><a href=\"#发布文章\" class=\"headerlink\" title=\"发布文章\"></a>发布文章</h2><p><code>Grav</code> 支持后台在线编辑</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110071443908.png\"></p>\n<p>也可以不必登录后台，直接把每篇文章放到 <code>Grav</code> 程序目录的 <code>user/pages</code> 文件夹里即可，文件夹的结构就对应着网址的结构。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110071441089.png\"></p>\n<p>似乎这个主题英文字体要好看一点</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111192105412.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>getgrav/grav: Modern, Crazy Fast, Ridiculously Easy and Amazingly Powerful Flat-File CMS<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dldGdyYXYvZ3Jhdg==\">https://github.com/getgrav/grav<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>getgrav/docker-grav: Official Docker Image for Grav<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dldGdyYXYvZG9ja2VyLWdyYXY=\">https://github.com/getgrav/docker-grav<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Grav - A Modern Flat-File CMS | Grav CMS<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9nZXRncmF2Lm9yZy8=\">https://getgrav.org/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","Markdown","blog"]},{"title":"类Trello的看板软件Planka","url":"/2022/01/10/%E7%B1%BBTrello%E7%9A%84%E7%9C%8B%E6%9D%BF%E8%BD%AF%E4%BB%B6Planka/","content":"<p><strong>什么是 Planka ？</strong></p>\n<blockquote>\n<p><code>Planka</code> 是一款使用 <code>React</code> 和 <code>Redux</code> 构建的，适用于工作组的类 <code>Trello</code> 开源看板软件。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281223308.gif\"></p>\n<p>官网提供了演示地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wbGFua2FuYmFuLmdpdGh1Yi5pby9wbGFua2EvIy8=\">https://plankanban.github.io/planka/#/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p><code>Planka</code> 涉及到两个镜像，比较简单的安装方式是编排 <code>docker-compose.yml</code> 文件，然后用 <code>docker-compose up -d</code> 命令一键启动</p>\n<blockquote>\n<p><code>docker-compose.yml</code> 文件可以在这里下载：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3BsYW5rYW5iYW4vcGxhbmthL21hc3Rlci9kb2NrZXItY29tcG9zZS55bWw=\">https://raw.githubusercontent.com/plankanban/planka/master/docker-compose.yml<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入 planka 目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /volume2/docker/planka</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 docker-compose.yaml 下载到 planka 目录</span></span><br><span class=\"line\">curl -sSL https://raw.githubusercontent.com/plankanban/planka/master/docker-compose.yml -o docker-compose.yaml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># github 下不动可以试试镜像站点</span></span><br><span class=\"line\">curl -sSL https://raw.fastgit.org/plankanban/planka/master/docker-compose.yml -o docker-compose.yaml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 再不行试试走代理站点</span></span><br><span class=\"line\">curl -sSL https://ghproxy.com/https://raw.githubusercontent.com/plankanban/planka/master/docker-compose.yml -o docker-compose.yaml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将端口 3000 改为 1337</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 一键启动</span></span><br><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281535200.png\"></p>\n<p>你可以通过复制和粘贴内容在您自己的机器上创建此文件。但老苏还是想尝试用群晖传统的图形界面来安装。</p>\n<h2 id=\"镜像下载\"><a href=\"#镜像下载\" class=\"headerlink\" title=\"镜像下载\"></a>镜像下载</h2><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>planka</code> ，选择第一个 <code>meltyshev/planka</code>，版本选择 <code>latest</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281318211.png\"></p>\n<p>在注册表中搜索 <code>postgres</code> ，选择第一个 <code>postgres</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111182048644.png\"></p>\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>planka</code>，并建四个子目录，分别是 <code>data</code> 、 <code>avatars</code>、<code>images</code>、<code>files</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281343723.png\"></p>\n<h2 id=\"安装-PostgreSQL\"><a href=\"#安装-PostgreSQL\" class=\"headerlink\" title=\"安装 PostgreSQL\"></a>安装 PostgreSQL</h2><p>为方便管理，容器名称加了前缀 <code>pl-</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281345256.png\"></p>\n<h3 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h3><table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/planka/data</code></td>\n<td align=\"center\"><code>/var/lib/postgresql/data</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281346695.png\"></p>\n<h3 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h3><p>端口不冲突就行</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>5632</code></td>\n<td align=\"center\"><code>5432</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281349833.png\"></p>\n<h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>POSTGRES_DB</code></td>\n<td align=\"center\">数据库库名，默认设为 <code>planka</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>POSTGRES_HOST_AUTH_METHOD</code></td>\n<td align=\"center\">默认设为 <code>trust</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281351755.png\"></p>\n<blockquote>\n<p>上面这种方式直接参照了 <code>docker-compose.yml</code> 中的设置，实际上按 <code>docker-compose.yml</code> 一键启动后，数据库端口是不会暴露出来的，但是我们现在这种安装方式会暴露数据库的端口，放到互联网上就不安全了，因为没有设置密码。当然图形化安装也有办法隐藏端口，就是在 <code>Docker</code> 管理器中建网络</p>\n</blockquote>\n<p>建议取消信任的认证方式，改用密码方式</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>POSTGRES_USER</code></td>\n<td align=\"center\">数据库用户，默认设为 <code>planka</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>POSTGRES_PASSWORD</code></td>\n<td align=\"center\">数据库密码</td>\n</tr>\n<tr>\n<td align=\"center\"><code>POSTGRES_DB</code></td>\n<td align=\"center\">数据库库名，默认设为 <code>planka</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281716404.png\"></p>\n<p>如果没什么意外应该会正常启动</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281351071.png\"></p>\n<h2 id=\"安装-Planka\"><a href=\"#安装-Planka\" class=\"headerlink\" title=\"安装 Planka\"></a>安装 Planka</h2><p>为方便管理，容器名称加了前缀 <code>pl-</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281353087.png\"></p>\n<h3 id=\"卷-1\"><a href=\"#卷-1\" class=\"headerlink\" title=\"卷\"></a>卷</h3><table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/planka/avatars</code></td>\n<td align=\"center\"><code>/app/public/user-avatars</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>docker/planka/images</code></td>\n<td align=\"center\"><code>/app/public/project-background-images</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>docker/planka/files</code></td>\n<td align=\"center\"><code>/app/public/attachments</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281358249.png\"></p>\n<h3 id=\"端口-1\"><a href=\"#端口-1\" class=\"headerlink\" title=\"端口\"></a>端口</h3><p>端口不冲突就行</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>1337</code></td>\n<td align=\"center\"><code>1337</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281400692.png\"></p>\n<h3 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h3><p>点 <code>+</code> 号新增，容器名称中找到前面创建的 <code>pl-postgres</code>，<code>别名</code> 老苏设置成了 <code>pdb</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281401505.png\"></p>\n<h3 id=\"环境-1\"><a href=\"#环境-1\" class=\"headerlink\" title=\"环境\"></a>环境</h3><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>BASE_URL</code></td>\n<td align=\"center\">服务地址，默认设为 <code>http://localhost:3000</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>DATABASE_URL</code></td>\n<td align=\"center\">数据库地址，默认为 <code>postgresql://planka@postgres/planka</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>SECRET_KEY</code></td>\n<td align=\"center\">默认为 <code>notsecretkey</code></td>\n</tr>\n</tbody></table>\n<blockquote>\n<p><code>DATABASE_URL</code> 部分的设置可以参考 『 <a href=\"https://laosu.ml/2021/11/15/%E6%97%A5%E7%A8%8B%E5%AE%89%E6%8E%92%E5%B7%A5%E5%85%B7Calendso/\">日程安排工具Calendso</a> 』</p>\n</blockquote>\n<ul>\n<li><code>BASE_URL</code> 因为我们用的本地端口是 <code>1337</code>，群晖 <code>IP</code> 为 <code>192.168.0.197</code>，所以这里填 <code>http://192.168.0.197:1337</code></li>\n<li><code>DATABASE_URL</code> 根据设定的别名，如果采用信任方式应该为 <code>postgresql://postgres@pdb/planka</code>；如果你设置了密码，参照前面的设置应该为 <code>postgresql://planka:hb85gvptqmAH@pdb:5432/planka</code></li>\n<li><code>SECRET_KEY</code> 相当于密码，密码的生成方式比较简单，可以使用 <code>openssl rand -hex 长度</code>，比如想生成一个 <code>12</code> 位的随机密码，可以使用 <code>openssl rand -hex 12</code>，老苏只是简单测试，所以没改，直接用了 <code>notsecretkey</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281806540.png\"></p>\n<p>最关键的步骤是要在命令中输入下面的内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">bash -c <span class=\"string\">&quot;for i in `seq 1 30`; do ./start.sh &amp;&amp; s=$$? &amp;&amp; break || s=$$?; echo \\&quot;Tried $<span class=\"variable\">$i</span> times. Waiting 5 seconds...\\&quot;; sleep 5; done; (exit $<span class=\"variable\">$s</span>)&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281418053.png\"></p>\n<blockquote>\n<p>如果你忘记了输入命令，只能删了再来一次，因为编辑的时候是没有命令行的</p>\n</blockquote>\n<p>如果没什么意外应该会正常启动</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281419233.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:1337</code> 就能看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281421940.png\"></p>\n<blockquote>\n<p>缺省的用户名：<code>demo@demo.demo</code>，密码为：<code>demo</code></p>\n</blockquote>\n<p>登录成功后，可以通过 <code>Create Project</code> 创建项目</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281832254.png\"></p>\n<p>建一个项目</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281834891.png\"></p>\n<p>老苏新建了一个发文计划</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281835021.png\"></p>\n<p>完整的效果</p>\n<blockquote>\n<p>图上的计划都按时完成了，说明还是要有计划才行🙂</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281850388.png\"></p>\n<p>针对单个项目，可以设置的项挺多的，包括子任务等</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281854829.png\"></p>\n<p>因为 <code>Planka</code> 是针对团队的，所以还可以增加用户和成员，功能不复杂，喜欢的话可以慢慢研究。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>plankanban/planka: The realtime kanban board for workgroups built with React and Redux.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3BsYW5rYW5iYW4vcGxhbmth\">https://github.com/plankanban/planka<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Home | Planka - Free, Open Source, Trello Alternative<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wbGFua2EuYXBwLw==\">https://planka.app/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","看板"]},{"title":"卡通头像生成器Avataaars generator","url":"/2022/01/07/%E5%8D%A1%E9%80%9A%E5%A4%B4%E5%83%8F%E7%94%9F%E6%88%90%E5%99%A8Avataaars%20generator/","content":"<p><strong>什么是 Avataars generator ？</strong></p>\n<blockquote>\n<p><code>Avataars generator</code> 是一款简易的、基于 <code>web</code> 的卡通头像生成器。可以自定义衣服、头发、情感、配饰和颜色等参数。</p>\n</blockquote>\n<p><strong>什么是 Sketch ？</strong></p>\n<blockquote>\n<p><code>Sketch</code> 是一款适用于所有设计师的矢量绘图应用，是为图标设计和界面设计而生的。【百度百科】</p>\n</blockquote>\n<p>原始的 <code>Sketch</code> 图库可以在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYXZhdGFhYXJzLmNvbS8=\">https://www.avataaars.com<i class=\"fa fa-external-link-alt\"></i></span> 获取到</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112020928057.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112020919845.png\"></p>\n<p>官方的演示地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9nZXRhdmF0YWFhcnMuY29tLw==\">https://getavataaars.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"构建镜像\"><a href=\"#构建镜像\" class=\"headerlink\" title=\"构建镜像\"></a>构建镜像</h1><blockquote>\n<p>如果你不想自己构建，可以跳过，直接阅读下一章节</p>\n</blockquote>\n<p>老苏是基于源代码构建的 <code>Dockerfile</code></p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> node:lts-alpine as build-base</span><br><span class=\"line\"><span class=\"keyword\">LABEL</span><span class=\"bash\"> maintainer=laosu&lt;wbsu2003@gmail.com&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /app</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> . .</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> tsconfig.json tsconfig.prod.json</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> npm install --registry=https://registry.npm.taobao.org</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> npm run build</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> nginx:<span class=\"number\">1.12</span>-alpine</span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> --from=build-base /app/build /usr/share/nginx/html</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">80</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"bash\"> [<span class=\"string\">&quot;nginx&quot;</span>, <span class=\"string\">&quot;-g&quot;</span>, <span class=\"string\">&quot;daemon off;&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n\n<p>构建镜像和容器运行的基本命令如下👇</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载原代码</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/fangpenlin/avataaars-generator.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果 github 慢或者访问不了</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://hub.fastgit.org/fangpenlin/avataaars-generator.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> avataaars-generator</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 构建镜像</span></span><br><span class=\"line\">docker build -t wbsu2003/avataaars-generator:v1 .</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成容器</span></span><br><span class=\"line\">docker run -d \\</span><br><span class=\"line\">--name=avataaars-generator \\</span><br><span class=\"line\">-p 3490:80 \\</span><br><span class=\"line\">wbsu2003/avataaars-generator:v1</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>avataaars</code> ，选择第二个 <code>wbsu2003/avataaars-generator</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112020855165.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>本地端口不冲突就行</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>3490</code></td>\n<td align=\"center\"><code>80</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112020856299.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:3490</code> 就能看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112020857917.png\"></p>\n<p>有两种玩法，一种是点右上角的 <code>Random</code> 生成随机的头像，直到你满意为止；另一种是按自己的逐项设定来生成头像，可以调节发型、眼镜、肤色、衣着、嘴型等属性。</p>\n<p>老苏逐项调整后生成的自己的系列头像</p>\n<blockquote>\n<p>你要想看老苏以前的头像，可以请移步到 ➡️  <a href=\"https://laosu.ml/about/\">https://laosu.ml/about/</a> ，欢迎鉴赏😁</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112020905695.png\"></p>\n<p>生成的图片可以下载为 <code>PNG</code> 和 <code>SVG</code> 格式的图片</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112020901406.png\"></p>\n<p>也可以嵌入到 <code>React</code> 或者 <code>Html</code> 代码中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112020907217.png\"></p>\n<h1 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h1><p>最近多了很多新的朋友，再唠叨一下，大家有什么建议或者想看的，可以通过👇下面的方式告诉老苏，老苏会尽量满足大家：</p>\n<ul>\n<li>  给公众号发消息。虽然老苏的公众号并不支持留言，并且还有很多限制，但聊胜于无</li>\n<li>  点『 阅读原文 』 去老苏的博客 （<a href=\"https://laosu.ml/\">https://laosu.ml</a>） 留言，这也是老苏推荐的方式</li>\n<li>  发邮件：<span class=\"exturl\" data-url=\"bWFpbHRvOndic3UyMDAzQGdtYWlsLmNvbQ==\">wbsu2003@gmail.com<i class=\"fa fa-external-link-alt\"></i></span>、<span class=\"exturl\" data-url=\"bWFpbHRvOndic3UyMDAzQGhvdG1haWwuY29t\">wbsu2003@hotmail.com<i class=\"fa fa-external-link-alt\"></i></span>，不过现在邮件用的比较少，可能回复比较慢</li>\n</ul>\n<p>今天周末，发个水文轻松一下！下周一再见。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>fangpenlin/avataaars-generator: Simple generator React app for avataaars<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ZhbmdwZW5saW4vYXZhdGFhYXJzLWdlbmVyYXRvcg==\">https://github.com/fangpenlin/avataaars-generator<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","图片","卡通"]},{"title":"开源的低代码平台Budibase","url":"/2022/01/05/%E5%BC%80%E6%BA%90%E7%9A%84%E4%BD%8E%E4%BB%A3%E7%A0%81%E5%B9%B3%E5%8F%B0Budibase/","content":"<p><strong>什么是 Budibase ？</strong></p>\n<blockquote>\n<p><code>Budibase</code> 是一个开源的低代码平台，是一种构建业务应用程序的更快方法，可以为团队赋能并提高生产力。其汇集了构建业务应用程序所需的一切，并将最佳的开发人员体验与对速度、性能和用户体验的执着关注相结合。</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"下载配置文件\"><a href=\"#下载配置文件\" class=\"headerlink\" title=\"下载配置文件\"></a>下载配置文件</h2><p>用 <code>SSH</code> 客户端登录到群晖，依次执行下面的命令</p>\n<blockquote>\n<p>老苏常用的 <code>SSH</code> 客户端主要是 <code>Finalshell</code> 和 <code>PuTTY</code></p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在 docker 文件夹中，创建一个新文件夹 budibase</span></span><br><span class=\"line\">mkdir -p /volume2/docker/budibase</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 budibase 中建子目录 logs</span></span><br><span class=\"line\">mkdir -p /volume2/docker/budibase/logs</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入 budibase 目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /volume2/docker/budibase/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 docker-compose.yaml 下载到 budibase 目录</span></span><br><span class=\"line\">curl -sSL https://raw.githubusercontent.com/Budibase/budibase/master/hosting/docker-compose.yaml -o docker-compose.yaml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># github 下不动可以试试国内镜像站点</span></span><br><span class=\"line\">curl -sSL https://raw.fastgit.org/Budibase/budibase/master/hosting/docker-compose.yaml -o docker-compose.yaml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 hosting.properties 下载到 budibase 目录</span></span><br><span class=\"line\">curl -sSL https://raw.githubusercontent.com/Budibase/budibase/master/hosting/hosting.properties -o hosting.properties</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 国内镜像站点</span></span><br><span class=\"line\">curl -sSL https://raw.fastgit.org//Budibase/budibase/master/hosting/hosting.properties -o hosting.properties</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 envoy.yaml 下载到 budibase 目录</span></span><br><span class=\"line\">curl -sSL https://raw.githubusercontent.com/Budibase/budibase/master/hosting/envoy.yaml -o envoy.yaml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 国内镜像站点</span></span><br><span class=\"line\">curl -sSL https://raw.fastgit.org//Budibase/budibase/master/hosting/envoy.yaml -o envoy.yaml</span><br></pre></td></tr></table></figure>\n\n<p>在 <code>File Station</code> 中应该是下面👇这样子的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111180850139.png\"></p>\n<h2 id=\"docker-compose-yaml\"><a href=\"#docker-compose-yaml\" class=\"headerlink\" title=\"docker-compose.yaml\"></a>docker-compose.yaml</h2><p><code>docker-compose.yaml</code> 中定义了 <code>Budibase</code> 要用到的镜像，以及如何编排他们，我们要根据自己的实际进行相应的修改。</p>\n<p>要将 <code>budibase.docker.scarf.sh/</code> 删除</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111172314153.png\"></p>\n<p>总共有两处需要修改</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111172317621.png\"></p>\n<p>不改的话会出现下面的错误</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111172316797.png\"></p>\n<p><code>docker-compose.yaml</code> 中显性的端口均为内部端口，而外部端口则都采用了变量，变量的定义在 <code>hosting.properties</code> 文件中</p>\n<h2 id=\"hosting-properties\"><a href=\"#hosting-properties\" class=\"headerlink\" title=\"hosting.properties\"></a>hosting.properties</h2><p><code>hosting.properties</code> 中则包含了 <code>Budibase</code> 平台的所有默认设置，包括各种密码和端口。</p>\n<p>老苏只是测试，所以直接用了默认的密码。如果你要发布到公网，建议一定要修改密码。</p>\n<p>密码的生成方式比较简单，可以使用 <code>openssl rand -hex 长度</code>，比如想生成一个 <code>12</code> 位的随机密码，可以使用 <code>openssl rand -hex 12</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281155736.png\"></p>\n<p>至于对外的端口，老苏检测了没有发现存在冲突，所以也都用了默认的</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看端口占用</span></span><br><span class=\"line\">netstat -tunlp | grep 端口号</span><br></pre></td></tr></table></figure>\n<h2 id=\"envoy-yaml\"><a href=\"#envoy-yaml\" class=\"headerlink\" title=\"envoy.yaml\"></a>envoy.yaml</h2><p><code>envoy.yaml</code> 中包含了代理服务的配置信息，该信息将流量定向到 <code>Budibase</code> 平台内的正确服务。对于这个文件老苏没做任何的修改</p>\n<h2 id=\"一键启动\"><a href=\"#一键启动\" class=\"headerlink\" title=\"一键启动\"></a>一键启动</h2><p>准备工作完成后，可以执行下面👇的命令完成一键启动</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 一键启动  </span></span><br><span class=\"line\">docker-compose --env-file hosting.properties up</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111172216181.png\"></p>\n<p>8个容器都显示 <code>done</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111180853182.png\"></p>\n<p><code>Docker</code> 管理器中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111180924759.png\"></p>\n<p>在完成数据库初始化之后，<code>budibase_couch-init_1</code> 会停止工作，因为它已经完成了历史使命</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111180914110.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:10000</code> 就能看到主界面，第一次要创建管理员，填好 <code>Email</code> 和 <code>Password</code>之后，点 <code>Create super admin user</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111180855336.png\"></p>\n<p>填入刚创建的管理员账号，点 <code>Sign in to Budibase</code> 登录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111180858417.png\"></p>\n<h2 id=\"基于模板\"><a href=\"#基于模板\" class=\"headerlink\" title=\"基于模板\"></a>基于模板</h2><p>主界面，提供了 <code>App</code> 类型模板，你可以选择模板，也可以从头开始</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111180900828.png\"></p>\n<p>老苏选了第一个 <code>Job Application Tracker</code>，输入 <code>Nmae</code>，点 <code>Create app</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111180943026.png\"></p>\n<p>默认显示的是数据 <code>Date</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111180944154.png\"></p>\n<p>切换到  <code>Deign</code> 可以做界面设计</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111181005153.png\"></p>\n<p>切换到 <code>Automate</code> 可以运行测试</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111181007714.png\"></p>\n<h2 id=\"自定义\"><a href=\"#自定义\" class=\"headerlink\" title=\"自定义\"></a>自定义</h2><p>选择 <code>Start from scratch</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111271926878.png\"></p>\n<p>输入 <code>Name</code>，点 <code>Create app</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111271928073.png\"></p>\n<p>选择数据库，老苏选了 <code>MySQL</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111271930161.png\"></p>\n<p> 数据库还是用的 <code>world datebase</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111271942864.png\"></p>\n<p>如果设置没问题的话会返回 <code>table</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111271945290.png\"></p>\n<p>切换到 <code>Design</code>，点上方的 <code>Date Provider</code> 添加数据源</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111272030860.png\"></p>\n<p>再点上方的 <code>Table</code> 用于显示数据源中的数据</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111272031082.png\"></p>\n<p><code>Date Provider</code> 中可以切换数据源，可以是表单、查询等</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111272033971.png\"></p>\n<p>运行的效果</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111272034591.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Budibase/budibase: Budibase is an open-source low-code platform and the easiest way to build beautiful business apps 🚀<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0J1ZGliYXNlL2J1ZGliYXNl\">https://github.com/Budibase/budibase<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Budibase | Create modern business apps in minutes<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9idWRpYmFzZS5jb20v\">https://budibase.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Get started - Budibase Docs<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmJ1ZGliYXNlLmNvbS9zZWxmLWhvc3RpbmcvaG9zdGluZy1tZXRob2RzL2RvY2tlci1jb21wb3Nl\">https://docs.budibase.com/self-hosting/hosting-methods/docker-compose<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","低代码"]},{"title":"轻量但功能强大的Wiki.js","url":"/2022/01/03/%E8%BD%BB%E9%87%8F%E4%BD%86%E5%8A%9F%E8%83%BD%E5%BC%BA%E5%A4%A7%E7%9A%84Wiki.js/","content":"<p><strong>什么是 Wiki ?</strong></p>\n<blockquote>\n<p><code>Wiki</code> 是一种在网络上开放且可供多人协同创作的超文本系统，由美国人沃德·坎宁安于 <code>1995</code> 年首先开发，这种超文本系统支持面向社群的协作式写作，同时也包括一组支持这种写作。沃德·坎宁安将 <code>Wiki</code> 定义为“一种允许一群用户用简单的描述来创建和连接一组网页的社会计算系统”。  <code>Wiki</code> 站点可以有多人（甚至任何访问者）维护，每个人都可以发表自己的意见，或者对共同的主题进行扩展与探讨。【百度百科】</p>\n</blockquote>\n<p><strong>什么是 Wiki.js ?</strong></p>\n<blockquote>\n<p><code>Wiki.js</code> 是一个基于 <code>NodeJS</code> 的现代、轻量级和强大的 <code>wiki</code> 应用程序。</p>\n</blockquote>\n<p>老苏觉得 <code>Wiki</code> 比较适合做小团队的知识库，一方面适合管理和阅读，另一方面还能协同创作</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"建数据库\"><a href=\"#建数据库\" class=\"headerlink\" title=\"建数据库\"></a>建数据库</h2><p>数据库直接用的群晖的 <code>MariaDB 10</code>，在 <code>phpMyAdmin</code> 中创建同名的库 <code>wikijs</code> 并授予所有权限。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111071443289.png\"></p>\n<h2 id=\"安装-wiki-js\"><a href=\"#安装-wiki-js\" class=\"headerlink\" title=\"安装 wiki.js\"></a>安装 wiki.js</h2><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>requarks</code> ，选择第一个 <code>requarks/wiki</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111071435432.png\"></p>\n<h3 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看端口占用</span></span><br><span class=\"line\">netstat -tunlp | grep 端口号</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111071501756.png\"></p>\n<p>端口不冲突即可</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>3282</code></td>\n<td align=\"center\"><code>3000</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>3283</code></td>\n<td align=\"center\"><code>3443</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111071452682.png\"></p>\n<h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>DB_TYPE</code></td>\n<td align=\"center\">数据库类型支持：<code>mysql</code>, <code>postgres</code>, <code>mariadb</code>, <code>mssql</code> or <code>sqlite</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>DB_HOST</code></td>\n<td align=\"center\">数据库主机名或者 <code>IP</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>DB_PORT</code></td>\n<td align=\"center\">数据库端口</td>\n</tr>\n<tr>\n<td align=\"center\"><code>DB_USER</code></td>\n<td align=\"center\">数据库用户</td>\n</tr>\n<tr>\n<td align=\"center\"><code>DB_PASS</code></td>\n<td align=\"center\">数据库密码</td>\n</tr>\n<tr>\n<td align=\"center\"><code>DB_NAME</code></td>\n<td align=\"center\">数据库名称</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111071725231.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:3282</code> ，第一次还需要注册、安装</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111071511089.png\"></p>\n<p>填好之后</p>\n<blockquote>\n<p><code>Site URL</code> 在设置中是可以修改，所以如果你还没准备好域名，直接默认也可以，等设置好反向代理后再来修改</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111071515860.png\"></p>\n<p>点 <code>INSTALL</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111071516195.png\"></p>\n<p>完成之后会进入登录界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111071517795.png\"></p>\n<p>登录成功后跳转</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111071518597.png\"></p>\n<p>点 <code>CREATE HOME PAGE</code> 创建主页</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111071521515.png\"></p>\n<p>选择编辑器，老苏选了 <code>Markdown</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111071522651.png\"></p>\n<p>设置页面属性</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111071524869.png\"></p>\n<p>创建页面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111071530957.png\"></p>\n<p>最终显示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111071531697.png\"></p>\n<h2 id=\"设置中文\"><a href=\"#设置中文\" class=\"headerlink\" title=\"设置中文\"></a>设置中文</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111071545527.png\"></p>\n<p>下载完成后就可以选择 <code>中文</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111071547542.png\"></p>\n<p><code>APPLY</code> 之后界面就切换成中文了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111071548009.png\"></p>\n<h2 id=\"反向代理\"><a href=\"#反向代理\" class=\"headerlink\" title=\"反向代理\"></a>反向代理</h2><p>先做好反代设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111071513644.png\"></p>\n<p>在 <code>设置</code> 的 <code>常规</code> 中修改 <code>网站地址</code>，修改之后记得应用</p>\n<blockquote>\n<p>如果你没有备案，记得把端口也带上，但是不要带尾部斜杠</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111071652174.png\"></p>\n<h2 id=\"开放注册\"><a href=\"#开放注册\" class=\"headerlink\" title=\"开放注册\"></a>开放注册</h2><p>如果是作为团队的知识库，需要启用 <code>开放注册</code></p>\n<blockquote>\n<p>默认是没有开启的</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111071704546.png\"></p>\n<p>启用开放注册后，在登录界面可以自己 <code>创建一个账户</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111071701643.png\"></p>\n<p>填写注册信息可以创建一个新的账户</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111071702162.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Requarks/wiki: Wiki.js | A modern and powerful wiki app built on Node.js<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1JlcXVhcmtzL3dpa2k=\">https://github.com/Requarks/wiki<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Wiki.js<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9qcy53aWtpLw==\">https://js.wiki/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Docker | Wiki.js<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnJlcXVhcmtzLmlvL2luc3RhbGwvZG9ja2Vy\">https://docs.requarks.io/install/docker<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","wiki"]},{"title":"个人音乐流媒体服务器mStream","url":"/2021/12/31/%E4%B8%AA%E4%BA%BA%E9%9F%B3%E4%B9%90%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8mStream/","content":"<p>每一天都是平凡的一天，但每一年都是不平凡的一年。在这个极不平凡的 <code>2021</code> 年的最后一天，老苏衷心祝愿大家 <code>2022</code> 新年快乐！</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112310849052.png\"></p>\n<p><strong>什么是 mStream ？</strong></p>\n<blockquote>\n<p><code>mStream</code> 是个人音乐流媒体服务器，支持 <code>flac</code>, <code>mp3</code>, <code>mp4</code>, <code>wav</code>, <code>ogg</code>, <code>opus</code>, <code>aac</code>, <code>m4a</code> 格式。您可以使用 <code>mStream</code> 随时随地将您的音乐从家庭计算机流式传输到任何设备，并且有适用于 <code>Android</code> 和 <code>iPhone</code> 的移动端应用程序。</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>mstream</code> ，选择第一个 <code>linuxserver/mstream</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111291933770.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>mstream</code>，并建两个子目录，分别为 <code>config</code> 和 <code>music</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111291938021.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/mstream/config</code></td>\n<td align=\"center\"><code>/config</code></td>\n<td align=\"center\">存放设置</td>\n</tr>\n<tr>\n<td align=\"center\"><code>docker/mstream/music</code></td>\n<td align=\"center\"><code>/music</code></td>\n<td align=\"center\">存放音乐</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111291940868.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不冲突就行，不确定的话可以用命令查一下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看端口占用</span></span><br><span class=\"line\">netstat -tunlp | grep 端口号</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>3355</code></td>\n<td align=\"center\"><code>3000</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111291941723.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>PUID</code></td>\n<td align=\"center\">默认设为 <code>1000</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>PGID</code></td>\n<td align=\"center\">默认设为 <code>1000</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>TZ</code></td>\n<td align=\"center\">默认设为 <code>Asia/Shanghai</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111291944090.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:3355</code> 就能看到主界面，因为还没有添加音乐，还是空荡荡的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111291946591.png\"></p>\n<p>添加了 <code>3</code> 张碟，有 <code>mp3</code>，也有 <code>wav</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111292029773.png\"></p>\n<p><code>wav</code> 显然并不支持 <code>cue</code> 文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111292031897.png\"></p>\n<p>因为在 <code>foobar2000</code> 中是这样的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111292033451.png\"></p>\n<h2 id=\"转码\"><a href=\"#转码\" class=\"headerlink\" title=\"转码\"></a>转码</h2><p>默认是关闭的，如果需要的话，可以在 <code>Server Admin</code> –&gt; <code>Transcoding</code> 中开启</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111292036729.png\"></p>\n<p>选择了 <code>Enable</code> 会下载 <code>ffmpeg</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111292038819.png\"></p>\n<p>缺省的编码是 <code>opus</code>，还可以选择 <code>mp3</code> 或者 <code>aac</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111292040632.png\"></p>\n<p>完成之后，还得需要启用</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111292047688.png\"></p>\n<h2 id=\"上传\"><a href=\"#上传\" class=\"headerlink\" title=\"上传\"></a>上传</h2><p>默认也是关闭的，如果需要的话，可以在 <code>Server Admin</code> –&gt; <code>settings</code> 中开启</p>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111292043647.png\"></p>\n<p> <code>Enable</code> 就可以了</p>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111292045100.png\"></p>\n<h2 id=\"远程控制\"><a href=\"#远程控制\" class=\"headerlink\" title=\"远程控制\"></a>远程控制</h2><p> <code>Jukebox</code> –&gt; <code>Connect</code> 启动 <code>点唱机模式</code></p>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111292052766.png\"></p>\n<p> 在手机上打开链接</p>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111292054516.png\"></p>\n<p> 用 <code>Edge</code> 的 <code>QR 扫描</code></p>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111292058021.png\"></p>\n<p> 选择好音乐就可以直接在电脑上播放了</p>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111292059995.jpg\"></p>\n<p> 大冬天终于不用爬起来换碟了，真是我等懒人的福音啊。</p>\n<h2 id=\"移动端-app\"><a href=\"#移动端-app\" class=\"headerlink\" title=\"移动端 app\"></a>移动端 app</h2><p> 客户端是基于 <code>Flutter</code> 的，所以理论上同时支持 <code>Android</code> 和 <code>iOS</code>。</p>\n<blockquote>\n<p>老苏没有 iOS 设备，不确定 <code>App Store</code> 中是否有已经编译好的客户端，如果没有那就只能下源代码自己编了😓</p>\n</blockquote>\n<p> <code>Google Play</code> 是访问不了的，而国内市场则需要软著才能上架，所以只能去 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0lyb3NUaGVCZWdnYXIvbXN0cmVhbV9tdXNpYy9yZWxlYXNlcw==\">https://github.com/IrosTheBeggar/mstream_music/releases<i class=\"fa fa-external-link-alt\"></i></span> 看看了</p>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111292125950.png\"></p>\n<p> 如果上面的打不开，可以试试镜像站点 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9odWIuZmFzdGdpdC5vcmcvSXJvc1RoZUJlZ2dhci9tc3RyZWFtX211c2ljL3JlbGVhc2Vz\">https://hub.fastgit.org/IrosTheBeggar/mstream_music/releases<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p> 不过有时候 360 会显示警告</p>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111292129913.png\"></p>\n<p> 要不要继续看你自己的决定了</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>IrosTheBeggar/mStream: The easiest music streaming server available<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0lyb3NUaGVCZWdnYXIvbVN0cmVhbQ==\">https://github.com/IrosTheBeggar/mStream<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>mStream - Open Source Music Streaming<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tc3RyZWFtLmlvLw==\">https://mstream.io/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","音乐"]},{"title":"开源工作流自动化工具n8n","url":"/2021/12/29/%E5%BC%80%E6%BA%90%E5%B7%A5%E4%BD%9C%E6%B5%81%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7n8n/","content":"<p>在『 <a href=\"https://laosu.ml/2020/10/10/IFTTT%E7%9A%84%E5%BC%80%E6%BA%90%E6%9B%BF%E4%BB%A3%E5%93%81\">IFTTT的开源替代品</a> 』一文中，老苏提到了  <code>n8n</code> ，这是一款基于节点的工作流自动化工具，可以实现当 <code>A</code> 条件发生，触发 <code>B</code> 服务这样的自动工作流程。</p>\n<p><strong>什么是 n8n ？</strong></p>\n<blockquote>\n<p><code>n8n</code> 是免费的基于节点的工作流自动化工具，可以轻松实现跨不同服务的任务自动化。它可以自托管，易于扩展，因此也可以与内部工具一起使用。</p>\n</blockquote>\n<p>老苏一直想写 <code>n8n</code>，9月份终于开始动笔，写完了安装部分又搁置了下来，主要是没有想好具体用来做点什么。最近后台又有人在问，所以虚构了 <code>1</code> 个应用场景：<strong>获取天气预报，并通过微信发送到手机。</strong>希望通过案例的讲解让大家了解 <code>n8n</code> 是怎么工作的。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>n8n</code> ，选择第一个 <code>n8nio/n8n</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109131434813.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>n8n</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/n8n</code></td>\n<td align=\"center\"><code>/home/node/.n8n</code></td>\n<td align=\"center\">存放设置和数据库</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109131444447.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>直接用了默认的端口 <code>5678</code> </p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>5678</code></td>\n<td align=\"center\"><code>5678</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109131445874.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>TZ</code></td>\n<td align=\"center\">时区</td>\n</tr>\n<tr>\n<td align=\"center\"><code>N8N_BASIC_AUTH_ACTIVE</code></td>\n<td align=\"center\">默认设置为 <code>true</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>N8N_BASIC_AUTH_USER</code></td>\n<td align=\"center\">设置用户名</td>\n</tr>\n<tr>\n<td align=\"center\"><code>N8N_BASIC_AUTH_PASSWORD</code></td>\n<td align=\"center\">设置密码</td>\n</tr>\n</tbody></table>\n<p>如果只是在局域网使用，红框部分（账号密码验证）可以不用设置，但是时区一定要设置正确，否则会影响到定时节点 <code>cron</code> 的执行时间</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112210855078.png\"></p>\n<p>当然也可以在 <code>Settings</code> 中将 <code>TimeZone</code> 设置为 <code>(GMT+08:00)Hong Kong</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112210932263.png\"></p>\n<p>如果你想使用 <code>MySQL</code> 或者 <code>PostgresDB</code>，需通过环境变量参数进行指定，请参考官方文档：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL244bi1pby9uOG4vYmxvYi9tYXN0ZXIvZG9ja2VyL2ltYWdlcy9uOG4vUkVBRE1FLm1kI3BlcnNpc3QtZGF0YQ==\">https://github.com/n8n-io/n8n/blob/master/docker/images/n8n/README.md#persist-data<i class=\"fa fa-external-link-alt\"></i></span>，<strong>如果只是个人用，老苏觉得没啥必要。除非你的流程很多，那就另说了。</strong></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:5678</code>，就能看到登录界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109131501085.png\"></p>\n<p>登录之后的主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109131503721.png\"></p>\n<p>在官网我们能找到大量的工作流：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9uOG4uaW8vd29ya2Zsb3dz\">https://n8n.io/workflows<i class=\"fa fa-external-link-alt\"></i></span>，找到适合的可以导入我们的系统中，不过说实话，国外的应用很多我们都用不了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109141658433.png\"></p>\n<h1 id=\"工作流程\"><a href=\"#工作流程\" class=\"headerlink\" title=\"工作流程\"></a>工作流程</h1><p>下面开始今天的示例，老苏将按照 <code>事件触发</code> –&gt; <code>数据获取</code> –&gt; <code>数据处理</code> –&gt; <code>执行动作</code> 的流程来详细介绍</p>\n<h2 id=\"事件触发\"><a href=\"#事件触发\" class=\"headerlink\" title=\"事件触发\"></a>事件触发</h2><p>顾名思义，这是用来触发事件的，老苏用了 <code>Cron</code> 节点，这是一个定时执行的节点</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">参数</th>\n<th align=\"center\">值</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>Mode</code></td>\n<td align=\"center\"><code>Every Day</code></td>\n<td align=\"center\">每天执行</td>\n</tr>\n<tr>\n<td align=\"center\"><code>Hour</code></td>\n<td align=\"center\"><code>7</code></td>\n<td align=\"center\">24小时，早上7点开始执行</td>\n</tr>\n<tr>\n<td align=\"center\"><code>Minute</code></td>\n<td align=\"center\"><code>0</code></td>\n<td align=\"center\">分钟</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>按官方的说法每天更新 <code>4</code> 次数据，所以频繁的抓取只会给服务器增加压力</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112211008493.png\"></p>\n<p>如果一次不够的话，可以再增加几次，但是一天不要超过 <code>4</code> 次。不管是 <code>weather.api</code> 还是 <code>WxPusher</code> ，虽然使用是免费的，但是维护者还是有成本的，别薅羊毛把羊🐑给薅没了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112201143896.png\"></p>\n<h2 id=\"数据获取\"><a href=\"#数据获取\" class=\"headerlink\" title=\"数据获取\"></a>数据获取</h2><blockquote>\n<p>关于天气数据，可以参考『  <a href=\"https://laosu.ml/2021/09/03/%E7%94%A8Changedetection%E7%9B%91%E6%8E%A7%E7%BD%91%E9%A1%B5%E7%9A%84%E5%8F%98%E5%8C%96#JSON-API-%E7%9B%91%E6%8E%A7\">用Changedetection监控网页的变化</a> 』一文中的 <code>JSON-API-监控</code> 部分</p>\n</blockquote>\n<p>老苏用了 <code>HTTP Request</code> 节点来获取数据</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">参数</th>\n<th align=\"center\">值</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>Authentication</code></td>\n<td align=\"center\"><code>None</code></td>\n<td align=\"center\">不需要认证</td>\n</tr>\n<tr>\n<td align=\"center\"><code>Request Method</code></td>\n<td align=\"center\"><code>GET</code></td>\n<td align=\"center\">请求方式</td>\n</tr>\n<tr>\n<td align=\"center\"><code>URL</code></td>\n<td align=\"center\"><code>http://t.weather.itboy.net/api/weather/city/101020100</code></td>\n<td align=\"center\">注意这是上海的天气</td>\n</tr>\n<tr>\n<td align=\"center\"><code>Response Format</code></td>\n<td align=\"center\"><code>JSON</code></td>\n<td align=\"center\">返回的数据格式</td>\n</tr>\n</tbody></table>\n<p>填完之后点右上角的 <code>Execute Node</code>，不出状况的话会返回相应城市的天气信息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112210903733.png\"></p>\n<h2 id=\"数据处理\"><a href=\"#数据处理\" class=\"headerlink\" title=\"数据处理\"></a>数据处理</h2><p>老苏用了 <code>Function</code> 节点来处理数据，这个节点需要自己写点 <code>Javascript</code> 代码。虽然老苏不是程序员，但是在百度和 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NodWRvbmd2aXA=\">初冬<i class=\"fa fa-external-link-alt\"></i></span> 小帅哥的帮助，还是完成了目标</p>\n<blockquote>\n<p>其实大部分代码就是对照着下图取数据</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112210900339.png\"></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 处理返回的 json 格式的数据并拼接成字符串</span></span><br><span class=\"line\"><span class=\"comment\">// 老苏只处理了当天的数据</span></span><br><span class=\"line\"></span><br><span class=\"line\">shidu = items[<span class=\"number\">0</span>].json.data.shidu;</span><br><span class=\"line\">pm25 = items[<span class=\"number\">0</span>].json.data.pm25;</span><br><span class=\"line\">pm10 = items[<span class=\"number\">0</span>].json.data.pm10;</span><br><span class=\"line\">quality = items[<span class=\"number\">0</span>].json.data.quality;</span><br><span class=\"line\">wendu = items[<span class=\"number\">0</span>].json.data.wendu;</span><br><span class=\"line\">ganmao = items[<span class=\"number\">0</span>].json.data.ganmao;</span><br><span class=\"line\">high = items[<span class=\"number\">0</span>].json.data.forecast[<span class=\"number\">0</span>].high.replace(<span class=\"regexp\">/\\s*/g</span>, <span class=\"string\">&#x27;&#x27;</span>);</span><br><span class=\"line\">low = items[<span class=\"number\">0</span>].json.data.forecast[<span class=\"number\">0</span>].low.replace(<span class=\"regexp\">/\\s*/g</span>, <span class=\"string\">&#x27;&#x27;</span>);</span><br><span class=\"line\">fx = items[<span class=\"number\">0</span>].json.data.forecast[<span class=\"number\">0</span>].fx;</span><br><span class=\"line\">fl = items[<span class=\"number\">0</span>].json.data.forecast[<span class=\"number\">0</span>].fl;</span><br><span class=\"line\">type = items[<span class=\"number\">0</span>].json.data.forecast[<span class=\"number\">0</span>].type;</span><br><span class=\"line\">ymd = items[<span class=\"number\">0</span>].json.data.forecast[<span class=\"number\">0</span>].ymd;</span><br><span class=\"line\">week = items[<span class=\"number\">0</span>].json.data.forecast[<span class=\"number\">0</span>].week;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> yubao = <span class=\"string\">&quot;天气预报：&lt;/br&gt;今天是&quot;</span> + ymd + <span class=\"string\">&quot;，&quot;</span> + week + <span class=\"string\">&quot;，今天天气&quot;</span> + type + <span class=\"string\">&quot;。最&quot;</span> + high + <span class=\"string\">&quot;度，最&quot;</span> + low + <span class=\"string\">&quot;度，风向&quot;</span> + fx + <span class=\"string\">&quot;，风力&quot;</span> + fl + <span class=\"string\">&quot;，空气质量&quot;</span> + quality + <span class=\"string\">&quot;，湿度&quot;</span> + shidu + <span class=\"string\">&quot;，&quot;</span> + ganmao;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 调试用的</span></span><br><span class=\"line\"><span class=\"comment\">//console.log(encodeURIComponent(yubao).replace(/&#x27;/g,&quot;%27&quot;).replace(/&quot;/g,&quot;%22&quot;));</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 中文写回到到 json 中</span></span><br><span class=\"line\">items[<span class=\"number\">0</span>].json.yubao = yubao;</span><br><span class=\"line\"><span class=\"comment\">// urlencode 后写回到到 json 中</span></span><br><span class=\"line\"><span class=\"comment\">//items[0].json.yubaoe = encodeURIComponent(yubao).replace(/&#x27;/g,&quot;%27&quot;).replace(/&quot;/g,&quot;%22&quot;);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> items;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112210902172.png\"></p>\n<h2 id=\"执行动作\"><a href=\"#执行动作\" class=\"headerlink\" title=\"执行动作\"></a>执行动作</h2><p>老苏用了 <code>HTTP Request</code> 节点来触发相应的动作，也就是通过<code>WxPusher</code> 实现微信发送天气预报</p>\n<blockquote>\n<p>关于 <code>WxPusher</code> 的申请请参考『  <a href=\"https://laosu.ml/2021/06/18/%E9%80%9A%E8%BF%87WxPusher%E5%9C%A8%E7%BE%A4%E6%99%96%E4%B8%8A%E5%AE%9E%E7%8E%B0%E5%BE%AE%E4%BF%A1%E6%8E%A8%E9%80%81/\">通过WxPusher在群晖上实现微信推送</a> 』的相关部分</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th align=\"center\">参数</th>\n<th align=\"center\">值</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>Authentication</code></td>\n<td align=\"center\"><code>None</code></td>\n<td align=\"center\">不需要认证</td>\n</tr>\n<tr>\n<td align=\"center\"><code>Request Method</code></td>\n<td align=\"center\"><code>GET</code></td>\n<td align=\"center\">请求方式</td>\n</tr>\n<tr>\n<td align=\"center\"><code>URL</code></td>\n<td align=\"center\"><code>http://wxpusher.zjiecode.com/api/send/message/</code></td>\n<td align=\"center\">微信发送地址</td>\n</tr>\n<tr>\n<td align=\"center\"><code>Response Format</code></td>\n<td align=\"center\"><code>JSON</code></td>\n<td align=\"center\">返回的数据格式</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112210906529.png\"></p>\n<p>除此之外还需要在 <code>Query Parameters</code> 中通过 <code>Add Parameter</code> 增加 <code>3</code> 个参数</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">参数</th>\n<th align=\"center\">值</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>appToken</code></td>\n<td align=\"center\"><code>你的appToken</code></td>\n<td align=\"center\">你的appToken</td>\n</tr>\n<tr>\n<td align=\"center\"><code>uid</code></td>\n<td align=\"center\"><code>你的UID</code></td>\n<td align=\"center\">你的UID</td>\n</tr>\n<tr>\n<td align=\"center\"><code>content</code></td>\n<td align=\"center\"></td>\n<td align=\"center\">手动选取</td>\n</tr>\n</tbody></table>\n<p>第三个参数的 <code>value</code> 值需手动点击后面的齿轮</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112201804556.png\"></p>\n<p>逐级展开 <code>Current Node</code> –&gt; <code>Input Data</code> –&gt; <code>JSON</code> –&gt; <code>data</code> –&gt; <code>yubao</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112201807377.png\"></p>\n<p>点右上角的 <code>Execute Node</code> 执行正常</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112201803217.png\"></p>\n<h2 id=\"保存成果\"><a href=\"#保存成果\" class=\"headerlink\" title=\"保存成果\"></a>保存成果</h2><p>记得保存，其实每一步做完后都可以点右上角的 <code>Save</code> 保存的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112210851072.png\"></p>\n<p>要启用记得勾选 <code>Active</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112211021526.png\"></p>\n<p>流程自动执行后，可以在 <code>Executions</code> 中看到执行情况</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112211019686.png\"></p>\n<p>手机上收到的效果</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112221715590.png\"></p>\n<p>进入后的详情</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112221716473.png\"></p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>有两个方法运行老苏的示例，一种是照着文档一步一步实践，这也是老苏写这篇文档的初衷；另一种是<code>“偷懒”</code>的方法，直接导入老苏的 <code>json</code> 文件，文件中有 <code>3</code> 个地方要修改：</p>\n<ol>\n<li><code>你的city_code</code>，要换成你所在城市的代码；</li>\n<li><code>你的appToken</code>，换成你在 <code>WxPusher</code> 中的 <code>appToken</code>；</li>\n<li><code>你的uid</code>：需换成你在  <code>WxPusher</code> 获取到的 <code>uid</code>；</li>\n</ol>\n<p>导入的方法可以是通过 <code>Import from URL</code> 在线导入，之后再去节点修改上面 <code>3</code> 个参数；</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112211053424.png\"></p>\n<p>还有</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112211330028.png\"></p>\n<p>也可以先下载，修改完之后再通过  <code>Import from File</code> 导入。</p>\n<p><code>json</code> 文件的地址在下面👇： </p>\n<blockquote>\n<ul>\n<li>国外用户：<code>https://raw.githubusercontent.com/wbsu2003/n8n/main/weather2wx.json</code></li>\n<li>国内用户：<code>https://raw.fastgit.org/wbsu2003/n8n/main/weather2wx.json</code></li>\n</ul>\n</blockquote>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>n8n.io - Free and Open Workflow Automation Tool<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9uOG4uaW8v\">https://n8n.io/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>n8n-io/n8n: Free and open fair-code licensed node based Workflow Automation Tool. Easily automate tasks across different services.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL244bi1pby9uOG4=\">https://github.com/n8n-io/n8n<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>n8n/README.md at master · n8n-io/n8n<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL244bi1pby9uOG4vYmxvYi9tYXN0ZXIvZG9ja2VyL2ltYWdlcy9uOG4vUkVBRE1FLm1k\">https://github.com/n8n-io/n8n/blob/master/docker/images/n8n/README.md<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Automatically pulling and visualizing data with n8n 📈<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9uOG4uaW8vYmxvZy9hdXRvbWF0aWNhbGx5LXB1bGxpbmctYW5kLXZpc3VhbGl6aW5nLWRhdGEtd2l0aC1uOG4v\">https://n8n.io/blog/automatically-pulling-and-visualizing-data-with-n8n/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>How To Automate Your Processes Using HTTP Request Node From n8n | Hacker Noon<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWNrZXJub29uLmNvbS9ob3ctdG8tYXV0b21hdGUteW91ci1wcm9jZXNzZXMtdXNpbmctaHR0cC1yZXF1ZXN0LW5vZGUtZnJvbS1uOG4tZ2szODN1ZDA=\">https://hackernoon.com/how-to-automate-your-processes-using-http-request-node-from-n8n-gk383ud0<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","自动化","工作流"]},{"title":"企业级远程办公vpn软件AnyLink","url":"/2021/12/27/%E4%BC%81%E4%B8%9A%E7%BA%A7%E8%BF%9C%E7%A8%8B%E5%8A%9E%E5%85%ACvpn%E8%BD%AF%E4%BB%B6AnyLink/","content":"<p>疫情尚未结束，给需要远程办公的人</p>\n<p><strong>什么是 AnyLink ？</strong></p>\n<blockquote>\n<p><code>AnyLink</code> 是一个企业级远程办公 <code>ssl vpn</code> 软件，可以支持多人同时在线使用。基于 <code>openconnect</code> 协议开发，并且借鉴了 <code>ocserv</code> 的开发思路，可以完全兼容 <code>AnyConnect</code> 客户端。</p>\n</blockquote>\n<p><strong>什么是 OTP ？</strong></p>\n<blockquote>\n<p>一次性密码（<code>One Time Password</code>，简称 <code>OTP</code>），又称 <code>“一次性口令”</code>，是指只能使用一次的密码。一次性密码是根据专门算法、每隔 <code>60</code> 秒生成一个不可预测的随机数字组合，<code>iKEY</code> 一次性密码已在金融、电信、网游等领域被广泛应用，有效地保护了用户的安全。【百度百科】</p>\n</blockquote>\n<p><code>OTP</code> 软件挺多的，比如老苏用的 <code>Microsoft Authenticator</code>，还有 <code>Google Authenticator</code> 等等，<code>AnyLink</code> 官方推荐用 <code>FreeOTP</code></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>anylink</code> ，选择第二个 <code>bjdgyc/anylink</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111041054428.png\"></p>\n<h2 id=\"权限\"><a href=\"#权限\" class=\"headerlink\" title=\"权限\"></a>权限</h2><p>勾选 <code>使用高权限执行容器</code>，并点击 <code>是</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111041116420.png\"></p>\n<h2 id=\"高级设置\"><a href=\"#高级设置\" class=\"headerlink\" title=\"高级设置\"></a>高级设置</h2><p>勾选 <code>启用自动重新启动</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111041352552.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>anylink</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/anylink</code></td>\n<td align=\"center\"><code>/app/conf</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111041354697.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看端口占用</span></span><br><span class=\"line\">netstat -tunlp | grep 端口号</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111041104220.png\"></p>\n<p><code>443</code> 默认是被占用的，所以需要修改端口</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>12443</code></td>\n<td align=\"center\"><code>443</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>12080</code></td>\n<td align=\"center\"><code>8800</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111041117681.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:12080</code> 就能看到管理后台的登录界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111041146812.png\"></p>\n<blockquote>\n<p>默认账号：<code>admin</code>； 密码：<code>123456</code></p>\n</blockquote>\n<p>登录成功后的主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111041147815.png\"></p>\n<h1 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h1><p>在日志中，你会看到两条警告⚠️信息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111041151715.png\"></p>\n<p>进入 <code>终端机</code>，「终端机」 =&gt; 「新增」 =&gt; 「通过命令启动」=&gt; 「请输入一个命令」=&gt; 「bash」</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111041153831.png\"></p>\n<p>依次执行下面👇的命令 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 生成 Passwd</span></span><br><span class=\"line\">./anylink tool -p 123456</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成 jwt secret</span></span><br><span class=\"line\">./anylink tool -s</span><br></pre></td></tr></table></figure>\n\n<p>将红框中生成的内容保存，后面会用到</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111041453889.png\"></p>\n<p>如果你想改后台登录密码，比如改为 <code>abcdef</code>，就执行下面的命令生成对应的 <code>Passwd</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111301731239.png\"></p>\n<h2 id=\"设置-server-toml\"><a href=\"#设置-server-toml\" class=\"headerlink\" title=\"设置 server.toml\"></a>设置 server.toml</h2><p>下载 <code>server-sample.toml</code> 文件，地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JqZGd5Yy9hbnlsaW5rL2Jsb2IvbWFpbi9zZXJ2ZXIvY29uZi9zZXJ2ZXItc2FtcGxlLnRvbWw=\">https://github.com/bjdgyc/anylink/blob/main/server/conf/server-sample.toml<i class=\"fa fa-external-link-alt\"></i></span></p>\n<blockquote>\n<p>这是国人开发的项目，老苏也想用 <code>gitee</code> 的地址，不过打开 <code>server-sample.toml</code> 文件会显示👇</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112270954922.png\"></p>\n<p>如果你熟悉命令行，也可以用命令行下载</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入 anylink 目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /valume2/docker/anylink</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 下载 server.toml 文件</span></span><br><span class=\"line\">curl -sSL https://raw.githubusercontent.com/bjdgyc/anylink/main/server/conf/server-sample.toml -o server.toml</span><br></pre></td></tr></table></figure>\n\n<p>如果下不了，可以自己建一个，将其重命名为 <code>server.toml</code>，主要有几处可能需要修改</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">变量</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>admin_pass</code></td>\n<td align=\"center\">填入前面获取的 <code>Passwd</code> 值</td>\n</tr>\n<tr>\n<td align=\"center\"><code>jwt_secret</code></td>\n<td align=\"center\">填入前面获取的 <code>Secret</code> 值</td>\n</tr>\n<tr>\n<td align=\"center\"><code>link_addr</code></td>\n<td align=\"center\">这是 <code>vpn</code> 服务对外的地址，需要新增</td>\n</tr>\n<tr>\n<td align=\"center\"><code>cert_file</code></td>\n<td align=\"center\">配合 <code>link_addr</code> 域名地址的证书</td>\n</tr>\n<tr>\n<td align=\"center\"><code>cert_key</code></td>\n<td align=\"center\">配合 <code>link_addr</code> 域名地址的证书</td>\n</tr>\n<tr>\n<td align=\"center\"><code>ipv4_cidr</code></td>\n<td align=\"center\"><code>vpn</code> 客户端分配的 <code>ip</code> 地址池</td>\n</tr>\n</tbody></table>\n<blockquote>\n<ol>\n<li><code>admin_pass</code> 必须改，不然不然后台登录不了</li>\n<li><code>jwt_secret</code> 必须改，不然会存在安全风险</li>\n</ol>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111161133118.png\"></p>\n<blockquote>\n<ol start=\"3\">\n<li><code>link_addr</code>须增加，官方的 <code>demo</code> 中并没有，是根据参考文档 <code>2</code> 增加的，比如老苏用了 <code>vpn.laosu.ml</code></li>\n</ol>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111161402272.png\"></p>\n<blockquote>\n<ol start=\"4\">\n<li>老苏是在 <code>dnspod.cn</code> 上做域名解析的，直接在那申请了 <code>TrustAsia</code> 的证书</li>\n</ol>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111301522124.png\"></p>\n<p>下载的证书解压后，使用 <code>nginx</code> 目录下的证书</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111301527643.png\"></p>\n<p>原来的文件名比较长，老苏改短了，配置中做相应的修改</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111301534009.png\"></p>\n<blockquote>\n<ol start=\"5\">\n<li><code>ipv4_cidr</code> 如果修改了地址段，相应的 <code>ipv4_gateway</code>、<code>ipv4_start</code>、<code>ipv4_end</code> 都要跟着一起修改，老苏家里用的是 <code>0</code> 网段，老读者都知道老苏群晖的主机 <code>IP</code> 为 <code>192.168.0.197</code>，所以这里改成了 <code>192.168.0.0/24</code>，相应的 <code>ipv4_gateway</code> 改为了 <code>192.168.0.1</code>；<code>ipv4_start</code> 分了 <code>192.168.0.220</code>，<code>ipv4_end</code> 分了 <code>192.168.0.230</code>，总共就 <code>10</code> 个 <code>IP</code></li>\n</ol>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111161137712.png\"></p>\n<p>将 <code>server.toml</code> 、以及 <code>2</code> 个证书文件上传到 <code>anylink</code> 目录，现在目录中有 <code>4</code> 个文件了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111301529728.png\"></p>\n<p>重启容器</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111161142650.png\"></p>\n<h2 id=\"邮件配置\"><a href=\"#邮件配置\" class=\"headerlink\" title=\"邮件配置\"></a>邮件配置</h2><p>这是为了添加用户时，发邮件通知用的。进管理后台，<code>基础信息</code> –&gt; <code>其他设置</code> –&gt; <code>邮件配置</code>，还是用的 <code>88</code> 邮箱做示例</p>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111301553653.png\"></p>\n<h2 id=\"添加用户组\"><a href=\"#添加用户组\" class=\"headerlink\" title=\"添加用户组\"></a>添加用户组</h2><p>进管理后台，<code>用户组信息</code>–&gt; <code>用户组列表</code>，<code>添加</code> 用户组</p>\n<blockquote>\n<p>老苏把 <code>DNS</code> 指向了主路由，其实用默认的 <code>114.114.114.114</code> 也是可以的</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111301556551.png\"></p>\n<h2 id=\"添加用户\"><a href=\"#添加用户\" class=\"headerlink\" title=\"添加用户\"></a>添加用户</h2><p>进管理后台，<code>用户信息</code> –&gt; <code>用户列表</code>，<code>添加</code> 用户</p>\n<blockquote>\n<p>老苏先禁用了 <code>OTP</code>，但是开启 <code>OTP</code> 的情况也是做了测试验证的</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111301631104.png\"></p>\n<p>如果邮箱没问题，很快就会收到邮件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111301634527.png\"></p>\n<p>如果要显示二维码，进管理后台，<code>基础信息</code> –&gt; <code>其他设置</code> –&gt; <code>其他设置</code>， <code>vpn对外地址</code> 填写 <code>link_addr</code> 加上端口即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112011531985.png\"></p>\n<p>二维码主要是给 <code>OPT</code> 软件扫码用的，用于生成登录时需要的动态码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112011532484.png\"></p>\n<h2 id=\"frp-设置\"><a href=\"#frp-设置\" class=\"headerlink\" title=\"frp 设置\"></a>frp 设置</h2><p>如果你是有公网 <code>IP</code> 的，只要路由器放行 <code>12443</code> 就可以了，协议为 <code>TCP</code>；老苏用的是 <code>frp</code>，需要在 <code>frpc.ini</code> 中增加下面👇这段</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[anylink]</span></span><br><span class=\"line\"><span class=\"comment\"># 2021.11.30 新增 for AnyLink 测试</span></span><br><span class=\"line\"><span class=\"attr\">type</span> = tcp</span><br><span class=\"line\"><span class=\"attr\">local_ip</span> = <span class=\"number\">192.168</span>.<span class=\"number\">0.197</span></span><br><span class=\"line\"><span class=\"attr\">local_port</span> = <span class=\"number\">12443</span></span><br><span class=\"line\"><span class=\"attr\">remote_port</span> = <span class=\"number\">12443</span></span><br><span class=\"line\"><span class=\"attr\">custom_domains</span> = vpn.laosu.ml</span><br></pre></td></tr></table></figure>\n\n<p>保存之后，重启 <code>frpc</code> 容器</p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><p>终于可以开始使用了，<code>AnyConnect</code> 客户端可以去 <code>Stille</code> 大神的 『 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaW9pb3guY29tL2FyY2hpdmVzLzg5Lmh0bWw=\">OpenWRT 路由器 OpenConnect VPN 详细图文教程 - 基础配置篇<i class=\"fa fa-external-link-alt\"></i></span> 』中找，大神将 <code>AnyConnect</code> 客户端按平台整理好了，致敬！</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111301653988.png\"></p>\n<p><code>AnyConnect</code> 客户端只要装 <code>VPN</code> 模块即可，其他的用不上</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112271135707.png\"></p>\n<p>安装完成后启动 <code>AnyConnect</code> 客户端，将 <code>link_addr</code> 加上端口填入即可，客户端没有其他的任何设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112010909796.png\"></p>\n<p>完成后点  <code>Connect</code>，如果前面设置没有问题的话，应该会弹出登录窗口</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111301700533.png\"></p>\n<blockquote>\n<p>【说明】：</p>\n<ol>\n<li><code>禁用 OTP</code> 的情况下，密码只要输入 <code>PIN码</code></li>\n<li><code>启用 OTP</code> 的情况下，密码要输入 <code>PIN码</code> + <code>6</code> 位动态码 </li>\n<li>老苏用 <code>Microsoft Authenticator</code> 验证可用</li>\n</ol>\n</blockquote>\n<p>输入密码之后，会弹出 <code>Banner</code>，这是个欢迎页面，内容可以在管理后台设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111301701777.png\"></p>\n<p>点 <code>Accept</code> 接受之后，就可以像在家里一样，直接用 <code>192.168.0.xx</code> 来访问家里的设备了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111301705647.png\"></p>\n<p>不用了可以点 <code>Disconnect</code> 断开连接</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112011453002.png\"></p>\n<h1 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h1><ol>\n<li>不要和 <code>tailscale</code> 一起用</li>\n<li>《中华人民共和国计算机信息网络国际联网管理暂行规定》第六条：“计算机信息网络直接进行国际联网，必须使用邮电部国家公用电信网提供的国际出入口信道。任何单位和个人不得自行建立或者使用其他信道进行国际联网。”</li>\n<li>根据工信部《工业和信息化部关于清理规范互联网网络接入服务市场的通知》的规定：“未经电信主管部门批准，不得自行建立或租用专线（含虚拟专用网络<strong>VPN</strong>）等其他信道开展跨境经营活动。”</li>\n</ol>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<ol>\n<li><p>bjdgyc/anylink: AnyLink是一个企业级远程办公 ssl vpn 软件，可以支持多人同时在线使用。基于 openconnect 协议开发，并且借鉴了 ocserv 的开发思路，可以完全兼容 AnyConnect 客户端。<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JqZGd5Yy9hbnlsaW5r\">https://github.com/bjdgyc/anylink<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>开源企业级远程办公 VPN 软件 AnyLink 的 docker 部署及使用心得 - 思有云 - IOIOX<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaW9pb3guY29tL2FyY2hpdmVzLzEyOC5odG1s\">https://www.ioiox.com/archives/128.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p> OpenWRT 路由器 OpenConnect VPN 详细图文教程 - 基础配置篇 - 思有云 - IOIOX<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaW9pb3guY29tL2FyY2hpdmVzLzg5Lmh0bWw=\">https://www.ioiox.com/archives/89.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>MAC上Cisco AnyConnect删除不干净,造成无法重新安装的解决办法 - 简书<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC84Y2YwMmJmYTAzODg=\">https://www.jianshu.com/p/8cf02bfa0388<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n</ol>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","frp","网络","vpn","内网穿透"]},{"title":"个人仪表板软件Flame","url":"/2021/12/24/%E4%B8%AA%E4%BA%BA%E4%BB%AA%E8%A1%A8%E6%9D%BF%E8%BD%AF%E4%BB%B6Flame/","content":"<blockquote>\n<p>本文是在网友后台推荐之前就完成的😁</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112211137890.png\"></p>\n<p><strong>什么是 Flame ？</strong></p>\n<blockquote>\n<p><code>Flame</code> 可以作为自托管服务器的起始页，非常易于设置和使用。借助内置编辑器可以轻松管理您的应用程序和书签。</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>flame</code> ，选择第一个 <code>pawelmalak/flame</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111241041681.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，将其命名为 <code>flame</code>，并建一个子目录 <code>data</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111241048784.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/flame/data</code></td>\n<td align=\"center\"><code>/app/data</code></td>\n<td align=\"center\">存放数据</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111241049121.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不冲突就行，不确定的话可以用命令查一下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看端口占用</span></span><br><span class=\"line\">netstat -tunlp | grep 端口号</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111241057649.png\"></p>\n<blockquote>\n<p>因为老苏启用了群晖的 <code>WebDAV Server</code>，默认的端口就是 <code>5005</code> </p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111241054124.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>5007</code></td>\n<td align=\"center\"><code>5005</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111241057576.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>PASSWORD</code></td>\n<td align=\"center\">默认为 <code>flame_password</code></td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>密码修改为你想要的即可</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111241059545.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:5007</code> 就能看到主界面，不过刚开始什么都没有</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111241116033.png\"></p>\n<p>只有最上方的搜索可以使用，默认使用的是 <code>duckduckgo</code> 引擎</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111250953610.png\"></p>\n<p>点左下角的设置图标 </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111241137598.png\"></p>\n<p>这个按钮不大显眼，移上去才会高亮显示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111241138250.png\"></p>\n<p>可以选择主题的颜色</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111241139309.png\"></p>\n<p>进入 <code>App</code> 要登录验证，需填入我们在前面 <code>环境变量</code> 中设置的密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111241140453.png\"></p>\n<p>登录成功之后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111241142168.png\"></p>\n<h2 id=\"Weather\"><a href=\"#Weather\" class=\"headerlink\" title=\"Weather\"></a>Weather</h2><p><code>Flame</code> 用的是 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cud2VhdGhlcmFwaS5jb20v\">https://www.weatherapi.com/<i class=\"fa fa-external-link-alt\"></i></span> 的数据，免费账户可以显示3天的实时数据，7天的历史数据，每个月 <code>100w</code> 次查询请求，在线率 <code>95.5%</code>，自己用足够了。</p>\n<blockquote>\n<p>今天 <code>review</code> 文章的时候发现网站的证书似乎有问题，证书在有效期内，上个月写文章的时候还是好的</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112240946479.png\"></p>\n<p>首先要注册一个账号，只要设置邮箱和密码即可</p>\n<blockquote>\n<p>人机身份验证可能需要科学上网，毕竟是谷歌出品的😳</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111241155159.png\"></p>\n<p>登录邮箱，会有两封邮件，其中一封有验证地址，点击后验证账号</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111241159044.png\"></p>\n<p>登录后即能看到 <code>API Key</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111241202655.png\"></p>\n<p>在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcGkubWFwLmJhaWR1LmNvbS9sYnNhcGkvZ2V0cG9pbnQvaW5kZXguaHRtbA==\">https://api.map.baidu.com/lbsapi/getpoint/index.html<i class=\"fa fa-external-link-alt\"></i></span> 查询要显示的城市的纬度 <code>Latitude</code> 和经度 <code>Longitude</code>，比如 <code>上海 杨浦</code>，点选位置后可以获得坐标</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111241340031.png\"></p>\n<p>将获取到的 <code>API Key</code> 和 经纬度填入</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112241013472.png\"></p>\n<p>返回首页就能看到天气的图标了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111241347954.png\"></p>\n<h2 id=\"Applications\"><a href=\"#Applications\" class=\"headerlink\" title=\"Applications\"></a>Applications</h2><p>点红框中的链接，进入 <code>Applications</code> 设置界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111241418401.png\"></p>\n<p>如果你没登录什么都没有</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111241421393.png\"></p>\n<p>登录之后才有 <code>Add</code> 和 <code>Edit</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111241420731.png\"></p>\n<p>新建一个试试</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111250855141.png\"></p>\n<p>关于 <code>App Icon</code> 可以直接去 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXRlcmlhbGRlc2lnbmljb25zLmNvbS8=\">https://materialdesignicons.com<i class=\"fa fa-external-link-alt\"></i></span> 搜索，老苏用的都是 <code>MDI(Material Design Icons)</code> 上的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111250946710.png\"></p>\n<p>也可以自己上传</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111250943051.png\"></p>\n<p>随便加了几个</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111250913516.png\"></p>\n<h2 id=\"Bookmarks\"><a href=\"#Bookmarks\" class=\"headerlink\" title=\"Bookmarks\"></a>Bookmarks</h2><p>点红框中的链接，进入 <code>Bookmarks</code> 设置界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111250920601.png\"></p>\n<p>相比 <code>Applications</code> 多了分类 <code>Category</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111250925441.png\"></p>\n<p>新建一个分类</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111250935419.png\"></p>\n<p>新增书签</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111250930658.png\"></p>\n<p>随便加了两个</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111250934354.png\"></p>\n<p>整体效果</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111250937030.png\"></p>\n<h2 id=\"换背景\"><a href=\"#换背景\" class=\"headerlink\" title=\"换背景\"></a>换背景</h2><p>在网上搜了张图片，尺寸是 <code>1280x1024</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111251005005.jpg\"></p>\n<p>进后台找到 <code>CSS</code> 在 <code>Custom CSS</code> 中输入</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123; <span class=\"attribute\">background</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;图片URL&#x27;</span>) no-repeat; <span class=\"attribute\">background-size</span>: <span class=\"number\">1920px</span>; &#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111251009707.png\"></p>\n<p>保存后刷新界面</p>\n<blockquote>\n<p>自动裁掉了下面的一部分，虽然没有了对称的效果，但是总体还看得过去；估计要按显示器分辨率用 <code>16：9</code> 的图片应该就不会被裁减</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111251013653.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>pawelmalak/flame: Flame is self-hosted startpage for your server. Easily manage your apps and bookmarks with built-in editors.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Bhd2VsbWFsYWsvZmxhbWU=\">https://github.com/pawelmalak/flame<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Synology: How To Change Flame Dashboard Background – Marius Hosting<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXJpdXNob3N0aW5nLmNvbS9zeW5vbG9neS1ob3ctdG8tY2hhbmdlLWZsYW1lLWRhc2hib2FyZC1iYWNrZ3JvdW5kLw==\">https://mariushosting.com/synology-how-to-change-flame-dashboard-background/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","导航"]},{"title":"拥有自己的MinIO对象存储服务器","url":"/2021/12/22/%E6%8B%A5%E6%9C%89%E8%87%AA%E5%B7%B1%E7%9A%84MinIO%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E6%9C%8D%E5%8A%A1%E5%99%A8/","content":"<p><strong>什么是 MinIO ？</strong></p>\n<blockquote>\n<p><code>MinIO</code> 是一种流行的开源对象存储服务器，与 <code>Amazon S3</code> 云存储服务兼容。<code>MinIO</code> 可以成为 <code>S3</code> 的可行替代方案。该服务存储非结构化数据，例如照片、视频、日志文件、备份和容器/ <code>VM</code> 映像，甚至可以提供单个对象存储服务器，将分布在许多服务器上的多个驱动器集中在一起。</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><blockquote>\n<p>本文演示的是独立版 <code>MinIO</code> 安装，主要用于早期开发和评估，对于生产集群，需按分布式 <code>MinIO</code> ，采用 <code>docker-compose</code> 部署。</p>\n</blockquote>\n<p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>minio</code> ，选择第一个 <code>minio/minio</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112181233744.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹 <code>minio</code>，并在 <code>minio</code> 中建一个子目录 <code>config</code></p>\n<blockquote>\n<p>写完之后老苏发现，其实最好是建 <code>2</code> 个子目录，分别是 <code>data</code> 和 <code>config</code> 会更合理，否则很容易把 <code>config</code> 作为 <code>Buckets</code> 给误删除了</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112181832903.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/minio</code></td>\n<td align=\"center\"><code>/data</code></td>\n<td align=\"center\">存放数据</td>\n</tr>\n<tr>\n<td align=\"center\"><code>docker/minio/config</code></td>\n<td align=\"center\"><code>/root/.minio</code></td>\n<td align=\"center\">存放设置</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>两个子目录的话，把 <code>docker/minio/data</code> 指向 <code>/data</code>，把数据和设置完全隔离开</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112181249868.png\" alt=\"两个文件夹\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不冲突就行，不确定的话可以用命令查一下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看端口占用</span></span><br><span class=\"line\">netstat -tunlp | grep 端口号</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>9900</code></td>\n<td align=\"center\"><code>9000</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>9901</code></td>\n<td align=\"center\"><code>9001</code></td>\n</tr>\n</tbody></table>\n<p>默认只显示了 <code>API</code> 端口</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112181241518.png\" alt=\"1个端口\"></p>\n<p><code>Console</code> 的端口需要我们点 <code>+</code> 号手动添加</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112181246420.png\" alt=\"2个端口\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>MINIO_ROOT_USER</code></td>\n<td align=\"center\">用户名，对应原来的 <code>MINIO_ACCESS_KEY</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>MINIO_ROOT_PASSWORD</code></td>\n<td align=\"center\">密码，对应原来的 <code>MINIO_SECRET_KEY</code></td>\n</tr>\n</tbody></table>\n<blockquote>\n<ul>\n<li>老苏用 <code>Bitwarden</code> 生成的 <code>12</code> 位密码，没有使用特殊字符，当然也可以在 <code>SSH</code> 客户端中运行 <code>openssl rand -hex 12</code> 来生成密码； </li>\n<li>用户：<code>laosu</code>，密码：<code>N8L53ddpZjCt</code>；这是老苏随便设的，请设置你自己的；</li>\n<li>这个用户是管理员，权限比较高</li>\n</ul>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112181252615.png\"></p>\n<blockquote>\n<p>【重要】：命令只有第一次会执行，所以如果你忘记了这一步，只能从头再来一次😓</p>\n</blockquote>\n<p>命令中输入：<code>minio server /data --console-address &quot;:9001&quot;</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112181256877.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>先看日志，显示的都还是 <code>docker</code> 内部地址和端口</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112181302670.png\"></p>\n<p>在浏览器中输入 <code>http://群晖IP:9901</code> 就能看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112181303161.png\"></p>\n<p>用 <code>环境变量</code> 中设置的管理员账号、密码登录，登录成功后的主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112181304048.png\"></p>\n<h2 id=\"修改地址\"><a href=\"#修改地址\" class=\"headerlink\" title=\"修改地址\"></a>修改地址</h2><p>如果你仔细的话，你会发现上图中显示的 <code>SERVERS</code> 地址还是 <code>172.17.0.10</code>，这是一个 <code>docker</code> 内部的网络</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112191001546.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>MINIO_SERVER_URL</code></td>\n<td align=\"center\">MinIO 服务器的代理可访问主机名</td>\n</tr>\n<tr>\n<td align=\"center\"><code>MINIO_BROWSER_REDIRECT_URL</code></td>\n<td align=\"center\">重定向指定外部主机名</td>\n</tr>\n</tbody></table>\n<blockquote>\n<ul>\n<li><code>MINIO_SERVER_URL</code> 是针对 <code>API</code> 的，所以修改为 <code>http://192.168.0.197:9900</code> ；</li>\n<li><code>MINIO_BROWSER_REDIRECT_URL</code> 则是针对 <code>Console</code> 的，所以修改为 <code>http://192.168.0.197:9901</code>；</li>\n<li>其中 <code>192.168.0.197</code> 为老苏群晖主机的局域网 <code>IP</code>；</li>\n<li>如果你做了域名解析，这里也可以直接填域名；</li>\n</ul>\n</blockquote>\n<p>接下来我们要做的是停止容器，在 <code>环境变量</code> 中增加上面两个值</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112191010590.png\"></p>\n<p>再次启动容器后，进入日志，你会发现地址都已改过来了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112191011335.png\"></p>\n<p><code>Dashboard</code> 中也改过来了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112191021521.png\"></p>\n<h2 id=\"创建-Buckets\"><a href=\"#创建-Buckets\" class=\"headerlink\" title=\"创建 Buckets\"></a>创建 Buckets</h2><p><code>Buckets</code> –&gt; <code>Create Bucket</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112181630623.png\"></p>\n<p>当前的 <code>test</code> 里是空的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112181632998.png\"></p>\n<p>上传一张图片</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112181631081.png\"></p>\n<p>默认是存储策略是 <code>Private</code> ，可以根据需要设置为 <code>Public</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112181640410.png\"></p>\n<h2 id=\"创建用户\"><a href=\"#创建用户\" class=\"headerlink\" title=\"创建用户\"></a>创建用户</h2><p><code>Users</code> –&gt; <code>Create User</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112182057293.png\"></p>\n<p>其中 <code>Access Key</code> 类似于用户名，而 <code>Secret Key</code> 类似于密码，存储策略老苏选了 <code>readwrite</code></p>\n<blockquote>\n<p><code>Secret Key</code> 不能少于 <code>8</code> 位</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112182103362.png\"></p>\n<blockquote>\n<p>这个用户也可以用来登录 <code>Console</code>，只是权限没那么高</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112221023486.png\"></p>\n<h2 id=\"应用验证\"><a href=\"#应用验证\" class=\"headerlink\" title=\"应用验证\"></a>应用验证</h2><p>老苏本来想用群晖自带的 <code>Cloud Sync</code> 或者 <code>Hyper Backup</code> 来做测试，但是都没成功，从 『 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oa3Vib3RhLndvcmRwcmVzcy5jb20vMjAyMC8xMS8yOS9zeW5vbG9neXMtZHNtLWFuZC1taW5pb3MtczMv\">https://hkubota.wordpress.com/2020/11/29/synologys-dsm-and-minios-s3/<i class=\"fa fa-external-link-alt\"></i></span> 』一文看，有点麻烦，主要是群晖不是按 <code>https://aaa.com/bucket</code> 访问，而是按 <code>https://bucket.aaa.com</code> 访问，所以老苏放弃了，另外找了个带图形界面的客户端 <code>S3 Browser</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112191740726.png\"></p>\n<p>下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zM2Jyb3dzZXIuY29tLw==\">https://s3browser.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><code>S3 Browser</code> 的设置很简单，不过只支持 <code>windows</code> 平台</p>\n<blockquote>\n<ul>\n<li><code>Account type</code> 默认是 <code>Amazon S3 Storage</code> 要改为 <code>S3 Compatible Storage</code></li>\n<li>因为 <code>REST Endpoint</code> 填的是局域网 <code>IP</code>，所以默认 <code>Use secure transfer(SSL/TLS)</code> 前面的勾要取消</li>\n<li>用后面创建的普通用户，尽量不要用<code>环境变量</code>中设置的管理员账号</li>\n</ul>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112191754174.png\"></p>\n<p>完成后点 <code>Add new account</code>，就可以看到前面建的  <code>Buckets</code> 以及已经上传的文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112191751877.png\"></p>\n<h2 id=\"其他客户端\"><a href=\"#其他客户端\" class=\"headerlink\" title=\"其他客户端\"></a>其他客户端</h2><p>一般来说支持远程挂载网盘的软件都支持 <code>S3</code> 存储，但老苏没具体验证，大家可以自己试试</p>\n<ul>\n<li><p><code>Windows</code> 上除了上面介绍的 <code>S3 Browser</code>，最常用的应该是 <code>RaiDrive</code></p>\n</li>\n<li><p><code>Mac</code> 上可以试试 <code>Mountain Duck</code>、<code>CloudMounter</code>、<code>ExpanDrive</code></p>\n</li>\n<li><p>跨平台的可以试试 <code>RcloneBrowser</code>，从文档 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pbi5pby9kb2NzL3JjbG9uZS13aXRoLW1pbmlvLXNlcnZlci5odG1s\">https://docs.min.io/docs/rclone-with-minio-server.html<i class=\"fa fa-external-link-alt\"></i></span> 看需要设置 <code>Region</code>，可以在设置中搞定</p>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112212106037.png\"></p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>本文应网友要求而写，但因为接触的时间比较短，老苏对 <code>MinIO</code> 的了解还非常有限，错漏之处，敬请谅解~！</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>minio/minio: High Performance, Kubernetes Native Object Storage<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21pbmlvL21pbmlv\">https://github.com/minio/minio<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>MinIO | Learn more about MinIO’s Docker Implementation<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pbi5pby9kb2NzL21pbmlvLWRvY2tlci1xdWlja3N0YXJ0LWd1aWRlLmh0bWw=\">https://docs.min.io/docs/minio-docker-quickstart-guide.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>MinIO | High Performance, Kubernetes Native Object Storage<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9taW4uaW8v\">https://min.io/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Installing Minio on Synology DiskStation | by Jonah Aragon | Medium<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9qb25haGFyYWdvbi5tZS9pbnN0YWxsaW5nLW1pbmlvLW9uLXN5bm9sb2d5LWRpc2tzdGF0aW9uLTQ4MjNjYWY2MDBjMw==\">https://jonaharagon.me/installing-minio-on-synology-diskstation-4823caf600c3<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>MinIO 9000 端口强制跳转 9001 端口且报 This ‘admin’ API is not supported by server in ‘mode-server-fs’、An error occurred, please try again 和 The server side encryption configuration was not found 错误 - 森见鹿的博客<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZW5qaWFubHUuY29tLzIwMjEvMDcvY2VudG9zNy1taW5pby1lcnJvci8=\">https://senjianlu.com/2021/07/centos7-minio-error/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Synology’s DSM and Minio’s S3 – Harald’s Random Stuff<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oa3Vib3RhLndvcmRwcmVzcy5jb20vMjAyMC8xMS8yOS9zeW5vbG9neXMtZHNtLWFuZC1taW5pb3MtczMv\">https://hkubota.wordpress.com/2020/11/29/synologys-dsm-and-minios-s3/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","存储"]},{"title":"适用于中小企业呼叫场景的ARCall","url":"/2021/12/20/%E9%80%82%E7%94%A8%E4%BA%8E%E4%B8%AD%E5%B0%8F%E4%BC%81%E4%B8%9A%E5%91%BC%E5%8F%AB%E5%9C%BA%E6%99%AF%E7%9A%84ARCall/","content":"<p><strong>什么是 anyRTC ？</strong></p>\n<blockquote>\n<p><code>anyRTC</code> 是一家全球实时音视频云服务供应商，致力于提供高可用、高质量的实时互动服务，为客户提供安全、可靠的产品及优质的服务体验。</p>\n</blockquote>\n<p><strong>什么是 ARCall ？</strong></p>\n<blockquote>\n<p><code>ARCall</code> 是 <code>anyRTC</code> 仿微信呼叫的示例项目，可实现一对一及多人音视频通话。</p>\n</blockquote>\n<p><strong>什么是 AppID ？</strong></p>\n<blockquote>\n<p><code>AppID</code> 为应用的唯一标识，即 <code>application identification</code>（应用识别；应用辨识），是用来标记你的开发者账号的。</p>\n</blockquote>\n<p><strong>什么是 RTC ？</strong></p>\n<blockquote>\n<p> <code>RTC</code>  即 <code>Real-Time Communication</code>，能实现语音通话、视频通话、音频互动直播以及视频互动直播等实时通信场景，主要用于传输音视频。</p>\n</blockquote>\n<p><strong>什么是 RTM ？</strong></p>\n<blockquote>\n<p><code>RTM</code> 即 <code>Real-time Messaging</code>，可用于实现消息发送、呼叫邀请等信令系统功能，主要用于传输文本。</p>\n</blockquote>\n<h1 id=\"前期准备\"><a href=\"#前期准备\" class=\"headerlink\" title=\"前期准备\"></a>前期准备</h1><h2 id=\"注册账号\"><a href=\"#注册账号\" class=\"headerlink\" title=\"注册账号\"></a>注册账号</h2><ol>\n<li> 在 <code>anyRTC控制台</code> <a href=\"https://console.anyrtc.io/signup\"></a>注册一个账号。</li>\n</ol>\n<blockquote>\n<p><strong>划重点</strong>：每个月有 <code>10000</code> 分钟的免费时长</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112101013701.png\"></p>\n<ol start=\"2\">\n<li> 创建一个项目</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112101025315.png\"></p>\n<p>接下来的 <code>试用通话</code> 可以点 <code>x</code> 跳过</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112101027125.png\"></p>\n<ol start=\"3\">\n<li> <code>项目管理</code> 页面，获取该项目的 <code>APP ID</code></li>\n</ol>\n<blockquote>\n<p><code>APP ID</code> 一定要保管好，不能泄露，不然可能免费时长也不够用哦</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112101028731.png\"></p>\n<h2 id=\"域名和证书\"><a href=\"#域名和证书\" class=\"headerlink\" title=\"域名和证书\"></a>域名和证书</h2><p>基于浏览器的音视频应用，需要采用 <code>https</code> 协议才能使用本机的音视频设备，因此代码做了处理，用 <code>http</code> 协议是不能登录的</p>\n<blockquote>\n<p>这一点老苏以前强调过很多次了，可以翻翻之前跟音视频相关的文章</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112101158056.png\"></p>\n<p>老苏没有公网 <code>IP</code>，用 <code>frp</code> 做的内网穿透，但做了泛域名解析，不了解的可以翻翻老苏以前的文章</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112101147891.png\"></p>\n<h1 id=\"构建镜像\"><a href=\"#构建镜像\" class=\"headerlink\" title=\"构建镜像\"></a>构建镜像</h1><blockquote>\n<p>如果你不想自己构建，可以跳过，直接阅读下一章节</p>\n</blockquote>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> nginx:<span class=\"number\">1.12</span>-alpine</span><br><span class=\"line\"><span class=\"keyword\">LABEL</span><span class=\"bash\"> maintainer=laosu&lt;wbsu2003@gmail.com&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 环境变量</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> RTC_APPID rtcappid</span><br><span class=\"line\"><span class=\"keyword\">ENV</span> RTM_APPID rtmappid</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /app</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 拷贝静态文件</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> . /usr/share/nginx/html</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> replace_appid.sh ./replace_appid.sh</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> chmod +x replace_appid.sh</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">80</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"bash\"> [<span class=\"string\">&quot;sh&quot;</span>, <span class=\"string\">&quot;replace_appid.sh&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n\n<p><code>replace_appid.sh</code> 用于替换环境变量值</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/usr/bin/env sh</span></span><br><span class=\"line\"></span><br><span class=\"line\">find <span class=\"string\">&#x27;/usr/share/nginx/html&#x27;</span> -name <span class=\"string\">&#x27;*.js&#x27;</span> -<span class=\"built_in\">exec</span> sed -i -e <span class=\"string\">&#x27;s,rtcappid,&#x27;</span><span class=\"string\">&quot;<span class=\"variable\">$RTC_APPID</span>&quot;</span><span class=\"string\">&#x27;,g&#x27;</span> &#123;&#125; \\;</span><br><span class=\"line\"></span><br><span class=\"line\">find <span class=\"string\">&#x27;/usr/share/nginx/html&#x27;</span> -name <span class=\"string\">&#x27;*.js&#x27;</span> -<span class=\"built_in\">exec</span> sed -i -e <span class=\"string\">&#x27;s,rtmappid,&#x27;</span><span class=\"string\">&quot;<span class=\"variable\">$RTM_APPID</span>&quot;</span><span class=\"string\">&#x27;,g&#x27;</span> &#123;&#125; \\;</span><br><span class=\"line\"></span><br><span class=\"line\">nginx -g <span class=\"string\">&quot;daemon off;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>修改 <code>ARCall/Call-web/assets/js/index.js</code> 文件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//配置</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> Config = &#123;</span><br><span class=\"line\">  RTC_APPID: <span class=\"string\">&quot;&quot;</span>,<span class=\"comment\">//RTC 应用ID</span></span><br><span class=\"line\">  RTM_APPID: <span class=\"string\">&quot;&quot;</span>,<span class=\"comment\">//RTM 应用ID</span></span><br><span class=\"line\">  RTC_MODE: <span class=\"string\">&quot;live&quot;</span>,<span class=\"comment\">//RTC 通信模式</span></span><br><span class=\"line\">  RTC_CODEC: <span class=\"string\">&quot;h264&quot;</span>,<span class=\"comment\">//RTC 视频编码格式</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>改为</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//配置</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> Config = &#123;</span><br><span class=\"line\">  RTC_APPID: <span class=\"string\">&quot;rtcappid&quot;</span>,<span class=\"comment\">//RTC 应用ID</span></span><br><span class=\"line\">  RTM_APPID: <span class=\"string\">&quot;rtmappid&quot;</span>,<span class=\"comment\">//RTM 应用ID</span></span><br><span class=\"line\">  RTC_MODE: <span class=\"string\">&quot;live&quot;</span>,<span class=\"comment\">//RTC 通信模式</span></span><br><span class=\"line\">  RTC_CODEC: <span class=\"string\">&quot;h264&quot;</span>,<span class=\"comment\">//RTC 视频编码格式</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>构建镜像和容器运行的基本命令如下👇</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 拉取源代码</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/anyRTC-UseCase/ARCall.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果 github 慢或者访问不了</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://hub.fastgit.org/anyRTC-UseCase/ARCall.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入代码目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ARCall/Call-web</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 Dockerfile、 replace_appid.sh 文件放进 ARCall/Call-web 目录中</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改 ARCall/Call-web/assets/js/index.js 文件</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 构建镜像</span></span><br><span class=\"line\">docker build -t wbsu2003/arcall:v1 .</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成容器</span></span><br><span class=\"line\">docker run -d \\</span><br><span class=\"line\">--name=arcall \\</span><br><span class=\"line\">-p 3580:80 \\</span><br><span class=\"line\">-e RTC_APPID=你的AppID \\</span><br><span class=\"line\">-e RTM_APPID=你的AppID \\</span><br><span class=\"line\">wbsu2003/arcall:v1</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112101112750.png\"></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>arcall</code> ，选择第一个 <code>wbsu2003/arcall</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112171858959.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不冲突就行，不确定的话可以用命令查一下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看端口占用</span></span><br><span class=\"line\">netstat -tunlp | grep 端口号</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>3580</code></td>\n<td align=\"center\"><code>80</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112171901635.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>RTC_APPID</code></td>\n<td align=\"center\">你的 <code>AppID</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>RTM_APPID</code></td>\n<td align=\"center\">你的 <code>AppID</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112171905985.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:3580</code> 就能看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112101158056.png\"></p>\n<p>改用我们前面设置的域名 <code>https://arcall.laosu.ml</code> 访问，会弹出申请摄像头，要点 <code>允许</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112101855405.png\"></p>\n<p>接下来是申请 <code>麦克风</code>，同样要 <code>允许</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112101856135.png\"></p>\n<p>之后就会获取到 <code>用户ID</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112101857603.png\"></p>\n<h2 id=\"点对点呼叫邀请\"><a href=\"#点对点呼叫邀请\" class=\"headerlink\" title=\"点对点呼叫邀请\"></a>点对点呼叫邀请</h2><p>在另一台设备上打开 <code>https://arcall.laosu.ml</code>，授权音视频设备后也会获得 <code>用户ID</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112101858761.png\"></p>\n<p>在任何一方点击 <code>点对点呼叫邀请</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112101901960.png\"></p>\n<p>输入对方的 <code>用户ID</code> 后，点 <code>视频呼叫</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112101902837.png\"></p>\n<p>等待对方同意</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112101903471.png\"></p>\n<p>接收端会看到呼叫方的 <code>用户ID</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112101904185.png\"></p>\n<p>接通后会显示双方的图像</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112101952780.png\"></p>\n<h2 id=\"多人呼叫邀请\"><a href=\"#多人呼叫邀请\" class=\"headerlink\" title=\"多人呼叫邀请\"></a>多人呼叫邀请</h2><p>点 <code>多人呼叫邀请</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112101955827.png\"></p>\n<p>与 <code>点对点呼叫邀请</code> 不同，可以一次输入多个 <code>用户ID</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112101957782.png\"></p>\n<p>点 <code>发起邀请</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112101958312.png\"></p>\n<p>同样也需要接收端同意</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112102002034.png\"></p>\n<p>双击图像可以变大窗口</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112102000591.png\"></p>\n<p>会议中可以继续邀请，只要带宽足够，最大可以支持到 <code>50</code> 方</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112101959417.png\"></p>\n<h1 id=\"其他端\"><a href=\"#其他端\" class=\"headerlink\" title=\"其他端\"></a>其他端</h1><p><code>ARCall</code> 开源项目不仅仅只是 <code>Web</code> 端，还有 <code>iOS</code>、<code>Android</code> 和 <code>uniapp</code> 端，有需要的可以直接下载编译，但是要实现各端的互联互通，必须使用同一个 <code>APP ID</code></p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>老苏之所以觉得 <code>ARCall</code> 适合中小企业，是因为大企业一般都会自建基于硬件的视频会议系统，需要有专门的硬件设备和会议室，而中小企业不一定有这笔预算</p>\n<p>虽然 <code>ARCall</code> 只是个示例，但是已经完成了音视频通讯的基本功能，如果你会写点代码，可以加上白板、文档共享等功能，使之成为真正适合你和你所在企业的专属音视频会议系统</p>\n<p>当然 <code>ARCall</code> 能做的绝不仅仅局限于视频会议，如果开发中遇到问题，可以直接联系 <code>anyRTC</code>，联系方式就在👇下面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112102030325.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>anyRTC-UseCase/ARCall: 一对一呼叫、邀请呼叫、音视频通话、多人通话，适合陌生人交友、在线教学、在线医疗、智能终端等场景；更能轻松实现腾讯会议，Zoom会议，钉钉课堂等多人音视频交互类场景。一对一音视频，一对多音视频。<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FueVJUQy1Vc2VDYXNlL0FSQ2FsbA==\">https://github.com/anyRTC-UseCase/ARCall<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>文档中心 - anyRTC<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmFueXJ0Yy5pby8=\">https://docs.anyrtc.io/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","WebRTC","视频会议"]},{"title":"开源设计和原型制作平台Penpot","url":"/2021/12/17/%E5%BC%80%E6%BA%90%E8%AE%BE%E8%AE%A1%E5%92%8C%E5%8E%9F%E5%9E%8B%E5%88%B6%E4%BD%9C%E5%B9%B3%E5%8F%B0Penpot/","content":"<p><strong>什么是 Penpot ？</strong></p>\n<blockquote>\n<p><code>Penpot</code> 是第一个面向跨域团队的开源设计和原型制作平台。 <code>Penpot</code> 是基于 <code>Web</code> 的，不依赖于操作系统，使用开放式 <code>Web</code> 标准（<code>SVG</code>）。为所有人提供服务并由开源社区授权。</p>\n</blockquote>\n<p>官网地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5wb3QuYXBwLw==\">https://penpot.app/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>penpot</code>，<code>SSH</code> 客户端登录到群晖，在 <code>penpot</code> 目录中执行下面的命令下载文件</p>\n<blockquote>\n<p>老苏常用的<code>SSH</code> 客户端主要是 <code>Finalshell</code> 和 <code>PuTTY</code></p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载 docker-compose.yaml</span></span><br><span class=\"line\">wget https://raw.githubusercontent.com/penpot/penpot/main/docker/images/docker-compose.yaml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 下载 config.env</span></span><br><span class=\"line\">wget https://raw.githubusercontent.com/penpot/penpot/main/docker/images/config.env</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210522143354.png\"></p>\n<h2 id=\"docker-compose-yaml\"><a href=\"#docker-compose-yaml\" class=\"headerlink\" title=\"docker-compose.yaml\"></a>docker-compose.yaml</h2><p><code>docker-compose.yaml</code> 主要就是看看要不要改端口，虽然涉及到 <code>5</code> 个容器，但是只有前端对外暴露了端口 <code>9001</code>，如果这个端口没有冲突的话，这个文件就不用改了</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">  <span class=\"attr\">penpot-frontend:</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">&quot;penpotapp/frontend:latest&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"number\">9001</span><span class=\"string\">:80</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"config-env\"><a href=\"#config-env\" class=\"headerlink\" title=\"config.env\"></a>config.env</h2><p><code>config.env</code> 是设置文件，跑起来的话只要修改 <code>PENPOT_PUBLIC_URI</code></p>\n<blockquote>\n<p>当然可以配置的内容很多，包括 <code>SMTP</code>、用户、演示帐户，以及第三方认证等</p>\n</blockquote>\n<p>原始的是下面👇这样的</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Should be set to the public domain when penpot is going to be</span></span><br><span class=\"line\"><span class=\"comment\"># served.</span></span><br><span class=\"line\"><span class=\"attr\">PENPOT_PUBLIC_URI</span>=http://localhost:<span class=\"number\">9001</span></span><br></pre></td></tr></table></figure>\n\n<p>老苏根据群晖的 <code>IP</code> 改成了👇这样</p>\n<blockquote>\n<p>如果前面改了端口，这里也要跟着改</p>\n</blockquote>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Should be set to the public domain when penpot is going to be</span></span><br><span class=\"line\"><span class=\"comment\"># served.</span></span><br><span class=\"line\"><span class=\"attr\">PENPOT_PUBLIC_URI</span>=http://<span class=\"number\">192.168</span>.<span class=\"number\">0.197</span>:<span class=\"number\">9001</span></span><br></pre></td></tr></table></figure>\n\n<p>在 <code>penpot</code> 目录中执行一键启动</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入 penpot 目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /volume2/docker/penpot</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 一键启动</span></span><br><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210522134217.png\"></p>\n<p>不出意外的话，你会看到 <code>5</code> 个 <code>done</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112111641680.png\"></p>\n<p>容器都处于正常运行中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112111644041.png\"></p>\n<p>其他可能用到的命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 一键停止</span></span><br><span class=\"line\">docker-compose stop</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 一键重启</span></span><br><span class=\"line\">docker-compose restart</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 一键删除</span></span><br><span class=\"line\">docker-compose down</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"反向代理\"><a href=\"#反向代理\" class=\"headerlink\" title=\"反向代理\"></a>反向代理</h2><p>老苏没有公网 <code>IP</code>，用 <code>frp</code> 做的内网穿透，但做了泛域名解析，不了解的可以翻翻老苏以前的文章</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112111828624.png\"></p>\n<p>进入 <code>自定义标题</code>，新增 <code>WebSocket</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112112152633.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><h2 id=\"创建用户\"><a href=\"#创建用户\" class=\"headerlink\" title=\"创建用户\"></a>创建用户</h2><p>老苏尝试过用 <code>88</code> 邮箱配置 <code>SMTP</code>，虽然老苏之前在很多项目都成功配置过 <code>SMTP</code>，但是这一次失败了，所以没办法通过网页注册用户。</p>\n<blockquote>\n<p>大家有兴趣可以试试在 <code>config.env</code> 配置其他的邮箱</p>\n</blockquote>\n<p>如果在未配置 <code>SMTP</code> 的情况下启动应用程序，需要创建一个用户才能登录到该应用程序。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建用户</span></span><br><span class=\"line\">docker <span class=\"built_in\">exec</span> -ti penpot_penpot-backend_1 ./manage.sh create-profile</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112111703445.png\"></p>\n<h2 id=\"开始运行\"><a href=\"#开始运行\" class=\"headerlink\" title=\"开始运行\"></a>开始运行</h2><p>在浏览器中输入 <code>http://群晖IP:9001</code>，就能看到主界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210522134255.png\"></p>\n<p>输入创建好的用户邮件和密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210522145145.png\"></p>\n<p>但是怎么也登不进去，浏览器一直返回 <code>401</code> 错误</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Failed to load resource: the server responded with a status of 401 (Unauthorized)</span><br></pre></td></tr></table></figure>\n\n<p>需要改为域名登录，也就是 <code>https://pp.laosu.ml</code> 才行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112112140174.png\"></p>\n<p>老苏自己用，所以选择了 <code>Fly solo</code>，如果是团队使用，那就选 <code>Team up</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112112146473.png\"></p>\n<p>界面是中文的，不需要特别设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112112150038.png\"></p>\n<h2 id=\"导入模板\"><a href=\"#导入模板\" class=\"headerlink\" title=\"导入模板\"></a>导入模板</h2><p>可以在这里找到库和模板：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5wb3QuYXBwL2xpYnJhcmllcy10ZW1wbGF0ZXMuaHRtbA==\">https://penpot.app/libraries-templates.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112112213020.png\"></p>\n<p>老苏导入了 <code>Ant-Design-UI-Kit-Lite</code> 和 <code>Interactive-music-app</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112112216224.png\"></p>\n<p>进入编辑状态</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112120958273.png\"></p>\n<p>原型演示，还支持交互</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112120956062.png\"></p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p><code>Penpot</code> 拥有多款 <code>UI</code> 组件与样式、交互式原型以及项目设计示例与模板，帮你更快完成项目设计工作。此外，该平台还支持团队多人实时协作编辑，设计稿添加注释等多种团队协作工具。老苏觉得对于产品设计人员而言，是非常有用。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Penpot - Design Freedom for Teams<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5wb3QuYXBwLw==\">https://penpot.app/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>penpot/penpot: Penpot - The Open-Source design &amp; prototyping platform<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3BlbnBvdC9wZW5wb3Q=\">https://github.com/penpot/penpot<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Getting Started.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZWxwLnBlbnBvdC5hcHAvdGVjaG5pY2FsLWd1aWRlL2dldHRpbmctc3RhcnRlZC8=\">https://help.penpot.app/technical-guide/getting-started/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Penpot: an open-source Prototyping and design platform for teams<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRldmVsLmNvbS9wZW5wb3Qv\">https://medevel.com/penpot/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","原型"]},{"title":"强大的网页数据库管理工具Adminer","url":"/2021/12/15/%E5%BC%BA%E5%A4%A7%E7%9A%84%E7%BD%91%E9%A1%B5%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7Adminer/","content":"<p>老苏折腾过的项目，数据库主要是 <code>MySQL</code>，其次是 <code>MongoDB</code> 、<code>PostgreSQL</code> 和 <code>SQLite</code>，最近还用到了 <code>Elasticsearch</code> ，但是数据库管理软件 <code>phpMyAdmin</code> 只能管理 <code>MySQL</code> ，老苏一直在找一个全能的数据库管理器，似乎 <code>Adminer</code> 可以满足要求。</p>\n<p><strong>什么是 Adminer ?</strong></p>\n<blockquote>\n<p><code>Adminer</code>（原 <code>phpMinAdmin</code>）是一个用 <code>PHP</code> 编写的全功能数据库管理工具。与 <code>phpMyAdmin</code> 相反，它由一个准备部署到目标服务器的文件组成。<code>Adminer</code> 可用于 <code>MySQL</code>、<code>PostgreSQL</code>、<code>SQLite</code>、<code>MS SQL</code>、<code>Oracle</code>、<code>Firebird</code>、<code>SimpleDB</code>、<code>Elasticsearch</code> 和 <code>MongoDB</code>。</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>adminer</code> ，选择第一个 <code>adminer</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111141406194.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>本地端口不冲突就行，不确定的话可以查一下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看端口占用</span></span><br><span class=\"line\">netstat -tunlp | grep 端口号</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>8989</code></td>\n<td align=\"center\"><code>8080</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111141454850.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:8989</code> 就能看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111141456126.png\"></p>\n<h2 id=\"MySQL\"><a href=\"#MySQL\" class=\"headerlink\" title=\"MySQL\"></a>MySQL</h2><p>先试的是群晖自带的 <code>MariaDB 5</code>，数据库用的是 <code>librenms</code> </p>\n<blockquote>\n<p>因为我们都是按账号创建的，所以用户名和数据库名是相同的</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111141506378.png\"></p>\n<p>登录成功之后进入管理界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111141507558.png\"></p>\n<p>接着试了下 <code>MariaDB 10</code>，数据库用的是 <code>nocodb</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111141516435.png\"></p>\n<p>登录很顺利</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111141516914.png\"></p>\n<h2 id=\"PostgreSQL\"><a href=\"#PostgreSQL\" class=\"headerlink\" title=\"PostgreSQL\"></a>PostgreSQL</h2><p>老苏安装 <code>adminer</code> 的主要原因就是为了管理 <code>PostgreSQL</code>，之前有两个项目安装了 <code>docker</code> 版的 <code>PostgreSQL</code></p>\n<blockquote>\n<p><a href=\"https://laosu.ml/2021/11/15/%E6%97%A5%E7%A8%8B%E5%AE%89%E6%8E%92%E5%B7%A5%E5%85%B7Calendso/\">日程安排工具Calendso</a><br><a href=\"https://laosu.ml/2021/12/10/%E5%A4%9A%E5%90%88%E4%B8%80%E7%9A%84%E5%AE%B6%E5%BA%AD%E5%8A%A9%E7%90%86Homechart/\">多合一的家庭助理Homechart</a></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111141532581.png\"></p>\n<p>进入管理界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111141535020.png\"></p>\n<p>默认是 <code>显示结构</code>，改为 <code>选择数据</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111141538438.png\"></p>\n<h2 id=\"MongoDB\"><a href=\"#MongoDB\" class=\"headerlink\" title=\"MongoDB\"></a>MongoDB</h2><p>接下来尝试了 <code>MongoDB</code>，之前好几个项目都用到了，最近的是下面👇这个：</p>\n<blockquote>\n<p><a href=\"https://laosu.ml/2021/11/08/%E4%BA%A4%E4%BA%92%E5%BC%8F%E5%9C%A8%E7%BA%BF%E8%BE%85%E5%AF%BC%E5%B7%A5%E5%85%B7Nettu%20Meet/\">交互式在线辅导工具Nettu Meet</a></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111142018677.png\"></p>\n<p>但是这次没有成功，显示 <code>没有扩展</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111141637720.png\"></p>\n<p>老苏研究了半天，才发现这样一段描述</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111141832288.png\"></p>\n<p>原来开箱即用的只有下面👇这些，其他的都得自己安装 <code>PHP</code> 扩展</p>\n<ul>\n<li>  <code>MySQL</code></li>\n<li>  <code>PostgreSQL</code></li>\n<li>  <code>SQLite</code></li>\n<li>  <code>SimpleDB</code></li>\n<li>  <code>Elasticsearch</code></li>\n</ul>\n<h3 id=\"安装扩展\"><a href=\"#安装扩展\" class=\"headerlink\" title=\"安装扩展\"></a>安装扩展</h3><p>通过 <code>SSH</code> 客户端以 <code>root</code> 身份进入容器</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 以 root 身份进入容器</span></span><br><span class=\"line\">docker <span class=\"built_in\">exec</span> -it --user root adminer1 /bin/sh</span><br></pre></td></tr></table></figure>\n\n<p>依次执行下面的命令</p>\n<blockquote>\n<p>安装比较花时间，需要耐心</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装编译环境</span></span><br><span class=\"line\">apk add autoconf gcc g++ make libffi-dev openssl-dev</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装 mongo 驱动 </span></span><br><span class=\"line\">pecl install mongodb</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加 mongo 配置</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;extension=mongodb.so&quot;</span> &gt; /usr/<span class=\"built_in\">local</span>/etc/php/conf.d/docker-php-ext-mongodb.ini</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111141852705.png\"></p>\n<p>如果中间出现错误</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111141924699.png\"></p>\n<p>就再执行一次</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111142007818.png\"></p>\n<p>编译成功之后还需要修改配置，再重启一次容器就可以了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111142014865.png\"></p>\n<p>这次很顺利的进入到了管理界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111142020896.png\"></p>\n<h2 id=\"Elasticsearch\"><a href=\"#Elasticsearch\" class=\"headerlink\" title=\"Elasticsearch\"></a>Elasticsearch</h2><p> <code>Nettu Meet</code> 还用到了 <code>Elasticsearch</code> ，正好又是开箱即用的，所以也一并看看，但是 <code>Adminer默认不支持访问没有密码的数据库</code></p>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111142058098.png\"></p>\n<h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><p> 停止容器，添加环境变量</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>ADMINER_PLUGINS</code></td>\n<td align=\"center\">插件名称</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>在这里 <code>值</code> 我们输入 <code>login-password-less</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111151945725.png\"></p>\n<p>如果直接启动，日志中会有报错</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111152116157.png\"></p>\n<p>这是因为 <code>login-password-less</code> 插件需要参数才能正常工作，所以不适用上面的方法，将 <code>ADMINER_PLUGINS</code> 值设为空，然后启动</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111152128442.png\"></p>\n<p>通过 <code>SSH</code> 客户端以 <code>root</code> 身份进入容器</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 以 root 身份进入容器</span></span><br><span class=\"line\">docker <span class=\"built_in\">exec</span> -it --user root adminer1 /bin/sh</span><br></pre></td></tr></table></figure>\n\n<p>依次执行下面的命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> plugins-enabled/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建文件</span></span><br><span class=\"line\">vi login-password-less.php</span><br></pre></td></tr></table></figure>\n\n<p><code>login-password-less.php</code> 文件内容如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">require_once</span>(<span class=\"string\">&#x27;plugins/login-password-less.php&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** Set allowed password</span></span><br><span class=\"line\"><span class=\"comment\">\t* <span class=\"doctag\">@param</span> string result of password_hash</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"keyword\">new</span> AdminerLoginPasswordLess(</span><br><span class=\"line\">\t<span class=\"variable\">$password_hash</span> = password_hash(<span class=\"string\">&#x27;nopassword&#x27;</span>, PASSWORD_DEFAULT)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<p>在密码中输入 <code>nopassword</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111152236479.png\"></p>\n<p><code>登录</code> 成功之后的管理界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111152238506.png\"></p>\n<h1 id=\"主题\"><a href=\"#主题\" class=\"headerlink\" title=\"主题\"></a>主题</h1><p>前面的截图看起来比较丑陋，但实际上 <code>Adminer</code> 是支持主题的</p>\n<p>通过 <code>SSH</code> 客户端以 <code>root</code> 身份进入容器</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 以 root 身份进入容器</span></span><br><span class=\"line\">docker <span class=\"built_in\">exec</span> -it --user root adminer1 /bin/sh</span><br></pre></td></tr></table></figure>\n\n<p>依次执行下面的命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载 css 文件</span></span><br><span class=\"line\">curl -O https://raw.githubusercontent.com/Niyko/Hydra-Dark-Theme-for-Adminer/master/adminer.css</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 镜像站点</span></span><br><span class=\"line\">curl -O https://raw.fastgit.org/Niyko/Hydra-Dark-Theme-for-Adminer/master/adminer.css</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111152309450.png\"></p>\n<p>刷新一下页面，有没有觉得档次立马提升了几个层次？</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111152311690.png\"></p>\n<p>进管理界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111152312536.png\"></p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p><code>Adminer</code> 是 <code>phpMyAdmin</code> 的最佳替代品之一。它不仅体积更小，而且使用起来也更加快捷。</p>\n<p>功能虽然老苏没涉及，但是跨过了登录的难关，又是中文界面，用起来还是很容易的，有问题可以提出来一起研究。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>vrana/adminer: Database management in a single PHP file<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3ZyYW5hL2FkbWluZXI=\">https://github.com/vrana/adminer<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Adminer - Database management in a single PHP file<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWRtaW5lci5vcmcv\">https://www.adminer.org/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>finwo/docker-adminer: Dockerized adminer db manager - docker-adminer - Codeberg.org<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlYmVyZy5vcmcvZmlud28vZG9ja2VyLWFkbWluZXI=\">https://codeberg.org/finwo/docker-adminer<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>How to Use Adminer to Manage Databases Easily with a Single PHP File<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9raW5zdGEuY29tL2Jsb2cvYWRtaW5lci8=\">https://kinsta.com/blog/adminer/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","数据库"]},{"title":"RuoYi-flowable工作流管理","url":"/2021/12/13/RuoYi-flowable%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%AE%A1%E7%90%86/","content":"<p>上周有网友留言需要工作流相关的系统，今天介绍的这个就支持自定义的表单，可能未必是他想要的，但也许有其他人需要呢？反正都已经折腾完了😊</p>\n<p>老苏已经尽量简化了安装，你只要下载一个 <code>zip</code> 文件，上传到群晖并解压，再执行一条命令就可以完成全部的安装，中途不需要修改任何东西，应该够简单了吧😊</p>\n<p><strong>什么是 RuoYi-flowable ？</strong></p>\n<blockquote>\n<p><code>RuoYi-flowable</code> 是基 <code>RuoYi-vue 4.x</code> + <code>flowable 6.5</code> 开发的工作流管理软件。</p>\n</blockquote>\n<ul>\n<li>前端采用 <code>Vue</code>、<code>Element UI</code>。  </li>\n<li>后端采用 <code>Spring Boot</code>、<code>Spring Security</code>、<code>Redis</code> &amp; <code>Jwt</code>。  </li>\n<li>权限认证使用 <code>Jwt</code>，支持多终端认证系统。  </li>\n<li>支持加载动态权限菜单，多方式轻松权限控制。  </li>\n<li>高效率开发，使用代码生成器可以一键生成前后端代码。</li>\n</ul>\n<p>官方提供了演示地址：<span class=\"exturl\" data-url=\"aHR0cDovLzEzOS4xNTUuMTYuMjQzLw==\">http://139.155.16.243/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><strong>什么是  RuoYi-Vue ？</strong></p>\n<blockquote>\n<p><code>RuoYi-Vue</code> 是基于 <code>SpringBoot</code>、<code>Spring Security</code>、<code>Jwt</code>、<code>Vue</code> 的前后端分离的后台管理系统。</p>\n</blockquote>\n<p>感觉国内有不少系统是基于这套框架二次开发的</p>\n<p><strong>什么是 Flowable ?</strong></p>\n<blockquote>\n<p> <code>Flowable</code> 是面向开发人员、系统管理员和业务用户的紧凑高效的工作流和业务流程管理 ( <code>BPM</code> ) 平台。是用 <code>Java</code> 编写的闪电般快速、久经考验的 <code>BPMN 2</code> 流程引擎。</p>\n</blockquote>\n<h1 id=\"构建镜像\"><a href=\"#构建镜像\" class=\"headerlink\" title=\"构建镜像\"></a>构建镜像</h1><blockquote>\n<p>如果你不想自己构建，可以跳过，直接阅读下一章节</p>\n</blockquote>\n<p>这个镜像在构建时遇到几个坑，简单做个记录：</p>\n<blockquote>\n<ul>\n<li><p>前端用到了 <code>node-sass</code>  、<code> node-gyp</code> 之类的，<code>node</code> 版本高于 <code>12</code> 会编不过</p>\n</li>\n<li><p>后端用到了已经删除的 <code>com.sun.prism.paint</code>，会导致 <code>ruoyi-flowable</code> 编译失败，需修改 <code>/root/RuoYi-flowable/ruoyi-flowable/src/main/java/com/ruoyi/flowable/config/MyDefaultProcessDiagramCanvas.java</code> ，将 <code>import com.sun.prism.paint.Color;</code>  注释掉</p>\n</li>\n</ul>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112081645155.png\"></p>\n<p>不然编译的时候 <code>ruoyi-flowable</code> 模块会 <code>build</code> 失败</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ ruoyi-flowable ---</span><br><span class=\"line\">[INFO] Changes detected - recompiling the module!</span><br><span class=\"line\">[INFO] Compiling 38 source files to &#x2F;ruoyi-flowable&#x2F;target&#x2F;classes</span><br><span class=\"line\">[INFO] -------------------------------------------------------------</span><br><span class=\"line\">[ERROR] COMPILATION ERROR : </span><br><span class=\"line\">[INFO] -------------------------------------------------------------</span><br><span class=\"line\">[ERROR] &#x2F;ruoyi-flowable&#x2F;src&#x2F;main&#x2F;java&#x2F;com&#x2F;ruoyi&#x2F;flowable&#x2F;config&#x2F;MyDefaultProcessDiagramCanvas.java:[3,27] package com.sun.prism.paint does not exist</span><br><span class=\"line\">[INFO] 1 error</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112081931283.png\"></p>\n<p>编译成功是全部都显示 <code>SUCCESS</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112081936293.png\"></p>\n<p>至于注释后会有什么影响，老苏毕竟不是程序员，也没有太多的精力去测试、验证，所以没法确定，毕竟只是体验用的，你非要放生产环境我也没办法🤷‍♀️🤷‍♀️🤷‍♀️</p>\n<blockquote>\n<p>如果正好您是 <code>Java</code> 程序员，请指正一下😁</p>\n</blockquote>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 前端构建</span></span><br><span class=\"line\"><span class=\"comment\">#FROM node:16.5 as build-front</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> node:<span class=\"number\">12</span> as build-front</span><br><span class=\"line\"><span class=\"keyword\">LABEL</span><span class=\"bash\"> maintainer=laosu&lt;wbsu2003@gmail.com&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /app</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> /ruoyi-ui/package.json ./</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> npm install --registry=https://registry.npm.taobao.org</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> /ruoyi-ui/. ./</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> npm run build:prod</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 后端构建</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> maven:<span class=\"number\">3.6</span>.<span class=\"number\">0</span>-jdk-<span class=\"number\">11</span>-slim AS build_end</span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> . ./</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> mvn clean package -Dmaven.test.skip=<span class=\"literal\">true</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 整体打包</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> openjdk:<span class=\"number\">11</span>-jre-slim</span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> sed -i s@/deb.debian.org/@/mirrors.aliyun.com/@g /etc/apt/sources.list \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; apt-get clean \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; apt-get update \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; apt-get install -y supervisor nginx</span></span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"comment\">## nginx</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> --from=build_end ./nginx.conf /etc/nginx/nginx.conf</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## supervisor</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> --from=build_end ./supervisord.conf /etc/supervisord.conf</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 前端静态文件\t</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> --from=build-front /app/dist/ /usr/share/nginx/html</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 后端jar包</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> --from=build_end /ruoyi-admin/target/ruoyi-admin.jar /usr/<span class=\"built_in\">local</span>/lib/ruoyi-admin.jar</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">80</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ENTRYPOINT</span><span class=\"bash\"> [<span class=\"string\">&quot;supervisord&quot;</span>,<span class=\"string\">&quot;-c&quot;</span>,<span class=\"string\">&quot;/etc/supervisord.conf&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n\n<p><code>nginx</code> 设置文件 <code>nginx.conf</code> 用的是 <code>RuoYi</code> 官方的，老苏就改了 <code>root</code> 的路径</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">worker_processes</span>  <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">events</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">worker_connections</span>  <span class=\"number\">1024</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">include</span>       mime.types;</span><br><span class=\"line\">    <span class=\"attribute\">default_type</span>  application/octet-stream;</span><br><span class=\"line\">    <span class=\"attribute\">sendfile</span>        <span class=\"literal\">on</span>;</span><br><span class=\"line\">    <span class=\"attribute\">keepalive_timeout</span>  <span class=\"number\">65</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">server</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">listen</span>       <span class=\"number\">80</span>;</span><br><span class=\"line\">        <span class=\"attribute\">server_name</span>  localhost;</span><br><span class=\"line\">\t\t<span class=\"attribute\">charset</span> utf-<span class=\"number\">8</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">            <span class=\"attribute\">root</span>   /usr/share/nginx/html;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">try_files</span> $uri $uri/ /index.html;</span><br><span class=\"line\">            <span class=\"attribute\">index</span>  index.html index.htm;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"attribute\">location</span> /prod-api/ &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">proxy_set_header</span> Host $http_host;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">proxy_set_header</span> X-Real-IP $remote_addr;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">proxy_set_header</span> REMOTE-HOST $remote_addr;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">proxy_set_header</span> X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">proxy_pass</span> http://localhost:8080/;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"attribute\">error_page</span>   <span class=\"number\">500</span> <span class=\"number\">502</span> <span class=\"number\">503</span> <span class=\"number\">504</span>  /50x.html;</span><br><span class=\"line\">        <span class=\"attribute\">location</span> = /50x.html &#123;</span><br><span class=\"line\">            <span class=\"attribute\">root</span>   html;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>supervisord.conf</code> 文件是新增用来控制进程的，前端是运行在 <code>nginx</code> 上的静态页面，后端 <code>ruoyi-admin.jar</code> 基于 <code>jar</code> 包</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[include]</span>  </span><br><span class=\"line\"><span class=\"attr\">files</span> = /etc/supervisor/conf.d/*.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[program:frontend]</span></span><br><span class=\"line\"><span class=\"attr\">priority</span>=<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"attr\">command</span>=nginx -g <span class=\"string\">&quot;daemon off;&quot;</span></span><br><span class=\"line\"><span class=\"attr\">autostart</span>=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">autorestart</span>=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">startretries</span>=<span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"attr\">startsecs</span>=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">user</span>=root</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[program:backend]</span></span><br><span class=\"line\"><span class=\"attr\">priority</span>=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">directory</span>=/usr/local/lib/</span><br><span class=\"line\"><span class=\"attr\">command</span>=java -jar ruoyi-admin.jar</span><br><span class=\"line\"><span class=\"attr\">autostart</span>=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">autorestart</span>=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">startretries</span>=<span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"attr\">startsecs</span>=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">user</span>=root</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"section\">[supervisord]</span></span><br><span class=\"line\"><span class=\"attr\">nodaemon</span>=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">logfile</span>=/tmp/supervisord.log</span><br><span class=\"line\"><span class=\"attr\">pidfile</span>=/tmp/supervisord.pid</span><br><span class=\"line\"><span class=\"attr\">loglevel</span>=debug</span><br><span class=\"line\"><span class=\"attr\">logfile_maxbytes</span>=<span class=\"number\">10</span>MB</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[supervisorctl]</span></span><br></pre></td></tr></table></figure>\n\n<p><code>docker-compose.yaml</code> 是用来一键启动的，和构建无关</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">&#x27;3.6&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">  <span class=\"attr\">flow-app:</span></span><br><span class=\"line\">    <span class=\"attr\">container_name:</span> <span class=\"string\">flow-app</span></span><br><span class=\"line\">    <span class=\"attr\">environment:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">SPRING_DATASOURCE_DRUID_MASTER_URL=$SPRING_DATASOURCE_URL</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">SPRING_DATASOURCE_DRUID_MASTER_USERNAME=$MYSQL_ROOT_NAME</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">SPRING_DATASOURCE_DRUID_MASTER_PASSWORD=$MYSQL_ROOT_PASSWORD</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">SPRING_REDIS_DATABASE=0</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">SPRING_REDIS_HOST=$REDIS_HOST</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">SPRING_REDIS_PORT=$REDIS_PORT</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">SPRING_REDIS_PASSWORD=$REDIS_PASSWORD</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">RUOYI_PROFILE=/home/ruoyi/uploadPath</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">&quot;wbsu2003/flowable:v1&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"number\">12880</span><span class=\"string\">:80</span></span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">flow-redis:</span></span><br><span class=\"line\">    <span class=\"attr\">container_name:</span> <span class=\"string\">flow-redis</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">redis:6.2.1</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"number\">12888</span><span class=\"string\">:6379</span></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">redis_data:/data</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">flow-mysql:</span></span><br><span class=\"line\">    <span class=\"attr\">container_name:</span> <span class=\"string\">flow-mysql</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">mysql:8</span></span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\">    <span class=\"attr\">environment:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">MYSQL_DATABASE=$MYSQL_DATABASE</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"number\">12806</span><span class=\"string\">:3306</span></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">mysql_data:/var/lib/mysql</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">./sql:/docker-entrypoint-initdb.d:ro</span></span><br><span class=\"line\">    <span class=\"attr\">command:</span> </span><br><span class=\"line\">      <span class=\"string\">--default-authentication-plugin=mysql_native_password</span></span><br><span class=\"line\">      <span class=\"string\">--lower_case_table_names=1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">volumes:</span></span><br><span class=\"line\">  <span class=\"attr\">mysql_data:</span></span><br><span class=\"line\">  <span class=\"attr\">nginx_log:</span></span><br><span class=\"line\">  <span class=\"attr\">redis_data:</span></span><br></pre></td></tr></table></figure>\n\n<p><code>.env</code> 文件只配置了 <code>mysql</code> 和 <code>redis</code></p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">MYSQL_DATABASE</span>=flowable</span><br><span class=\"line\"><span class=\"attr\">MYSQL_ROOT_NAME</span>=root</span><br><span class=\"line\"><span class=\"attr\">MYSQL_ROOT_PASSWORD</span>=flowable</span><br><span class=\"line\"><span class=\"attr\">SPRING_DATASOURCE_URL</span>=jdbc:p6spy:mysql://<span class=\"number\">192.168</span>.<span class=\"number\">0.197</span>:<span class=\"number\">12806</span>/flowable?useUnicode=<span class=\"literal\">true</span>&amp;characterEncoding=utf8&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=<span class=\"literal\">false</span>&amp;serverTimezone=Asia/Shanghai&amp;nullCatalogMeansCurrent=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">REDIS_HOST</span>=flow-redis</span><br><span class=\"line\">REDIS_PASSWORD=</span><br><span class=\"line\"><span class=\"attr\">REDIS_PORT</span>=<span class=\"number\">6379</span></span><br></pre></td></tr></table></figure>\n\n<p>构建镜像和容器运行的基本命令如下👇</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 拉取源代码代码</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://gitee.com/tony2y/RuoYi-flowable.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入代码目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> RuoYi-flowable</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 Dockerfile 、supervisord.conf、nginx.conf 三个文件放进 RuoYi-flowable 目录中</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改 ruoyi-ui/.env.production，启用 VUE_APP_BASE_API = &#x27;/prod-api&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改 /root/RuoYi-flowable/ruoyi-flowable/src/main/java/com/ruoyi/flowable/config/MyDefaultProcessDiagramCanvas.java ，将 import com.sun.prism.paint.Color;  注释掉</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 构建镜像</span></span><br><span class=\"line\">docker build -t wbsu2003/flowable:v1 .</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 docker-compose.yaml 、.env 两个文件放进 RuoYi-flowable 目录中</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 一键启动</span></span><br><span class=\"line\">docker-compose up -d</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 一键停止</span></span><br><span class=\"line\">docker-compose stop</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 一键重启</span></span><br><span class=\"line\">docker-compose restart</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 一键删除</span></span><br><span class=\"line\">docker-compose down</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112101748858.png\"></p>\n<h1 id=\"安装运行\"><a href=\"#安装运行\" class=\"headerlink\" title=\"安装运行\"></a>安装运行</h1><ul>\n<li>  在群晖 <code>docker</code> 目录中新建子目录 <code>flowable</code></li>\n<li>  下载 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dic3UyMDAzL0RvY2tlcmZpbGUvcmF3L21haW4vUnVvWWktZmxvd2FibGUvZmxvd2FibGUuemlw\">https://github.com/wbsu2003/Dockerfile/raw/main/RuoYi-flowable/flowable.zip<i class=\"fa fa-external-link-alt\"></i></span>文件，如果 <code>github</code> 抽风了，可以从镜像站点下载 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9odWIuZmFzdGdpdC5vcmcvd2JzdTIwMDMvRG9ja2VyZmlsZS9yYXcvbWFpbi9SdW9ZaS1mbG93YWJsZS9mbG93YWJsZS56aXA=\">https://hub.fastgit.org/wbsu2003/Dockerfile/raw/main/RuoYi-flowable/flowable.zip<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>将 <code>flowable.zip</code> 上传到 <code>flowable</code> 目录再解压<blockquote>\n<p>尽量不要在电脑上先解压再上传，因为 <code>.env</code> 默认是看不到的，需要打开显示隐藏文件（<code>Mac</code> 上是 <code>Cmd + Shift + .</code>），要避免拷贝文件丢失导致一键启动出错</p>\n</blockquote>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112101400591.png\"></p>\n<p><code>__MACOSX</code> 和 <code>flowable.zip</code> 可以删掉，不删也无所谓的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112101401957.png\"></p>\n<p>老苏尽量将端口改成了一般软件可能不会用到的端口，这样大家就不需要处理 <code>docker-compose.yaml</code> 文件了，而 <code>.env</code> 里全部用了容器名称，所以也不需要进行修改</p>\n<blockquote>\n<p>老苏一般会把 <code>.env</code> 先重命名为 <code>.env.txt</code>，编辑完之后再改回 <code>.env</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112111107052.png\"></p>\n<p>接下来就可以用 <code>SSH</code> 客户端登录到群晖，在 <code>flowable</code> 目录中执行一键启动</p>\n<blockquote>\n<p>老苏常用的<code>SSH</code> 客户端主要是 <code>Finalshell</code> 和 <code>PuTTY</code></p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入 docker 目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /volume2/docker/flowable</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 一键启动</span></span><br><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>第一次执行会有拉取镜像的动作</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112101412137.png\"></p>\n<p>如果你最终看到 <code>3</code> 个容器都是 <code>done</code> ，表示创建成功！</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112101414650.png\"></p>\n<p>在 <code>docker</code> 容器中能看到👇下面 <code>3</code> 个容器正在运行，开始资源占用还是有点高的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112101416956.png\"></p>\n<p><code>flow-app</code> 的日志中开始会看到👇下面的内容，表示服务已经开始启动了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112101418716.png\"></p>\n<p>但只有看到下面👇这个才表示服务启动成功了</p>\n<blockquote>\n<p>只要容器不会停止，中间的报错信息可以不用理会</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112101424018.png\"></p>\n<p>前后差不多用了 <code>3</code> 分多钟，启动成功后资源占用会下降</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112101425542.png\"></p>\n<p>如果你没修改端口，在浏览器中输入 <code>http://群晖IP:12880</code>，会先看到资源加载</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112101428562.png\"></p>\n<p>接下来就能看到登录界面</p>\n<blockquote>\n<p>默认的账号：tony，密码：123456，系统自动已经填好了</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112101432879.png\"></p>\n<blockquote>\n<p>如果看到下面这种错误或者验证码不出来，说明服务还没完成正常启动，而日志中的错误应该是数据库尚未初始化完成</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112111021962.png\"></p>\n<p>登录成功后的主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112101435256.png\"></p>\n<p>至于怎么使用，老苏没有头绪，只知道可以配置表单</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112101444438.png\"></p>\n<p>也可以设计流程</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112101444197.png\"></p>\n<p>建议去看官方的文档，或者直接去加作者的 <code>QQ</code> 群</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112101741359.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>RuoYi-flowable: 基RuoYi-vue + flowable 6.5 的工作流管理 ~<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vdG9ueTJ5L1J1b1lpLWZsb3dhYmxl\">https://gitee.com/tony2y/RuoYi-flowable<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>flowable · 语雀<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueXVxdWUuY29tL3UxMDI0MTUzL2ljaXBvcg==\">https://www.yuque.com/u1024153/icipor<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>环境部署 | RuoYi<br>地址：<span class=\"exturl\" data-url=\"aHR0cDovL2RvYy5ydW95aS52aXAvcnVveWktdnVlL2RvY3VtZW50L2hqYnMuaHRtbA==\">http://doc.ruoyi.vip/ruoyi-vue/document/hjbs.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>关于java: package sun.misc does not exist问题的解决方案_CHINA_CNN的博客-CSDN博客<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NISU5BX0NOTi9hcnRpY2xlL2RldGFpbHMvMTA4ODk0NDcx\">https://blog.csdn.net/CHINA_CNN/article/details/108894471<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Fatal Error: Unable to find package java.lang in classpath or bootclasspath - 代码先锋网<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY29kZWxlYWRpbmcuY29tL2FydGljbGUvNzg1NjUxMDIyOTUv\">https://www.codeleading.com/article/78565102295/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","工作流"]},{"title":"多合一的家庭助理Homechart","url":"/2021/12/10/%E5%A4%9A%E5%90%88%E4%B8%80%E7%9A%84%E5%AE%B6%E5%BA%AD%E5%8A%A9%E7%90%86Homechart/","content":"<p><strong>什么是 Homechart ？</strong></p>\n<blockquote>\n<p><code>Homechart</code> 可帮助您进行预算、完成待办事项列表、计划膳食、管理您的食谱等等，简单的说就是一个多合一的家庭助理软件。<code>Homechart</code> 后端是用 <code>Go</code> 编写的，前端是 <code>Typescript/Mithril</code> 。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111080921297.png\"></p>\n<p><code>Homechart</code> 目前自己部署是免费的，而且还有移动端可以下载使用</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111081633239.png\"></p>\n<p>按作者的计划，未来软件可能会开源。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p><code>Homechart</code> 涉及到两个镜像，比较简单的安装方式是编排 <code>docker-compose.yml</code> 文件，然后用 <code>docker-compose up -d</code> 命令启动。</p>\n<p>其安装步骤和 <code>wekan</code> 非常类似</p>\n<h2 id=\"镜像下载\"><a href=\"#镜像下载\" class=\"headerlink\" title=\"镜像下载\"></a>镜像下载</h2><p>在注册表中搜索 <code>homechart</code> ，选择第一个 <code>candiddev/homechart</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111081501669.png\"></p>\n<p>另外因为 <code>Homechart</code>  依赖 <code>PostgreSQL</code> 而不是 <code>MySQL</code> 做数据库，所以数据库也需要进行安装</p>\n<p>在注册表中搜索 <code>postgres</code> ，选择第一个 <code>postgres</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111081507935.png\"></p>\n<h2 id=\"安装-PostgreSQL\"><a href=\"#安装-PostgreSQL\" class=\"headerlink\" title=\"安装 PostgreSQL\"></a>安装 PostgreSQL</h2><p>容器名称这次没有用默认的，改为了 <code>postgresdb</code>，因为这个名称后面会用到，当然你不改也可以，修改只是为了容易识别</p>\n<h3 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h3><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>homechart</code>，再建一个子目录 <code>postgres</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111081526349.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/homechart/postgres</code></td>\n<td align=\"center\"><code>/var/lib/postgresql/data</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111081525727.png\"></p>\n<h3 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看端口占用</span></span><br><span class=\"line\">netstat -tunlp | grep 端口号</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111081531359.png\"></p>\n<p>默认端口被占用，所以改了个相邻、但是没被占用的</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>5434</code></td>\n<td align=\"center\"><code>5432</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111081532105.png\"></p>\n<h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>POSTGRES_PASSWORD</code></td>\n<td align=\"center\">数据库密码</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>数据库密码后面安装 <code>homechart</code> 还会用到</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111081535111.png\"></p>\n<p>如果运行正常并且不报错的话，就可以进行 <code>homechart</code> 的安装了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111081538926.png\"></p>\n<h2 id=\"安装-Homechart\"><a href=\"#安装-Homechart\" class=\"headerlink\" title=\"安装 Homechart\"></a>安装 Homechart</h2><h3 id=\"端口-1\"><a href=\"#端口-1\" class=\"headerlink\" title=\"端口\"></a>端口</h3><table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>5435</code></td>\n<td align=\"center\"><code>3000</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111081542203.png\"></p>\n<h3 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h3><p>点 <code>+</code> 号新增，容器名称中找到前面创建的 <code>postgresdb</code>，别名简单点，就叫 <code>db</code> ，这会在 <code>环境变量</code> 中用到</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111081545800.png\"></p>\n<h3 id=\"环境变量\"><a href=\"#环境变量\" class=\"headerlink\" title=\"环境变量\"></a>环境变量</h3><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>HOMECHART_POSTGRESQL_HOSTNAME</code></td>\n<td align=\"center\">数据库主机名，这里就是前面设置的别名</td>\n</tr>\n<tr>\n<td align=\"center\"><code>HOMECHART_POSTGRESQL_PASSWORD</code></td>\n<td align=\"center\">数据库密码</td>\n</tr>\n<tr>\n<td align=\"center\"><code>HOMECHART_POSTGRESQL_USERNAME</code></td>\n<td align=\"center\">数据库用户名</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111081549960.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:5435</code> 就能看到登录界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111081551579.png\"></p>\n<p>先点 <code>Sign up</code> 注册一个账号，成功之后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111081553058.png\"></p>\n<p>设置很简单，只是货币没有  <code>CNY</code> ，那就用默认的 <code>USD</code> 吧，终于看到了首界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111081558665.png\"></p>\n<p>习惯性先看看 <code>Settings</code>，没有找到语言设置 😳，但软件本身还是很简单的，左侧的菜单一目了然</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111081606977.png\"></p>\n<p>但是坦白的说，界面不够漂亮，不过功能还是挺多的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111081622288.png\"></p>\n<p>移动端老苏没试，有兴趣可以去试试</p>\n<blockquote>\n<p><code>Android</code> 端如果访问不了 <code>Google Play</code>，可以试试 <code>apkpure</code> 上的下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcGtwdXJlLmNvbS9jbi9ob21lY2hhcnQteW91ci1oYW5keS1ob21lLWFzc2lzdGFudC9hcHAuaG9tZWNoYXJ0\">https://apkpure.com/cn/homechart-your-handy-home-assistant/app.homechart<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Homechart - All-in-One Home Organizer<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hYm91dC5ob21lY2hhcnQuYXBwLw==\">https://about.homechart.app/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>candiddev/homechart: Announcements, feedback, and Q&amp;A for Homechart.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NhbmRpZGRldi9ob21lY2hhcnQ=\">https://github.com/candiddev/homechart<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Homechart - free, self-hosted alternative for budgeting, calendars, recipes, tasks, wiki and more : selfhosted<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucmVkZGl0LmNvbS9yL3NlbGZob3N0ZWQvY29tbWVudHMvcWliOGc0L2hvbWVjaGFydF9mcmVlX3NlbGZob3N0ZWRfYWx0ZXJuYXRpdmVfZm9yLw==\">https://www.reddit.com/r/selfhosted/comments/qib8g4/homechart_free_selfhosted_alternative_for/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","家庭应用"]},{"title":"简单的家庭网络服务面板Astro","url":"/2021/12/08/%E7%AE%80%E5%8D%95%E7%9A%84%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1%E9%9D%A2%E6%9D%BFAstro/","content":"<p><strong>什么是 Astro ？</strong></p>\n<blockquote>\n<p><code>Astro</code> 是适用于所有家庭网络服务的开放式、可扩展的仪表板。</p>\n</blockquote>\n<p>简单的说就是一个门户或者书签，这类软件老苏已写过不少，当你安装的服务越来越多之后，想记住不同的服务及其使用的端口，不是一件轻松的事情</p>\n<ul>\n<li><a href=\"https://laosu.ml/2021/02/01/%E7%BB%9F%E4%B8%80%E7%9A%84%E5%AE%B6%E5%BA%AD%E6%9C%8D%E5%8A%A1%E5%99%A8Web%E9%97%A8%E6%88%B7Organizr/\">统一的家庭服务器Web门户Organiz</a></li>\n<li> <a href=\"https://laosu.ml/2020/12/11/Heimdall%E6%89%93%E9%80%A0%E4%B8%AA%E4%BA%BA%E5%AF%BC%E8%88%AA%E9%A1%B5/\">Heimdall打造个人导航页</a></li>\n<li><a href=\"https://laosu.ml/2020/08/14/%E7%BB%99%E7%BE%A4%E6%99%96%E5%BC%84%E4%B8%AA%E6%BC%82%E4%BA%AE%E7%9A%84%E5%AF%BC%E8%88%AA%E9%A1%B5%EF%BC%88%E4%B8%8A%EF%BC%89/\">给群晖弄个漂亮的导航页（上）</a></li>\n<li><a href=\"https://laosu.ml/2020/08/16/%E7%BB%99%E7%BE%A4%E6%99%96%E5%BC%84%E4%B8%AA%E6%BC%82%E4%BA%AE%E7%9A%84%E5%AF%BC%E8%88%AA%E9%A1%B5%EF%BC%88%E4%B8%8B%EF%BC%89/\">给群晖弄个漂亮的导航页（下）</a></li>\n<li> <a href=\"https://laosu.ml/2021/07/26/%E4%B8%80%E4%B8%AA%E9%9D%9E%E5%B8%B8%E5%BC%BA%E5%A4%A7%E7%9A%84%E9%9D%99%E6%80%81%E5%AF%BC%E8%88%AA%E7%BD%91%E7%AB%99nav/?highlight=nav\">一个非常强大的静态导航网站nav</a></li>\n<li> <a href=\"https://laosu.ml/2021/07/12/%E7%AE%80%E5%8D%95%E5%A5%BD%E7%94%A8%E7%9A%84%E4%B9%A6%E7%AD%BE%E7%AE%A1%E7%90%86%E5%99%A8OneNav/?highlight=nav\">简单好用的书签管理器OneNav</a></li>\n</ul>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>igorsheg</code> ，选择第一个 <code>igorsheg/astro</code>，双击直接下载。</p>\n<blockquote>\n<p>如果你搜 <code>astro</code> 会有太多结果，不容易找到</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111031224556.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>astro</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/astro</code></td>\n<td align=\"center\"><code>/data</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111031231381.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不冲突就行，不确定的话可以用命令查一下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看端口占用</span></span><br><span class=\"line\">netstat -tunlp | grep 端口号</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>3130</code></td>\n<td align=\"center\"><code>3000</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111031232757.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:3130</code> 就能看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111031234308.png\"></p>\n<p>和老苏之前介绍的门户类有所不同，<code>astro</code> 自带了正常运行的统计</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111031244065.png\"></p>\n<h2 id=\"进入编辑\"><a href=\"#进入编辑\" class=\"headerlink\" title=\"进入编辑\"></a>进入编辑</h2><p>点击右上角的 <code>Manage</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111031722305.png\"></p>\n<p><code>Manage</code> 会变成 <code>I&#39;m Done</code>，同时站点右侧会出现 <code>...</code></p>\n<p>你可以点 <code>Edit</code> 进行编辑，也可以点 <code>Uptime Status</code>  查看运行统计，还可以点 <code>Remove</code> 进行删除</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111031726514.png\"></p>\n<p>红色多半是网站已经挂掉了，绿色表示还能正常访问</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111031728497.png\"></p>\n<p>时间轴上的数值老苏估计应该是 <code>ping</code> 的延时</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111031746512.png\"></p>\n<p>点 <code>I&#39;m Done</code> 退出编辑状态，按钮上的文字又会变回 <code>Manage</code></p>\n<h2 id=\"新增分类\"><a href=\"#新增分类\" class=\"headerlink\" title=\"新增分类\"></a>新增分类</h2><p>点右上角的 <code>...</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111031750781.png\"></p>\n<p>在弹出的二级菜单中选择 <code>New Category</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111031757195.png\"></p>\n<p><code>Category Name</code> 中填写准备新建的分类的名称，<code>Category Icon</code> 中可以选择图标，图标支持英文搜索</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111031757104.png\"></p>\n<h2 id=\"新增站点\"><a href=\"#新增站点\" class=\"headerlink\" title=\"新增站点\"></a>新增站点</h2><p>点右上角的 <code>...</code>，在弹出的二级菜单中选择 <code>New Service</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111031801444.png\"></p>\n<p>提交之后就可以在 <code>多媒体</code> 分类中找到，因为没有上传 <code>logo</code> 看起来有点丑😅</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111031802691.png\"></p>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><p>支持切换 <code>Apperance</code> ，默认是 <code>Dark</code> 模式</p>\n<blockquote>\n<p>很可能是跟随系统主题的，就像老苏的博客 <code>https://laosu.ml</code> 一样</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111031808798.png\"></p>\n<p>切到 <code>light</code> 模式</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111031809305.png\"></p>\n<p>老苏还是比较喜欢 <code>Dark</code> 模式，没那么刺眼，至于 <code>New Note</code> 点了一点反应都没有，是还在开发么？</p>\n<p>用了一圈下来感觉似乎完成度还是不太够，另外一个问题是资源占用略高，有时候会有卡顿的感觉</p>\n<blockquote>\n<p><code>CPU</code> 在 <code>10%~15%</code> 之间，内存在 <code>500MB~1.5GB</code> 之间波动</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112081301725.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112081304561.png\"></p>\n<p>总得来说还是值得继续关注的！</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>igorsheg/astro: An open, extensible, dashboard for all of your homelab services.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2lnb3JzaGVnL2FzdHJv\">https://github.com/igorsheg/astro<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","导航"]},{"title":"德业DYD-T22A3除湿机接入HomeAssistant记录","url":"/2021/12/06/%E5%BE%B7%E4%B8%9ADYD-T22A3%E9%99%A4%E6%B9%BF%E6%9C%BA%E6%8E%A5%E5%85%A5HomeAssistant%E8%AE%B0%E5%BD%95/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>上个月小苏同学买了一台除湿机，第一次配对绑定比较麻烦，应该是 <code>WIFI</code> 模块的网络兼容性不大好，不过连上之后就没问题了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111072036731.jpg\"></p>\n<p>老苏第一个想法就是把这玩意接入 <code>HomeAssistant</code>，搜了一下网上已经有大牛搞成功了，虽然型号不同，但是过程是一样的</p>\n<p>原文在这里：<span class=\"exturl\" data-url=\"aHR0cHM6Ly94aWtpbmcud2luLzIwMjAvMTEvMTIvMy1kZXllLWRlaHVtaWRpZmVyLWFkZC10by1ob21lYXNzaXN0YW50Lw==\">https://xiking.win/2020/11/12/3-deye-dehumidifer-add-to-homeassistant/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><p>因为要用到 <code>API</code> 调试，所以需要下载相关的工具，例如 <code>Postman</code>、<code>ApiPost</code> 之类的，老苏建议用 <code>ApiPost</code>，因为界面是中文，看着比较习惯。</p>\n<p><code>ApiPost</code> 下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYXBpcG9zdC5jbi9kb3dubG9hZC5odG1s\">https://www.apipost.cn/download.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111072334375.png\"></p>\n<h1 id=\"获取除湿机信息\"><a href=\"#获取除湿机信息\" class=\"headerlink\" title=\"获取除湿机信息\"></a>获取除湿机信息</h1><h2 id=\"获取-token\"><a href=\"#获取-token\" class=\"headerlink\" title=\"获取 token\"></a>获取 token</h2><p>登录的地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcGkuZGV5ZS5jb20uY24vdjMvZW5kdXNlci9sb2dpbi8=\">https://api.deye.com.cn/v3/enduser/login/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>直接 <code>POST</code> 这个地址会返回需要填写的参数</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"attr\">&quot;meta&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;code&quot;</span>: <span class=\"number\">10000</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;message&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;loginname&quot;</span>: <span class=\"string\">&quot;This field is required.&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;password&quot;</span>: <span class=\"string\">&quot;This field is required.&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;appid&quot;</span>: <span class=\"string\">&quot;This field is required.&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;extend&quot;</span>: <span class=\"string\">&quot;This field is required.&quot;</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;data&quot;</span>: &#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">参数</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>loginname</code></td>\n<td align=\"center\">德业智能 <code>APP</code> 的登陆账号</td>\n</tr>\n<tr>\n<td align=\"center\"><code>password</code></td>\n<td align=\"center\">德业智能 <code>APP</code> 的登陆密码</td>\n</tr>\n<tr>\n<td align=\"center\"><code>appid</code></td>\n<td align=\"center\">这个似乎可以随便填，老苏填了软件版本</td>\n</tr>\n<tr>\n<td align=\"center\"><code>extend</code></td>\n<td align=\"center\"><code>&#123;&quot;cid&quot;:&quot;111111122223333&quot;,&quot;type&quot;:&quot;0&quot;&#125;</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111072352398.png\"></p>\n<p>返回的是认证 <code>token</code> 和 <code>clientid</code>，<code>token</code> 要保存好，后面会用到</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;meta&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;code&quot;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;message&quot;</span>: <span class=\"string\">&quot;signup ok.&quot;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">&quot;data&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;token&quot;</span>: <span class=\"string\">&quot;你的token&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;clientid&quot;</span>: <span class=\"string\">&quot;你的clientid&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"获取设备列表\"><a href=\"#获取设备列表\" class=\"headerlink\" title=\"获取设备列表\"></a>获取设备列表</h2><p>获取设备列表的地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcGkuZGV5ZS5jb20uY24vdjMvZW5kdXNlci9kZXZpY2VMaXN0Lw==\">https://api.deye.com.cn/v3/enduser/deviceList/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>直接 <code>GET</code> 这个地址会返回需要填写的参数</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"attr\">&quot;meta&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;code&quot;</span>: <span class=\"number\">10001</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;message&quot;</span>: <span class=\"string\">&quot;Miss jwt header.&quot;</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;data&quot;</span>: &#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111080024931.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">参数</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>Authorization</code></td>\n<td align=\"center\"><code>jwt</code> +空格+上前面获取的 <code>token</code> 拼接而成</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p><code>jwt</code> 或者 <code>JWT</code> 都可以，应该不区分大小写；<code>JWT</code> 的全称是 <code>JSON Web Tokens</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111080037556.png\"></p>\n<p>返回的 <code>product_id</code>、<code>device_id</code> 要记好 </p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"attr\">&quot;meta&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;code&quot;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;message&quot;</span>: <span class=\"string\">&quot;device list by user.&quot;</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;data&quot;</span>: [</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;online&quot;</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;product_icon&quot;</span>: <span class=\"string\">&quot;https://deye-cloud.oss-cn-shanghai.aliyuncs.com/profile/1597889877269.png&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;product_id&quot;</span>: <span class=\"string\">&quot;你的设备的product_id&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;product_name&quot;</span>: <span class=\"string\">&quot;DYD-T22A3&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;device_id&quot;</span>: <span class=\"string\">&quot;你的设备的device_id&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;mac&quot;</span>: <span class=\"string\">&quot;设备的mac地址&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;payload&quot;</span>: <span class=\"string\">&quot;14110200203700000000000000002E3B452800000000&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;role&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;gatewaytype&quot;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;device_name&quot;</span>: <span class=\"string\">&quot;DYD-T22A3&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;product_type&quot;</span>: <span class=\"string\">&quot;dehumidifier&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;is_combo&quot;</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;protocol_version&quot;</span>: <span class=\"string\">&quot;wifi_V2.4&quot;</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"获取MQTT信息\"><a href=\"#获取MQTT信息\" class=\"headerlink\" title=\"获取MQTT信息\"></a>获取MQTT信息</h2><p>MQTT服务地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcGkuZGV5ZS5jb20uY24vdjMvZW5kdXNlci9tcXR0SW5mby8=\">https://api.deye.com.cn/v3/enduser/mqttInfo/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>直接 <code>GET</code> 这个地址会返回需要填写的参数</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"attr\">&quot;meta&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;code&quot;</span>: <span class=\"number\">10001</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;message&quot;</span>: <span class=\"string\">&quot;Miss jwt header.&quot;</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;data&quot;</span>: &#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">参数</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>Authorization</code></td>\n<td align=\"center\"><code>jwt</code> 头假设前面获取的 <code>token</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111082039584.png\"></p>\n<p>返回的 <code>loginname</code>、<code>password</code>、<code>mqtthost</code>、<code>mqttport</code> 等要记好</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"attr\">&quot;meta&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;code&quot;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;message&quot;</span>: <span class=\"string\">&quot;mqtt info&quot;</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;data&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;loginname&quot;</span>: <span class=\"string\">&quot;你的设备的mqtt登录账号&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;clientid&quot;</span>: <span class=\"string\">&quot;你的设备的的clientid&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;endpoint&quot;</span>: <span class=\"string\">&quot;ff7534ccae4711e7829100163e0f811e&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;password&quot;</span>: <span class=\"string\">&quot;你的设备的mqtt登录密码&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;mqtthost&quot;</span>: <span class=\"string\">&quot;xxxxxxxxx.mqtt.iot.gz.baidubce.com&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;mqttport&quot;</span>: <span class=\"number\">1883</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;sslport&quot;</span>: <span class=\"number\">1884</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"与HA集成\"><a href=\"#与HA集成\" class=\"headerlink\" title=\"与HA集成\"></a>与HA集成</h1><p>先说下 <code>HomeAssistant</code> 的版本，因为按照以往的经验，<code>HA</code> 版本的影响可能还是很大的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111082041976.png\"></p>\n<p>实测这个版本可以不需要下载原文作者的修改版 <code>MQTT</code> 组件，至于多少版本的需要下载，我也不是太清楚，老苏主要研究了 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3lvbmdtYW4vaG9tZWFzc2lzdGFudC1jb21wb25lbnRzL2lzc3Vlcy8y\">https://github.com/yongman/homeassistant-components/issues/2<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h2><p>修改 <code>configuration.yaml</code> 文件</p>\n<h3 id=\"增加-mqtt-配置\"><a href=\"#增加-mqtt-配置\" class=\"headerlink\" title=\"增加 mqtt 配置\"></a>增加 mqtt 配置</h3><blockquote>\n<p>其中 <code>broker</code> 中填写前面获取的 <code>mqtthost</code>地址</p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">mqtt:</span></span><br><span class=\"line\">  <span class=\"attr\">broker:</span> <span class=\"string\">xxxxxxxxx.mqtt.iot.gz.baidubce.com</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">1883</span></span><br><span class=\"line\">  <span class=\"attr\">client_id:</span> <span class=\"string\">你的设备的的clientid</span></span><br><span class=\"line\">  <span class=\"attr\">username:</span> <span class=\"string\">你的设备的mqtt登录账号</span></span><br><span class=\"line\">  <span class=\"attr\">password:</span> <span class=\"string\">你的设备的mqtt登录密码</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"增加-switch-配置\"><a href=\"#增加-switch-配置\" class=\"headerlink\" title=\"增加 switch 配置\"></a>增加 switch 配置</h3><blockquote>\n<p>其中 <code>state_topic</code> 和 <code>command_topic</code> 由上面获取的返回值 <code>endpoint</code>、<code>product_id</code>、<code>device_id</code> 三个值拼接而成</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th align=\"center\">参数</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>state_topic</code></td>\n<td align=\"center\"><code>endpoint/product_id/device_id/status/hex</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>command_topic</code></td>\n<td align=\"center\"><code>endpoint/product_id/device_id/command/hex</code></td>\n</tr>\n</tbody></table>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">switch:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">platform:</span> <span class=\"string\">mqtt</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">DYD-T22A3</span></span><br><span class=\"line\">    <span class=\"attr\">unique_id:</span> <span class=\"string\">deye_switch</span></span><br><span class=\"line\">    <span class=\"attr\">state_topic:</span> <span class=\"string\">xxxxxxxxx/xxxxxxxxxxxxx/xxxxxxxxxxxxxxxx/status/hex</span></span><br><span class=\"line\">    <span class=\"attr\">command_topic:</span> <span class=\"string\">xxxxxxxxx/xxxxxxxxxxxxx/xxxxxxxxxxxxxxxx/command/hex</span></span><br><span class=\"line\">    <span class=\"attr\">state_on:</span> <span class=\"number\">30</span></span><br><span class=\"line\">    <span class=\"attr\">state_off:</span> <span class=\"number\">20</span></span><br><span class=\"line\">    <span class=\"attr\">value_template:</span> <span class=\"string\">&quot;<span class=\"template-variable\">&#123;&#123; value_json.data[5:7] &#125;&#125;</span>&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">payload_on:</span> <span class=\"string\">&quot;\\x08\\x02\\x03\\x20\\x19\\x00\\x00\\x00\\x00\\x00&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">payload_off:</span> <span class=\"string\">&quot;\\x08\\x02\\x02\\x20\\x19\\x00\\x00\\x00\\x00\\x00&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"集成设置\"><a href=\"#集成设置\" class=\"headerlink\" title=\"集成设置\"></a>集成设置</h2><p>从 <code>配置</code> 进入到 <code>集成</code> 界面，右下角 <code>添加集成</code> ，找到 <code>MQTT</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111082054360.png\"></p>\n<p>通过 <code>选项</code> 进入 <code>MQTT</code> 的设置界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111082101381.png\"></p>\n<p>点 <code>RE-CONFIGURE MQTT</code> 进行设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111082102349.png\"></p>\n<p>依次填入 <code>MQTT</code> 服务地址 <code>mqtthost</code>、端口 <code>mqttport</code>、用户名 <code>loginname</code>、密码 <code>password</code>，然后点 <code>NEXT</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111082104322.png\"></p>\n<p>默认就可以了，不要去修改</p>\n<blockquote>\n<p>反正按网友的说法这两个红框是绝对不能勾选的，否则会报错</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111082107635.png\"></p>\n<p><code>提交</code> 就完成了 <code>MQTT</code> 的设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111082112867.png\"></p>\n<h2 id=\"实体卡片\"><a href=\"#实体卡片\" class=\"headerlink\" title=\"实体卡片\"></a>实体卡片</h2><p>只有开关状态</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111082116175.png\"></p>\n<h2 id=\"自动化\"><a href=\"#自动化\" class=\"headerlink\" title=\"自动化\"></a>自动化</h2><p>老苏没有湿度计，也没弄明白怎么获取 <code>DYD-T22A3</code> 中的 <code>湿度</code> 信息，所以只能根据室外的 <code>湿度</code> 来决定开启和关闭，感觉意义也不是特别大</p>\n<p>老苏是在界面上新建的描述</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281138755.png\"></p>\n<p>触发条件设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281140778.png\"></p>\n<p>环境条件没设</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281139894.png\"></p>\n<p>动作设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281140089.png\"></p>\n<p>最后生成在 <code>automations.yaml</code> 中的代码片段</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">id:</span> <span class=\"string\">&#x27;1636371731858&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">alias:</span> <span class=\"string\">自动除湿（室外湿度大于60）</span></span><br><span class=\"line\">  <span class=\"attr\">description:</span> <span class=\"string\">根据室外的湿度自动开机除湿</span></span><br><span class=\"line\">  <span class=\"attr\">trigger:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">platform:</span> <span class=\"string\">numeric_state</span></span><br><span class=\"line\">    <span class=\"attr\">entity_id:</span> <span class=\"string\">sensor.heweather_hum</span></span><br><span class=\"line\">    <span class=\"attr\">above:</span> <span class=\"string\">&#x27;60&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">below:</span> <span class=\"string\">&#x27;90&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">for:</span> <span class=\"string\">&#x27;30&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">condition:</span> []</span><br><span class=\"line\">  <span class=\"attr\">action:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">service:</span> <span class=\"string\">switch.turn_on</span></span><br><span class=\"line\">    <span class=\"attr\">target:</span></span><br><span class=\"line\">      <span class=\"attr\">area_id:</span> <span class=\"string\">ke_ting</span></span><br><span class=\"line\">      <span class=\"attr\">entity_id:</span> <span class=\"string\">switch.dyd_t22a3</span></span><br><span class=\"line\">  <span class=\"attr\">mode:</span> <span class=\"string\">single</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>德业除湿机接入HomeAssistant - 人生如逆旅，我亦是行人。<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly94aWtpbmcud2luLzIwMjAvMTEvMTIvMy1kZXllLWRlaHVtaWRpZmVyLWFkZC10by1ob21lYXNzaXN0YW50Lw==\">https://xiking.win/2020/11/12/3-deye-dehumidifer-add-to-homeassistant/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Homeassistant mqtt 报错 - 德业型号 T22A3 · Issue #2 · yongman/homeassistant-components<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3lvbmdtYW4vaG9tZWFzc2lzdGFudC1jb21wb25lbnRzL2lzc3Vlcy8y\">https://github.com/yongman/homeassistant-components/issues/2<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>德业除湿机接入HomeAssistant记录_除湿器_什么值得买<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2EzZDJyOHg1Lw==\">https://post.smzdm.com/p/a3d2r8x5/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>如何控制德业 DYD E12A3 土豆不好吃<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kbWVzZy5hcHAvZHlkLWUxMmEzLmh0bWw=\">https://dmesg.app/dyd-e12a3.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>【本文基于 <code>GitHub Actions</code> 自动部署】</p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","智能家居","homeassistant"]},{"title":"可能是github上最受欢迎的五子棋AI","url":"/2021/12/03/%E5%8F%AF%E8%83%BD%E6%98%AFgithub%E4%B8%8A%E6%9C%80%E5%8F%97%E6%AC%A2%E8%BF%8E%E7%9A%84%E4%BA%94%E5%AD%90%E6%A3%8BAI/","content":"<p>老苏突然很想玩五子棋，然后就在 <code>github</code> 上找到了这个项目，看起来有将近一年没更新了，凑合玩吧</p>\n<p>用作者的话说，可能是 <code>github</code> 上最受欢迎的 <code>五子棋AI</code>，但是从其他人的反馈看应该是有点夸张了</p>\n<p>作者提供了在线玩耍的网站：<span class=\"exturl\" data-url=\"aHR0cDovL2dvYmFuZy5saWdodDcuY24v\">http://gobang.light7.cn<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>如果你对算法有兴趣，可以去看看作者写的教程，结合着代码来研究算法</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110310025347.png\"></p>\n<h1 id=\"构建镜像\"><a href=\"#构建镜像\" class=\"headerlink\" title=\"构建镜像\"></a>构建镜像</h1><blockquote>\n<p>如果你不想自己构建，可以跳过，直接阅读下一章节</p>\n</blockquote>\n<p>老苏是基于源代码构建的 <code>Dockerfile</code></p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> node:lts-alpine as build-base</span><br><span class=\"line\"><span class=\"keyword\">LABEL</span><span class=\"bash\"> maintainer=laosu&lt;wbsu2003@gmail.com&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /app</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> ./package.json ./</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> npm install -g cnpm --registry=https://registry.npm.taobao.org</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> . .</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> cnpm install</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> cnpm run build</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> nginx:<span class=\"number\">1.12</span>-alpine</span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> --from=build-base /app/dist /usr/share/nginx/html</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">80</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"bash\"> [<span class=\"string\">&quot;nginx&quot;</span>, <span class=\"string\">&quot;-g&quot;</span>, <span class=\"string\">&quot;daemon off;&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n\n<p>构建镜像和容器运行的基本命令如下👇</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载原代码</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/lihongxun945/gobang.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果 github 慢或者访问不了</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://hub.fastgit.org/lihongxun945/gobang.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> gobang</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 构建镜像</span></span><br><span class=\"line\">docker build -t wbsu2003/gobang:v1 .</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成容器</span></span><br><span class=\"line\">docker run -d \\</span><br><span class=\"line\">--name=gobang \\</span><br><span class=\"line\">-p 3390:80 \\</span><br><span class=\"line\">wbsu2003/gobang:v1</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>gobang</code> ，选择第三个 <code>wbsu2003/gobang</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110310012503.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>本地端口不冲突就行</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>3390</code></td>\n<td align=\"center\"><code>80</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110310014204.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:3390</code> 就能看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110310015936.png\"></p>\n<p>至于棋力，老苏也不知道如何评估，因为水平太菜，目前为止几乎没赢过，应该是没掌握技巧吧，有空了一定要去研究下，要不也太丢人了😂😂</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>lihongxun945/gobang: javascript gobang AI，可能是github上最受欢迎的五子棋AI，源码+教程<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xpaG9uZ3h1bjk0NS9nb2Jhbmc=\">https://github.com/lihongxun945/gobang<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","游戏"]},{"title":"4EVERLAND上部署Hexo","url":"/2021/12/01/4EVERLAND%E4%B8%8A%E9%83%A8%E7%BD%B2Hexo/","content":"<p><strong>什么是 4EVERLAND？</strong></p>\n<blockquote>\n<p><code>4EVERLAND</code> 是一个基于区块链技术的云计算平台，使用 <code>Web 3.0</code> 为所有用户提供全球加速、开放、无许可、隐私保护、持久的存储解决方案和网络服务。目前用户有 <code>40GB</code> 免费存储空间以及无限的流量。</p>\n</blockquote>\n<p><strong>什么是 Freenom？</strong></p>\n<blockquote>\n<p><code>Freenom</code> 是世界上第一个也是唯一的免费域名提供商。</p>\n</blockquote>\n<p><strong>什么是 DNSPod？</strong></p>\n<blockquote>\n<p><code>DNSPod</code> 是国内提供智能 <code>DNS</code> 产品的网站，致力于为各类网站提供高质量的电信、网通、教育网双线或者三线智能 <code>DNS</code> 免费解析。</p>\n</blockquote>\n<h1 id=\"账号\"><a href=\"#账号\" class=\"headerlink\" title=\"账号\"></a>账号</h1><p>浏览器中打开 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ob3N0aW5nLjRldmVybGFuZC5vcmcv\">https://hosting.4everland.org<i class=\"fa fa-external-link-alt\"></i></span> ，不需要注册，直接用 <code>github</code> 的账号</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281929480.png\"></p>\n<p>输入 <code>github</code> 账号密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281930650.png\"></p>\n<p>第一次可能会需要 <code>Device verification code</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281931846.png\"></p>\n<p>验证成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281933413.png\"></p>\n<h1 id=\"导入-git-仓库\"><a href=\"#导入-git-仓库\" class=\"headerlink\" title=\"导入 git 仓库\"></a>导入 git 仓库</h1><p>点 <code>New Project</code> 新建项目</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281937871.png\"></p>\n<p>选择 <code>hexo</code> 的存储库 <code>wbsu2003.github.io</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281938353.png\"></p>\n<p>选择目录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281940382.png\"></p>\n<p>老苏不是源码发布，而是发布的静态文件，所以框架是 <code>Other</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281941007.png\"></p>\n<p>实际上 <code>4EVERLAND</code> 支持的前端框架很多</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202112011242014.png\"></p>\n<p>修改 <code>Project Name</code>，并启用 <code>Deploy hook</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281947753.png\"></p>\n<p>点 <code>Deploy</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281949784.png\"></p>\n<p>发布成功后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281949266.png\"></p>\n<p>直接点击 <code>Visit</code> 即可进行浏览。默认的域名是 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93YnN1MjAwMy40ZXZlcmxhbmQuYXBwLw==\">https://wbsu2003.4everland.app<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281951989.png\"></p>\n<h1 id=\"自定义域名\"><a href=\"#自定义域名\" class=\"headerlink\" title=\"自定义域名\"></a>自定义域名</h1><p>第一步、准备好域名 <code>laosu.gq</code>，这个域名是老苏在 <code>Freenom</code> 申请的，所以要在 <code>Freenom</code> 中设置好 <code>Nameservers</code>，将其指向 <code>DNSPod</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281958646.png\"></p>\n<p>第二步、在 <code>DNSPod</code> 中增加两条解析</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111282002964.png\"></p>\n<p>第三步、回到 <code>4EVERLAND</code>，进入 <code>Setting</code> –&gt; <code>Domains</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281953199.png\"></p>\n<p>选择刚建的项目 <code>wbsu2003</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281954292.png\"></p>\n<p>输入准备好的域名 <code>laosu.gq</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111281956188.png\"></p>\n<p>点 <code>Add</code> 即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111282005587.png\"></p>\n<p>现在可以用 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYW9zdS5ncS8=\">https://laosu.gq<i class=\"fa fa-external-link-alt\"></i></span> 直接访问了，是不是很简单？</p>\n<h1 id=\"测速\"><a href=\"#测速\" class=\"headerlink\" title=\"测速\"></a>测速</h1><p>在站长之家（ <span class=\"exturl\" data-url=\"aHR0cDovL3Rvb2wuY2hpbmF6LmNvbS9zaXRlc3BlZWQ=\">http://tool.chinaz.com/sitespeed<i class=\"fa fa-external-link-alt\"></i></span> ）–&gt;【国内网速测试】，分别输入域名进行测试。</p>\n<ul>\n<li><code>Vercel</code> 域名：<code>laosu.ml</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111282011365.png\"></p>\n<ul>\n<li><code>Gitee</code> 域名：<code>wbsu2003.gitee.io</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111282012529.png\"></p>\n<ul>\n<li><code>4EVERLAND</code> 域名：<code>laosu.gq</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111282014224.png\"></p>\n<ul>\n<li><code>github</code> 域名：<code>laosu.ga</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111282018806.png\"></p>\n<ul>\n<li><code>Netlify</code> 域名：<code>laosu.tk</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111282034975.png\"></p>\n<p>似乎也就比 <code>vercel</code> 略微低一点，做个备站是没问题的</p>\n<h1 id=\"站点规划\"><a href=\"#站点规划\" class=\"headerlink\" title=\"站点规划\"></a>站点规划</h1><table>\n<thead>\n<tr>\n<th align=\"center\">域名</th>\n<th align=\"center\">对应主机</th>\n<th align=\"center\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><a href=\"https://laosu.ml/\">https://laosu.ml</a></td>\n<td align=\"center\"><code>Vercel</code></td>\n<td align=\"center\">主站</td>\n</tr>\n<tr>\n<td align=\"center\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYW9zdS50ay8=\">https://laosu.tk<i class=\"fa fa-external-link-alt\"></i></span></td>\n<td align=\"center\"><code>Netlify</code></td>\n<td align=\"center\">备站</td>\n</tr>\n<tr>\n<td align=\"center\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYW9zdS5nYS8=\">https://laosu.ga<i class=\"fa fa-external-link-alt\"></i></span></td>\n<td align=\"center\"><code>Github</code></td>\n<td align=\"center\">备站</td>\n</tr>\n<tr>\n<td align=\"center\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYW9zdS5jZi8=\">https://laosu.cf<i class=\"fa fa-external-link-alt\"></i></span></td>\n<td align=\"center\"><code>Vercel</code></td>\n<td align=\"center\">备站</td>\n</tr>\n<tr>\n<td align=\"center\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYW9zdS5ncS8=\">https://laosu.gq<i class=\"fa fa-external-link-alt\"></i></span></td>\n<td align=\"center\"><code>4EVERLAND</code></td>\n<td align=\"center\">备站</td>\n</tr>\n<tr>\n<td align=\"center\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93YnN1MjAwMy5naXRlZS5pby8=\">https://wbsu2003.gitee.io<i class=\"fa fa-external-link-alt\"></i></span></td>\n<td align=\"center\"><code>Gitee</code></td>\n<td align=\"center\">国内推荐</td>\n</tr>\n</tbody></table>\n<p>目前网站上已完成调整，应该能找到您访问最快的站点。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111282021548.png\"></p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><ol>\n<li>只要 <code>Hexo</code> 提交到 <code>Github</code> ，就会自动部署，还是很方便的；</li>\n<li>目前 <code>4EVERLAND</code> 给所有账户提供 <code>40GB</code> 免费存储空间以及无限的流量；</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111291037764.png\"></p>\n<ol start=\"3\">\n<li><code>Settings</code> –&gt; <code>statistics</code> 中可以看到访问记录；</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111282026461.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>免费的静态托管平台4EVERLAND - 知乎<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80MDEzODE3MTY=\">https://zhuanlan.zhihu.com/p/401381716<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>4EVERLAND 使用指北_m0_60963693的博客-CSDN博客<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzYwOTYzNjkzL2FydGljbGUvZGV0YWlscy8xMTk4MjIwNTI=\">https://blog.csdn.net/m0_60963693/article/details/119822052<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["Blog","Hexo","GitHub"]},{"title":"元宇宙中的虚拟办公室SkyOffice","url":"/2021/11/29/%E5%85%83%E5%AE%87%E5%AE%99%E4%B8%AD%E7%9A%84%E8%99%9A%E6%8B%9F%E5%8A%9E%E5%85%AC%E5%AE%A4SkyOffice/","content":"<p>最近因为 <code>Facebook</code> 改名为 <code>Meta</code>，<code>元宇宙</code> 一下刷了屏，虽然还没有一个被广泛认可的确切定义，但是不耽误牛叉的人已经通过这个概念赚到了钱💰</p>\n<p>今天折腾的 <code>SkyOffice</code> 在老苏看来应该是 <code>元宇宙</code> 的一个场景，在一个沉浸式的虚拟办公室，通过 <code>WebRTC</code> 进行视频交流，这是老苏认为当下比较靠谱的一个应用场景，其他的还包括线上音乐会，线上时装秀等等</p>\n<p><strong>什么是 SkyOffice ？</strong></p>\n<blockquote>\n<p><code>SkyOffice</code> 是使用 <code>Phaser</code>、<code>React</code>、<code>Redux</code>、<code>PeerJS</code> 和 <code>Colyseus</code> 构建的沉浸式虚拟办公室。用户通过虚拟形象出现在网络中，可以进行网络会议。</p>\n</blockquote>\n<ul>\n<li><code>Phaser3</code> - 游戏引擎</li>\n<li><code>React/Redux</code> - 前端框架</li>\n<li><code>PeerJS</code> - 用于视频/屏幕共享的 <code>WebRTC</code></li>\n<li><code>Colyseus</code> - 基于 <code>WebSocket</code> 的服务器框架</li>\n<li><code>TypeScript</code>和<code>ES6</code> - 适用于客户端和服务器端</li>\n</ul>\n<p>官方的体验地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9za3lvZmZpY2UubmV0bGlmeS5hcHAv\">https://skyoffice.netlify.app<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"构建镜像\"><a href=\"#构建镜像\" class=\"headerlink\" title=\"构建镜像\"></a>构建镜像</h1><blockquote>\n<p>如果你不想自己构建，可以跳过，直接阅读下一章节</p>\n</blockquote>\n<p>老苏把前、后端整合在一个镜像中，容量有点大，大概有 <code>1.2G</code>，就当是虚拟机吧</p>\n<blockquote>\n<p>虽然没有采用分层构建，但是前端是用的编译好的静态文件。因为从 <code>Docker</code> 直接构建的存在有问题，所以只能先编译好 <code>build</code> 目录，再将 <code>build</code> 拷贝到镜像中，这也是没办法的办法吧，如果可能的话建议直接用源代码运行会比较好</p>\n</blockquote>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> node:<span class=\"number\">16.5</span></span><br><span class=\"line\"><span class=\"keyword\">LABEL</span><span class=\"bash\"> maintainer=laosu&lt;wbsu2003@gmail.com&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> BACKEND_URL=<span class=\"string\">&quot;wss://sky-office.herokuapp.com&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /app</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> . .</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 前端</span></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /app/client</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> npm install -g serve --registry=https://registry.npm.taobao.org</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 后端</span></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /app</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> npm install --registry=https://registry.npm.taobao.org</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装 Supervisor 和其他依赖 </span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> sed -i s@/deb.debian.org/@/mirrors.aliyun.com/@g /etc/apt/sources.list \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; apt-get clean \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; apt-get update \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; apt-get -y install supervisor</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># supervisor 配置</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> supervisord.conf /etc/supervisord.conf</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 脚本文件</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> replace_api_url.sh ./client/replace_api_url.sh</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> chmod +x /app/client/replace_api_url.sh</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">2567</span> <span class=\"number\">3000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ENTRYPOINT</span><span class=\"bash\"> [<span class=\"string\">&quot;supervisord&quot;</span>,<span class=\"string\">&quot;-c&quot;</span>,<span class=\"string\">&quot;/etc/supervisord.conf&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n\n<p><code>supervisord.conf</code> 文件是新增用来控制进程的，<code>backend</code> 是服务端，<code>frontend</code> 是前端</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[include]</span>  </span><br><span class=\"line\"><span class=\"attr\">files</span> = /etc/supervisor/conf.d/*.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[program:backend]</span></span><br><span class=\"line\"><span class=\"attr\">priority</span>=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">directory</span>=/app</span><br><span class=\"line\"><span class=\"attr\">command</span>=npm run start </span><br><span class=\"line\"><span class=\"attr\">autostart</span>=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">autorestart</span>=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">startretries</span>=<span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"attr\">startsecs</span>=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">user</span>=root</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[program:frontend]</span></span><br><span class=\"line\"><span class=\"attr\">priority</span>=<span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"attr\">directory</span>=/app/client</span><br><span class=\"line\"><span class=\"comment\">#command=serve -s build -n -l 3000</span></span><br><span class=\"line\"><span class=\"attr\">command</span>=/app/client/replace_api_url.sh</span><br><span class=\"line\"><span class=\"attr\">autostart</span>=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">autorestart</span>=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">startretries</span>=<span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"attr\">startsecs</span>=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">user</span>=root</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"section\">[supervisord]</span></span><br><span class=\"line\"><span class=\"attr\">nodaemon</span>=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">logfile</span>=/tmp/supervisord.log</span><br><span class=\"line\"><span class=\"attr\">pidfile</span>=/tmp/supervisord.pid</span><br><span class=\"line\"><span class=\"attr\">loglevel</span>=debug</span><br><span class=\"line\"><span class=\"attr\">logfile_maxbytes</span>=<span class=\"number\">10</span>MB</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"section\">[supervisorctl]</span></span><br></pre></td></tr></table></figure>\n\n<p><code>replace_api_url.sh</code> 文件用于替换 <code>ENV</code> 设置的 <code>BACKEND_URL</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/usr/bin/env sh  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">find <span class=\"string\">&#x27;/app/client/build/static/js&#x27;</span> -name <span class=\"string\">&#x27;*.js&#x27;</span> -<span class=\"built_in\">exec</span> sed -i -e <span class=\"string\">&#x27;s,&#x27;</span>wss://sky-office.herokuapp.com<span class=\"string\">&#x27;,&#x27;</span><span class=\"string\">&quot;<span class=\"variable\">$BACKEND_URL</span>&quot;</span><span class=\"string\">&#x27;,g&#x27;</span> &#123;&#125; \\; </span><br><span class=\"line\"></span><br><span class=\"line\">serve -s build -n -l 3000</span><br></pre></td></tr></table></figure>\n\n<p>构建镜像和容器运行的基本命令如下👇</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载源代码</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/kevinshen56714/SkyOffice.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果 github 慢或者访问不了</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://hub.fastgit.org/kevinshen56714/SkyOffice.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> SkyOffice/client</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将前端编译生成静态文件</span></span><br><span class=\"line\">npm install &amp;&amp; npm run build</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 记得删除 SkyOffice/client/node_modules 目录，不然镜像会更大</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 回到 SkyOffice 目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ..</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 Dockerfile、supervisord.conf、 replace_api_url.sh 放在 SkyOffice 目录下</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 构建镜像</span></span><br><span class=\"line\">docker build -t wbsu2003/skyoffice:v1 .</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成容器(局域网)</span></span><br><span class=\"line\">docker run -d \\</span><br><span class=\"line\">--name=skyoffice \\</span><br><span class=\"line\">-p 2567:2567 \\</span><br><span class=\"line\">-p 2568:3000 \\</span><br><span class=\"line\">-e BACKEND_URL=ws://192.168.0.114:2567 \\</span><br><span class=\"line\">wbsu2003/skyoffice:v1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成容器(互联网)</span></span><br><span class=\"line\">docker run -d \\</span><br><span class=\"line\">--name=skyoffice \\</span><br><span class=\"line\">-p 2567:2567 \\</span><br><span class=\"line\">-p 2568:3000 \\</span><br><span class=\"line\">-e BACKEND_URL=wss://map.laosu.ml \\</span><br><span class=\"line\">wbsu2003/skyoffice:v1</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><p>准备好两个域名，一个给 <code>前端</code> ，一个给 <code>后端</code>，选好两个不冲突的端口，不确定的话可以用命令查一下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看端口占用</span></span><br><span class=\"line\">netstat -tunlp | grep 端口号</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>老苏没有公网 <code>IP</code>，采用 <code>frp</code> 做的内网穿透，并做了泛域名解析，不了解的可以翻翻老苏以前的文章</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"center\">容器端口</th>\n<th align=\"center\">域名</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>后端</code></td>\n<td align=\"center\"><code>2567</code></td>\n<td align=\"center\"><code>map.laosu.ml</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>前端</code></td>\n<td align=\"center\"><code>2568</code></td>\n<td align=\"center\"><code>skyoffice.laosu.ml</code></td>\n</tr>\n</tbody></table>\n<h2 id=\"后端\"><a href=\"#后端\" class=\"headerlink\" title=\"后端\"></a>后端</h2><blockquote>\n<p>群晖的 <code>IP</code> 是 <code>192.168.0.197</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111271458554.png\"></p>\n<p>进入 <code>自定义标题</code>，新增 <code>WebSocket</code></p>\n<blockquote>\n<p>这一步很重要，不然首页会卡在 <code>loading</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111271502439.png\"></p>\n<h2 id=\"前端\"><a href=\"#前端\" class=\"headerlink\" title=\"前端\"></a>前端</h2><p>前端必须使用 <code>https</code> 协议，否则在浏览器上无法使用音视频设备</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111271504607.png\"></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>skyoffice</code> ，选择第一个 <code>wbsu2003/skyoffice</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111231359865.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>2567</code></td>\n<td align=\"center\"><code>2567</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>2568</code></td>\n<td align=\"center\"><code>3000</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111271234055.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>BACKEND_URL</code></td>\n<td align=\"center\">默认值为 <code>wss://sky-office.herokuapp.com</code></td>\n</tr>\n</tbody></table>\n<p>如果你不改，你的容器将连接到官方服务器，但在国内 <code>heroku</code> 需要科学上网，否则你可能会一直卡在首页 <code>loading</code>，这个问题困扰了老苏一个礼拜，直到后来在  <code>/SkyOffice/client/src/services/Network.ts</code> 中发现红框中的代码 ，才知道 <code>production</code> 模式下并不是连的自己的服务器</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111261952412.png\"></p>\n<p><code>BACKEND_URL</code> 只能使用 <code>ws</code>协议或者 <code>wss</code> 协议，不能用 <code>http</code> 或者 <code>https</code> 协议，这是需要<strong>特别注意</strong>的。</p>\n<p>根据我们在准备环节的设置，这里的 <code>BACKEND_URL</code> 应该为 <code>wss://map.laosu.ml</code></p>\n<blockquote>\n<p>如果你的域名带端口，这里也要带上</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111271510799.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>稍等一会儿，在浏览器中输入 <code>http://群晖IP:2568</code> 或者 <code>https://skyoffice.laosu.ml</code> 就能看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202111231450778.png\"></p>\n<p>如果一直在显示 <code>loading</code>，<strong>请仔细检测前面的设置是否正确</strong>，如果地图已经出来，可以设置好 <code>Name</code> 后点 <code>JOIN</code> 进入</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111261638778.png\"></p>\n<blockquote>\n<p>【注意事项】：<br>如果在同一台机器上开两个页面，或者两台测试机靠的比较近，建议关闭声音，否则比较容易产生啸叫</p>\n</blockquote>\n<h2 id=\"启用摄像头\"><a href=\"#启用摄像头\" class=\"headerlink\" title=\"启用摄像头\"></a>启用摄像头</h2><p>要想打开摄像头，需要启用 <code>https</code> 协议，这一点老苏在之前多次提到，可以直接用反代实现的 <code>http</code> 协议转 <code>https</code> 协议</p>\n<ul>\n<li><p>如果你是通过 <code>http://群晖IP:2568</code> 访问的，点 <code>CONNECT WEBCAM</code> 是没有反应的</p>\n</li>\n<li><p>如果你是用 <code>https://域名</code> ，就像老苏用 <code>https://skyoffice.laosu.ml</code> 打开的网址，点 <code>CONNECT WEBCAM</code>，授权之后右上角会出现你的视频</p>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111261642544.png\"></p>\n<h2 id=\"屏幕共享\"><a href=\"#屏幕共享\" class=\"headerlink\" title=\"屏幕共享\"></a>屏幕共享</h2><p><code>JOIN</code> 之后，你可以通过方向键在地图上随意行走，当你来到电脑前面时，会显示 <code>Press R to use computer</code>，意思是按 <code>R</code> 键使用电脑</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111261648857.png\"></p>\n<p>按 <code>R</code> 键之后会显示 <code>屏幕共享</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111261654810.png\"></p>\n<p>点左上角的 <code>SHARE SCREEN</code> 开启屏幕共享，可以选择要共享的内容</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111261656866.png\"></p>\n<h2 id=\"视频会议\"><a href=\"#视频会议\" class=\"headerlink\" title=\"视频会议\"></a>视频会议</h2><p>当在会议室时，会提示 <code>Press E to sit</code>，意思是按 <code>E</code> 键可以坐下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111261701402.png\"></p>\n<p>坐下之后，老苏又登了一个账号 <code>xiaosu</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111261702386.png\"></p>\n<p>只要进入会议室就开始显示对方的视频窗口</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111261716776.png\"></p>\n<h2 id=\"视频聊天\"><a href=\"#视频聊天\" class=\"headerlink\" title=\"视频聊天\"></a>视频聊天</h2><p>这是基于距离的交互系统，只要两个人的距离接近，就会启动视频窗口</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/11/202111261718194.png\"></p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>这应该还是个原型应用，理论上你可以构建自己的办公室环境，想象一下，平时在不同区域分、子公司上班的人在 <code>SkyOffice</code> 中通过 <code>WebRTC</code> 随时可以视频交流，是不是有种天涯若比邻的感觉？</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>kevinshen56714/SkyOffice: Immersive virtual office built with Phaser, React, Redux, PeerJS, and Colyseus.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2tldmluc2hlbjU2NzE0L1NreU9mZmljZQ==\">https://github.com/kevinshen56714/SkyOffice<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","WebRTC","元宇宙","Metaverse"]},{"title":"在线钢琴应用AutoPiano","url":"/2021/11/26/%E5%9C%A8%E7%BA%BF%E9%92%A2%E7%90%B4%E5%BA%94%E7%94%A8AutoPiano/","content":"<p><strong>什么是 AutoPiano ？</strong></p>\n<blockquote>\n<p>自由钢琴（<code>AutoPiano</code>）是利用 <code>HTML5</code> 技术开发的在线钢琴应用，致力于为钢琴爱好者、音乐爱好者以及其他所有的创造者提供一个优雅、简洁的平台，在学习工作之余可以享受钢琴、音乐的美好。<code>AutoPiano</code> 还有教学的功能，一种方式是<code>快速入门</code>，通过简易的谱子按键进行演奏，另一种是<code>演奏示例</code>，通过钢琴曲的自动播放来达到演示的目的。</p>\n</blockquote>\n<p><strong>什么是 MusicXML ？</strong></p>\n<blockquote>\n<p><code>MusicXML</code>（英语：<code>Music Extensible Markup Language</code>，音乐扩展标记语言）是一个开放的基于 <code>XML</code> 的记录西式乐谱的文件格式。该格式是完全自由、开放记录的，并依据 <code>W3C</code> 社区的许可协议自由使用。</p>\n</blockquote>\n<h1 id=\"构建镜像\"><a href=\"#构建镜像\" class=\"headerlink\" title=\"构建镜像\"></a>构建镜像</h1><blockquote>\n<p>如果你不想自己构建，可以跳过，直接阅读下一章节</p>\n</blockquote>\n<p>老苏开始是基于源代码构建的 <code>Dockerfile</code></p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> node:lts-alpine as build-base</span><br><span class=\"line\"><span class=\"keyword\">LABEL</span><span class=\"bash\"> maintainer=laosu&lt;wbsu2003@gmail.com&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /app</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> ./package.json ./</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> npm install -g cnpm --registry=https://registry.npm.taobao.org</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> . .</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> cnpm install</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> cnpm run build</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> nginx:<span class=\"number\">1.12</span>-alpine</span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> --from=build-base /app/dist /usr/share/nginx/html</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">80</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"bash\"> [<span class=\"string\">&quot;nginx&quot;</span>, <span class=\"string\">&quot;-g&quot;</span>, <span class=\"string\">&quot;daemon off;&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n\n<p>运行时发现右上角会显示 <code>请勿基于原版代码构建网站，以免影响原网站SEO，除非大量修改源代码。感谢配合开源工作。</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110241600938.png\"></p>\n<p>所以只能用 <code>autopiano_build_demo</code> 目录重新构建，这个就简单多了</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> nginx:<span class=\"number\">1.12</span>-alpine</span><br><span class=\"line\"><span class=\"keyword\">LABEL</span><span class=\"bash\"> maintainer=laosu&lt;wbsu2003@gmail.com&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> ./autopiano_build_demo/. /usr/share/nginx/html</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">80</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"bash\"> [<span class=\"string\">&quot;nginx&quot;</span>, <span class=\"string\">&quot;-g&quot;</span>, <span class=\"string\">&quot;daemon off;&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n\n<p>构建镜像和容器运行的基本命令如下👇</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载源代码</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/AutoPiano/AutoPiano.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果 github 慢或者访问不了</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://hub.fastgit.org/AutoPiano/AutoPiano.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> AutoPiano</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 构建镜像</span></span><br><span class=\"line\">docker build -t wbsu2003/autopiano:v1 .</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成容器</span></span><br><span class=\"line\">docker run -d \\</span><br><span class=\"line\">--name=autopiano \\</span><br><span class=\"line\">-p 3380:80 \\</span><br><span class=\"line\">wbsu2003/autopiano:v1</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>autopiano</code> ，选择第三个 <code>wbsu2003/autopiano</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110241615335.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>本地端口不冲突就行</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>3380</code></td>\n<td align=\"center\"><code>80</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110241619865.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:3380</code> 就能看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110241612508.png\"></p>\n<h2 id=\"练习\"><a href=\"#练习\" class=\"headerlink\" title=\"练习\"></a>练习</h2><p>选择左侧的 <code>快速入门</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110241628641.png\"></p>\n<p>开始选首难度一星的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110241629521.png\"></p>\n<p>照着字母在键盘上输入就可以了，多练习几次就 <code>OK</code> 了</p>\n<h2 id=\"点播\"><a href=\"#点播\" class=\"headerlink\" title=\"点播\"></a>点播</h2><p>选择右侧的 <code>演奏示例</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110241633957.png\"></p>\n<p>随便选一首播放，播放的曲子后面有暂停按钮</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110241634480.png\"></p>\n<p>🎹曲子是不错，就是少了点</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>AutoPiano/AutoPiano: 自由钢琴 🎹 AutoPiano ( <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYXV0b3BpYW5vLmNuLw==\">https://www.autopiano.cn<i class=\"fa fa-external-link-alt\"></i></span> ) Simple &amp; Elegant Piano Online<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0F1dG9QaWFuby9BdXRvUGlhbm8=\">https://github.com/AutoPiano/AutoPiano<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>自由钢琴 - AutoPiano | 在线弹钢琴，听钢琴曲，超好听，超好玩 - Play Piano Online<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYXV0b3BpYW5vLmNuLw==\">https://www.autopiano.cn/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","音乐"]},{"title":"帮助管理个人交际关系的Monica","url":"/2021/11/24/%E5%B8%AE%E5%8A%A9%E7%AE%A1%E7%90%86%E4%B8%AA%E4%BA%BA%E4%BA%A4%E9%99%85%E5%85%B3%E7%B3%BB%E7%9A%84Monica/","content":"<p>你能记住你所有朋友的孩子的名字吗？你还记得你哥哥的结婚纪念日吗？你能说出你上次给你祖母打电话是什么时候，你谈了什么吗？</p>\n<p><code>Monica</code> 可让您快速轻松地记录所有这些信息，这样您就可以成为更好的朋友、家人或配偶。</p>\n<p><strong>什么是 Monica ？</strong></p>\n<blockquote>\n<p> <code>Monica</code> 是一款用于管理个人交际关系的开源 <code>Web</code> 应用系统。基于 <code>PHP</code> 和 <code>MySQL</code>，可做为个人的 <code>CRM</code> 系统，帮助您记住关于你的朋友、家人和商业关系的一切。</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"建数据库\"><a href=\"#建数据库\" class=\"headerlink\" title=\"建数据库\"></a>建数据库</h2><p>数据库直接用的群晖的 <code>MariaDB 10</code>，在 <code>phpMyAdmin</code> 中创建了表名为 <code>monica</code> 的空表</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110282159997.png\"></p>\n<h2 id=\"安装-Monica\"><a href=\"#安装-Monica\" class=\"headerlink\" title=\"安装 Monica\"></a>安装 Monica</h2><p> <code>monica</code> 最新版本是 <code>3.3.1</code>，根据基础镜像又分为了 <code>3</code> 个版本，分别是 <code>3.3.1-apache</code>、<code>3.3.1-fpm</code>、<code>3.3.1-fpm-alpine</code></p>\n<p>不能用 <code>latest</code> 版本，因为 <code>latest</code> 版默认是基于 <code>apache</code> 的 ，在初始化时会出现下面的错误</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Function not implemented: AH00141: Could not initialize random number generator</span><br></pre></td></tr></table></figure>\n\n<p>关于这个错误的原因，老苏在 『 <a href=\"https://laosu.ml/2021/09/29/%E5%BC%80%E6%BA%90%E7%94%9F%E4%BA%A7%E5%8A%9B%E5%A5%97%E4%BB%B6Nextcloud\">开源生产力套件Nextcloud</a> 』一文中已经讲过，有兴趣的可以去翻翻</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110282202616.png\"></p>\n<p>如果使用 <code>fpm</code> 镜像，其镜像本身未内置 <code>web</code> 服务器，需要依赖于 <code>nginx</code> 或者其他 <code>web</code> 服务，我们按官方的教程用 <code>docker-compose</code> 来安装，因为用了群晖自带的数据库，所以要对 <code>docker-compose.yml</code> 进行精简和修改</p>\n<blockquote>\n<ul>\n<li><code>&lt;host IP:port&gt;</code> ：老苏群晖的 <code>IP</code> 为 <code>192.168.0.197</code>， <code>MariaDB 10</code> 的端口是 <code>3307</code> ，所以 <code>DB_HOST=192.168.0.197:3307</code></li>\n<li><code>&lt;your db passwor&gt;</code>：为新增数据库账号 <code>monica</code> 时设置的密码</li>\n<li><code>ports: 3780</code>  如果不冲突就直接默认，否则就要修改为一个不冲突的端口</li>\n</ul>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">&quot;3.4&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">  <span class=\"attr\">app:</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">monica:fpm</span></span><br><span class=\"line\">    <span class=\"attr\">environment:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">DB_HOST=&lt;host</span> <span class=\"string\">IP:port&gt;</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">DB_USERNAME=monica</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">DB_PASSWORD=&lt;your</span> <span class=\"string\">db</span> <span class=\"string\">passwor&gt;</span></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">data:/var/www/html/storage</span></span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">web:</span></span><br><span class=\"line\">    <span class=\"attr\">build:</span> <span class=\"string\">./web</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"number\">3780</span><span class=\"string\">:80</span></span><br><span class=\"line\">    <span class=\"attr\">depends_on:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">app</span></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">data:/var/www/html/storage:ro</span></span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">volumes:</span></span><br><span class=\"line\">  <span class=\"attr\">data:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">data</span></span><br></pre></td></tr></table></figure>\n\n<p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>monica</code>，然后在 <code>SSH</code> 客户端中执行下面👇的命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /volume2/docker/monica</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 docker-compose.yml 下载到 monica 目录</span></span><br><span class=\"line\">curl -sSL https://raw.githubusercontent.com/wbsu2003/Dockerfile/main/monica/docker-compose.yml -o docker-compose.yml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果上面那条 github 访问不了可以试试镜像站点，上条执行通过这条就略过</span></span><br><span class=\"line\">curl -sSL https://raw.fastgit.org/wbsu2003/Dockerfile/main/monica/docker-compose.yml -o docker-compose.yml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建 web 子目录</span></span><br><span class=\"line\">mkdir web</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 下载文件</span></span><br><span class=\"line\">curl -sSL https://raw.githubusercontent.com/monicahq/docker/master/.examples/nginx-proxy/web/nginx.conf -o web/nginx.conf</span><br><span class=\"line\">curl -sSL https://raw.githubusercontent.com/monicahq/docker/master/.examples/nginx-proxy/web/Dockerfile -o web/Dockerfile</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果上面那条 github 访问不了可以试试镜像站点，上条执行通过这条就略过</span></span><br><span class=\"line\">curl -sSL https://raw.fastgit.org/monicahq/docker/master/.examples/supervisor/fpm/web/nginx.conf -o web/nginx.conf</span><br><span class=\"line\">curl -sSL https://raw.fastgit.org/monicahq/docker/master/.examples/nginx-proxy/web/Dockerfile -o web/Dockerfile</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改 docker-compose.yml 权限</span></span><br><span class=\"line\">chmod 777 docker-compose.yml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 根据需要修改数据库地址、密码、端口等</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 一键启动</span></span><br><span class=\"line\">docker-compose up -d</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 一键停止</span></span><br><span class=\"line\">docker-compose stop</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 一键重启</span></span><br><span class=\"line\">docker-compose restart</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 一键删除</span></span><br><span class=\"line\">docker-compose down</span><br></pre></td></tr></table></figure>\n\n<p><code>monica</code> 目录结构及文件如下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110282214839.png\"></p>\n<p><code>web</code> 目录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110282213656.png\"></p>\n<p>一键启动后，如果看到下图就表示成功了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110282150251.png\"></p>\n<p>在 <code>docker</code> 管理器中能看到两个容器已经成功启动</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110282151710.png\"></p>\n<p>其中 <code>monica:fpm</code> 为拉取的镜像，而 <code>monica_web:latest</code> 是刚刚构建的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110282152128.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>程序初始化的时间比较长，等几分钟之后，在浏览器中输入 <code>http://群晖IP:3780</code> 就能看到主界面</p>\n<blockquote>\n<p>默认支持中文，这一点有点出乎意料</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110282127743.png\"></p>\n<p>注册完账号就会看到欢迎界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110282217895.png\"></p>\n<p>接下来就可以开始添加联系人了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110282219202.png\"></p>\n<p>当然更方便的还是导入</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110282222326.png\"></p>\n<p>建了几个联系人</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110282237946.png\"></p>\n<p>选中一个联系人，可以记录与其相关的各种信息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110282236860.png\"></p>\n<p>仪表板会显示一些提醒和最近的联系</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110282239301.png\"></p>\n<p>功能逻辑还是非常清晰的，关系的积累贵在坚持记录，这一点不容易做到，尤其现在大家都习惯于手机，缺乏手机 <code>app</code> 的支持从而不能随时记录，对 <code>monica</code> 是个很大的限制</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>monicahq/monica: Personal CRM. Remember everything about your friends, family and business relationships.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21vbmljYWhxL21vbmljYQ==\">https://github.com/monicahq/monica<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Personal CRM done right - Monica<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubW9uaWNhaHEuY29tLw==\">https://www.monicahq.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>monicahq/docker: docker image of Monica<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21vbmljYWhxL2RvY2tlciNmcG0tdmVyc2lvbg==\">https://github.com/monicahq/docker#fpm-version<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","CRM"]},{"title":"使用Trilium Notes建立个人知识库","url":"/2021/11/22/%E4%BD%BF%E7%94%A8Trilium%20Notes%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E5%BA%93/","content":"<p><strong>什么是 Trilium Notes ？</strong></p>\n<blockquote>\n<p><code>Trilium Notes</code> 是一个分层笔记应用程序，专注于构建大型个人知识库。支持双向链接、标签、任务待办、图谱、统计、数学公式、加密、定制插件、本地存储、网页剪辑、跨平台支持，有 <code>Linux</code>，<code>macOS</code> 和 <code>Windows</code>客户端。</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<h2 id=\"英文版\"><a href=\"#英文版\" class=\"headerlink\" title=\"英文版\"></a>英文版</h2><p>在注册表中搜索 <code>trilium</code> ，选择第一个 <code>zadam/trilium</code>，版本选择 <code>latest</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110301559708.png\"></p>\n<p>版本信息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110301802518.png\"></p>\n<h2 id=\"中文版\"><a href=\"#中文版\" class=\"headerlink\" title=\"中文版\"></a>中文版</h2><p>在注册表中搜索 <code>trilium</code> ，选择第四个 <code>nriver/trilium-cn</code>，双击直接下载</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110301804839.png\"></p>\n<p>版本要低一些</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110301823537.png\"></p>\n<h1 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h1><h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>trilium</code>，再新建一个子文件夹 <code>data</code>，要修改文件夹 <code>data</code> 的权限，给 <code>Everyone</code> 用户 <code>读取</code> 和 <code>写入</code> 权限</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110301701367.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/trilium/data</code></td>\n<td align=\"center\"><code>/home/node/trilium-data</code></td>\n<td align=\"center\">存放数据</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110301620621.png\"></p>\n<blockquote>\n<p>因为同时装了中文版和英文版，所以将中文版指向了 <code>data_cn</code> 目录，如果你只是安装一个版本的话，直接指向 <code>data</code> 就可以了</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/trilium/data_cn</code></td>\n<td align=\"center\"><code>/root/trilium-data</code></td>\n<td align=\"center\">存放数据</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110301834118.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>本地端口不冲突就行</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>3738</code></td>\n<td align=\"center\"><code>8080</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110301604475.png\"></p>\n<p>中文版换了一个端口</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>3737</code></td>\n<td align=\"center\"><code>8080</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110301819569.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:3738</code> 就能看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110301626513.png\"></p>\n<p>老苏因为是第一次安装，所以勾选了第一项 <code>I&#39;m a new user and I want to create new Trilium document for my notes</code></p>\n<p>首先要创建账号</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110301628456.png\"></p>\n<p>完成之后会跳转到登录界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110301629310.png\"></p>\n<p>登录成功之后的主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110301644422.png\"></p>\n<p>中文版确实看着更习惯一些</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110301822538.png\"></p>\n<h1 id=\"客户端\"><a href=\"#客户端\" class=\"headerlink\" title=\"客户端\"></a>客户端</h1><p>同样也有英文版和中文版</p>\n<h2 id=\"英文版-1\"><a href=\"#英文版-1\" class=\"headerlink\" title=\"英文版\"></a>英文版</h2><p>下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3phZGFtL3RyaWxpdW0vcmVsZWFzZXM=\">https://github.com/zadam/trilium/releases<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110301855994.png\"></p>\n<p>这次选择了 <code>I have server instance already and I want to setup sync with it</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110302043082.png\"></p>\n<p>填写服务器地址和账号、密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110302120400.png\"></p>\n<p>登录成功之后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110302122265.png\"></p>\n<h2 id=\"中文版-1\"><a href=\"#中文版-1\" class=\"headerlink\" title=\"中文版\"></a>中文版</h2><p>下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL05yaXZlci90cmlsaXVtLXRyYW5zbGF0aW9uL3JlbGVhc2Vz\">https://github.com/Nriver/trilium-translation/releases<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110301853309.png\"></p>\n<ul>\n<li>中文版和英文版的 <code>Sync version</code> 不同，英文版是 <code>21</code> ，而中文版是 <code>20</code>，所以是不能混用的</li>\n<li>中文版客户端在老苏的机器上没跑起来，怀疑是先运行了高版本的英文版的缘故</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110302137626.png\"></p>\n<h2 id=\"Trilium-Web-Clipper\"><a href=\"#Trilium-Web-Clipper\" class=\"headerlink\" title=\"Trilium Web Clipper\"></a>Trilium Web Clipper</h2><p><code>Trilium Web Clipper</code> 允许您直接从浏览器中剪辑文本、整个页面、屏幕截图和简短笔记，并将它们保存到 <code>Trilium Notes</code>，在完成设置之前，所有菜单都是灰的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110302203649.png\"></p>\n<p>点 <code>Option</code> 进入设置界面，和客户端是一样的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110302206678.png\"></p>\n<p>点 <code>Login to the server instance</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110302208151.png\"></p>\n<p>再回到插件，所有的菜单都已经点亮了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110302209814.png\"></p>\n<p>抓了一篇文章</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110302212626.png\"></p>\n<h1 id=\"公网访问\"><a href=\"#公网访问\" class=\"headerlink\" title=\"公网访问\"></a>公网访问</h1><p>需要做反代处理</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110302111251.png\"></p>\n<p>在 <code>Option</code> –&gt; <code>Sync</code> 中修改服务器地址</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110302142933.png\"></p>\n<p>先点 <code>Save</code> 保存，然后再点 <code>Test Sync</code> 测试，如果测试结果显示 <code>sucessful</code> 就可以正常使用了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110302146639.png\"></p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>似乎中文版的更新并不积极，所以老苏还是建议用英文版的</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>zadam/trilium: Build your personal knowledge base with Trilium Notes<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3phZGFtL3RyaWxpdW0=\">https://github.com/zadam/trilium<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Nriver/trilium-translation: Translation for Trilium Notes. Trilium Notes 中文版.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL05yaXZlci90cmlsaXVtLXRyYW5zbGF0aW9u\">https://github.com/Nriver/trilium-translation<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>用群晖 Docker 部署 Trilium Notes – 学习杂记<br>地址：<span class=\"exturl\" data-url=\"aHR0cDovL3N0dWR5bm90ZXMuY24vP3A9ODc=\">http://studynotes.cn/?p=87<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","笔记"]},{"title":"ASCII-Generator.site生成ASCII艺术字符图","url":"/2021/11/19/ASCII-Generator.site%E5%9C%A8%E7%BA%BF%E7%94%9F%E6%88%90ASCII%E8%89%BA%E6%9C%AF%E5%AD%97%E7%AC%A6%E5%9B%BE/","content":"<p><strong>什么是 ASCII-Generator.site ?</strong></p>\n<blockquote>\n<p><code>ASCII-Generator.site</code> 是一个 <code>Django</code> 网站，用于从图像或文本中生成 <code>ASCII</code> 艺术字符图 🎨</p>\n</blockquote>\n<p><strong>什么是 Django ？</strong></p>\n<blockquote>\n<p><code>Django</code> 是用 <code>Python</code> 写的一个自由和开放源码的 <code>WEB</code> 程序框架，采用了<code>MTV</code> 的框架模式，即<code>模型 M</code> ，<code>视图 V</code> 和 <code>模版 T</code>。能帮助你更快、更容易地开发 <code>WEB</code> 站点。</p>\n</blockquote>\n<p>官方体验地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hc2NpaS1nZW5lcmF0b3Iuc2l0ZS8=\">https://ascii-generator.site/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>asciigen</code> ，选择第一个 <code>wbsu2003/asciigen</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110261846125.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>直接用了默认的端口 <code>1234</code> </p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>1234</code></td>\n<td align=\"center\"><code>1234</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110261903466.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:1234</code> 就能看到主界面，下面是隐私策略，点 <code>I Agree</code> 即可 </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110261535010.png\"></p>\n<h2 id=\"Image-to-ASCII\"><a href=\"#Image-to-ASCII\" class=\"headerlink\" title=\"Image to ASCII\"></a>Image to ASCII</h2><p>顶部可以选择 <code>Image to ASCII</code> 或者  <code>Text to ASCII</code>，默认是 <code>Image to ASCII</code>，选择一张黑白图片</p>\n<blockquote>\n<p>为了方便说明，老苏把官方的动图做了处理，分成了几段</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110261938096.gif\"></p>\n<p>试试彩图</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110261939342.gif\"></p>\n<p>老苏上传了一张明星的照片，能看出来是谁嘛？</p>\n<blockquote>\n<p>谜底在文末揭晓</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110261949442.png\"></p>\n<h2 id=\"Text-to-ASCII\"><a href=\"#Text-to-ASCII\" class=\"headerlink\" title=\"Text to ASCII\"></a>Text to ASCII</h2><p><code>Text to ASCII</code> 只要输入转变的文字即可，但是并不支持中文</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110261944067.png\"></p>\n<p>继续动图</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110261941596.gif\"></p>\n<h1 id=\"构建镜像\"><a href=\"#构建镜像\" class=\"headerlink\" title=\"构建镜像\"></a>构建镜像</h1><blockquote>\n<p>考虑到大部分人对构建不感兴趣，老苏这次把构建部分放到了后面</p>\n</blockquote>\n<p> <code>Dockerfile</code> 是基于项目源代码构建的，做了比较多的优化，主要是都换成了国内源，解决了构建速度慢、构建不成功的问题，另外将镜像从 <code>2G</code> 减到了 <code>1G</code> ，后续将会成为老苏构建  <code>Python</code>、<code>Django</code> 项目的模板</p>\n<blockquote>\n<p>感觉还有进一步优化的空间，慢慢来</p>\n</blockquote>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> python:<span class=\"number\">3.8</span>-slim</span><br><span class=\"line\"><span class=\"keyword\">LABEL</span><span class=\"bash\"> maintainer=laosu&lt;wbsu2003@gmail.com&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># set work directory</span></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /ags</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> ./requirements.txt /ags</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># set environment variables</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 防止 Python 将 pyc 文件复制到容器中</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> PYTHONDONTWRITEBYTECODE <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"comment\"># 确保将 Python 输出记录到终端，从而可以实时监控 Django 日志。</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> PYTHONUNBUFFERED <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Environment</span></span><br><span class=\"line\"><span class=\"comment\"># 可更换的源：</span></span><br><span class=\"line\"><span class=\"comment\"># 1.阿里源：mirrors.aliyun.com</span></span><br><span class=\"line\"><span class=\"comment\"># 2.清华源：mirrors.tuna.tsinghua.edu.cn</span></span><br><span class=\"line\"><span class=\"comment\"># 3.网易源：mirrors.163.com</span></span><br><span class=\"line\"><span class=\"comment\">#RUN sed -i s@/deb.debian.org/@/mirrors.aliyun.com/@g /etc/apt/sources.list \\</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> sed -i s@/deb.debian.org/@/mirrors.163.com/@g /etc/apt/sources.list \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; rm -Rf /var/lib/apt/lists/* \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; apt-get clean \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; apt-get -y update --fix-missing -o Acquire::http::No-Cache=True \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; apt-get install -y python3-pip python3-opencv libpq-dev </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 可更换的源：</span></span><br><span class=\"line\"><span class=\"comment\"># 1.清华源：https://pypi.tuna.tsinghua.edu.cn/simple</span></span><br><span class=\"line\"><span class=\"comment\"># 2.豆瓣源：http://pypi.douban.com/simple</span></span><br><span class=\"line\"><span class=\"comment\"># 3.阿里源：https://mirrors.aliyun.com/pypi/simple</span></span><br><span class=\"line\"><span class=\"comment\"># 4.腾讯源：http://mirrors.cloud.tencent.com/pypi/simple</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> pip install --upgrade pip -i https://mirrors.aliyun.com/pypi/simple --trusted-host mirrors.aliyun.com \\</span></span><br><span class=\"line\"><span class=\"bash\">   &amp;&amp; pip install -r requirements.txt</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># copy project</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> . /ags</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> chmod +x manage.py</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Application</span></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">1234</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"bash\"> [<span class=\"string\">&quot;python&quot;</span>, <span class=\"string\">&quot;manage.py&quot;</span>, <span class=\"string\">&quot;runserver&quot;</span>, <span class=\"string\">&quot;0.0.0.0:1234&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n\n<p>构建镜像和容器运行的基本命令如下👇</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载代码</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/hermanTenuki/ASCII-Generator.site.git ags</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 或者镜像站点</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://hub.fastgit.org/hermanTenuki/ASCII-Generator.site.git ags</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ags</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 `Dockerfile` 文件放到代码根目录中</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改 project/settings.py 文件</span></span><br><span class=\"line\"><span class=\"comment\"># 1.将 EASY_RUN_MODE 从 False 设置为 True</span></span><br><span class=\"line\"><span class=\"comment\"># 2.将 TIME_ZONE=&#x27;UTC&#x27; 改为 `Asia/Shanghai`</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 构建镜像</span></span><br><span class=\"line\">docker build -t wbsu2003/asciigen:v1 .</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 运行容器</span></span><br><span class=\"line\">docker run -d \\</span><br><span class=\"line\">--name=wbsu2003-asciigen1 \\</span><br><span class=\"line\">-p 1234:1234 \\</span><br><span class=\"line\">wbsu2003/asciigen:v1</span><br></pre></td></tr></table></figure>\n\n<p>谜底揭晓</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110261958152.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>hermanTenuki/ASCII-Generator.site: Django website for generating ASCII-arts out of images or text 🎨<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hlcm1hblRlbnVraS9BU0NJSS1HZW5lcmF0b3Iuc2l0ZQ==\">https://github.com/hermanTenuki/ASCII-Generator.site<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>在 docker 中运行 apt-get update 报错 returned a non-zero code: 100 - Rioka - 博客园<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vcmlva2EvcC8xMzgyMTU5OC5odG1s\">https://www.cnblogs.com/rioka/p/13821598.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>How to Create Django Docker Images | Engineering Education (EngEd) Program | Section<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2VjdGlvbi5pby9lbmdpbmVlcmluZy1lZHVjYXRpb24vZGphbmdvLWRvY2tlci8=\">https://www.section.io/engineering-education/django-docker/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","工具"]},{"title":"点对点加密文件传输工具Filegogo","url":"/2021/11/17/%E7%82%B9%E5%AF%B9%E7%82%B9%E5%8A%A0%E5%AF%86%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%B7%A5%E5%85%B7Filegogo/","content":"<p><strong>什么是 Filegogo ?</strong></p>\n<blockquote>\n<p><code>Filegogo</code> 是一款基于 <code>WebRTC</code> 技术开发的，在浏览器中运行的点对点加密文件传输工具。</p>\n</blockquote>\n<p>官方体验地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZW5kLjIyMzMzLmZ1bi8=\">https://send.22333.fun<i class=\"fa fa-external-link-alt\"></i></span></p>\n<blockquote>\n<p>之前老苏写过类似的工具：『 <a href=\"https://laosu.ml/2020/10/01/Snapdrop%E5%AE%9E%E7%8E%B0P2P%E5%B1%80%E5%9F%9F%E7%BD%91%E6%96%87%E4%BB%B6%E4%BA%92%E4%BC%A0/\">Snapdrop实现P2P局域网文件互传</a>』</p>\n</blockquote>\n<h1 id=\"构建镜像\"><a href=\"#构建镜像\" class=\"headerlink\" title=\"构建镜像\"></a>构建镜像</h1><p>可能是搜索的关键词不对吧，反正我搜索 <code>filegogo</code> 找不到，好在官网提供了 <code>Dockerfile</code>，所以我们可以自己构建</p>\n<blockquote>\n<p>如果你不想自己构建，可以跳过，直接阅读下一章节</p>\n</blockquote>\n<p><code>Dockerfile</code> 在官方的基础上做了微调，给 <code>npm</code> 换了国内源，加快了构建速度</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 前端构建</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> node:lts-alpine as builder-node</span><br><span class=\"line\"><span class=\"keyword\">LABEL</span><span class=\"bash\"> maintainer=laosu&lt;wbsu2003@gmail.com&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /app</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> webapp .</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> npm install --registry=https://registry.npm.taobao.org \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; npm run build</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 服务端构建</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> golang:<span class=\"number\">1.16</span>-buster AS builder</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /src</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> . .</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> --from=builder-node /app/build /src/server/build</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> make server</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Bin</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> scratch AS bin</span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> --from=builder /src/filegogo-server /usr/bin/filegogo-server</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> conf/filegogo-server.toml /etc/filegogo/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">8080</span>/tcp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ENTRYPOINT</span><span class=\"bash\"> [<span class=\"string\">&quot;/usr/bin/filegogo-server&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n\n<p>构建镜像和容器运行的基本命令如下👇</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 拉取代码</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/a-wing/filegogo.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 或者镜像站点</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://hub.fastgit.org/a-wing/filegogo.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> filegogo</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 构建镜像</span></span><br><span class=\"line\">docker build -t wbsu2003/filegogo:v1 .</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成容器</span></span><br><span class=\"line\">docker run -it \\</span><br><span class=\"line\">--name=filegogo \\</span><br><span class=\"line\">-p 3478:8080 \\</span><br><span class=\"line\">wbsu2003/filegogo:v1</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>filegogo</code> ，选择第一个 <code>wbsu2003/filegogo</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110222355776.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不冲突就行</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>3478</code></td>\n<td align=\"center\"><code>8080</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110222357606.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:3478</code> 就能看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110222358509.png\"></p>\n<p>先 <code>Selec File</code> ，老苏选了张图片</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110222359348.png\"></p>\n<p>如果是手机端接收的话，直接用手机浏览器扫码，点 <code>getFile</code> 开始传输文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110230005964.jpg\"></p>\n<p>传输完成</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110230006171.jpg\"></p>\n<p>使用非常简单，所以好像没啥好介绍的，最后放一张官方的动图吧</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110231616536.gif\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>a-wing/filegogo: A file transfer tool that can be used in the browser webrtc p2p<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2Etd2luZy9maWxlZ29nbw==\">https://github.com/a-wing/filegogo<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","WebRTC","网络"]},{"title":"日程安排工具Calendso","url":"/2021/11/15/%E6%97%A5%E7%A8%8B%E5%AE%89%E6%8E%92%E5%B7%A5%E5%85%B7Calendso/","content":"<p><strong>什么是 Calendso ？</strong></p>\n<blockquote>\n<p><code>Calendso</code> 是 <code>Calendly</code> 的开源替代方案，作为日程安排工具可以大大简化我们的生活，可用于商务会议、研讨会、瑜伽课程，甚至与家人通话等，提供 <code>API</code> 接口和 <code>WebHook</code>， 支持自托管，可完全由自己掌控数据、事件、流程和 UI。</p>\n</blockquote>\n<p>【工作原理】：<code>A</code> 公布自己的时间表，<code>B</code> 根据 <code>A</code> 的时间表进行预约，节省了来回沟通的时间，提高了预约的成功率</p>\n<p>老苏觉得比较适合于医生、钢琴课等一对一服务的行业</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p><code>Calendso</code> 涉及到两个镜像，比较简单的安装方式是编排 <code>docker-compose.yml</code> 文件，然后用 <code>docker-compose up -d</code> 命令启动</p>\n<p>在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NhbGVuZHNvL2RvY2tlcg==\">https://github.com/calendso/docker<i class=\"fa fa-external-link-alt\"></i></span> ，你能找到所需要的安装文档和相关文件。</p>\n<p>老苏还是想用群晖传统的图形界面来安装，虽然繁琐，但对不熟悉命令行的人来说，这或许会降低一些安装难度。</p>\n<h2 id=\"镜像下载\"><a href=\"#镜像下载\" class=\"headerlink\" title=\"镜像下载\"></a>镜像下载</h2><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>calendso</code> ，选择第一个 <code>ctadeu/calendso</code>，版本选择最新的，目前是 <code>0.0.17-1</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231040251.png\"></p>\n<p><code>calendso</code> 依赖 <code>PostgreSQL</code> 而不是 <code>MariaDB</code> 做数据库。默认情况下，只要你安装了 <code>Moments</code>、<code>Audio station</code>、<code>Video Station</code> 等套件，都会使用群晖内置的一个 <code>PostgreSQL</code> 数据库，但并没有像 <code>MariaDB</code> 一样提供数据库管理工具，所以老苏建议数据库最好另外安装</p>\n<p>在注册表中搜索 <code>postgresql</code> ，选择第一个 <code>postgres</code>，版本选 <code>latest</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231045515.png\"></p>\n<h2 id=\"安装-PostgreSQL\"><a href=\"#安装-PostgreSQL\" class=\"headerlink\" title=\"安装 PostgreSQL\"></a>安装 PostgreSQL</h2><p>名称用的默认的，进 <code>高级设置</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231052762.png\"></p>\n<h3 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h3><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>calendso</code>，再在 <code>calendso</code> 目录中建一个子目录 <code>data</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/calendso/data</code></td>\n<td align=\"center\"><code>/var/lib/postgresql/data/</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231128319.png\"></p>\n<h3 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h3><p>默认的端口 <code>5432</code> 存在冲突，因为前面老苏说过群晖已经安装了 <code>PostgreSQL</code> ，所以要改本地端口</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看端口占用</span></span><br><span class=\"line\">netstat -tunlp | grep 端口号</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231140315.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">5433</td>\n<td align=\"center\">5432</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>不打算通过客户端访问数据库的话，设自动也可以</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231129829.png\"></p>\n<h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>POSTGRES_USER</code></td>\n<td align=\"center\">数据库用户</td>\n</tr>\n<tr>\n<td align=\"center\"><code>POSTGRES_PASSWORD</code></td>\n<td align=\"center\">数据库密码</td>\n</tr>\n<tr>\n<td align=\"center\"><code>POSTGRES_DB</code></td>\n<td align=\"center\">数据库名称</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231103272.png\"></p>\n<h3 id=\"高级设置\"><a href=\"#高级设置\" class=\"headerlink\" title=\"高级设置\"></a>高级设置</h3><p>勾选了 <code>启用自动重新启动</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210805111932.png\"></p>\n<p>如果运行正常并且不报错的话，就可以进行 <code>calendso</code> 的安装了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231132340.png\"></p>\n<h2 id=\"安装-Calendso\"><a href=\"#安装-Calendso\" class=\"headerlink\" title=\"安装 Calendso\"></a>安装 Calendso</h2><h3 id=\"端口-1\"><a href=\"#端口-1\" class=\"headerlink\" title=\"端口\"></a>端口</h3><p>端口不冲突即可</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">5554</td>\n<td align=\"center\">3000</td>\n</tr>\n<tr>\n<td align=\"center\">5555</td>\n<td align=\"center\">5555</td>\n</tr>\n</tbody></table>\n<p>默认只有容器端口 <code>3000</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231549849.png\"></p>\n<p>需按 <code>+</code> 号新增端口</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231340673.png\"></p>\n<h3 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h3><p>点 <code>+</code> 号，<code>容器名称</code> 中找到上一步安装的 <code>postgres1</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231343422.png\"></p>\n<p>别名设置为 <code>db</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231344242.png\"></p>\n<h3 id=\"环境-1\"><a href=\"#环境-1\" class=\"headerlink\" title=\"环境\"></a>环境</h3><p>参数有点多，先跑起来，后面会简单介绍与 <code>Outlook.com Calendar</code> 集成，至于<code>Google Calendar</code>、<code>Zoom</code> 、发邮件、加密啥的，有需要的可以去官网查阅文档</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>DATABASE_URL</code></td>\n<td align=\"center\">数据库地址，默认为 <code>postgresql://$&#123;POSTGRES_USER&#125;:$&#123;POSTGRES_PASSWORD&#125;@db:5432/$&#123;POSTGRES_DB&#125;</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>BASE_URL</code></td>\n<td align=\"center\">url 地址，默认 <code>http://localhost:3000</code></td>\n</tr>\n</tbody></table>\n<p><code>DATABASE_URL</code> 根据前面数据库设置的参数进行拼接，完成后为：</p>\n<blockquote>\n<p>【注意】：因为是通过链接方式访问数据库，所以这里是数据库的 <code>容器端口</code> 而不是暴露出来的 <code>本机端口</code></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">postgresql:&#x2F;&#x2F;laosu:2s7fFB8aBVBz@db:5432&#x2F;calendso</span><br></pre></td></tr></table></figure>\n\n<p><code>BASE_URL</code> 指能访问到的 <code>Calendso</code> 的地址，如果只是在局域网使用</p>\n<blockquote>\n<p>对于群晖的 <code>docker</code> 容器是没法用 <code>loclahost</code> 的</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;群晖IP:5554</span><br></pre></td></tr></table></figure>\n\n<p>如果要在公网使用，改成域名即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231553574.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:5554</code>，就能看到登录界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231357804.png\"></p>\n<p>不要点红框中的 <code>Create an account</code>，会报错的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231358214.png\"></p>\n<p>而是要进入『终端机』</p>\n<blockquote>\n<p>不知道怎么进终端机，可以去老苏的博客搜索一下</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231400390.png\"></p>\n<p>输入 <code>npx prisma studio</code></p>\n<blockquote>\n<p>下载取决于你的网速，反正老苏觉得有点慢</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231403405.png\"></p>\n<p>新开一个浏览器窗口输入 <code>http://群晖IP:5555</code>，下载完成前只有几个框和闪烁的 <code>Getting things ready</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231406488.png\" alt=\"下载完成前\"></p>\n<p>下载完成之后可以选择 <code>Model</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231452854.png\"></p>\n<p>选择 <code>User</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231456105.png\"></p>\n<p>点 <code>Add Record</code></p>\n<blockquote>\n<p>密码需要先到 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9iY3J5cHQtZ2VuZXJhdG9yLmNvbS8=\">https://bcrypt-generator.com<i class=\"fa fa-external-link-alt\"></i></span> 做加密处理</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231501420.png\"></p>\n<p>只要填 <code>id</code> 、<code>email</code> 、<code>password</code> 三项，完成后点 <code>Save 1 change</code></p>\n<blockquote>\n<p>其他的可以在登录后，在设置中修改</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231529295.png\"></p>\n<p>回到 <code>5554</code> 端口的登录界面，用刚刚创建的账号登录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231532152.png\"></p>\n<p>登陆成功后的主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231540063.png\"></p>\n<h2 id=\"反向代理\"><a href=\"#反向代理\" class=\"headerlink\" title=\"反向代理\"></a>反向代理</h2><p>在做下一步集成时，需要先通过反代实现 <code>https</code> 协议访问，因为回调地址只支持 <code>https</code> 协议</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231718510.png\"></p>\n<p>完成之后需要修改容器环境变量的 <code>BASE_URL</code>，否则登录成功后跳转的地址会是局域网地址</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231729370.png\"></p>\n<p>能通过域名正常访问之后，再进行第三方的集成</p>\n<h2 id=\"集成-Outlook-日历\"><a href=\"#集成-Outlook-日历\" class=\"headerlink\" title=\"集成 Outlook 日历\"></a>集成 Outlook 日历</h2><p>需要获取 <code>Microsoft Graph</code> 客户端 <code>ID</code> 和密钥，这个在之前集成 <code>OneDrive</code> 时讲过</p>\n<ol>\n<li><p> 打开 <code>Azure 应用注册</code> ：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3J0YWwuYXp1cmUuY29tLyNibGFkZS9NaWNyb3NvZnRfQUFEX0lBTS9BY3RpdmVEaXJlY3RvcnlNZW51QmxhZGUvUmVnaXN0ZXJlZEFwcHM=\">https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredApps<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>新注册应用</p>\n</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231707210.png\"></p>\n<ul>\n<li>应用的名称</li>\n<li>选择账户类型为 <code>任何组织目录(任何 Azure AD 目录 - 多租户)中的帐户和个人 Microsoft 帐户(例如，Skype、Xbox)</code></li>\n<li>重定向 URI：也就是回调地址必须以 “HTTPS” 或 “<span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdCIv\">http://localhost&quot;<i class=\"fa fa-external-link-alt\"></i></span> 开头，默认地址为 ： <code>&lt;Calendso 的公网地址&gt; /api/integrations/office365calendar/callback</code>，将<code>&lt;Calendso 的公网地址&gt;</code> 替换为 <code>https://cal.laosu.ml</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231722342.png\"></p>\n<ol start=\"3\">\n<li>注册成功后，<code>应用程序（客户端）ID</code> 作为<code>MS_GRAPH_CLIENT_ID</code> 属性值</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231739277.png\"></p>\n<ol start=\"4\">\n<li><code>添加证书或机密</code> –&gt; <code>新客户端密码</code></li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231742111.png\"></p>\n<p>将 <code>值</code> 作为 <code>MS_GRAPH_CLIENT_SECRET</code> 属性值</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231745798.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>MS_GRAPH_CLIENT_ID</code></td>\n<td align=\"center\">客户端 ID</td>\n</tr>\n<tr>\n<td align=\"center\"><code>MS_GRAPH_CLIENT_SECRET</code></td>\n<td align=\"center\">客户端密码</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231749431.png\"></p>\n<p><code>App Store</code> –&gt; <code>+ Connect a new App</code>，比默认的多了 <code>Office 365 / Outlook.com Calendar</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231751582.png\"></p>\n<p>点 <code>add</code> 后需要授权</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231754721.png\"></p>\n<p>添加成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109231755727.png\"></p>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><ol>\n<li> 设置中完善信息</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241113490.png\"></p>\n<ol start=\"2\">\n<li>设置可用时间，也就是别人可以跟你约的时间</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241058780.png\"></p>\n<ol start=\"3\">\n<li>创建新的事件类型</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241121017.png\"></p>\n<p>可以选择会议的类型</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241124878.png\"></p>\n<p>点 <code>Show advanced settings</code> 则可以更详细的设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241126523.png\"></p>\n<p>添加完成</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241129498.png\"></p>\n<blockquote>\n<p>这里的 <code>preview</code> 和 <code>copy link</code> 都有问题，取不到用户名，可以在链接地址上手动改，也可以进到里面去再 <code>preview</code> 或者 <code>copy link</code> </p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241131785.png\"></p>\n<ol start=\"4\">\n<li>分享链接</li>\n</ol>\n<blockquote>\n<p>这里的 <code>preview</code> 没问题，但是 <code>copy link</code> 是不带端口的，如果你没有备案，记得分享的时候要手动添加端口号</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241135890.png\"></p>\n<p>对方收到链接，就可以根据自己的时间和你设定的可用时间进行预约了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241146471.png\"></p>\n<p>预约完成</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241147054.png\"></p>\n<p>在你的 <code>Outlook</code> 日历会看到预约成功的事件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241148893.png\"></p>\n<p>这种预约方式，可以帮助我们减少来回沟通的时间。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>calendso/calendso: Scheduling infrastructure for absolutely everyone.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NhbGVuZHNvL2NhbGVuZHNv\">https://github.com/calendso/calendso<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>calendso/docker: The Docker configuration for Calendso is an effort powered by people within the community. Calendso does not provide official support for Docker, but we will accept fixes and documentation. Use at your own risk.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NhbGVuZHNvL2RvY2tlcg==\">https://github.com/calendso/docker<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Cal.com | Open Scheduling Infrastructure<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jYWwuY29tLw==\">https://cal.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>3400 Star！知名日程安排工具的开源替代品_osfront的博客-CSDN博客<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L29zZnJvbnQvYXJ0aWNsZS9kZXRhaWxzLzExNjI0MjE3Mg==\">https://blog.csdn.net/osfront/article/details/116242172<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Exploring Calendso, an open-source Calendly alternative - YouTube<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1UYUlRaEc4QUwwdw==\">https://www.youtube.com/watch?v=TaIQhG8AL0w<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","日程安排"]},{"title":"支持手绘风格的白板Excalidraw","url":"/2021/11/12/%E6%89%8B%E7%BB%98%E9%A3%8E%E6%A0%BC%E7%9A%84%E7%99%BD%E6%9D%BFExcalidraw/","content":"<p><strong>什么是 Excalidraw ?</strong></p>\n<blockquote>\n<p><code>Excalidraw</code> 是一款手绘风格流程图、示意图、架构图在线绘制工具，也可以作为会议画板使用，支持协同和端到端的加密。</p>\n</blockquote>\n<p>老苏之前写过类似应用：</p>\n<ul>\n<li><a href=\"https://laosu.ml/2020/05/10/%E5%85%8D%E8%B4%B9%E5%9C%A8%E7%BA%BF%E6%B5%81%E7%A8%8B%E5%9B%BEDraw.io/\">免费在线流程图Draw.io</a></li>\n<li><a href=\"https://laosu.ml/2020/12/07/%E5%8D%8F%E5%90%8C%E5%B7%A5%E4%BD%9C%E4%B9%8B%E7%94%B5%E5%AD%90%E7%99%BD%E6%9D%BFwbo/?highlight=%E7%99%BD%E6%9D%BF\">协同工作之电子白板wbo</a></li>\n</ul>\n<p>而 <code>Excalidraw</code> 有点像是两者的结合体，既像 <code>wbo</code> 一样具有常用的白板功能，又可以像 <code>Draw.io</code> 一样支持各种图库</p>\n<p>官方试用地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9leGNhbGlkcmF3LmNvbS8=\">https://excalidraw.com<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>excalidraw</code> ，选择第一个 <code>excalidraw/excalidraw</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011127853.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>直接用了默认的端口 <code>2480</code> </p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>2480</code></td>\n<td align=\"center\"><code>80</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011242511.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:2480</code> 就能看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011247932.png\"></p>\n<h2 id=\"基本功能\"><a href=\"#基本功能\" class=\"headerlink\" title=\"基本功能\"></a>基本功能</h2><p>界面简洁，上手简单，操作习惯和大部分制图软件相似，具备白板所需要的基本功能，提供了方形、圆形、自由画笔和箭头直线等常用图形工具</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011303989.png\"></p>\n<p>支持导出 <code>png</code>、<code>svg</code> 两种图像格式</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011307356.png\"></p>\n<p>支持保存到本地，需要时可以导入继续编辑</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011321996.png\"></p>\n<h2 id=\"公共图库\"><a href=\"#公共图库\" class=\"headerlink\" title=\"公共图库\"></a>公共图库</h2><p>除了基本的绘图功能外，<code>Excalidraw</code> 还提供了库功能</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011327250.png\"></p>\n<p>点 <code>浏览库</code>，会新开一个页面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011329281.png\"></p>\n<p>可以 <code>➡️ Add to Excalidraw</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011330639.png\"></p>\n<p>直接拖拽到编辑区</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011335665.png\"></p>\n<p>可以根据需要添加，都是手绘风格的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011336152.png\"></p>\n<p>如果经常做分析，可以试试 <code>Data Viz</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011341973.png\"></p>\n<p>支持从 <code>Excel</code> 中 <code>ctrl+c</code> 复制表格</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011632363.png\"></p>\n<p>然后在 <code>Excalidraw</code> 中 <code>ctrl+v</code> 粘贴，选择好图表类型</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011633299.png\"></p>\n<p>自动生成图表</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011633401.png\"></p>\n<h2 id=\"协作功能\"><a href=\"#协作功能\" class=\"headerlink\" title=\"协作功能\"></a>协作功能</h2><p>这个 <code>docker</code> 实际上只是 <code>Excalidraw</code> 客户端，所以你创建的实例不支持共享或协作功能</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011253950.png\"></p>\n<p>我们自己搭建的是启动不了会议的，而官网的则可以</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011255162.png\"></p>\n<h1 id=\"Obsidian-插件\"><a href=\"#Obsidian-插件\" class=\"headerlink\" title=\"Obsidian 插件\"></a>Obsidian 插件</h1><blockquote>\n<p>这个和 <code>docker</code> 本身已经没有关系，是 <code>Excalidraw</code> 的另一种应用场景</p>\n</blockquote>\n<p>在 <code>Obsidian</code> 的 <code>设置</code> –&gt; <code>第三方插件</code> –&gt; <code>社区插件</code> –&gt; <code>浏览</code> 中，找到 <code>Excalidraw</code>，点 <code>安装</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011547988.png\"></p>\n<p>安装完成后，默认并没有启用</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011553341.png\"></p>\n<p>启用后，左侧的图标会多出像回形针（领带？笔尖？）的 <code>Excalidraw</code> 图标</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011556181.png\"></p>\n<p>使用方法是完全一样的，除了库的加载方式不能再使用 <code>➡️ Add to Excalidraw</code> ，而是要先 <code>⬇️ Download</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011603244.png\"></p>\n<p>画的图默认在库根目录下的 <code>Excalidraw</code> 目录中</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>excalidraw/excalidraw: Virtual whiteboard for sketching hand-drawn like diagrams<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2V4Y2FsaWRyYXcvZXhjYWxpZHJhdw==\">https://github.com/excalidraw/excalidraw<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Excalidraw<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9leGNhbGlkcmF3LmNvbS8=\">https://excalidraw.com<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Excalidraw在线手绘图表工具，帮你摆脱一成不变 - 超级PDF<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly94cGRmLm5ldC93aWtpL2tub3dsZWRnZS8xMzg5OTcwMzQwNDEwNTYwNTEyLmh0bWw=\">https://xpdf.net/wiki/knowledge/1389970340410560512.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","白板","流程图"]},{"title":"将webdav挂载成为群晖的本地盘","url":"/2021/11/10/%E5%B0%86webdav%E6%8C%82%E8%BD%BD%E6%88%90%E4%B8%BA%E7%BE%A4%E6%99%96%E7%9A%84%E6%9C%AC%E5%9C%B0%E7%9B%98/","content":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>本文记录的是国庆节期间在家做的一个研究和探索的过程，之所以没有提 <code>CloudDrive</code>，是老苏最终想实现的是一个通用的 <code>WebDAV</code> 客户端，而不仅仅是挂载阿里云盘。</p>\n<blockquote>\n<p>关于 <code>CloudDrive</code> 可以看老苏之前写的 『 <a href=\"https://laosu.ml/2021/08/20/%E9%80%82%E5%90%88%E5%9B%BD%E5%86%85%E7%BD%91%E7%9B%98%E7%9A%84%E5%85%8D%E8%B4%B9%E6%8C%82%E8%BD%BD%E5%B7%A5%E5%85%B7CloudDrive/\">适合国内网盘的免费挂载工具CloudDrive</a> 』</p>\n</blockquote>\n<h1 id=\"提出问题\"><a href=\"#提出问题\" class=\"headerlink\" title=\"提出问题\"></a>提出问题</h1><p>老苏的无损音乐放在了阿里云盘，阿里云盘又通过 <code>Docker</code> 支持了 <code>WebDAV</code>，现在的问题是怎么挂载到群晖，使之成为一个能被 <code>Airsonic</code> 等流媒体软件直接使用的音乐库？</p>\n<blockquote>\n<p>关于阿里云盘支持 <code>WebDAV</code>，可以看老苏之前写的</p>\n<ul>\n<li>『 <a href=\"https://laosu.ml/2021/08/04/%E8%83%BD%E5%B0%86%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98%E6%8C%82%E8%BD%BD%E4%B8%BAwebdav%E7%9A%84webdav-aliyundriver/\">能将阿里云盘挂载为webdav的webdav-aliyundriver</a> 』</li>\n<li>『 <a href=\"https://laosu.ml/2021/10/04/%E8%83%BD%E5%9C%A8%E8%B7%AF%E7%94%B1%E5%99%A8%E9%87%8C%E6%8C%82%E8%BD%BD%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98%E7%9A%84aliyundrive-webdav/\">能在路由器里挂载阿里云盘的aliyundrive-webdav</a> 』</li>\n</ul>\n</blockquote>\n<p>一开始老苏选择了 <code>远程连接</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110041733395.png\"></p>\n<p>选择 <code>WebDAV</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110041734664.png\"></p>\n<p>因为没设置 <code>WebDAV</code> 账号、密码，所以只需要填 <code>IP</code> 和端口</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110041736204.png\"></p>\n<p>应用之后就可以像访问群晖的本地盘一样使用了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110041739661.png\"></p>\n<p>但是老苏发现这种方式不能被 <code>docker</code> 识别，因为在 <code>添加文件夹</code> 中找不到我们刚才挂载成功的 <code>WebDAV</code> 目录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110082045516.png\"></p>\n<h1 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h1><p>老苏找到了 <code>davfs2</code>，这是一个 <code>Linux</code> 文件系统驱动程序，允许您把 <code>WebDAV</code> 资源挂载到您的 <code>Linux</code> 文件系统中，就像它们是本地磁盘一样。但是唯一的问题是需要下源代码自己编译，这对大部分人来说还是比较麻烦的。</p>\n<p>当然也有现成的 <code>WebDAV Client</code>，比如 <code>efrecon/webdav-client</code>。</p>\n<p>老苏抱着折（学习）腾（研究）的目的，还是想自己尝试基于 <code>davfs2</code> 构建一个 <code>docker</code> 版的 <code>WebDAV Client</code>。</p>\n<h1 id=\"构建镜像\"><a href=\"#构建镜像\" class=\"headerlink\" title=\"构建镜像\"></a>构建镜像</h1><blockquote>\n<p>如果你不想自己构建，可以跳过，直接阅读下一章节</p>\n</blockquote>\n<p>老苏参考了很多的案例，形成了最终的 <code>Dockerfile</code>，有两个特点记录一下</p>\n<ul>\n<li>采用了 <code>tini</code> 做进程管理</li>\n<li>采用了死循环来防止脚本退出</li>\n</ul>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> ubuntu:<span class=\"number\">16.04</span></span><br><span class=\"line\"><span class=\"keyword\">MAINTAINER</span> laosu&lt;wbsu2003@gmail.com&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> apt-get update \\</span></span><br><span class=\"line\"><span class=\"bash\">  &amp;&amp; apt-get install -y davfs2 \\</span></span><br><span class=\"line\"><span class=\"bash\">  &amp;&amp; mkdir -p /mnt/webdrive \\</span></span><br><span class=\"line\"><span class=\"bash\">  &amp;&amp; apt-get clean \\</span></span><br><span class=\"line\"><span class=\"bash\">  &amp;&amp; rm -rf /tmp/* /var/lib/apt/lists/* /var/tmp/*</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">VOLUME</span><span class=\"bash\"> /mnt/webdrive</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> ./start.sh /usr/<span class=\"built_in\">local</span>/bin</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> chmod +x /usr/<span class=\"built_in\">local</span>/bin/start.sh</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Add Tini</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> TINI_VERSION v0.<span class=\"number\">19.0</span></span><br><span class=\"line\"><span class=\"comment\"># ADD https://github.com/krallin/tini/releases/download/$&#123;TINI_VERSION&#125;/tini /tini</span></span><br><span class=\"line\"><span class=\"keyword\">ADD</span><span class=\"bash\"> https://hub.fastgit.org/krallin/tini/releases/download/<span class=\"variable\">$&#123;TINI_VERSION&#125;</span>/tini /tini</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> chmod +x /tini</span></span><br><span class=\"line\"><span class=\"keyword\">ENTRYPOINT</span><span class=\"bash\"> [<span class=\"string\">&quot;/tini&quot;</span>, <span class=\"string\">&quot;--&quot;</span>]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Run your program under Tini</span></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"bash\"> [ <span class=\"string\">&quot;/usr/local/bin/start.sh&quot;</span> ]</span></span><br></pre></td></tr></table></figure>\n\n<p>下面👇是 <code>start.sh</code> 文件，最后增加了一个死循环，目的是不要让这个脚本退出，否则拉起的进程也退出了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">#!/bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\"># Set defaults</span><br><span class=\"line\">USER=$&#123;WEBDRIVE_USER&#125;</span><br><span class=\"line\">PASSWORD=$&#123;WEBDRIVE_PASSWORD&#125;</span><br><span class=\"line\">URL=$&#123;WEBDRIVE_URL&#125;</span><br><span class=\"line\">FOLDER_USER=$&#123;<span class=\"attr\">PUID</span>:-<span class=\"number\">0</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">echo <span class=\"string\">&quot;$URL $USER $PASSWORD&quot;</span> &gt;&gt; <span class=\"regexp\">/etc/</span>davfs2/secrets</span><br><span class=\"line\"></span><br><span class=\"line\"># Create user</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ $FOLDER_USER -gt <span class=\"number\">0</span> ]; then</span><br><span class=\"line\">  useradd webdrive -u $FOLDER_USER -N -G users</span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\"># Mount the webdav drive </span><br><span class=\"line\">echo <span class=\"string\">&quot;--Mount begin--&quot;</span></span><br><span class=\"line\">mount -t davfs $URL /mnt/webdrive -o uid=$FOLDER_USER,gid=users,dir_mode=<span class=\"number\">755</span>,file_mode=<span class=\"number\">755</span></span><br><span class=\"line\">echo <span class=\"string\">&quot;--Mount end--&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"># Just keep this script running </span><br><span class=\"line\"><span class=\"keyword\">while</span> [[ <span class=\"literal\">true</span> ]]; <span class=\"keyword\">do</span> </span><br><span class=\"line\">   sleep <span class=\"number\">1</span> </span><br><span class=\"line\">   echo <span class=\"string\">&quot;--loop--&quot;</span></span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n\n<p>构建镜像和容器运行的基本命令如下👇</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 将 Dockerfile 和 start.sh 放在同一个目录</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 构建镜像</span></span><br><span class=\"line\">docker build -t wbsu2003/webdav-client:v1 .</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成容器</span></span><br><span class=\"line\">docker run -d \\</span><br><span class=\"line\">--name webdav-client</span><br><span class=\"line\">--privileged \\</span><br><span class=\"line\">--cap-add=SYS_ADMIN \\</span><br><span class=\"line\">--device /dev/fuse \\</span><br><span class=\"line\">-e WEBDRIVE_USER=&lt;username&gt; \\</span><br><span class=\"line\">-e WEBDRIVE_PASSWORD=&lt;password&gt; \\</span><br><span class=\"line\">-e WEBDRIVE_URL=http://url/webdav/ \\</span><br><span class=\"line\">-e PUID=1000 \\</span><br><span class=\"line\">-v &lt;host/path/to/folder&gt;:/mnt/webdrive:shared \\</span><br><span class=\"line\">wbsu2003/webdav-client:v1</span><br></pre></td></tr></table></figure>\n\n<p>举个栗子，下面是直接在编译 <code>Docker</code> 的 <code>CentOS</code> 上挂载 <code>webdav-aliyundriver</code> 映射的阿里云盘</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建共享挂载点</span></span><br><span class=\"line\">mount --<span class=\"built_in\">bind</span> /mnt /mnt</span><br><span class=\"line\">mount --make-shared /mnt</span><br><span class=\"line\"></span><br><span class=\"line\">docker run -d \\</span><br><span class=\"line\">--name webdav-client \\</span><br><span class=\"line\">--privileged \\</span><br><span class=\"line\">--device /dev/fuse \\</span><br><span class=\"line\">-e WEBDRIVE_USER=admin \\</span><br><span class=\"line\">-e WEBDRIVE_PASSWORD=123456 \\</span><br><span class=\"line\">-e WEBDRIVE_URL=http://192.168.0.199:8123/ \\</span><br><span class=\"line\">-e PUID=1000 \\</span><br><span class=\"line\">-v /mnt/webdav:/mnt/webdrive:shared \\</span><br><span class=\"line\">wbsu2003/webdav-client</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110110003595.png\"></p>\n<h1 id=\"群晖验证\"><a href=\"#群晖验证\" class=\"headerlink\" title=\"群晖验证\"></a>群晖验证</h1><p>安装方法和 <code>RcloneBrowser</code> 比较类似，如果你还不了解，可以看看老苏之前写的 『 <a href=\"https://laosu.ml/2021/06/21/%E7%BE%A4%E6%99%96%E4%B8%8A%E9%80%9A%E8%BF%87RcloneBrowser%E6%8C%82%E8%BD%BD%E4%BA%91%E7%9B%98/\">群晖上通过RcloneBrowser挂载云盘</a> 』</p>\n<h2 id=\"第一步、建目录\"><a href=\"#第一步、建目录\" class=\"headerlink\" title=\"第一步、建目录\"></a>第一步、建目录</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>webdav</code></p>\n<h2 id=\"第二步、共享挂载\"><a href=\"#第二步、共享挂载\" class=\"headerlink\" title=\"第二步、共享挂载\"></a>第二步、共享挂载</h2><blockquote>\n<p>如果你已经安装过 <code>RcloneBrowser</code> ，这一步可以跳过</p>\n</blockquote>\n<p>因为老苏映射的目录在 <code>volume1</code> 上，如果你的目录是其他的卷上，记得修改</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 共享挂载</span></span><br><span class=\"line\">mount --make-shared /volume1</span><br></pre></td></tr></table></figure>\n\n<p>不然后面 <code>mount</code> 的时候可能会遇到下面👇这样的错误</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker: Error response from daemon: linux mounts: path &#x2F;volume1&#x2F;docker&#x2F;webdav is mounted on &#x2F;volume1 but it is not a shared mount.</span><br></pre></td></tr></table></figure>\n\n<p>这条命令在群晖重启后需要重新执行，所以我们可以把这句命令，通过 <code>任务计划</code> 加到开机脚本中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210617233810.png\"></p>\n<p>这是一个触发任务，事件是开机</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210617233845.png\"></p>\n<p>邮件发不发看个人需要，主要是运行脚本</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210617233951.png\"></p>\n<h2 id=\"第三步、启动容器\"><a href=\"#第三步、启动容器\" class=\"headerlink\" title=\"第三步、启动容器\"></a>第三步、启动容器</h2><p>在 <code>ssh</code> 客户端中执行下面👇的命令即可</p>\n<blockquote>\n<p>除了挂载的卷，其他跟在 <code>CentOS</code> 上是一模一样的</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run -d \\</span><br><span class=\"line\">--name webdav-client \\</span><br><span class=\"line\">--privileged \\</span><br><span class=\"line\">--device /dev/fuse \\</span><br><span class=\"line\">-e WEBDRIVE_USER=admin \\</span><br><span class=\"line\">-e WEBDRIVE_PASSWORD=123456 \\</span><br><span class=\"line\">-e WEBDRIVE_URL=http://192.168.0.199:8123/ \\</span><br><span class=\"line\">-e PUID=1000 \\</span><br><span class=\"line\">-v /volume1/docker/webdav:/mnt/webdrive:shared \\</span><br><span class=\"line\">wbsu2003/webdav-client</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110121452684.png\"></p>\n<p>容器运行成功后，在 <code>FileStation</code> 中查看，已经获取到了云盘的目录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110121450349.png\"></p>\n<p>可以像本地资源一样使用，现在来试试 <code>Airsonic</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110121514166.png\"></p>\n<p>开始扫描，记得勾选 <code>快速模式</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110121516527.png\"></p>\n<p>但是播放就不行了，就算是预览个图片感觉都很慢，可能跟 <code>WebDAV</code> 的机制有关系，反正对老苏来说没有什么实际意义</p>\n<h1 id=\"遗留问题\"><a href=\"#遗留问题\" class=\"headerlink\" title=\"遗留问题\"></a>遗留问题</h1><ol>\n<li>和 <code>RcloneBrowser</code> 、<code>CloudDrive</code> 一样，在复制的时候也会报错，看来基于容器的 <code>fuse</code> 映射在群晖的 <code>FileStation</code> 上是无解的</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110121525049.png\"></p>\n<ol start=\"2\">\n<li><p>不支持密码和账号为空的 <code>WebDAV</code> 挂载，返回错误 <code>/sbin/mount.davfs:/etc/davfs2/secrets:69: malformed line</code>，但是因为问题 <code>1</code> 的缘故，老苏已经不想再继续下去</p>\n</li>\n<li><p>虽然没测坚果云，但老苏知道肯定不行，因为坚果云的 <code>WebDAV</code> 服务器不支持 <code>Class 1</code>，需要在 <code>davfs2.conf</code> 中改为 <code>ignore_dav_header 1</code>，老苏压根没做处理</p>\n</li>\n</ol>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>如果你需要一个通用的 <code>WebDAV Client</code>，建议去试试 <code>efrecon/webdav-client</code>，比老苏写的严谨，在容器停止的时候，做了 <code>unmount</code> 处理，规避了很多问题，比如导致 <code>FileStation</code> 不能列出文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110122253777.png\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 生成容器</span></span><br><span class=\"line\">docker run -it --rm \\</span><br><span class=\"line\">    --device /dev/fuse \\</span><br><span class=\"line\">    --cap-add SYS_ADMIN \\</span><br><span class=\"line\">    --security-opt <span class=\"string\">&quot;apparmor=unconfined&quot;</span> \\</span><br><span class=\"line\">    --env <span class=\"string\">&quot;WEBDRIVE_USERNAME=&lt;YourUserName&gt;&quot;</span> \\</span><br><span class=\"line\">    --env <span class=\"string\">&quot;WEBDRIVE_PASSWORD=&lt;SuperSecretPassword&gt;&quot;</span> \\</span><br><span class=\"line\">    --env <span class=\"string\">&quot;WEBDRIVE_URL=https://dav.box.com/dav&quot;</span> \\</span><br><span class=\"line\">    --env <span class=\"string\">&quot;DAVFS2_ASK_AUTH=0&quot;</span> \\</span><br><span class=\"line\">    -v /mnt/tmp:/mnt/webdrive:rshared \\</span><br><span class=\"line\">    efrecon/webdav-client</span><br></pre></td></tr></table></figure>\n\n<p>不过都是基于同样的技术实现的，所以遗留 <code>问题 1</code> 也同样存在，速度各方面也没太大的差异</p>\n<p>虽然不算达成了目标，但是在折腾的过程中还是学到了很多东西</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>volga629/davfs2: davfs2 is a Linux tool for connecting to WebDAV shares as though they were local disks.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3ZvbGdhNjI5L2RhdmZzMg==\">https://github.com/volga629/davfs2<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>davfs2.conf: Configuration file for mount.davfs - Linux Man Pages (5)<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc3lzdHV0b3JpYWxzLmNvbS9kb2NzL2xpbnV4L21hbi81LWRhdmZzMi5jb25mLw==\">https://www.systutorials.com/docs/linux/man/5-davfs2.conf/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>如何在一个Docker中同时运行多个程序进程?_dianfu2892的博客-程序员宅基地 - 程序员宅基地<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY3h5empkLmNvbS9hcnRpY2xlL2RpYW5mdTI4OTIvMTAxNDY2NTk0\">https://www.cxyzjd.com/article/dianfu2892/101466594<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>richardregeer/docker-davfs-webdisk: Use docker to mount a davfs webdisk<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3JpY2hhcmRyZWdlZXIvZG9ja2VyLWRhdmZzLXdlYmRpc2s=\">https://github.com/richardregeer/docker-davfs-webdisk<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>efrecon/docker-webdav-client: WebDAV client for Docker with easy access to all davfs2 options!<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2VmcmVjb24vZG9ja2VyLXdlYmRhdi1jbGllbnQ=\">https://github.com/efrecon/docker-webdav-client<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","WebDAV"]},{"title":"交互式在线辅导工具Nettu Meet","url":"/2021/11/08/%E4%BA%A4%E4%BA%92%E5%BC%8F%E5%9C%A8%E7%BA%BF%E8%BE%85%E5%AF%BC%E5%B7%A5%E5%85%B7Nettu%20Meet/","content":"<p><strong>什么是 Nettu Meet ？</strong></p>\n<blockquote>\n<p><code>Nettu Meet</code> 是一款开源的网络视频会议应用程序，专为交互式在线辅导而设计。支持音视频、白板共享、屏幕共享、文字聊天、文件共享，最厉害的是还能把数学图形插入白板。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110211631382.png\"></p>\n<p>官方提供的演示地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWV0Lm5ldHR1Ym9va2luZy5jb20v\">https://meet.nettubooking.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"构建镜像\"><a href=\"#构建镜像\" class=\"headerlink\" title=\"构建镜像\"></a>构建镜像</h1><blockquote>\n<p>如果你不想自己构建，可以跳过，直接阅读下一章节</p>\n</blockquote>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 前端构建</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> node:<span class=\"number\">16.5</span> as build_front</span><br><span class=\"line\"><span class=\"keyword\">LABEL</span><span class=\"bash\"> maintainer=laosu&lt;wbsu2003@gmail.com&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /app</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> /frontend/. .</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> npm install --registry=https://registry.npm.taobao.org</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> npm run build</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 后端构建</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> node:<span class=\"number\">16.5</span></span><br><span class=\"line\"><span class=\"comment\"># Install DEB dependencies and others.</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> sed -i s@/deb.debian.org/@/mirrors.aliyun.com/@g /etc/apt/sources.list \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; apt-get clean \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; apt-get update \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; apt-get install -y net-tools build-essential valgrind supervisor nginx</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /app</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> /server/. .</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> npm install --registry=https://registry.npm.taobao.org</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 环境变量</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> NETTU_REDIS_HOST=<span class=\"string\">&quot;host.docker.internal&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> NETTU_REDIS_PORT=<span class=\"number\">6379</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> MONGODB_CONNECTION_STRING=mongodb://root:rootpassword@host.docker.internal:<span class=\"number\">27017</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> MONGODB_NAME=nettu-meeting</span><br><span class=\"line\"><span class=\"keyword\">ENV</span> FRONTEND_URL=<span class=\"string\">&quot;https://meet.nettubooking.com&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 整体打包</span></span><br><span class=\"line\"><span class=\"comment\">## nginx</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> rm -f /etc/nginx/sites-enabled/default </span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> rm -f /etc/nginx/sites-available/default</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\">  ./default.conf /etc/nginx/conf.d/default.conf</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## supervisor</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\">  ./supervisord.conf /etc/supervisord.conf</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 前端静态文件\t</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> --from=build_front /app/build/ /usr/share/nginx/html</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\">  ./replace_api_url.sh ./replace_api_url.sh</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> chmod +x replace_api_url.sh</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">80</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ENTRYPOINT</span><span class=\"bash\"> [<span class=\"string\">&quot;supervisord&quot;</span>,<span class=\"string\">&quot;-c&quot;</span>,<span class=\"string\">&quot;/etc/supervisord.conf&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n\n<p> <code>nginx</code> 设置文件 <code>default.conf</code></p>\n<blockquote>\n<p>老苏一直没有好好研究 <code>nginx</code>，仅限于基本的转发</p>\n</blockquote>\n<figure class=\"highlight nginx\"><table><tr><td class=\"code\"><pre><span class=\"line\">server</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> localhost;</span><br><span class=\"line\">\t<span class=\"attribute\">root</span> /usr/share/nginx/html;  </span><br><span class=\"line\">    <span class=\"attribute\">index</span> index.html index.htm;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 1.转给前端处理</span></span><br><span class=\"line\">    <span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">alias</span> /usr/share/nginx/html/;</span><br><span class=\"line\">        <span class=\"attribute\">try_files</span> $uri $uri/ /index.html;</span><br><span class=\"line\">\t\t<span class=\"comment\">#try_files $uri$args $uri$args/ /index.html;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 2.转给后端处理</span></span><br><span class=\"line\">    <span class=\"attribute\">location</span><span class=\"regexp\"> ^~</span> /api/ &#123;</span><br><span class=\"line\">\t    <span class=\"attribute\">proxy_pass</span> http://127.0.0.1:5000/;</span><br><span class=\"line\">\t\t<span class=\"attribute\">proxy_redirect</span> default;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"attribute\">error_page</span>   <span class=\"number\">500</span> <span class=\"number\">502</span> <span class=\"number\">503</span> <span class=\"number\">504</span>  /50x.html;</span><br><span class=\"line\">    <span class=\"attribute\">location</span> = /50x.html &#123;</span><br><span class=\"line\">        <span class=\"attribute\">root</span>   /usr/share/nginx/html;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>replace_api_url.sh</code> 用于替换 <code>ENV</code> 设置的 <code>FRONTEND_URL</code></p>\n<blockquote>\n<p>从代码看，除了调试模式外，前端地址均为官方的演示地址。当我们在主界面点 <code>New Meeting</code> 时，就会跳转到官网地址，这显然不是我们期望的，因此要替换掉</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110232319835.png\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/usr/bin/env sh  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">find <span class=\"string\">&#x27;/usr/share/nginx/html&#x27;</span> -name <span class=\"string\">&#x27;*.js&#x27;</span> -<span class=\"built_in\">exec</span> sed -i -e <span class=\"string\">&#x27;s,&#x27;</span>https://meet.nettubooking.com<span class=\"string\">&#x27;,&#x27;</span><span class=\"string\">&quot;<span class=\"variable\">$FRONTEND_URL</span>&quot;</span><span class=\"string\">&#x27;,g&#x27;</span> &#123;&#125; \\; </span><br><span class=\"line\">  </span><br><span class=\"line\">nginx -g <span class=\"string\">&quot;daemon off;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p><code>supervisord.conf</code> 文件是新增用来控制进程的，前端 <code>app</code> 是运行在 <code>nginx</code> 上的静态页面，后端 <code>srv</code> 基于 <code>node.js</code></p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[include]</span></span><br><span class=\"line\"><span class=\"attr\">files</span> = /etc/supervisor/conf.d/*.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[program:app]</span></span><br><span class=\"line\"><span class=\"attr\">command</span>=./replace_api_url.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[program:srv]</span></span><br><span class=\"line\"><span class=\"attr\">command</span>=npm start</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#directory will be any folder where you wnat supervisor to cd before executing.</span></span><br><span class=\"line\"><span class=\"comment\">#directory=/project </span></span><br><span class=\"line\"><span class=\"attr\">autostart</span>=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">autorestart</span>=<span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">startretries</span>=<span class=\"number\">3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#user will be anyone you want but make sure that user will have the enough privilage.</span></span><br><span class=\"line\"><span class=\"attr\">user</span>=root</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[supervisord]</span></span><br><span class=\"line\"><span class=\"attr\">nodaemon</span>=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">logfile</span>=/tmp/supervisord.log</span><br><span class=\"line\"><span class=\"attr\">pidfile</span>=/tmp/supervisord.pid</span><br><span class=\"line\"><span class=\"attr\">loglevel</span>=debug</span><br><span class=\"line\"><span class=\"attr\">logfile_maxbytes</span>=<span class=\"number\">10</span>MB</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[supervisorctl]</span></span><br></pre></td></tr></table></figure>\n\n<p><code>docker-compose.yml</code> 是一键启动用的，在官方的基础上增加了 <code>nettumeet</code> 部分</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">&#x27;3.7&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">    <span class=\"attr\">mongodb:</span></span><br><span class=\"line\">        <span class=\"attr\">image:</span> <span class=\"string\">mongo:latest</span></span><br><span class=\"line\">        <span class=\"attr\">environment:</span></span><br><span class=\"line\">            <span class=\"attr\">MONGO_INITDB_ROOT_USERNAME:</span> <span class=\"string\">root</span></span><br><span class=\"line\">            <span class=\"attr\">MONGO_INITDB_ROOT_PASSWORD:</span> <span class=\"string\">rootpassword</span></span><br><span class=\"line\">            <span class=\"attr\">MONGO_INITDB_DATABASE:</span> <span class=\"string\">nettu-meeting</span></span><br><span class=\"line\">        <span class=\"attr\">ports:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"number\">27017</span><span class=\"string\">:27017</span></span><br><span class=\"line\">        <span class=\"attr\">volumes:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">mongodb_data_nettumeet_container:/data/db</span></span><br><span class=\"line\">        <span class=\"attr\">logging:</span></span><br><span class=\"line\">            <span class=\"attr\">driver:</span> <span class=\"string\">none</span></span><br><span class=\"line\">        <span class=\"attr\">container_name:</span> <span class=\"string\">nettu_mongodb</span></span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"attr\">redis:</span></span><br><span class=\"line\">        <span class=\"attr\">image:</span> <span class=\"string\">redis</span></span><br><span class=\"line\">        <span class=\"attr\">ports:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"number\">6379</span><span class=\"string\">:6379</span></span><br><span class=\"line\">        <span class=\"attr\">logging:</span></span><br><span class=\"line\">            <span class=\"attr\">driver:</span> <span class=\"string\">none</span></span><br><span class=\"line\">        <span class=\"attr\">container_name:</span> <span class=\"string\">nettu_redis</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">elasticsearch:</span></span><br><span class=\"line\">        <span class=\"attr\">image:</span> <span class=\"string\">docker.elastic.co/elasticsearch/elasticsearch:7.1.0</span></span><br><span class=\"line\">        <span class=\"attr\">environment:</span> </span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">discovery.type=single-node</span></span><br><span class=\"line\">        <span class=\"attr\">container_name:</span> <span class=\"string\">nettu_elasticsearch</span></span><br><span class=\"line\">        <span class=\"attr\">ports:</span> [<span class=\"string\">&#x27;9200:9200&#x27;</span>]</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"attr\">kibana:</span></span><br><span class=\"line\">        <span class=\"attr\">image:</span> <span class=\"string\">docker.elastic.co/kibana/kibana:7.1.0</span></span><br><span class=\"line\">        <span class=\"attr\">container_name:</span> <span class=\"string\">nettu_kibana</span></span><br><span class=\"line\">        <span class=\"attr\">ports:</span> [<span class=\"string\">&#x27;5601:5601&#x27;</span>]</span><br><span class=\"line\">        <span class=\"attr\">depends_on:</span> [<span class=\"string\">&#x27;elasticsearch&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">nettumeet:</span></span><br><span class=\"line\">        <span class=\"attr\">image:</span> <span class=\"string\">wbsu2003/nettu-meet:v1</span></span><br><span class=\"line\">        <span class=\"attr\">environment:</span></span><br><span class=\"line\">            <span class=\"attr\">NETTU_REDIS_HOST:</span> <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.114</span></span><br><span class=\"line\">            <span class=\"attr\">NETTU_REDIS_PORT:</span> <span class=\"number\">6379</span></span><br><span class=\"line\">            <span class=\"attr\">MONGODB_CONNECTION_STRING:</span> <span class=\"string\">mongodb://root:rootpassword@192.168.0.114:27017</span></span><br><span class=\"line\">            <span class=\"attr\">MONGODB_NAME:</span> <span class=\"string\">nettu-meeting</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">NETTU_ELASTIC_URL:</span> <span class=\"string\">http://192.168.0.114:9200</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">FRONTEND_URL:</span> <span class=\"string\">http://meet.laosu.ml</span></span><br><span class=\"line\">        <span class=\"attr\">container_name:</span> <span class=\"string\">nettu_meet</span></span><br><span class=\"line\">        <span class=\"attr\">ports:</span> </span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"number\">5310</span><span class=\"string\">:80</span></span><br><span class=\"line\">        <span class=\"attr\">depends_on:</span> [<span class=\"string\">&#x27;redis&#x27;</span>] </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">volumes:</span></span><br><span class=\"line\">    <span class=\"attr\">mongodb_data_nettumeet_container:</span> </span><br></pre></td></tr></table></figure>\n\n<p>构建镜像和容器运行的基本命令如下👇</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载代码</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/fmeringdal/nettu-meet.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 或者镜像站点</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://hub.fastgit.org/fmeringdal/nettu-meet.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> nettu-meet</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 Dockerfile 、supervisord.conf 、default.conf 、replace_api_url.sh 四个文件放进代码目录中</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 构建镜像</span></span><br><span class=\"line\">docker build -t wbsu2003/nettu-meet:v1 .</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 docker-compose.yml 文件放入安装目录</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 一键启动</span></span><br><span class=\"line\">docker-compose up -d</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 一键删除</span></span><br><span class=\"line\">docker-compose down</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># --------调试-------------</span></span><br><span class=\"line\"><span class=\"comment\"># 进入容器</span></span><br><span class=\"line\">docker <span class=\"built_in\">exec</span> --user root -it nettu_meet /bin/bash</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\"># 将生成的静态文件拷贝到容器外  </span></span><br><span class=\"line\">docker cp nettu_meet:/usr/share/nginx/html/. ./dist  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\"># 将生成的静态文件拷贝到容器内  </span></span><br><span class=\"line\">docker cp /dist/. nettu_meet:/usr/share/nginx/html  </span><br><span class=\"line\"><span class=\"comment\"># ------------------------</span></span><br></pre></td></tr></table></figure>\n\n<p>一键启动</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110221643904.png\"></p>\n<p>一键删除</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110221648590.png\"></p>\n<h1 id=\"安装运行\"><a href=\"#安装运行\" class=\"headerlink\" title=\"安装运行\"></a>安装运行</h1><h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><p>安装完成之后，不能像往常一样用 <code>http://群晖IP:5310</code> 访问，否则主界面会是一片空白的，<code>开发者工具</code> 中会看到下面这样的错误</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">state.ts:586 Uncaught TypeError: Cannot set property &#39;ondevicechange&#39; of undefined</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110232118791.png\"></p>\n<p>之前老苏已经在多篇涉及到网页音视频的文章中提到，必须要用 <code>https</code> 协议，所以先要做反代处理</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110232120986.png\"></p>\n<h2 id=\"一键启动\"><a href=\"#一键启动\" class=\"headerlink\" title=\"一键启动\"></a>一键启动</h2><ul>\n<li>在群晖 <code>docker</code> 目录中新建子目录 <code>nettumeet</code>，再建一个子目录 <code>mongodb</code></li>\n<li>下载 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dic3UyMDAzL0RvY2tlcmZpbGUvcmF3L21haW4vTmV0dHUlMjBNZWV0L21lZXQuemlw\">https://github.com/wbsu2003/Dockerfile/raw/main/Nettu%20Meet/meet.zip<i class=\"fa fa-external-link-alt\"></i></span> 文件，如果 <code>github</code> 抽风了，可以从镜像站点下载 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9odWIuZmFzdGdpdC5vcmcvd2JzdTIwMDMvRG9ja2VyZmlsZS9yYXcvbWFpbi9OZXR0dSUyME1lZXQvbWVldC56aXA=\">https://hub.fastgit.org/wbsu2003/Dockerfile/raw/main/Nettu%20Meet/meet.zip<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>将 <code>meet.zip</code> 解压到 <code>nettumeet</code> 目录</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110240926095.png\"></p>\n<p><code>docker-compose.yml</code> 中可能需要修改的地方老苏都做了注释</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110241309187.png\"></p>\n<ul>\n<li>用 <code>SSH</code> 客户端登录到群晖，在 <code>nettumeet</code> 目录中执行一键启动</li>\n</ul>\n<blockquote>\n<p>老苏常用的<code>SSH</code> 客户端主要是 <code>Finalshell</code> 和 <code>PuTTY</code></p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入 nettumeet 目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /volume2/docker/nettumeet</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 一键启动</span></span><br><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>第一次执行会有拉取镜像的动作</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110240944839.png\"></p>\n<blockquote>\n<p>如果最终 <code>5</code> 个容器都是 <code>done</code> ，表示创建成功！</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110241254312.png\"></p>\n<p>在 <code>docker</code> 容器中能看到👇下面 <code>5</code> 个容器正在运行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110241252788.png\"></p>\n<h2 id=\"开始会议\"><a href=\"#开始会议\" class=\"headerlink\" title=\"开始会议\"></a>开始会议</h2><p>在浏览器中输入 <code>https://meet.laosu.ml</code> 就能看到主界面</p>\n<blockquote>\n<p>第一次时间可能会有点长</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110232121829.png\"></p>\n<p>点 <code>New Meeting</code> 创建一个新的会议</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110232137436.png\"></p>\n<p>如果浏览器不支持会显示</p>\n<blockquote>\n<p>判断的代码应该有 <code>bug</code> ，反正老苏用 <code>chrome 95</code> 都不行，而 <code>Edge 95</code> 就没问题</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110232138803.png\"></p>\n<p>输入名字后点 <code>JOIN MEETING</code> 就可以参加会议</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110241217889.png\"></p>\n<p>将浏览器地址栏中的地址发给另一台机器就可以开始开会了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110241221583.png\"></p>\n<h1 id=\"已知问题\"><a href=\"#已知问题\" class=\"headerlink\" title=\"已知问题\"></a>已知问题</h1><p><code>kibana</code> 运行一段时间，比较容易挂掉，所以最好勾选<code>启用自动重新启动</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110281723198.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>fmeringdal/nettu-meet: Open source video conferencing system for tutors.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ZtZXJpbmdkYWwvbmV0dHUtbWVldA==\">https://github.com/fmeringdal/nettu-meet<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Nettu Meet<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWV0Lm5ldHR1Ym9va2luZy5jb20v\">https://meet.nettubooking.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>How can I fix error: ConfigurationError: Missing node(s) option for winston-elasticsearch? - Elastic Stack / Elasticsearch - Discuss the Elastic Stack<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaXNjdXNzLmVsYXN0aWMuY28vdC9ob3ctY2FuLWktZml4LWVycm9yLWNvbmZpZ3VyYXRpb25lcnJvci1taXNzaW5nLW5vZGUtcy1vcHRpb24tZm9yLXdpbnN0b24tZWxhc3RpY3NlYXJjaC8yMDM0Nzg=\">https://discuss.elastic.co/t/how-can-i-fix-error-configurationerror-missing-node-s-option-for-winston-elasticsearch/203478<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","WebRTC","视频会议"]},{"title":"免费的GitHub图床PicX","url":"/2021/11/05/%E5%85%8D%E8%B4%B9%E7%9A%84GitHub%E5%9B%BE%E5%BA%8APicX/","content":"<p><strong>什么是 PicX ？</strong></p>\n<blockquote>\n<p><code>PicX</code> 是基于 <code>GitHub API</code> 开发的图床神器，图片外链使用 <code>jsDelivr</code> 进行 <code>CDN</code> 加速。免下载、免安装，打开网站即可直接使用。免费、稳定、高效。</p>\n</blockquote>\n<p><code>PicX</code> 是基于 <code>GitHub</code> 实现的图床，从原理上说和 <code>PicGo</code> 是一样的，只是 <code>PicGo</code> 是以客户端方式呈现，而 <code>PicX</code> 是以网站方式呈现</p>\n<blockquote>\n<p>想进一步了解 <code>PicGo</code>，请看：『 <a href=\"https://laosu.ml/2020/10/13/Markdown%E7%9A%84%E5%9B%BE%E7%89%87%E4%BC%B4%E4%BE%A3PicGo/\">Markdown的图片伴侣PicGo</a> 』</p>\n</blockquote>\n<p><code>PicX</code> 官方网站：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9waWN4Lnhwb2V0LmNuLw==\">https://picx.xpoet.cn/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"构建镜像\"><a href=\"#构建镜像\" class=\"headerlink\" title=\"构建镜像\"></a>构建镜像</h1><p>官方虽然有很详细的使用方法，但没有提供安装方法，只有一个网站，所以想要私有化部署，需要我们自己打包镜像</p>\n<blockquote>\n<p>如果你不想自己构建，可以跳过，直接阅读下一章节</p>\n</blockquote>\n<p><code>Dockerfile</code> 是按照 <code>Vue</code>官方提供的例子实现的，据说这是目前性能最好、久经考验的解决方案之一，采用了多阶段构建的方法，最终的镜像不到 <code>30M</code></p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># build stage</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> node:lts-alpine as build-stage</span><br><span class=\"line\"><span class=\"keyword\">LABEL</span><span class=\"bash\"> maintainer=laosu&lt;wbsu2003@gmail.com&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /app</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> package*.json ./</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> npm install</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> . .</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> npm run build</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># production stage</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> nginx:stable-alpine as production-stage</span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> --from=build-stage /app/dist /usr/share/nginx/html</span></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"bash\"> [<span class=\"string\">&quot;nginx&quot;</span>, <span class=\"string\">&quot;-g&quot;</span>, <span class=\"string\">&quot;daemon off;&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n\n<p>构建镜像和容器运行的基本命令如下👇</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载代码,当前对应的是 1.4.1</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/XPoet/picx.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 或者镜像站点</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://hub.fastgit.org/XPoet/picx.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> picx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 Dockerfile 放进代码目录中</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 构建镜像</span></span><br><span class=\"line\">docker build -t wbsu2003/picx:v1 .</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成容器</span></span><br><span class=\"line\">docker run -d \\</span><br><span class=\"line\">--name=picx \\</span><br><span class=\"line\">-p 3480:80 \\</span><br><span class=\"line\">wbsu2003/picx:v1</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>picx</code> ，选择 <code>wbsu2003/picx</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110161023871.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不冲突就行</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>3480</code></td>\n<td align=\"center\"><code>80</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110161036729.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:3480</code> 就能看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110161038565.png\"></p>\n<p>先别忙着上传图片，请先看 <code>使用教程</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110161039723.png\"></p>\n<p>请按照教程，创建好 <code>GitHub</code> 仓库，并获取到 <code>GitHub Token</code>，然后配置图床</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110161047031.png\"></p>\n<p>选取放图片的仓库</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110161050356.png\"></p>\n<p>选取放图片的目录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110161051319.png\"></p>\n<p>现在可以开始上传图片了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110161055576.png\"></p>\n<p>粘贴了一张截图</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110161101320.png\"></p>\n<p>开始上传</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110161102475.png\"></p>\n<p>上传完成</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110161103214.png\"></p>\n<p>除了上传外还支持简单的管理</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110161107488.png\"></p>\n<p>老苏主要用 <code>Markdown</code> 写文档，所以启用了 <code>上传后默认开启 Markdown 格式的外链</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110161111972.png\"></p>\n<p>建议用 <code>CDN</code> 外链，因为 <code>GitHub</code> 经常会中断</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110161114714.png\"></p>\n<ul>\n<li><p><code>CND</code> 外链地址：<code>https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picx/image.1eo9b9tu34sg.png</code></p>\n</li>\n<li><p><code>GitHub</code> 外链地址：<code>https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/picx/image.1eo9b9tu34sg.png</code></p>\n</li>\n</ul>\n<p>使用就是这么简单，没有任何多余的功能，毕竟软件的特点在于：</p>\n<ul>\n<li>🆓 完全免费</li>\n<li>🏆 无比稳定</li>\n<li>🚀 极速高效</li>\n<li>🔒 十分安全</li>\n</ul>\n<p>老苏觉得 <code>PicX</code> 做到了</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>XPoet/picx: 基于 GitHub API 开发的图床神器，图片外链使用 jsDelivr 进行 CDN 加速。免下载、免安装，打开网站即可直接使用。免费、稳定、高效。<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1hQb2V0L3BpY3g=\">https://github.com/XPoet/picx<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Dockerize Vue.js App — Vue.js<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly92dWVqcy5vcmcvdjIvY29va2Jvb2svZG9ja2VyaXplLXZ1ZWpzLWFwcC5odG1s\">https://vuejs.org/v2/cookbook/dockerize-vuejs-app.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","图床"]},{"title":"个人知识管理系统思源笔记","url":"/2021/11/03/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E6%80%9D%E6%BA%90%E7%AC%94%E8%AE%B0/","content":"<p><strong>什么是思源笔记 ？</strong></p>\n<blockquote>\n<p>思源笔记是一款本地优先的个人知识管理系统，支持 <code>Markdown</code> 排版，支持完全离线使用，同时也支持端到端加密同步、 融合块、大纲和双向链接。</p>\n</blockquote>\n<p><code>思源笔记</code> 对个人使用免费，但免费版不能同步，也不支持端到端的加密</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>siyuan</code> ，选择第一个 <code>b3log/siyuan</code>，双击直接下载。</p>\n<blockquote>\n<p>应该是自动构建的，所以只有一个 <code>latest</code> 版本</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109281041790.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>siyuan</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/siyuan</code></td>\n<td align=\"center\"><code>/root/Documents/SiYuan</code></td>\n<td align=\"center\">存放设置、数据</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109281346722.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>直接用了默认的端口 <code>6806</code> </p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>6806</code></td>\n<td align=\"center\"><code>6806</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109281117646.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><p><strong>这里比较关键</strong>，必须要记得，在 <code>命令</code> 中输入下面的指令，否则在导出 <code>Markdown</code> 时会打开错误的地址： <code>http://127.0.0.1:6806/export/思源笔记.zip</code> ，当然可能还有其他问题</p>\n<blockquote>\n<p>这是因为没有使用 <code>--servePath</code> 指定服务器地址，所以<code>conf.json</code> 中默认生成的是 <code>localServeURL&quot;: &quot;http://127.0.0.1:6806&quot;</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109290845832.png\"></p>\n<ul>\n<li><p>在局域网使用：<code>--servePath &quot;群晖IP:6806&quot;</code></p>\n</li>\n<li><p>在公网使用 <code>http</code> 协议：<code>--servePath &quot;域名&quot;</code></p>\n</li>\n<li><p>在公网使用 <code>https</code> 协议：<code>--servePath &quot;域名&quot; --ssl true</code></p>\n</li>\n</ul>\n<blockquote>\n<p>一旦容器创建成功，就不能再添加命令行，所以切记一定要在创建之前添加。</p>\n</blockquote>\n<p>老苏先准备好了反代</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109290839819.png\"></p>\n<p><code>自定义标题</code> 中 <code>新增</code> –&gt; <code>WebSocket</code></p>\n<blockquote>\n<p><code>DSM6.2.1</code> 以下的版本，可以参考『 <a href=\"https://laosu.ml/2020/08/09/HomeAssistant%E8%AE%BE%E7%BD%AEhttps%E8%AE%BF%E9%97%AE%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91\">HomeAssistant设置https访问遇到的坑</a> 』 一文中的方法</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109290840410.png\"></p>\n<p>如果没有做这一步，会出现下面👇这样的提示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202111022250523.png\"></p>\n<p>所以在命令中需填入 <code>--servePath &quot;synote.laosu.ml&quot; --ssl true</code></p>\n<blockquote>\n<p>你要换成你自己的域名地址</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109290842824.png\"></p>\n<p>这会在在 <code>conf.json</code> 中生成 <code>localServeURL&quot;: &quot;https://synote.laosu.ml&quot;</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109290847911.png\"></p>\n<blockquote>\n<p>因为发现和网上很多教程带的参数存在差异，所以通过进入容器获取到了几个参数及其含义</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 版本：2021/09/28 ver [1.3.7]</span></span><br><span class=\"line\">/opt/siyuan <span class=\"comment\"># ./kernel --h</span></span><br><span class=\"line\">Usage of ./kernel:</span><br><span class=\"line\">  -accessAuthCode string</span><br><span class=\"line\">        access auth code</span><br><span class=\"line\">  -<span class=\"built_in\">readonly</span></span><br><span class=\"line\">        read-only mode</span><br><span class=\"line\">  -resident</span><br><span class=\"line\">        resident memory even <span class=\"keyword\">if</span> no active session (default <span class=\"literal\">true</span>)</span><br><span class=\"line\">  -servePath string</span><br><span class=\"line\">        serve path (default <span class=\"string\">&quot;window.location.hostname+\\&quot;:6806\\&quot;&quot;</span>)</span><br><span class=\"line\">  -ssl</span><br><span class=\"line\">        <span class=\"keyword\">for</span> https and wss</span><br><span class=\"line\">  -wd string</span><br><span class=\"line\">        working directory of SiYuan (default <span class=\"string\">&quot;/opt/siyuan&quot;</span>)</span><br><span class=\"line\">  -workspace string</span><br><span class=\"line\">        dir path of the workspace, default to ~/Documents/SiYuan/</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:6806</code> 或者 <code>https://synote.laosu.ml</code> 就能看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109281139412.png\"></p>\n<h2 id=\"设置中文\"><a href=\"#设置中文\" class=\"headerlink\" title=\"设置中文\"></a>设置中文</h2><p>主菜单 <code>...</code> –&gt; <code>Settings</code> –&gt; <code>Appearance</code> –&gt; <code>Language</code> ，后面的下拉框中选择 <code>简体中文</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109281141125.png\"></p>\n<p>界面会自动刷新</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109281142541.png\"></p>\n<h2 id=\"在线编辑\"><a href=\"#在线编辑\" class=\"headerlink\" title=\"在线编辑\"></a>在线编辑</h2><p>创建一个新的笔记</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109281151634.png\"></p>\n<p>直接粘贴一张图片</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109281418535.png\"></p>\n<p>在 <code>File Station</code> 中看到，笔记在 <code>data</code> 目录下以时间开头的文件夹中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109281421597.png\"></p>\n<p>重命名之后，用文本编辑器打开，是一个 <code>JSON</code> 格式的文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109281422646.png\"></p>\n<p>而图片则在 <code>data/assets</code> 文件夹中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109281410560.png\"></p>\n<p>之所以要研究目录存储，是为了尝试将客户端和网页端设置共同的 <code>工作空间目录</code>，来实现笔记的同步编辑，但这种方式自 <code>思源笔记 v1.2.0</code> 移除 <code>WebDAV</code> 支持后，变得略微繁琐</p>\n<p>以 <code>MacOS</code> 为例：</p>\n<ul>\n<li>群晖上安装套件 <code>WebDAV Server</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109281607902.png\"></p>\n<ul>\n<li><code>MacOS</code> 上挂载 <code>WebDAV</code> 路径，可以用原生的，也可以用第三方软件，诸如： <code>CloudMounter</code>、<code>Mountain Duck</code>、<code>Expandrive</code> 等</li>\n</ul>\n<blockquote>\n<p>如果你没有修改默认端口的话，地址为： <code>http://群晖IP:5005/docker/siyuan</code> 或者 <code>https://webdav.laosu.ml</code></p>\n</blockquote>\n<ul>\n<li><code>MacOS</code> 上安装客户端</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109281519765.png\"></p>\n<p><code>设置</code> –&gt; <code>关于</code> –&gt; <code>工作空间目录</code>，将 <code>工作空间目录</code> 指向挂载的卷</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109281622655.png\"></p>\n<p>重新打开 <code>思源客户端</code> 即可</p>\n<p>但这种方式背离了 <code>思源笔记</code> 以本地为主的初衷，使得在没有网络的情况下，编辑变得不可用。</p>\n<h2 id=\"离线编辑\"><a href=\"#离线编辑\" class=\"headerlink\" title=\"离线编辑\"></a>离线编辑</h2><p>离线编辑最大的问题就是不同客户端之间的同步（如果你是付费用户，当老苏啥也没说），这又回到了和 <code>Obsidian</code> 一样的问题，需要自己搭建 <code>Syncthing</code> 一类的同步服务，最好是有版本控制的那种。</p>\n<h2 id=\"chrome-插件\"><a href=\"#chrome-插件\" class=\"headerlink\" title=\"chrome 插件\"></a>chrome 插件</h2><p>在 <code>chrome</code> 应用商店搜索 <code>SiYuan</code>，并安装。需配置服务器地址和 <code>API token</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109282145199.png\"></p>\n<p>在 <code>关于</code> 中能找到 <code>API token</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109290907921.png\"></p>\n<p>或者打开 <code>conf.json</code>，下拉到最底部</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109290909787.png\"></p>\n<p>填入服务器地址和获取到的 <code>API token</code>，如果第三个下拉框中能获取到服务端的目录，那就是 <code>OK</code> 了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109282200925.png\"></p>\n<p>坦率的说不好用，非常简陋</p>\n<ol>\n<li>感觉每次打开都在登录，要等一下才会刷出目录</li>\n<li>点了 <code>Send to SiYuan</code> 只有成功后才有提示</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109282225782.png\"></p>\n<ol start=\"3\">\n<li>格式上有时候会比较混乱</li>\n</ol>\n<p>可能的原因一方面是网络问题，另一方面可能文章比较长吧，总感觉还是差了点意思</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109290905996.png\"></p>\n<h1 id=\"答疑\"><a href=\"#答疑\" class=\"headerlink\" title=\"答疑\"></a>答疑</h1><p>如果一开始用局域网 <code>IP</code> 调试成功了，想发布到公网用域名访问应该怎么做？</p>\n<p>Q：能否通过修改 <code>conf.json</code> 中的 <code>localServeURL</code> 来实现？</p>\n<blockquote>\n<p>A：不能， 即便你删除了  <code>conf.json</code> 文件，过一会儿还是会生成，而且一定是上一次的设置，所以改 <code>conf.json</code> 是没用的</p>\n</blockquote>\n<p>Q：那是不是只能删除容器重新来？</p>\n<blockquote>\n<p>A：是的，但是可以完全保留你的设置和已经创建的笔记</p>\n</blockquote>\n<p>Q：具体应该怎么做呢？</p>\n<blockquote>\n<p>A：首先停止容器，然后删除  <code>conf.json</code> 文件，再重新创建容器，记得在创建容器时输入正确的命令</p>\n</blockquote>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>siyuan-note/siyuan: 📕 思源笔记是一款本地优先的个人知识管理系统， 支持细粒度块级引用和 Markdown 所见即所得。<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NpeXVhbi1ub3RlL3NpeXVhbg==\">https://github.com/siyuan-note/siyuan<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>siyuan-note/siyuan-chrome: 思源笔记 Chrome 扩展。A Chrome extension for SiYuan.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NpeXVhbi1ub3RlL3NpeXVhbi1jaHJvbWU=\">https://github.com/siyuan-note/siyuan-chrome<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>思源笔记 - 本地优先的个人知识管理系统，支持 Markdown 排版、块级引用和双向链接<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iM2xvZy5vcmcvc2l5dWFuLw==\">https://b3log.org/siyuan/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","笔记"]},{"title":"在线表单收集系统Tduck（docker篇）","url":"/2021/11/01/%E5%9C%A8%E7%BA%BF%E8%A1%A8%E5%8D%95%E6%94%B6%E9%9B%86%E7%B3%BB%E7%BB%9FTduck%EF%BC%88docker%E7%AF%87%EF%BC%89/","content":"<p>不止一个人在微信公众号给我发送 <code>tduck</code> ，所以老苏决定再研究下 <code>docker</code> 版</p>\n<blockquote>\n<p>之前老苏已写过基于 <code>CentOS</code> 的安装方法</p>\n<ul>\n<li><a href=\"https://laosu.ml/2021/06/11/%E5%9C%A8%E7%BA%BF%E8%A1%A8%E5%8D%95%E6%94%B6%E9%9B%86%E7%B3%BB%E7%BB%9FTduck%EF%BC%88%E4%B8%8A%E7%AF%87%EF%BC%89/\">在线表单收集系统Tduck（上篇）</a></li>\n<li><a href=\"https://laosu.ml/2021/06/14/%E5%9C%A8%E7%BA%BF%E8%A1%A8%E5%8D%95%E6%94%B6%E9%9B%86%E7%B3%BB%E7%BB%9FTduck%EF%BC%88%E4%B8%8B%E7%AF%87%EF%BC%89/\">在线表单收集系统Tduck（下篇）</a></li>\n</ul>\n</blockquote>\n<p>没有找到官方的镜像，不过你可以试试👇</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110202135401.png\"></p>\n<p>这是一个多合一的镜像，用于体验还是可以的，安装说明可以在参考文档部分找到，但是似乎并不支持设置自己的邮箱、微信公众号等，所以也就没办法用自己的账号登录了。</p>\n<h1 id=\"构建镜像\"><a href=\"#构建镜像\" class=\"headerlink\" title=\"构建镜像\"></a>构建镜像</h1><blockquote>\n<p>如果你不想自己构建，可以跳过，直接阅读下一章节</p>\n</blockquote>\n<p>管方提供的 <code>dockerfile</code> 需要用户自己将后端编译的 <code>tduck-api.jar</code> 拷贝到 <code>docker</code> 目录，将前端打包后的 <code>dist</code> 里的文件拷贝到 <code>docker/front</code> 目录，这得把老苏之前写的搭建的环境操作再重做一遍，着实有点麻烦，老苏更希望实现从源代码直接编译打包镜像，总体思路继承了 <code>YesPlayMusic</code>，把前后端打进一个镜像，这样比较方便 <code>nginx</code> 做前后端分流处理</p>\n<p><code>Dockerfile</code> 分为了三个部分，其中 <code>前端构建</code> 和 <code>后端构建</code> 是可以独立使用的，<code>前端构建</code> 可以生成  <code>dist</code>，而 <code>后端构建</code>能生成 <code>tduck-api.jar</code> </p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 前端构建</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> node:<span class=\"number\">16.5</span> as build-front</span><br><span class=\"line\"><span class=\"keyword\">LABEL</span><span class=\"bash\"> maintainer=laosu&lt;wbsu2003@gmail.com&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /app</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> /tduck-front/package.json ./</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> npm install -g cnpm --registry=https://registry.npm.taobao.org</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> /tduck-front/. ./</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> cnpm install</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> cnpm run build</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 后端构建</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> maven:<span class=\"number\">3.6</span>.<span class=\"number\">0</span>-jdk-<span class=\"number\">11</span>-slim AS build_end</span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> . ./</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> mvn -f /tduck-platform/pom.xml clean package -DskipTests</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 整体打包</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> openjdk:<span class=\"number\">11</span>-jre-slim</span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> sed -i s@/deb.debian.org/@/mirrors.aliyun.com/@g /etc/apt/sources.list \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; apt-get clean \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; apt-get update \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; apt-get install -y supervisor nginx</span></span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"comment\">## nginx</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> --from=build_end ./nginx.conf /etc/nginx/nginx.conf</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## supervisor</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> --from=build_end ./supervisord.conf /etc/supervisord.conf</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 前端静态文件\t</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> --from=build-front /app/dist/ /usr/share/nginx/html</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 后端jar包</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> --from=build_end /tduck-platform/tduck-api/target/tduck-api.jar /usr/<span class=\"built_in\">local</span>/lib/tduck-api.jar</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">80</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ENTRYPOINT</span><span class=\"bash\"> [<span class=\"string\">&quot;supervisord&quot;</span>,<span class=\"string\">&quot;-c&quot;</span>,<span class=\"string\">&quot;/etc/supervisord.conf&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n\n<p><code>nginx</code> 设置文件 <code>nginx.conf</code> 用的是官方的，只修改了 <code>proxy_pass</code></p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">worker_processes</span>  <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">events</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">worker_connections</span>  <span class=\"number\">1024</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">include</span>       mime.types;</span><br><span class=\"line\">    <span class=\"attribute\">default_type</span>  application/octet-stream;</span><br><span class=\"line\">    <span class=\"attribute\">sendfile</span>        <span class=\"literal\">on</span>;</span><br><span class=\"line\">    <span class=\"attribute\">keepalive_timeout</span>  <span class=\"number\">65</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">server</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">listen</span>       <span class=\"number\">80</span>;</span><br><span class=\"line\">        <span class=\"attribute\">server_name</span>  form.tec-do.com;</span><br><span class=\"line\">        <span class=\"attribute\">root</span> /usr/share/nginx/html;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">          <span class=\"comment\"># 静态文件地址 root访问路径会把请求的路径带上</span></span><br><span class=\"line\">            <span class=\"attribute\">root</span>   /usr/share/nginx/html;</span><br><span class=\"line\">\t        <span class=\"attribute\">try_files</span> $uri$args $uri$args/ /index.html;</span><br><span class=\"line\">            <span class=\"attribute\">index</span>  index.html index.htm;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"attribute\">location</span> /tduck-api/ &#123;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_set_header</span> Host $http_host;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_set_header</span> X-Real-IP $remote_addr;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_set_header</span> REMOTE-HOST $remote_addr;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_set_header</span> X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_pass</span> http://127.0.0.1:8999/tduck-api/;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">#error_page   500 502 503 504  /50x.html;</span></span><br><span class=\"line\">        <span class=\"comment\">#location = /50x.html &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">#    root   html;</span></span><br><span class=\"line\">        <span class=\"comment\">#&#125;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>supervisord.conf</code> 文件是新增用来控制进程的，前端 <code>app</code> 是运行在 <code>nginx</code> 上的静态页面，后端 <code>tduck_api</code> 基于 <code>jar</code> 包</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[include]</span></span><br><span class=\"line\"><span class=\"attr\">files</span> = /etc/supervisor/conf.d/*.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[program:app]</span></span><br><span class=\"line\"><span class=\"attr\">command</span>=nginx -g <span class=\"string\">&quot;daemon off;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[program:api]</span></span><br><span class=\"line\"><span class=\"attr\">command</span>=java -Dfile.encoding=UTF-<span class=\"number\">8</span> -jar /usr/local/lib/tduck-api.jar</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#directory will be any folder where you wnat supervisor to cd before executing.</span></span><br><span class=\"line\"><span class=\"comment\">#directory=/project </span></span><br><span class=\"line\"><span class=\"attr\">autostart</span>=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">autorestart</span>=<span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">startretries</span>=<span class=\"number\">3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#user will be anyone you want but make sure that user will have the enough privilage.</span></span><br><span class=\"line\"><span class=\"attr\">user</span>=root</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[supervisord]</span></span><br><span class=\"line\"><span class=\"attr\">nodaemon</span>=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">logfile</span>=/tmp/supervisord.log</span><br><span class=\"line\"><span class=\"attr\">pidfile</span>=/tmp/supervisord.pid</span><br><span class=\"line\"><span class=\"attr\">loglevel</span>=debug</span><br><span class=\"line\"><span class=\"attr\">logfile_maxbytes</span>=<span class=\"number\">10</span>MB</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[supervisorctl]</span></span><br></pre></td></tr></table></figure>\n\n<p><code>docker-compose.yaml</code> 基于官方的修改而成，因为做了前后端二合一，所以去掉了 <code>tduck-front</code>，但是新增了邮件环境变量，只是默认并没有启用</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">&#x27;3.6&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">  <span class=\"attr\">tduck-app:</span></span><br><span class=\"line\">    <span class=\"attr\">environment:</span></span><br><span class=\"line\">      <span class=\"comment\">#      - SPRING_DATASOURCE_DRIVER-CLASS-NAME=com.mysql.cj.jdbc.driver</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">SPRING_DATASOURCE_URL=$SPRING_DATASOURCE_URL</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">SPRING_DATASOURCE_USERNAME=$SPRING_DATASOURCE_NAME</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">SPRING_DATASOURCE_PASSWORD=$MYSQL_ROOT_PASSWORD</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">SPRING_REDIS_DATABASE=0</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">SPRING_REDIS_HOST=$REDIS_HOST</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">SPRING_REDIS_PORT=$REDIS_PORT</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">AJ_CAPTCHA_ENABLE=false</span></span><br><span class=\"line\">\t<span class=\"comment\"># 老苏新增邮件设置</span></span><br><span class=\"line\">    <span class=\"comment\">#  - SPRING_MAIL_HOST=$MAIL_HOST</span></span><br><span class=\"line\">    <span class=\"comment\">#  - SPRING_MAIL_USERNAME=$MAIL_USERNAME</span></span><br><span class=\"line\">    <span class=\"comment\">#  - SPRING_MAIL_PASSWORD=$MAIL_PASSWORD</span></span><br><span class=\"line\">    <span class=\"comment\">#      - SPRING_REDIS_PASSWORD=</span></span><br><span class=\"line\">    <span class=\"comment\">#      - WX_MP_CONFIGS_APPID=</span></span><br><span class=\"line\">    <span class=\"comment\">#      - WX_MP_CONFIGS_SECRET=</span></span><br><span class=\"line\">    <span class=\"comment\">#      - WX_MP_CONFIGS_TOKEN=</span></span><br><span class=\"line\">    <span class=\"comment\">#      - WX_MP_CONFIGS_AESKEY=</span></span><br><span class=\"line\">    <span class=\"comment\">#      - OSS_OSSTYPE=</span></span><br><span class=\"line\">    <span class=\"comment\">#      - OSS_ENDPOINT=</span></span><br><span class=\"line\">    <span class=\"comment\">#      - OSS_ACCESSKEYID=</span></span><br><span class=\"line\">    <span class=\"comment\">#      - OSS_ACCESSKEYSECRET=</span></span><br><span class=\"line\">    <span class=\"comment\">#      - OSS_BUCKETNAME=</span></span><br><span class=\"line\">    <span class=\"comment\">#      - OSS_DOMAIN=</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">&quot;wbsu2003/tduck&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"number\">23569</span><span class=\"string\">:80</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">tduck-redis:</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">redis:6.2.1</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"number\">36379</span><span class=\"string\">:6379</span></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">redis_data:/data</span></span><br><span class=\"line\">  <span class=\"attr\">redis-commander:</span></span><br><span class=\"line\">    <span class=\"attr\">container_name:</span> <span class=\"string\">redis-commander</span></span><br><span class=\"line\">    <span class=\"attr\">hostname:</span> <span class=\"string\">redis-commander</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">rediscommander/redis-commander:latest</span></span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\">    <span class=\"attr\">environment:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">REDIS_HOSTS=local:$REDIS_HOST:$REDIS_PORT</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&quot;28083:8081&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">tduck-mysql:</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">mysql:8</span></span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\">    <span class=\"attr\">environment:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">MYSQL_DATABASE=$MYSQL_DATABASE</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"number\">43033</span><span class=\"string\">:3306</span></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">mysql_data3:/var/lib/mysql</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">./tduck-platform/docker/init-db:/docker-entrypoint-initdb.d:ro</span></span><br><span class=\"line\">    <span class=\"attr\">command:</span> <span class=\"string\">--default-authentication-plugin=mysql_native_password</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">volumes:</span></span><br><span class=\"line\">  <span class=\"attr\">mysql_data3:</span></span><br><span class=\"line\">  <span class=\"attr\">nginx_log:</span></span><br><span class=\"line\">  <span class=\"attr\">redis_data:</span></span><br></pre></td></tr></table></figure>\n\n<p><code>.env</code> 文件，用的官方标准的，只配置了 <code>mysql</code> 和 <code>redis</code></p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">MYSQL_DATABASE</span>=tduck</span><br><span class=\"line\"><span class=\"attr\">MYSQL_ROOT_PASSWORD</span>=abc123123</span><br><span class=\"line\"><span class=\"attr\">SPRING_DATASOURCE_URL</span>=jdbc:mysql://tduck-mysql/tduck?serverTimezone=Asia/Shanghai</span><br><span class=\"line\"><span class=\"attr\">SPRING_DATASOURCE_NAME</span>=root</span><br><span class=\"line\"><span class=\"attr\">REDIS_HOST</span>=tduck-redis</span><br><span class=\"line\"><span class=\"attr\">REDIS_PORT</span>=<span class=\"number\">6379</span></span><br></pre></td></tr></table></figure>\n\n<p>构建镜像和容器运行的基本命令如下👇</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 新建目录</span></span><br><span class=\"line\">mkdir tduck</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> tduck</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 拉取后端代码</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://gitee.com/TDuckApp/tduck-platform.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 拉取前端代码</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://gitee.com/TDuckApp/tduck-front.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 Dockerfile 、supervisord.conf、nginx.conf、docker-compose.yaml、.env 五个文件放进 tduck 目录中</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 构建镜像</span></span><br><span class=\"line\">docker build -t wbsu2003/tduck:v1 .</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入容器</span></span><br><span class=\"line\">docker <span class=\"built_in\">exec</span> --user root -it tduck /bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 一键启动</span></span><br><span class=\"line\">docker-compose up -d</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 一键删除</span></span><br><span class=\"line\">docker-compose down</span><br></pre></td></tr></table></figure>\n\n<p>目录结构👇</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110201537211.png\"></p>\n<h1 id=\"安装运行\"><a href=\"#安装运行\" class=\"headerlink\" title=\"安装运行\"></a>安装运行</h1><ul>\n<li>在群晖 <code>docker</code> 目录中新建子目录 <code>tduck</code></li>\n<li>下载 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dic3UyMDAzL0RvY2tlcmZpbGUvcmF3L21haW4vdGR1Y2svdGR1Y2suemlw\">https://github.com/wbsu2003/Dockerfile/raw/main/tduck/tduck.zip<i class=\"fa fa-external-link-alt\"></i></span> 文件，如果 <code>github</code> 抽风了，可以从镜像站点下载 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9odWIuZmFzdGdpdC5vcmcvd2JzdTIwMDMvRG9ja2VyZmlsZS9yYXcvbWFpbi90ZHVjay90ZHVjay56aXA=\">https://hub.fastgit.org/wbsu2003/Dockerfile/raw/main/tduck/tduck.zip<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>将 <code>tduck.zip</code> 上传到 <code>tduck</code> 目录再解压<blockquote>\n<p>尽量不要在电脑上先解压再上传，因为 <code>.env</code> 默认是看不到的，需要打开显示隐藏文件，需避免拷贝文件丢失导致一键启动出错</p>\n</blockquote>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110291014341.png\"></p>\n<p><code>__MACOSX</code> 和 <code>tduck.zip</code> 可以删掉，不删也无所谓的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110211055017.png\"></p>\n<ul>\n<li><p>根据需要修改 <code>docker-compose.yaml</code> 文件，主要应该就是端口，如果你要修改数据库可以编辑 <code>.env</code> 文件，理论上通过修改 <code>jdbc</code> 可以直接使用群晖自带的 <code>mariadb</code></p>\n</li>\n<li><p>用 <code>SSH</code> 客户端登录到群晖，在 <code>tduck</code> 目录中执行一键启动</p>\n</li>\n</ul>\n<blockquote>\n<p>老苏常用的<code>SSH</code> 客户端主要是 <code>Finalshell</code> 和 <code>PuTTY</code></p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入 docker 目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /volume2/docker/tduck</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 一键启动</span></span><br><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>第一次执行会有拉取镜像的动作</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110210933002.png\"></p>\n<blockquote>\n<p>如果最终 <code>4</code> 个容器都是 <code>done</code> ，表示创建成功！</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110211101211.png\"></p>\n<p>在 <code>docker</code> 容器中能看到👇下面 <code>4</code> 个容器正在运行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110211033466.png\"></p>\n<p>在浏览器中输入 <code>http://群晖IP:23569</code>，就能看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110201748398.png\"></p>\n<p>点右上角的 <code>登录</code>，因为没设置微信扫码，所以一直是转圈的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110201751969.png\"></p>\n<p>系统有个默认的账号 <code>test@tduck.com</code>，密码：<code>12345678</code></p>\n<blockquote>\n<p>官网有点坑，写的默认账号是 <code>test@tduckapp.com</code></p>\n</blockquote>\n<h2 id=\"邮件注册\"><a href=\"#邮件注册\" class=\"headerlink\" title=\"邮件注册\"></a>邮件注册</h2><p>如果你需要自己注册账号，比较简单的方法是增加邮件的支持。</p>\n<ul>\n<li>需要去掉 <code>docker-compose.yaml</code> 中红框中 3 行前面的 <code>#</code> 号注释</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110201755671.png\"></p>\n<ul>\n<li>在 <code>.env</code> 最后面增加下面 <code>3</code> 行</li>\n</ul>\n<blockquote>\n<p>请按你自己的邮箱设置进行填写</p>\n</blockquote>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">MAIL_HOST</span>=smtp.<span class=\"number\">88</span>.com</span><br><span class=\"line\"><span class=\"attr\">MAIL_USERNAME</span>=wbsu2003@<span class=\"number\">88</span>.com</span><br><span class=\"line\"><span class=\"attr\">MAIL_PASSWORD</span>=&lt;用于登录第三方邮件客户端的专用密码&gt;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>先一键删除再一键启动</li>\n</ul>\n<blockquote>\n<p>任何时候，删除操作还是要慎重</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 一键删除</span></span><br><span class=\"line\">docker-compose down</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 一键启动</span></span><br><span class=\"line\">docker-compose up -d</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 一键停止</span></span><br><span class=\"line\">docker-compose stop</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 一键重启</span></span><br><span class=\"line\">docker-compose restart</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110211059987.png\"></p>\n<p>选择用邮箱注册</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110210903781.png\"></p>\n<p>顺利的话很快就会收到注册验证码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110201736293.png\"></p>\n<p>填入验证码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110201736673.png\"></p>\n<p>登录成功后的主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110201759335.png\"></p>\n<p>进入模板中心，创建空白模板</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110201759067.png\"></p>\n<p>可以拖拽进行设计</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110201800130.png\"></p>\n<p>如果你拖不动，是因为组件在线的上方</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110201802640.png\"></p>\n<p>拖到下方才行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110201803344.png\"></p>\n<p>预览一下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110201803742.png\"> </p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>tduck-platform: Tduck-填鸭收集器是一款开源的表单在线收集系统，后台基于SpringBoot+MybatisPlus+MySql+Redis，前端基于Vue ElementUI开发，功能强大，界面美观。keywords：问卷/表单/信息收集<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vVER1Y2tBcHAvdGR1Y2stcGxhdGZvcm0=\">https://gitee.com/TDuckApp/tduck-platform<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Tduck填鸭<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2MudGR1Y2thcHAuY29tLw==\">https://doc.tduckapp.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>java - How to dockerize maven project? and how many ways to accomplish it? - Stack Overflow<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMjc3NjcyNjQvaG93LXRvLWRvY2tlcml6ZS1tYXZlbi1wcm9qZWN0LWFuZC1ob3ctbWFueS13YXlzLXRvLWFjY29tcGxpc2gtaXQ=\">https://stackoverflow.com/questions/27767264/how-to-dockerize-maven-project-and-how-many-ways-to-accomplish-it<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>使用Docker运行Tduck | 戴戴的Linux<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kYWlzaGVuZ2h1aS5jbHViLzIwMjEvMDYvMzAvY2F0ZWdvcmllcy9MaW51eC8lRTQlQkQlQkYlRTclOTQlQThEb2NrZXIlRTglQkYlOTAlRTglQTElOENUZHVjay8jJUU1JThEJThBJUU1JUIwJThGJUU3JTk5JUJEJUU3JUFGJTg3\">https://daishenghui.club/2021/06/30/categories/Linux/%E4%BD%BF%E7%94%A8Docker%E8%BF%90%E8%A1%8CTduck/#%E5%8D%8A%E5%B0%8F%E7%99%BD%E7%AF%87<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","表格"]},{"title":"音乐流媒体服务器Navidrome","url":"/2021/10/29/%E9%9F%B3%E4%B9%90%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8Navidrome/","content":"<p><strong>什么是 Navidrome ？</strong></p>\n<blockquote>\n<p><code>Navidrome</code> 是一个开源的基于网络的音乐收藏和流媒体服务器，与 <code>Subsonic/Airsonic</code> 兼容。它让您可以自由地从任何浏览器或移动设备收听您的音乐收藏。就像您的个人 <code>Spotify</code>！</p>\n</blockquote>\n<p><strong>什么是 Spotify ？</strong></p>\n<blockquote>\n<p><code>Spotify</code> 是一个正版流媒体音乐服务平台，2008 年 10 月在瑞典首都斯德哥尔摩正式上线。<code>Spotify</code> 提供免费和付费两种服务，免费用户在使用 <code>Spotify</code> 的服务时将被插播一定的广告，付费用户则没有广告，且拥有更好的音质。</p>\n</blockquote>\n<p>老苏曾介绍过一些音乐服务器，你可以根据自己的需要进行选择：</p>\n<ul>\n<li><a href=\"https://laosu.ml/2020/05/04/%E4%B8%AA%E4%BA%BA%E4%B8%93%E5%B1%9E%E7%9A%84%E9%9F%B3%E4%B9%90%E5%BA%93/\">个人专属的音乐库</a></li>\n<li><a href=\"https://laosu.ml/2021/05/21/%E5%8E%BB%E4%B8%AD%E5%BF%83%E5%8C%96%E5%BC%80%E6%BA%90%E9%9F%B3%E4%B9%90%E6%9C%8D%E5%8A%A1%E5%99%A8Funkwhale/\">去中心化开源音乐服务器Funkwhale</a></li>\n<li><a href=\"https://laosu.ml/2021/05/17/Ampache%E9%9F%B3%E4%B9%90%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8/\">Ampache音乐流媒体服务器</a></li>\n<li><a href=\"https://laosu.ml/2020/08/18/%E5%BC%80%E6%BA%90%E7%9A%84%E9%9F%B3%E4%B9%90%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8koel/\">开源的音乐流媒体服务器koel</a></li>\n</ul>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>navidrome</code> ，选择第一个 <code>deluan/navidrome</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110041152055.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>navidrome</code>，并建 <code>2</code> 个子目录，分别为 <code>music</code> 和 <code>data</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110041223492.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/navidrome/data</code></td>\n<td align=\"center\"><code>/data</code></td>\n<td align=\"center\">存放数据</td>\n</tr>\n<tr>\n<td align=\"center\"><code>docker/navidrome/music</code></td>\n<td align=\"center\"><code>/music</code></td>\n<td align=\"center\">音乐库，建议只读</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>如果你已经有音乐库，可以将音乐库直接映射到 <code>/music</code>，从安全性考虑，建议将  <code>/music</code> 设置为只读</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110041226808.png\" alt=\"只读\"></p>\n<p>当然你非要读写也是可以的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110041402355.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>直接用了默认的端口 <code>4533</code> </p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>4533</code></td>\n<td align=\"center\"><code>4533</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110041229620.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><blockquote>\n<p>环境变量均为可选项，请参考官方文档：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubmF2aWRyb21lLm9yZy9kb2NzL3VzYWdlL2NvbmZpZ3VyYXRpb24tb3B0aW9ucy8=\">https://www.navidrome.org/docs/usage/configuration-options/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110041418767.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:4533</code> ，首先要注册一个管理员</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110041258551.png\"></p>\n<p>接下来就能看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110041259342.png\"></p>\n<h2 id=\"设置中文\"><a href=\"#设置中文\" class=\"headerlink\" title=\"设置中文\"></a>设置中文</h2><p>右上角 <code>Settings</code> –&gt; <code>Personal</code> –&gt; <code>Language</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110041325843.png\"></p>\n<p>选择 <code>简体中文</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110041328743.png\"></p>\n<h2 id=\"播放歌曲\"><a href=\"#播放歌曲\" class=\"headerlink\" title=\"播放歌曲\"></a>播放歌曲</h2><p>在 <code>music</code> 中拷入了一张无损碟</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110041504236.png\"></p>\n<p>快速扫描</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110041527286.png\"></p>\n<p>能够被识别</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110041503429.png\"></p>\n<p>可以直接播放</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110041525650.png\"></p>\n<h2 id=\"外部集成\"><a href=\"#外部集成\" class=\"headerlink\" title=\"外部集成\"></a>外部集成</h2><p>配置 <code>Navidrome</code> 可以从 <code>Last.fm</code> 和 <code>Spotify</code> 获取专辑信息和图像</p>\n<h3 id=\"Last-fm\"><a href=\"#Last-fm\" class=\"headerlink\" title=\"Last.fm\"></a>Last.fm</h3><p>首先需要一个 <code>Last.fm</code> 免费帐户，其次你要能访问 <code>Last.fm</code></p>\n<ol>\n<li> 转到 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGFzdC5mbS9hcGkvYWNjb3VudC9jcmVhdGU=\">https://www.last.fm/api/account/create<i class=\"fa fa-external-link-alt\"></i></span> 并创建一个 <code>API</code> 帐户。只有 <code>应用程序名称</code> 字段是强制性的</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110042003379.png\"></p>\n<ol start=\"2\">\n<li> 提交表单后，可以从 <code>API account Created</code> 页面获取 <code>API Key</code> 和 <code>Shared Secret</code></li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110042004336.png\"></p>\n<ol start=\"3\">\n<li>将上面的值复制到 <code>Docker</code> 的环境变量</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>ND_LASTFM_ENABLED</code></td>\n<td align=\"center\">设置 <code>false</code> 为完全禁用 <code>Last.fm</code> 集成</td>\n</tr>\n<tr>\n<td align=\"center\"><code>ND_LASTFM_APIKEY</code></td>\n<td align=\"center\"><code>Last.fm</code> 获取的 <code>API Key</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>ND_LASTFM_SECRET</code></td>\n<td align=\"center\"><code>Last.fm</code> 获取的 <code>Shared Secret</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>ND_LASTFM_LANGUAGE</code></td>\n<td align=\"center\">用于从 <code>Last.fm</code> 检索的语言的两个字母代码，简体中文为 <code>zh</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110042344453.png\"></p>\n<h3 id=\"Spotify\"><a href=\"#Spotify\" class=\"headerlink\" title=\"Spotify\"></a>Spotify</h3><p>在 <code>Spotify</code> 中创建一个免费帐户，然后按照以下步骤操作：</p>\n<ol>\n<li>单击 <code>Spotify</code> 的开发者仪表板中的 <code>CREATE AN APP</code> 按钮：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuc3BvdGlmeS5jb20vZGFzaGJvYXJkL2FwcGxpY2F0aW9ucw==\">https://developer.spotify.com/dashboard/applications<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110042326675.png\"></p>\n<ol start=\"2\">\n<li>填写所有字段并单击 <code>CREATE</code> 按钮：</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110042329480.png\"></p>\n<ol start=\"3\">\n<li>将值复制到 <code>Docker</code> 的环境变量</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110042334912.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>ND_SPOTIFY_ID</code></td>\n<td align=\"center\"><code>Spotify</code> 客户端 <code>ID</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>ND_SPOTIFY_SECRET</code></td>\n<td align=\"center\"><code>Spotify</code> 客户端 <code>Secret</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110042346496.png\"></p>\n<h2 id=\"转码设置\"><a href=\"#转码设置\" class=\"headerlink\" title=\"转码设置\"></a>转码设置</h2><p>之所以要转码，是因为无损的文件比较大，一般都有几百M，所以需要进行转码成，便于客户端进行播放</p>\n<p> 但 <code>Navidrome</code> 出于安全原因，禁用了从  <code>Web</code> 界面更改参数，所以需要先修改 <code>Docker</code> 的环境变量</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>ND_ENABLETRANSCODINGCONFIG</code></td>\n<td align=\"center\">设置为 <code>true</code> 才能支持转码功能</td>\n</tr>\n<tr>\n<td align=\"center\"><code>ND_TRANSCODINGCACHESIZE</code></td>\n<td align=\"center\">转码缓存的大小。设置 <code>0</code> 为禁用缓存，默认为 <code>100MB</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110051130675.png\"></p>\n<p>默认设置中有两个转码方案，一个是转 <code>MP3</code>，另一个是转 <code>OPUS</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110051641678.png\"></p>\n<p>可以根据需要修改 <code>比特率</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110051644249.png\"></p>\n<p>然后选择需要转码的客户端</p>\n<blockquote>\n<p>关于客户端，老苏推荐你看看 <code>Subsonic Apps</code> 列表：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zdWJzb25pYy5vcmcvcGFnZXMvYXBwcy5qc3A=\">http://www.subsonic.org/pages/apps.jsp<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110051640803.png\"></p>\n<p>老苏还是用的 <code>Android</code> 客户端 <code>Subsonic</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110051646956.png\"></p>\n<p>修改完成</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110051648432.png\"></p>\n<p>又拷了 <code>2</code> 张 <code>MP3</code> 格式的碟</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110051712919.png\"></p>\n<p>从日志看，播放无损的 <code>WAV</code> 进行了转码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110051729584.png\"></p>\n<p>而播放 <code>MP3</code> 则没有</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110051729053.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>navidrome/navidrome: 🎧☁️ Modern Music Server and Streamer compatible with Subsonic/Airsonic<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25hdmlkcm9tZS9uYXZpZHJvbWU=\">https://github.com/navidrome/navidrome<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Navidrome<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubmF2aWRyb21lLm9yZy8=\">https://www.navidrome.org/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Docker | Navidrome<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubmF2aWRyb21lLm9yZy9kb2NzL2luc3RhbGxhdGlvbi9kb2NrZXIv\">https://www.navidrome.org/docs/installation/docker/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","音乐"]},{"title":"用Markdown做日记和任务跟踪的DailyNotes","url":"/2021/10/27/%E7%94%A8Markdown%E5%81%9A%E6%97%A5%E8%AE%B0%E5%92%8C%E4%BB%BB%E5%8A%A1%E8%B7%9F%E8%B8%AA%E7%9A%84DailyNotes/","content":"<p><strong>什么是 DailyNotes ？</strong></p>\n<blockquote>\n<p><code>DailyNotes</code> 是用于每天记笔记和跟踪任务的应用程序。</p>\n</blockquote>\n<p><strong>什么是 Markdown ？</strong></p>\n<blockquote>\n<p><code>Markdown</code> 是一种轻量级标记语言，创始人为约翰·格鲁伯（英语：<code>John Gruber</code>）。 它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的 <code>XHTML</code>（或者 <code>HTML</code> ）文档。这种语言吸收了很多在电子邮件中已有的纯文本标记的特性。【百度百科】</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>dailynotes</code> ，选择第一个 <code>m0ngr31/dailynotes</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210728211916.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>dailynotes</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>/docker/dailynotes</code></td>\n<td align=\"center\"><code>/app/config</code></td>\n<td align=\"center\">配置和数据库目录</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210728212441.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不能冲突，默认的 <code>5000</code> 显然不能使用，这是群晖默认的管理端口</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n<th align=\"center\">类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">5050</td>\n<td align=\"center\">5000</td>\n<td align=\"center\">TCP</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210728212611.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><blockquote>\n<p>默认这里可以不要设置，不要设置，不要设置</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>API_SECRET_KEY</code></td>\n<td align=\"center\">API 令牌，不传入会自动生成</td>\n</tr>\n<tr>\n<td align=\"center\"><code>DATABASE_URI</code></td>\n<td align=\"center\">DB 的连接字符串，如果未传入，将创建和使用 SQLite 数据库</td>\n</tr>\n<tr>\n<td align=\"center\"><code>DB_ENCRYPTION_KEY</code></td>\n<td align=\"center\">用于加密数据的密钥。长度必须是 16 的倍数，不传入会自动生成</td>\n</tr>\n<tr>\n<td align=\"center\"><code>PREVENT_SIGNUPS</code></td>\n<td align=\"center\">禁用注册表单</td>\n</tr>\n</tbody></table>\n<p><code>DATABASE_URI</code> 的格式如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql+pymysql:&#x2F;&#x2F;user:pass@host&#x2F;dbname?charset&#x3D;utf8mb4</span><br></pre></td></tr></table></figure>\n\n<p>默认镜像并不支持 <code>pymysql</code> ，如果你设置了 <code>DATABASE_URI</code> ，容器启动日志中会显示 <code>No module named &#39;pymysql&#39;</code>，所以如果你要采用 <code>MySQL</code> 或者 <code>PostgreSQL</code> 做数据库，需要自己用 <code>Dockerfile</code> 编译镜像</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210908110549.png\"></p>\n<p>通过修改 <code>requirements.txt</code> ，并加入相应的模块</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210908110650.png\"></p>\n<p>所以如果用默认的 <code>SQLite</code> ，环境变量这里可以不用设置</p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:5050</code>，就看到登录界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210908092346.png\"></p>\n<p>先点 <code>Sign Up</code> 注册用户</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210908092443.png\"></p>\n<p>主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210908092300.png\"></p>\n<p>支持 <code>Markdown</code> 的语法</p>\n<blockquote>\n<p>图片不能预览，加不加的没啥用</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210908095113.png\"></p>\n<p>保存之后，<code>Tags</code> 和 <code>Projects</code> 会出现在左侧</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210908095201.png\"></p>\n<p>默认创建的是当天的 <code>Daily Note</code>，还可以点 <code>+</code> 号创建  <code>Note</code></p>\n<blockquote>\n<p><code>Daily Note</code> 每天只有 1 条，而 <code>Note</code> 可以创建多条</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210908093303.png\"></p>\n<p><code>Note</code> 比 <code>Daily Note</code> 多个 <code>title</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210908095447.png\"></p>\n<p>支持查询操作</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210908100022.png\"></p>\n<p>既然是跟踪，就需要通过状态来标识任务是否已完成，这需要在 <code>Note</code> 中添加下面👇的文本</p>\n<figure class=\"highlight md\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">-</span> [ ] 是否已完成</span><br></pre></td></tr></table></figure>\n\n<p>来实现复选框按钮</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210908101907.png\"></p>\n<p>支持关联操作</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210908102123.png\"></p>\n<p>可以支持多个复选框</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210908102252.png\"></p>\n<p>目前软件的功能比较简单，按作者的计划，会在后续版本中增加：</p>\n<ul>\n<li>  支持 <code>CalDAV</code> </li>\n<li>  <code>HTML</code> 预览</li>\n<li>  任务看板（以及附加元信息的新语法，例如每个任务的泳道和项目）</li>\n<li>  嵌套标记</li>\n</ul>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>m0ngr31/DailyNotes: App for taking notes and tracking tasks on a daily basis<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL20wbmdyMzEvRGFpbHlOb3Rlcy8=\">https://github.com/m0ngr31/DailyNotes/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>[Question] dailynotes configuration - DailyNotes<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRtZW1vcnkuY29tL2lzc3VlL20wbmdyMzEvRGFpbHlOb3Rlcy8zMi84MzYxODgyODM=\">https://gitmemory.com/issue/m0ngr31/DailyNotes/32/836188283<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Configuration — Flask-SQLAlchemy Documentation (2.x)<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9mbGFzay1zcWxhbGNoZW15LnBhbGxldHNwcm9qZWN0cy5jb20vZW4vMi54L2NvbmZpZy8=\">https://flask-sqlalchemy.palletsprojects.com/en/2.x/config/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","项目管理软件"]},{"title":"MiroTalk基于浏览器的实时视频通话程序","url":"/2021/10/25/MiroTalk%E5%9F%BA%E4%BA%8E%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84%E5%AE%9E%E6%97%B6%E8%A7%86%E9%A2%91%E9%80%9A%E8%AF%9D%E7%A8%8B%E5%BA%8F/","content":"<p><strong>什么是 MiroTalk ？</strong></p>\n<blockquote>\n<p><code>MiroTalk</code> 是基于浏览器 <code>WebRTC</code> 技术实现的实时视频通话、聊天室和屏幕共享软件，是 <code>100%</code> 免费和开源的 <code>github</code> 项目。</p>\n</blockquote>\n<p><strong>什么是 WebRTC ？</strong></p>\n<blockquote>\n<p><code>WebRTC</code> 名称源自网页即时通信（英语：<code>Web Real-Time Communication</code>）的缩写，是一个支持网页浏览器进行实时语音对话或视频对话的 <code>API</code> 。它于 2011 年 6 月 1 日开源并在 <code>Google</code>、<code>Mozilla</code>、<code>Opera</code> 支持下被纳入万维网联盟的 <code>W3C</code> 推荐标准。【百度百科】</p>\n</blockquote>\n<p><strong>什么是 Ngrok ？</strong></p>\n<blockquote>\n<p><code>ngrok</code> 是一个反向代理，通过在公共的端点和本地运行的 <code>Web</code> 服务器之间建立一个安全的通道。服务器根据客户端的请求，从其关系的一组或多组后端服务器（如 <code>Web</code> 服务器）上获取资源，然后再将这些资源返回给客户端，客户端只会得知反向代理的 <code>IP</code> 地址，而不知道在代理服务器后面的服务器集群的存在。【百度百科】</p>\n</blockquote>\n<h1 id=\"构建镜像\"><a href=\"#构建镜像\" class=\"headerlink\" title=\"构建镜像\"></a>构建镜像</h1><blockquote>\n<p>如果你不想自己构建，可以跳过，直接阅读下一章节</p>\n</blockquote>\n<p>官网提供了 <code>Dockerfile</code> 和 <code>docker-compose.yml</code>，从 <code>docker-compose.yml</code> 看是可以直接运行而不用预先构建</p>\n<p><code>Dockerfile</code> 在构建过程中各种报错，应该是跟网络有关</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110061108868.png\"></p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> node:<span class=\"number\">14</span>-alpine </span><br><span class=\"line\"><span class=\"comment\"># https://hub.docker.com/_/node</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /usr/src/app</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 尝试使用 https 而不是 http</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> sed -i -e <span class=\"string\">&#x27;s/http:/https:/&#x27;</span> /etc/apk/repositories</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用阿里镜像 https://mirrors.aliyun.com</span></span><br><span class=\"line\"><span class=\"comment\">#RUN sed -i &#x27;s/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g&#x27; /etc/apk/repositories</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> apk add --no-cache \\</span></span><br><span class=\"line\"><span class=\"bash\">bash \\</span></span><br><span class=\"line\"><span class=\"bash\">vim</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> package*.json ./</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> .env.template ./.env</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> npm install</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> . .</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">3000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"bash\"> [ <span class=\"string\">&quot;npm&quot;</span>, <span class=\"string\">&quot;start&quot;</span> ]</span></span><br></pre></td></tr></table></figure>\n\n<p>解决报错经历的过程：</p>\n<ol>\n<li><code>Dockerfile</code> 中增加 <code>RUN sed -i -e &#39;s/http:/https:/&#39; /etc/apk/repositories</code>，尝试使用 <code>https</code> 而不是 <code>http</code>，问题依旧；</li>\n<li><code>Dockerfile</code> 中增加 <code>RUN sed -i &#39;s/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g&#39; /etc/apk/repositories</code>，将源更换为阿里，问题依旧；</li>\n<li>构建时增加 <code>--network=host</code>，变成 <code>docker build -t wbsu2003/mirotalk:v1 . --network=host</code>，不再报错，顺利完成构建</li>\n</ol>\n<p>构建镜像和容器运行的基本命令如下👇</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载原代码</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/miroslavpejic85/mirotalk.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果 github 慢或者访问不了</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://hub.fastgit.org/miroslavpejic85/mirotalk.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> mirotalk</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 构建镜像</span></span><br><span class=\"line\">docker build -t wbsu2003/mirotalk:v1 . --network=host</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成容器(使用ngrok)</span></span><br><span class=\"line\">docker run -it --name=mirotalk \\</span><br><span class=\"line\">-p 3330:3000 \\</span><br><span class=\"line\">-e NGROK_ENABLED=<span class=\"literal\">true</span> \\</span><br><span class=\"line\">-e NGROK_AUTH_TOKEN=&lt;Your ngrok Authtoken&gt; \\ <span class=\"comment\"># 你的 ngrok Authtoken</span></span><br><span class=\"line\">wbsu2003/mirotalk:v1</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110061700582.png\" alt=\"ngrok\"></p>\n<h1 id=\"前期准备\"><a href=\"#前期准备\" class=\"headerlink\" title=\"前期准备\"></a>前期准备</h1><p>镜像中内置了 <code>ngrok</code>，打开 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9uZ3Jvay5jb20v\">https://ngrok.com<i class=\"fa fa-external-link-alt\"></i></span> ，如果没有账号可以注册一个，然后点 <code>Get started for free</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110061458613.png\"></p>\n<p>获取你的 <code>Authtoken</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110061500703.png\"></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>mirotalk</code> ，选择第二个 <code>wbsu2003/mirotalk</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110061243168.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不冲突就行</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>3330</code></td>\n<td align=\"center\"><code>3000</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110061248528.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>NGROK_ENABLED</code></td>\n<td align=\"center\">是否启用 <code>ngrok</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>NGROK_AUTH_TOKEN</code></td>\n<td align=\"center\"><code>ngrok</code> 获取的 <code>Authtoken</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>API_KEY_SECRET</code></td>\n<td align=\"center\">默认为 <code>mirotalk_default_secret</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110061507006.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>打开日志，找到 <code>server_tunnel</code> 后面的地址</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110061512164.png\"></p>\n<p>在浏览器中打开这个地址就能看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110061252363.png\"></p>\n<p>点 <code>TRY NOW</code> 新建一个呼叫</p>\n<blockquote>\n<p>默认房间号是随机生成的，你可以自己起名字</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110061309766.png\"></p>\n<blockquote>\n<p>需要 <code>https</code> 协议才能让浏览器使用音视频设备，如果你用 <code>http://群晖IP:3330</code> 访问会一直卡在 <code>Loading</code>，浏览器中的错误是 <code>net::ERR_CERT_COMMON_NAME_INVALID</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110061257745.png\"></p>\n<p>选 <code>允许</code>，否则不会有图像和声音</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110061519908.png\"></p>\n<p>给自己取个名字，然后 <code>Join meeting</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110061521117.png\"></p>\n<p>接下来就可以邀请别人入会了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110061522281.png\"></p>\n<p>用另外一台机器打开发送的链接</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110061534311.png\"></p>\n<p>分享支持 <code>整个屏幕</code>、<code>窗口</code> 和 <code>Chrome 标签页</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110061544299.png\"></p>\n<p>屏幕共享</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110061538899.png\"></p>\n<p>白板</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110061539244.png\"></p>\n<p>录像成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110061558240.png\"></p>\n<p>停止时会自动下载，格式是 <code>webm</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110061601472.png\"></p>\n<p>会议需要的常用功能都能在 <code>MiroTalk</code> 找到，让老苏很意外的是居然还有游戏</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110061541761.png\"></p>\n<p>大家可以自己安装体验一下，如果不想安装又想体验，可以去官方提供的地址👇</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9taXJvdGFsay5oZXJva3VhcHAuY29tLw==\">https://mirotalk.herokuapp.com<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9taXJvdGFsay51cC5yYWlsd2F5LmFwcC8=\">https://mirotalk.up.railway.app<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<h1 id=\"遗留问题\"><a href=\"#遗留问题\" class=\"headerlink\" title=\"遗留问题\"></a>遗留问题</h1><p><code>ngrok</code> 免费版在 <code>docker</code> 每次重启之后，生成的域名是变化的，所以老苏尝试用 <code>frp</code> 来做反代，但是非常奇怪的卡死在 <code>Loading</code></p>\n<blockquote>\n<p>其实老苏在用 <code>frp</code> 之前一直用的就是 <code>ngrok</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110061332907.png\"></p>\n<p>看了一下浏览器中的错误是 <code>net::ERR_CONNECTION_REFUSED</code></p>\n<blockquote>\n<p>老苏的域名没有备案，所以是需要 <code>域名+端口</code> 访问的</p>\n</blockquote>\n<p>但是 <code>MiroTalk</code> 会吃掉后面的端口，不清楚导致的原因，所以只能先这么地了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110061847877.png\"></p>\n<p>还可以考虑一键部署到 <code>Heroku</code> 或者 <code>Railway</code></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>miroslavpejic85/mirotalk: 🚀 Powered by WebRTC, Real-time video call, chat room and screen sharing entirely browser based 🚀<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21pcm9zbGF2cGVqaWM4NS9taXJvdGFsaw==\">https://github.com/miroslavpejic85/mirotalk<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Numb STUN/TURN Server<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9udW1iLnZpYWdlbmllLmNhLw==\">https://numb.viagenie.ca/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","WebRTC","ngrok","视频会议"]},{"title":"高颜值的第三方网易云播放器YesPlayMusic（续）","url":"/2021/10/22/%E9%AB%98%E9%A2%9C%E5%80%BC%E7%9A%84%E7%AC%AC%E4%B8%89%E6%96%B9%E7%BD%91%E6%98%93%E4%BA%91%E6%92%AD%E6%94%BE%E5%99%A8YesPlayMusic%EF%BC%88%E7%BB%AD%EF%BC%89/","content":"<p><code>“把麻烦留给自己，把方便留给别人”</code>，这才是我们折腾的终极目标。在上一篇中 <code>YesPlayMusic</code> 虽然能用，但是需要安装两个镜像，总归还是不算方便，更何况还有不完美的公网访问。经过老苏的不懈努力，<code>v2</code> 版实现了将播放器和 <code>API</code> 集成在一个镜像中，成功解决了：</p>\n<ul>\n<li><code>v1</code> 版不能刷新页面的问题</li>\n<li>公网反代的问题</li>\n<li>可以连接到 <code>Last.me</code></li>\n<li>支持上传云盘</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110211733768.png\"></p>\n<h1 id=\"构建镜像\"><a href=\"#构建镜像\" class=\"headerlink\" title=\"构建镜像\"></a>构建镜像</h1><blockquote>\n<p>如果你不想自己构建，可以跳过，直接阅读下一章节</p>\n</blockquote>\n<p>折腾 <code>bypy</code> 时学习的 <code>supervisor</code> 让老苏有了新的想法，那就是把前端播放器、后端 <code>API</code> 、<code>nginx</code> 整到一个容器中，把群晖上没完成的事情尝试在容器中搞定，所以就有了本文</p>\n<ul>\n<li>前端继续还是采用占位符的方式，老苏还是保留了变量，原本是可以将 <code>VUE_APP_NETEASE_API_URL</code> 写死为 <code>/api</code> 的</li>\n<li>参考了 <code>网易 API</code> 官方的 <code>Dockerfile</code> ，所以没有像第一版使用 <code>nginx:1.12-alpine</code> 做基础镜像，而是用了 <code>node:lts-alpine</code>，并在其中安装了一个 <code>nginx</code></li>\n</ul>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> node:<span class=\"number\">16.5</span> as build-deps</span><br><span class=\"line\"><span class=\"keyword\">LABEL</span><span class=\"bash\"> maintainer=laosu&lt;wbsu2003@gmail.com&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># environment</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> VUE_APP_NETEASE_API_URL netease_vanau</span><br><span class=\"line\"><span class=\"keyword\">ENV</span> VUE_APP_ELECTRON_API_URL netease_vaeaux</span><br><span class=\"line\"><span class=\"keyword\">ENV</span> VUE_APP_ELECTRON_API_URL_DEV netease_vaeaud</span><br><span class=\"line\"><span class=\"keyword\">ENV</span> VUE_APP_LASTFM_API_KEY netease_valak</span><br><span class=\"line\"><span class=\"keyword\">ENV</span> VUE_APP_LASTFM_API_SHARED_SECRET netease_valass</span><br><span class=\"line\"><span class=\"keyword\">ENV</span> DEV_SERVER_PORT netease_dsp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /app</span></span><br><span class=\"line\"><span class=\"comment\">#COPY package.json yarn.lock ./</span></span><br><span class=\"line\"><span class=\"comment\">#RUN yarn</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> TMPDIR=/tmp yarn install</span></span><br><span class=\"line\"><span class=\"comment\">#RUN yarn config set registry &quot;https://registry.npm.taobao.org/&quot; \\</span></span><br><span class=\"line\"><span class=\"comment\">#    &amp;&amp; TMPDIR=/tmp yarn install</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> . ./</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> yarn build</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> node:lts-alpine</span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> apk update \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; apk add --no-cache supervisor openssh nginx</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> --from=build-deps /app/dist /usr/share/nginx/html</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> --from=build-deps /app/supervisord.conf /etc/supervisord.conf</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># nginx</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> --from=build-deps /app/default.conf /etc/nginx/conf.d/default.conf</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> --from=build-deps /app/nginx.conf /etc/nginx/nginx.conf</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> mkdir -p /usr/<span class=\"built_in\">local</span>/nginx/logs</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># api server</span></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /api</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> --from=build-deps /app/netease_api/. /api</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> --from=build-deps /app/replace_api_url.sh /api</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> chmod +x replace_api_url.sh</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> npm config <span class=\"built_in\">set</span> registry <span class=\"string\">&quot;https://registry.npm.taobao.org/&quot;</span> \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; npm install --production</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># CMD [&quot;sh&quot;, &quot;replace_api_url.sh&quot;]</span></span><br><span class=\"line\"><span class=\"keyword\">ENTRYPOINT</span><span class=\"bash\"> [<span class=\"string\">&quot;supervisord&quot;</span>,<span class=\"string\">&quot;-c&quot;</span>,<span class=\"string\">&quot;/etc/supervisord.conf&quot;</span>]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">80</span></span><br></pre></td></tr></table></figure>\n\n<p><code>replace_api_url.sh</code> 用于替换 <code>ENV</code> 设置的占位符</p>\n<blockquote>\n<p>这个和第一版是一样的</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/env sh</span><br><span class=\"line\"></span><br><span class=\"line\">find <span class=\"string\">&#x27;/usr/share/nginx/html&#x27;</span> -name <span class=\"string\">&#x27;*.js&#x27;</span> -exec sed -i -e <span class=\"string\">&#x27;s,netease_vanau,&#x27;</span><span class=\"string\">&quot;$VUE_APP_NETEASE_API_URL&quot;</span><span class=\"string\">&#x27;,g&#x27;</span> &#123;&#125; \\;</span><br><span class=\"line\"></span><br><span class=\"line\">find <span class=\"string\">&#x27;/usr/share/nginx/html&#x27;</span> -name <span class=\"string\">&#x27;*.js&#x27;</span> -exec sed -i -e <span class=\"string\">&#x27;s,netease_vaeaux,&#x27;</span><span class=\"string\">&quot;$VUE_APP_ELECTRON_API_URL&quot;</span><span class=\"string\">&#x27;,g&#x27;</span> &#123;&#125; \\;</span><br><span class=\"line\"></span><br><span class=\"line\">find <span class=\"string\">&#x27;/usr/share/nginx/html&#x27;</span> -name <span class=\"string\">&#x27;*.js&#x27;</span> -exec sed -i -e <span class=\"string\">&#x27;s,netease_vaeaud,&#x27;</span><span class=\"string\">&quot;$VUE_APP_ELECTRON_API_URL_DEV&quot;</span><span class=\"string\">&#x27;,g&#x27;</span> &#123;&#125; \\;</span><br><span class=\"line\"></span><br><span class=\"line\">find <span class=\"string\">&#x27;/usr/share/nginx/html&#x27;</span> -name <span class=\"string\">&#x27;*.js&#x27;</span> -exec sed -i -e <span class=\"string\">&#x27;s,netease_valak,&#x27;</span><span class=\"string\">&quot;$VUE_APP_LASTFM_API_KEY&quot;</span><span class=\"string\">&#x27;,g&#x27;</span> &#123;&#125; \\;</span><br><span class=\"line\"></span><br><span class=\"line\">find <span class=\"string\">&#x27;/usr/share/nginx/html&#x27;</span> -name <span class=\"string\">&#x27;*.js&#x27;</span> -exec sed -i -e <span class=\"string\">&#x27;s,netease_valass,&#x27;</span><span class=\"string\">&quot;$VUE_APP_LASTFM_API_SHARED_SECRET&quot;</span><span class=\"string\">&#x27;,g&#x27;</span> &#123;&#125; \\;</span><br><span class=\"line\"></span><br><span class=\"line\">find <span class=\"string\">&#x27;/usr/share/nginx/html&#x27;</span> -name <span class=\"string\">&#x27;*.js&#x27;</span> -exec sed -i -e <span class=\"string\">&#x27;s,netease_dsp,&#x27;</span><span class=\"string\">&quot;$DEV_SERVER_PORT&quot;</span><span class=\"string\">&#x27;,g&#x27;</span> &#123;&#125; \\;</span><br><span class=\"line\"></span><br><span class=\"line\">nginx -g <span class=\"string\">&quot;daemon off;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p><code>supervisord.conf</code> 文件是新增用来控制进程的，前端 <code>app</code> 是运行在 <code>nginx</code> 上的静态页面，后端 <code>api</code> 基于 <code>node.js</code>  </p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[include]</span></span><br><span class=\"line\"><span class=\"attr\">files</span> = /etc/supervisor/conf.d/*.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[program:app]</span></span><br><span class=\"line\"><span class=\"attr\">command</span>=./replace_api_url.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[program:api]</span></span><br><span class=\"line\"><span class=\"attr\">command</span>=node app.js</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#directory will be any folder where you wnat supervisor to cd before executing.</span></span><br><span class=\"line\"><span class=\"comment\">#directory=/project </span></span><br><span class=\"line\"><span class=\"attr\">autostart</span>=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">autorestart</span>=<span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">startretries</span>=<span class=\"number\">3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#user will be anyone you want but make sure that user will have the enough privilage.</span></span><br><span class=\"line\"><span class=\"attr\">user</span>=root</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[supervisord]</span></span><br><span class=\"line\"><span class=\"attr\">nodaemon</span>=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">logfile</span>=/tmp/supervisord.log</span><br><span class=\"line\"><span class=\"attr\">pidfile</span>=/tmp/supervisord.pid</span><br><span class=\"line\"><span class=\"attr\">loglevel</span>=debug</span><br><span class=\"line\"><span class=\"attr\">logfile_maxbytes</span>=<span class=\"number\">10</span>MB</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[supervisorctl]</span></span><br></pre></td></tr></table></figure>\n\n<p><code>nginx</code> 设置文件 <code>nginx.conf</code> </p>\n<blockquote>\n<p>镜像中的位置 <code>/etc/nginx/nginx.conf</code>，比默认的 <code>nginx.conf</code>  文件多一行 <code>pid /usr/local/nginx/logs/nginx.pid;</code>，如果没有会出现错误： <code>nginx: [emerg] open() &quot;/run/nginx/nginx.pid&quot; failed (2: No such file or directory)</code></p>\n</blockquote>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># /etc/nginx/nginx.conf</span></span><br><span class=\"line\"></span><br><span class=\"line\">user nginx;</span><br><span class=\"line\"></span><br><span class=\"line\">pid /usr/local/nginx/logs/nginx.pid; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Set number of worker processes automatically based on number of CPU cores.</span></span><br><span class=\"line\">worker_processes auto;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Enables the use of JIT for regular expressions to speed-up their processing.</span></span><br><span class=\"line\">pcre_jit on;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Configures default error logger.</span></span><br><span class=\"line\">error_log /var/log/nginx/error.log warn;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Includes files with directives to load dynamic modules.</span></span><br><span class=\"line\">include /etc/nginx/modules/*.conf;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">events &#123;</span><br><span class=\"line\">\t<span class=\"comment\"># The maximum number of simultaneous connections that can be opened by</span></span><br><span class=\"line\">\t<span class=\"comment\"># a worker process.</span></span><br><span class=\"line\">\tworker_connections 1024;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">http &#123;</span><br><span class=\"line\">\t<span class=\"comment\"># Includes mapping of file name extensions to MIME types of responses</span></span><br><span class=\"line\">\t<span class=\"comment\"># and defines the default type.</span></span><br><span class=\"line\">\tinclude /etc/nginx/mime.types;</span><br><span class=\"line\">\tdefault_type application/octet-stream;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\"># Name servers used to resolve names of upstream servers into addresses.</span></span><br><span class=\"line\">\t<span class=\"comment\"># It&#x27;s also needed when using tcpsocket and udpsocket in Lua modules.</span></span><br><span class=\"line\">\t<span class=\"comment\">#resolver 208.67.222.222 208.67.220.220;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\"># Don&#x27;t tell nginx version to clients.</span></span><br><span class=\"line\">\tserver_tokens off;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\"># Specifies the maximum accepted body size of a client request, as</span></span><br><span class=\"line\">\t<span class=\"comment\"># indicated by the request header Content-Length. If the stated content</span></span><br><span class=\"line\">\t<span class=\"comment\"># length is greater than this size, then the client receives the HTTP</span></span><br><span class=\"line\">\t<span class=\"comment\"># error code 413. Set to 0 to disable.</span></span><br><span class=\"line\">\tclient_max_body_size 1m;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\"># Timeout for keep-alive connections. Server will close connections after</span></span><br><span class=\"line\">\t<span class=\"comment\"># this time.</span></span><br><span class=\"line\">\tkeepalive_timeout 65;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\"># Sendfile copies data between one FD and other from within the kernel,</span></span><br><span class=\"line\">\t<span class=\"comment\"># which is more efficient than read() + write().</span></span><br><span class=\"line\">\tsendfile on;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\"># Don&#x27;t buffer data-sends (disable Nagle algorithm).</span></span><br><span class=\"line\">\t<span class=\"comment\"># Good for sending frequent small bursts of data in real time.</span></span><br><span class=\"line\">\ttcp_nodelay on;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\"># Causes nginx to attempt to send its HTTP response head in one packet,</span></span><br><span class=\"line\">\t<span class=\"comment\"># instead of using partial frames.</span></span><br><span class=\"line\">\t<span class=\"comment\">#tcp_nopush on;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\"># Path of the file with Diffie-Hellman parameters for EDH ciphers.</span></span><br><span class=\"line\">\t<span class=\"comment\">#ssl_dhparam /etc/ssl/nginx/dh2048.pem;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\"># Specifies that our cipher suits should be preferred over client ciphers.</span></span><br><span class=\"line\">\tssl_prefer_server_ciphers on;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\"># Enables a shared SSL cache with size that can hold around 8000 sessions.</span></span><br><span class=\"line\">\tssl_session_cache shared:SSL:2m;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\"># Enable gzipping of responses.</span></span><br><span class=\"line\">\t<span class=\"comment\">#gzip on;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\"># Set the Vary HTTP header as defined in the RFC 2616.</span></span><br><span class=\"line\">\tgzip_vary on;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\"># Enable checking the existence of precompressed files.</span></span><br><span class=\"line\">\t<span class=\"comment\">#gzip_static on;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\"># Specifies the main log format.</span></span><br><span class=\"line\">\tlog_format main &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br><span class=\"line\">\t\t\t&#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class=\"line\">\t\t\t&#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\"># Sets the path, format, and configuration for a buffered log write.</span></span><br><span class=\"line\">\taccess_log /var/log/nginx/access.log main;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\"># Includes virtual hosts configs.</span></span><br><span class=\"line\">\tinclude /etc/nginx/conf.d/*.conf;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><code>nginx</code> 设置文件 <code>default.conf</code></p>\n<blockquote>\n<p>镜像中的位置<code>/etc/nginx/conf.d/default.conf</code>，将 <code>/api</code> 转发给后端处理 </p>\n</blockquote>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">server</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    listen 80;</span><br><span class=\"line\">    server_name default_serve; # 配置项目域名</span><br><span class=\"line\">    root /usr/share/nginx/html;</span><br><span class=\"line\">    index index.html index.htm;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 1.转给前端处理</span></span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">\t    <span class=\"comment\"># 前端打包后的静态目录</span></span><br><span class=\"line\">        alias /usr/share/nginx/html/;</span><br><span class=\"line\">        <span class=\"comment\"># 解决页面刷新404问题</span></span><br><span class=\"line\">        try_files $uri $uri/ /index.html;</span><br><span class=\"line\">\t\t<span class=\"comment\"># 处理上传文件大小</span></span><br><span class=\"line\">\t\tclient_max_body_size 1000m;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 2.转给后端处理</span></span><br><span class=\"line\">    location ^~ /api/ &#123;</span><br><span class=\"line\">\t    proxy_pass http://127.0.0.1:3000/;</span><br><span class=\"line\">\t    <span class=\"comment\"># 处理上传文件大小</span></span><br><span class=\"line\">\t    client_max_body_size 1000m;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>构建镜像和容器运行的基本命令如下👇</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载代码,当前对应的是 0.4.1</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/qier222/YesPlayMusic.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 或者镜像站点</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://hub.fastgit.org/qier222/YesPlayMusic.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> YesPlayMusic</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 Dockerfile 、 replace_api_url.sh 、supervisord.conf、nginx.conf 、default.conf 五个文件放进代码目录中</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 构建镜像</span></span><br><span class=\"line\">docker build -t wbsu2003/yesplaymusic:v2 .</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成容器</span></span><br><span class=\"line\">docker run -d \\</span><br><span class=\"line\">--name=yesplaymusic \\</span><br><span class=\"line\">-p 3310:80 \\</span><br><span class=\"line\">-e VUE_APP_NETEASE_API_URL=/api \\</span><br><span class=\"line\">-e VUE_APP_LASTFM_API_KEY=&lt;your Last.fm API KEY&gt; \\</span><br><span class=\"line\">-e VUE_APP_LASTFM_API_SHARED_SECRET=&lt;your Last.fm API SHARED SECRET&gt; \\</span><br><span class=\"line\">wbsu2003/yesplaymusic:v2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># --------调试-------------</span></span><br><span class=\"line\"><span class=\"comment\"># 进入容器</span></span><br><span class=\"line\">docker <span class=\"built_in\">exec</span> --user root -it yesplaymusic /bin/sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将生成的静态文件拷贝到容器外</span></span><br><span class=\"line\">docker cp yesplaymusic:/usr/share/nginx/html/. ./dist</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将生成的静态文件拷贝到容器内</span></span><br><span class=\"line\">docker cp /dist/. yesplaymusic:/usr/share/nginx/html</span><br><span class=\"line\"><span class=\"comment\"># ------------------------</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>注册表中搜索 <code>wbsu2003</code> ，找到 <code>wbsu2003/yesplaymusic</code>，版本选 <code>latest</code>。</p>\n<blockquote>\n<p>如果你之前已经安装过 <code>YesPlayMusic</code>，建议先删除老版本的容器和镜像再进行安装</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110101744458.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不冲突就行</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>3310</code></td>\n<td align=\"center\"><code>80</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110101750027.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>VUE_APP_NETEASE_API_URL</code></td>\n<td align=\"center\">使用 <code>/api</code> 不要修改</td>\n</tr>\n<tr>\n<td align=\"center\"><code>VUE_APP_LASTFM_API_KEY</code></td>\n<td align=\"center\"><code>Last.fm</code> 获取的 <code>API Key</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>VUE_APP_LASTFM_API_SHARED_SECRET</code></td>\n<td align=\"center\"><code>Last.fm</code> 获取的 <code>Shared Secret</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110142345020.png\"></p>\n<blockquote>\n<p> 如果你还没有 <code>Last.fm</code> 账号，可以去 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGFzdC5mbS9hcGkvYWNjb3VudC9jcmVhdGU=\">https://www.last.fm/api/account/create<i class=\"fa fa-external-link-alt\"></i></span> 创建一个 <code>API</code> 帐户。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110150856996.png\"></p>\n<p>老苏没有填 <code>Callback URL</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110150857895.png\"></p>\n<blockquote>\n<p>如果你已经创建好了，需要查询可以去 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGFzdC5mbS9hcGkvYWNjb3VudHM=\">https://www.last.fm/api/accounts<i class=\"fa fa-external-link-alt\"></i></span> 找到你的 <code>API Applications</code></p>\n</blockquote>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:3310</code> 就能看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110142354283.png\"></p>\n<h2 id=\"第三方授权\"><a href=\"#第三方授权\" class=\"headerlink\" title=\"第三方授权\"></a>第三方授权</h2><p>在 <code>设置</code> –&gt; <code>第三方</code> –&gt; <code>连接 Last.fm</code> –&gt; <code>授权连接</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110150919240.png\"></p>\n<p>在跳转页面选择 <code>YES ALLOW ACCESS</code> 进行授权</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110150928043.png\"></p>\n<p>授权之后会显示成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110182035231.png\"></p>\n<p>点 <code>完成</code>，能看到连接的 <code>Last.fm</code> 账号 </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110190914990.png\"></p>\n<h2 id=\"反代\"><a href=\"#反代\" class=\"headerlink\" title=\"反代\"></a>反代</h2><p>反代已经没问题了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110142355857.png\"></p>\n<h1 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h1><p>文中提到的文件，都可以在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dic3UyMDAzL0RvY2tlcmZpbGU=\">https://github.com/wbsu2003/Dockerfile<i class=\"fa fa-external-link-alt\"></i></span> 找到</p>\n<p>个人精力有限，很难做全面的测试，如果你发现有什么问题，请反馈给老苏，反馈方式：</p>\n<ul>\n<li>  给公众号发消息。虽然老苏的公众号并不支持留言，并且还有很多限制，但聊胜于无</li>\n<li>  点『 阅读原文 』 去老苏的博客 （<a href=\"https://laosu.ml/\">https://laosu.ml</a>） 留言</li>\n<li>  发邮件：<span class=\"exturl\" data-url=\"bWFpbHRvOndic3UyMDAzQGdtYWlsLmNvbQ==\">wbsu2003@gmail.com<i class=\"fa fa-external-link-alt\"></i></span>、<span class=\"exturl\" data-url=\"bWFpbHRvOndic3UyMDAzQGhvdG1haWwuY29t\">wbsu2003@hotmail.com<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>qier222/YesPlayMusic: 高颜值的第三方网易云播放器，支持 Windows / macOS / Linux<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3FpZXIyMjIvWWVzUGxheU11c2lj\">https://github.com/qier222/YesPlayMusic<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Binaryify/NeteaseCloudMusicApi: 网易云音乐 Node.js API service<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0JpbmFyeWlmeS9OZXRlYXNlQ2xvdWRNdXNpY0FwaQ==\">https://github.com/Binaryify/NeteaseCloudMusicApi<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Bug. Yarn couldn’t build package phantomjs. npm could. · Issue #1016 · yarnpkg/yarn<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3lhcm5wa2cveWFybi9pc3N1ZXMvMTAxNg==\">https://github.com/yarnpkg/yarn/issues/1016<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>单机，前后端分离，Nginx反向代理 - 简书<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8zYzJjM2Y2NGYxYWQ=\">https://www.jianshu.com/p/3c2c3f64f1ad<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Nginx代理同域名前后端分离项目 | Laravel China 社区<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybmt1LmNvbS9hcnRpY2xlcy81MDY2OA==\">https://learnku.com/articles/50668<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","音乐"]},{"title":"百度网盘Python客户端bypy","url":"/2021/10/20/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98Python%E5%AE%A2%E6%88%B7%E7%AB%AFbypy/","content":"<p>简单说明：</p>\n<ol>\n<li>由于百度 <code>PCS API</code> 权限限制，<code>bypy</code> 只能存取百度云端<code>/apps/bypy</code>目录下面的文件和目录</li>\n<li><code>bypy</code> 没有提速效果，想要下载不限速，需要自行购买 <code>SVIP</code></li>\n</ol>\n<blockquote>\n<p>之前老苏写过 『 <a href=\"https://laosu.ml/2020/12/31/Docker%E4%B8%AD%E8%BF%90%E8%A1%8C%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E5%AE%A2%E6%88%B7%E7%AB%AF/\">Docker中运行百度网盘客户端</a> 』，那是带图形界面的官方客户端，而 <code>bypy</code> 则是第三方的命令行工具</p>\n</blockquote>\n<h1 id=\"构建镜像\"><a href=\"#构建镜像\" class=\"headerlink\" title=\"构建镜像\"></a>构建镜像</h1><blockquote>\n<p>如果你不想自己构建，可以跳过，直接阅读下一章节</p>\n</blockquote>\n<p><code>bypy</code> 官方没有提供  <code>Dockerfile</code> 或者镜像，但第三方的还是很多的，只是都有些年代久远，所以老苏还是准备自己构建</p>\n<ul>\n<li><code>v1</code> 版 <code>Dockerfile</code></li>\n</ul>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> python:<span class=\"number\">3.6</span>-slim</span><br><span class=\"line\"><span class=\"keyword\">MAINTAINER</span> laosu&lt;wbsu2003@gmail.com&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /baidupy</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> . /baidupy/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Environment</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> TERM=xterm</span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> pip install bypy </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Application</span></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> NAME Python_client_for_Baidu_Yun</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"bash\"> bypy info</span></span><br></pre></td></tr></table></figure>\n\n<p>但是老苏发现 <code>v1</code> 版的容器停止后会无法启动，因为 <code>bypy info</code> 在获取到云盘容量后会退出，导致 <code>exited with code 0</code>，因此老苏引入了 <code>Supervisor</code> 来做进程管理</p>\n<ul>\n<li><code>v2</code> 版 <code>Dockerfile</code></li>\n</ul>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> python:<span class=\"number\">3.6</span>-slim</span><br><span class=\"line\"><span class=\"keyword\">MAINTAINER</span> laosu&lt;wbsu2003@gmail.com&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /baidupy</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Application</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> apt-get update -y &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"bash\">    apt-get install -y supervisor</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\">\tpip install bypy</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># supervisord</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> supervisord.conf /etc/supervisord.conf</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Environment</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> TERM=xterm</span><br><span class=\"line\"><span class=\"keyword\">ENV</span> NAME=Python_client_for_Baidu_Yun</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#定义时区参数（非必须）</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> TZ=Asia/Shanghai</span><br><span class=\"line\"><span class=\"comment\">#设置时区（非必须）</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> ln -snf /usr/share/zoneinfo/<span class=\"variable\">$TZ</span> /etc/localtime &amp;&amp; <span class=\"built_in\">echo</span> <span class=\"string\">&#x27;$TZ&#x27;</span> &gt; /etc/timezone</span></span><br><span class=\"line\"><span class=\"comment\">#设置编码（非必须）</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> LANG C.UTF-<span class=\"number\">8</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ENTRYPOINT</span><span class=\"bash\"> [<span class=\"string\">&quot;supervisord&quot;</span>,<span class=\"string\">&quot;-c&quot;</span>,<span class=\"string\">&quot;/etc/supervisord.conf&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n\n<p><code>v2</code> 版除了 <code>Dockerfile</code>，还需要准备 <code>supervisord.conf</code> 文件</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[include]</span></span><br><span class=\"line\"><span class=\"attr\">files</span> = /etc/supervisor/conf.d/*.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[program:bypy]</span></span><br><span class=\"line\"><span class=\"attr\">command</span>=bypy info</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#directory will be any folder where you wnat supervisor to cd before executing.</span></span><br><span class=\"line\"><span class=\"comment\">#directory=/project </span></span><br><span class=\"line\"><span class=\"attr\">autostart</span>=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">autorestart</span>=<span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">startretries</span>=<span class=\"number\">3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#user will be anyone you want but make sure that user will have the enough privilage.</span></span><br><span class=\"line\"><span class=\"attr\">user</span>=root</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[supervisord]</span></span><br><span class=\"line\"><span class=\"attr\">nodaemon</span>=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">logfile</span>=/tmp/supervisord.log</span><br><span class=\"line\"><span class=\"attr\">pidfile</span>=/tmp/supervisord.pid</span><br><span class=\"line\"><span class=\"attr\">loglevel</span>=debug</span><br><span class=\"line\"><span class=\"attr\">logfile_maxbytes</span>=<span class=\"number\">10</span>MB</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[supervisorctl]</span></span><br></pre></td></tr></table></figure>\n\n<p>构建镜像和容器运行的基本命令如下👇</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 将 Dockerfile 和 supervisord.conf 放在同一个目录</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 构建镜像</span></span><br><span class=\"line\">docker build -t wbsu2003/bypy:v2 .</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成容器</span></span><br><span class=\"line\">docker run -it --name=bypy \\</span><br><span class=\"line\">-v /volume2/docker/bypy:/baidupy \\</span><br><span class=\"line\">wbsu2003/bypy:v2</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 运行容器</span></span><br><span class=\"line\">docker start bypy</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入容器</span></span><br><span class=\"line\">docker <span class=\"built_in\">exec</span> --user root -it bypy /bin/sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 退出容器</span></span><br><span class=\"line\"><span class=\"built_in\">exit</span> 或者 ctrl+D</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>wbsu2003</code> ，找到 <code>wbsu2003/bypy</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241502126.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>bypy</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/bypy</code></td>\n<td align=\"center\"><code>/baidupy</code></td>\n<td align=\"center\">文件存放目录</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241506742.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>和 <code>cloud189-cli</code> 一样，<code>bypy</code> 也是命令行方式的，所以要么在 <code>SSH</code> 客户端上运行，要么进 『终端机』 运行。</p>\n<blockquote>\n<p>老苏建议还是在 <code>SSH</code> 客户端上运行比较方便，关于 <code>cloud189-cli</code> 请看：『<a href=\"https://laosu.ml/2021/06/25/%E5%9C%A8%E7%BE%A4%E6%99%96%E4%B8%8A%E4%BD%BF%E7%94%A8%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98\">在群晖上使用天翼云盘</a>』</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241531416.png\"></p>\n<p><code>终端机</code> –&gt; <code>新增</code> –&gt; <code>通过命令启动</code> –&gt; <code>bash</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241532414.png\"></p>\n<p>第一次需要授权，执行 <code>bypy info</code>，然后复制红框部分的内容，在浏览器中打开</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241535277.png\"></p>\n<p>复制生成的授权码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241536627.png\"></p>\n<p>粘贴到红框位置，然后回车</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241538171.png\"></p>\n<p>程序会利用不同的服务器进行认证，认证成功会显示百度网盘的容量，如果一次没成功，可以多试几次。</p>\n<blockquote>\n<p>过程有点长，而且失败的概率还挺高的，要有耐心~~~</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241542207.png\"></p>\n<p>有的网站直接报错</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241543838.png\"></p>\n<p>有的访问不到</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241545325.gif\"></p>\n<p>极端情况下会认证失败，只能重新再来一遍了，因为这个授权码有时间限制</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109252255031.png\"></p>\n<p>认证成功后，会显示空间的大小</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241548737.png\"></p>\n<p>授权只需一次，一旦成功，以后就不会再出现授权提示</p>\n<blockquote>\n<p> <code>access_token</code> 和 <code>refresh_token</code> 保存在 <code>/~/.bypy/bypy.json</code> 中</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109252300520.png\"></p>\n<h1 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h1><h2 id=\"帮助\"><a href=\"#帮助\" class=\"headerlink\" title=\"帮助\"></a>帮助</h2><p>执行 <code>bypy</code> 或者 <code>bypy help</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241550449.png\"></p>\n<p>更详细的可以运行 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">bypy <span class=\"built_in\">help</span> &lt;<span class=\"built_in\">command</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<p>例如： <code>bypy help list</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241555948.png\"></p>\n<h2 id=\"文件列表\"><a href=\"#文件列表\" class=\"headerlink\" title=\"文件列表\"></a>文件列表</h2><p>执行 <code>bypy list</code> 可以列出云盘的文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241556200.png\"></p>\n<p>在百度盘中的 <code>/apps/bypy</code>目录中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241557749.png\"></p>\n<h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p>也就是将云盘内容同步到本地，可以执行 <code>bypy syncdown</code> 或者 <code>bypy downdir /</code>，不是会员的话，下载速度就比较慢</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241643282.png\"></p>\n<p>下载完成后，可以在 <code>File Station</code> 中看到下载的文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241644007.png\"></p>\n<h2 id=\"上传\"><a href=\"#上传\" class=\"headerlink\" title=\"上传\"></a>上传</h2><p>也就是将当前目录同步到云盘，可以执行 <code>bypy syncup</code> 或者 <code>bypy upload</code></p>\n<p>先在 <code>File Station</code> 增加一个将近百兆的 <code>exe</code> 文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241649487.png\"></p>\n<p>上传速度比下载要快一点</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241652911.png\"></p>\n<p>同步完成</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241654480.png\"></p>\n<p>刷新网盘</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241655842.png\"></p>\n<h2 id=\"比较\"><a href=\"#比较\" class=\"headerlink\" title=\"比较\"></a>比较</h2><p>要比较本地当前目录和云盘（程序的）根目录，可以执行 <code>bypy compare</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241659445.png\"></p>\n<p>为啥会 <code>Different:2</code> ，老苏也没闹明白，很可能是因为下载中断过的缘故</p>\n<p>更多命令和详细解释请看运行 <code>bypy</code> 的输出，或者阅读官方的文档。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>houtianze/bypy: Python client for Baidu Yun (Personal Cloud Storage) 百度云/百度网盘Python客户端<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hvdXRpYW56ZS9ieXB5Lw==\">https://github.com/houtianze/bypy/<i class=\"fa fa-external-link-alt\"></i></span> </p>\n<p>bypy-百度网盘Python客户端 linux - 简书<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9jOTQ2N2RhZjcwMWYv\">https://www.jianshu.com/p/c9467daf701f/<i class=\"fa fa-external-link-alt\"></i></span> </p>\n<p>exited with code 0 docker - Stack Overflow<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNDQ4ODQ3MTkvZXhpdGVkLXdpdGgtY29kZS0wLWRvY2tlcg==\">https://stackoverflow.com/questions/44884719/exited-with-code-0-docker<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Understanding Docker Container Exit Codes | by Sandeep Madamanchi | Better Programming<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iZXR0ZXJwcm9ncmFtbWluZy5wdWIvdW5kZXJzdGFuZGluZy1kb2NrZXItY29udGFpbmVyLWV4aXQtY29kZXMtNWVlNzlhMWQ1OGY2\">https://betterprogramming.pub/understanding-docker-container-exit-codes-5ee79a1d58f6<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","网盘"]},{"title":"开源即时通讯平台Tinode","url":"/2021/10/18/%E5%BC%80%E6%BA%90%E5%8D%B3%E6%97%B6%E9%80%9A%E8%AE%AF%E5%B9%B3%E5%8F%B0Tinode/","content":"<p><strong>什么是 Tinode ？</strong></p>\n<blockquote>\n<p><code>Tinode</code> 是一个免费、无限制且灵活的开源消息传递平台，以移动端为主。采用纯 <code>Go</code> 后端（授权 GPL 3.0），客户端采用 <code>Java</code>、<code>Javascript</code> 和 <code>Swift</code> ；<code>gRPC</code> 客户端支持<code>C++</code> 、<code>C#</code> 、<code>Go</code> 、<code>Java</code> 、<code>Node</code> 、<code>PHP</code> 、<code>Python</code> 、<code>Ruby</code> 、<code>Objective-C</code> 等（授权Apache 2.0）。</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h2><ol>\n<li><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>tinode</code>，在 <code>tinode</code> 中建 3 个子目录，分别是 <code>data</code>，<code>uploads</code>，<code>logs</code></p>\n</li>\n<li><p>这一步是可选项，只有当你想启用外部设置的时候才需要下载 <code>tinode.conf</code> 文件，地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3Rpbm9kZS9jaGF0L21hc3Rlci9zZXJ2ZXIvdGlub2RlLmNvbmY=\">https://raw.githubusercontent.com/tinode/chat/master/server/tinode.conf<i class=\"fa fa-external-link-alt\"></i></span>，将其放入到 <code>tinode</code> 目录，在修改前做好备份，修改时一定要记得用 <code>UTF-8</code> 编码格式，记得去掉注释</p>\n</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210825093102.png\"></p>\n<p>本质上 <code>tinode.conf</code> 文件是个 <code>json</code> 文件，你可以基于官方的 <code>tinode.conf</code> 修改出一个适合自己的，但是很容易搞出错误，所以没有把握的话建议先不启用外部配置</p>\n<h2 id=\"网络\"><a href=\"#网络\" class=\"headerlink\" title=\"网络\"></a>网络</h2><p>在 <code>Docker</code> 管理器的 <code>网络</code> 中创建一个新的桥接网络</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210824132455.png\"></p>\n<p>在没有容器连接的情况下，网络是灰的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210824132654.png\"></p>\n<h2 id=\"数据库\"><a href=\"#数据库\" class=\"headerlink\" title=\"数据库\"></a>数据库</h2><p> <code>tinode</code> 支持三种数据库：<code>RethinkDB</code>、<code>MySQL</code> 和 <code>MongoDB</code>，老苏选了 <code>MySQL</code> ，但这次没有用群晖自带的 <code>MariaDB</code>，而是用 <code>Docker</code> 新安装</p>\n<blockquote>\n<p><code>Tinode</code> 要求 <code>MySQL</code> 版本必须在 5.7 以上</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210824114905.png\"></p>\n<h3 id=\"名称\"><a href=\"#名称\" class=\"headerlink\" title=\"名称\"></a>名称</h3><p><code>容器名称</code> 改为 <code>mysql</code>，进入高级设置</p>\n<blockquote>\n<p>如果不用 <code>mysql</code> 做容器名称，记得要修改 <code>tinode</code> 的环境变量 <code>MYSQL_DSN</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210824134543.png\" alt=\"mysql\"></p>\n<h3 id=\"高级设置\"><a href=\"#高级设置\" class=\"headerlink\" title=\"高级设置\"></a>高级设置</h3><p>勾选 <code>启用自动重新启动</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210824133404.png\"></p>\n<h3 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h3><table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/tinode/date</code></td>\n<td align=\"center\"><code>/var/lib/mysql</code></td>\n<td align=\"center\">持久化存放数据</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210825093311.png\"></p>\n<h3 id=\"网络-1\"><a href=\"#网络-1\" class=\"headerlink\" title=\"网络\"></a>网络</h3><p>点 <code>+</code> 号，在下拉框中找到前面添加的网络 <code>tinode-net</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210824133012.png\"></p>\n<p>选中 <code>bridge</code> 之后点 <code>-</code> 号，只留下 <code>tinode-net</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210824141959.png\"></p>\n<h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>MYSQL_ALLOW_EMPTY_PASSWORD</code></td>\n<td align=\"center\">设置为 <code>yes</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210824120130.png\"></p>\n<p><code>端口设置</code>、<code>链接</code> 采用默认，全部设置完后，<code>应用</code> 即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210824134430.png\"></p>\n<p>如果容器运行正常，就可以进行下一步了</p>\n<h2 id=\"Tinode\"><a href=\"#Tinode\" class=\"headerlink\" title=\"Tinode\"></a>Tinode</h2><p>在注册表中搜索 <code>tinode</code> ，选择第三个 <code>tinode/tinode-mysql</code>，版本选择 <code>latest</code>。</p>\n<blockquote>\n<p>当然也可以下载第四个 <code>tinode/tinode</code>，这个版本同时包含了三种数据库适配器，需要通过 <code>STORE_USE_ADAPTER = mysql</code> 环境变量来指定数据库适配器。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210824112258.png\"></p>\n<h3 id=\"卷-1\"><a href=\"#卷-1\" class=\"headerlink\" title=\"卷\"></a>卷</h3><table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/tinode/tinode.conf</code></td>\n<td align=\"center\"><code>/opt/tinode/tinode.conf</code></td>\n<td align=\"center\">配置文件</td>\n</tr>\n<tr>\n<td align=\"center\"><code>docker/tinode/logs</code></td>\n<td align=\"center\"><code>/var/log</code></td>\n<td align=\"center\">存放日志</td>\n</tr>\n<tr>\n<td align=\"center\"><code>docker/tinode/uploads</code></td>\n<td align=\"center\"><code>/opt/tinode/uploads</code></td>\n<td align=\"center\">上传目录</td>\n</tr>\n</tbody></table>\n<blockquote>\n<ul>\n<li>其中第一项为文件，第二、三项为文件夹；</li>\n</ul>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210825094125.png\"></p>\n<p>如果你不启用外部设置，可以只映射文件夹</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210910171151.png\"></p>\n<h3 id=\"网络-2\"><a href=\"#网络-2\" class=\"headerlink\" title=\"网络\"></a>网络</h3><p>点 <code>+</code> 号，在下拉框中找到前面添加的网络 <code>tinode-net</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210824133012.png\"></p>\n<p>选中 <code>bridge</code> 之后点 <code>-</code> 号，只留下 <code>tinode-net</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210824141959.png\"></p>\n<h3 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h3><p>除了 <code>6060</code> 端口 ，其他端口直接用了默认的 <code>自动</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">6060</td>\n<td align=\"center\">6060</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210825135604.png\"></p>\n<h3 id=\"环境-1\"><a href=\"#环境-1\" class=\"headerlink\" title=\"环境\"></a>环境</h3><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>EXT_CONFIG</code></td>\n<td align=\"center\">按官方文档需设置为 <code>/opt/tinode/tinode.conf</code></td>\n</tr>\n</tbody></table>\n<p>如果前面启用了外部配置，这里就需要设置 <code>EXT_CONFIG</code>，否则不需要设置，保持默认即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210825094835.png\"></p>\n<p>如果你的 <code>tinode.conf</code> 配置有问题，日志会一直显示错误，比如下面👇这样：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Database adapter: mysql , version: 111</span><br><span class=\"line\">Failed to init DB adapter: dial tcp 127.0.0.1:3306: connect: connection refused</span><br><span class=\"line\">.&#x2F;init-db failed. Quitting.</span><br></pre></td></tr></table></figure>\n\n<p>需要修改正确，容器才能正常启动</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Database adapter: mysql , version: 111</span><br><span class=\"line\">Database exists, DB version is correct. All done.</span><br></pre></td></tr></table></figure>\n\n<p>应用之后，如果不出意外的话容器应该也能正常运转</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210824134805.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:6060</code>，就看到登录界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210824134936.png\"></p>\n<p>设置服务器地址：</p>\n<blockquote>\n<p>显示不全，端口是默认的 <code>6060</code>，而不是看到的 <code>606</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210910112309.png\"></p>\n<p>系统内置了一些测试账号</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">账号</th>\n<th align=\"center\">密码</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>alice</code></td>\n<td align=\"center\"><code>alice123</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>bob</code></td>\n<td align=\"center\"><code>bob123</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>carol</code></td>\n<td align=\"center\"><code>carol123</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>dave</code></td>\n<td align=\"center\"><code>dave123</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>frank</code></td>\n<td align=\"center\"><code>frank123</code></td>\n</tr>\n</tbody></table>\n<p>用 <code>alice</code> 登录网页</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210824140153.png\"></p>\n<p>虽然显示的聊天内容都是英文，其实界面是中文的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210824140406.png\"></p>\n<p>看之前的一些文档，要注册新用户需要设置 <code>SMTP</code> 服务器，实际上现在已经不需要</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210825102040.png\"></p>\n<p>直接搜索 <code>alice</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210825105028.png\"></p>\n<p>发测试消息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210825105120.png\"></p>\n<p>对端收到的消息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210825105207.png\"></p>\n<h2 id=\"Android客户端\"><a href=\"#Android客户端\" class=\"headerlink\" title=\"Android客户端\"></a>Android客户端</h2><p>适用于 <code>Android</code> 的 <code>Tinode</code> 又名 <code>Tindroid</code>，可以在这里下载 <code>Released</code> 的版本</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Rpbm9kZS90aW5kcm9pZC9yZWxlYXNlcw==\">https://github.com/tinode/tindroid/releases<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"iOS客户端\"><a href=\"#iOS客户端\" class=\"headerlink\" title=\"iOS客户端\"></a>iOS客户端</h2><p>适用于 <code>iOS</code> 的 <code>Tinode</code> 又名 <code>Tinodios</code>， 应该可以在 <code>App Store</code> 中下载</p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>以上设置（包括数据库没有设置密码等等）都是非生产环境的设置，仅用于快速实现功能的体验</p>\n<p>更多关于 <code>docker</code> 方式的安装和参数设置，还请查阅官方文档：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Rpbm9kZS9jaGF0L2Jsb2IvbWFzdGVyL2RvY2tlci9SRUFETUUubWQ=\">https://github.com/tinode/chat/blob/master/docker/README.md<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>一些常见问题：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Rpbm9kZS9jaGF0L2Jsb2IvbWFzdGVyL2RvY3MvZmFxLm1k\">https://github.com/tinode/chat/blob/master/docs/faq.md<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>PS：老苏设置过 <code>SMTP</code> 服务器，想用于新用户注册和密码找回，用 <code>88</code> 邮箱做了测试，但没有成功，日志中没有任何错误信息，但是也没有收到邮件，可以确认的是发送和接收邮箱都正常，也没有屏蔽，原因待查！</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Tinode instant messenger<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly90aW5vZGUuY28v\">https://tinode.co/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>tinode/chat: Instant messaging platform. Backend in Go. Clients: Swift iOS, Java Android, JS webapp, scriptable command line; chatbots<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Rpbm9kZS9jaGF0\">https://github.com/tinode/chat<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>chat/README.md at master · tinode/chat<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Rpbm9kZS9jaGF0L2Jsb2IvbWFzdGVyL2RvY2tlci9SRUFETUUubWQ=\">https://github.com/tinode/chat/blob/master/docker/README.md<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Tinode chat server and Apache reverse proxy on NixOS<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9qaWF4aWFvZG9uZy5jb20vYmxvZy9jb21wdXRpbmcvc2VydmVyL25peC81Lw==\">https://jiaxiaodong.com/blog/computing/server/nix/5/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>tinode部署,使用_cumt_TTR的专栏-CSDN博客_tinode<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2N1bXRfVFRSL2FydGljbGUvZGV0YWlscy8xMDQzMDA1MDE=\">https://blog.csdn.net/cumt_TTR/article/details/104300501<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","IM","即时通讯"]},{"title":"高颜值的第三方网易云播放器YesPlayMusic","url":"/2021/10/15/%E9%AB%98%E9%A2%9C%E5%80%BC%E7%9A%84%E7%AC%AC%E4%B8%89%E6%96%B9%E7%BD%91%E6%98%93%E4%BA%91%E6%92%AD%E6%94%BE%E5%99%A8YesPlayMusic/","content":"<p><strong>什么是 YesPlayMusic ？</strong></p>\n<blockquote>\n<p><code>YesPlayMusic</code> 是一款高颜值的第三方网易云播放器，设计精美，播放体验优秀。使用 <code>Vue.js</code> 全家桶和 <code>Electron</code> 框架开发，支持 <code>Windows</code> 、 <code>macOS</code> 、 <code>Linux</code>。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110101857675.png\"></p>\n<p>先上张图给大家看看</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110101920238.png\"></p>\n<p>不愿意折腾的话可以直接去 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3FpZXIyMjIvWWVzUGxheU11c2ljL3JlbGVhc2Vz\">https://github.com/qier222/YesPlayMusic/releases<i class=\"fa fa-external-link-alt\"></i></span> 下载对应平台的客户端，也可以去官方的  <code>Demo</code> 站点在线体验：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tdXNpYy5xaWVyMjIyLmNvbS8=\">https://music.qier222.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>当然现在还有一个选择，跟随老苏一起折腾 <code>Docker</code> 版，搭建私有化的在线音乐库，一方面安全上可能更放心，另一方面也不需要到处安装客户端</p>\n<h1 id=\"构建镜像\"><a href=\"#构建镜像\" class=\"headerlink\" title=\"构建镜像\"></a>构建镜像</h1><blockquote>\n<p>如果你不想自己构建，可以跳过，直接阅读下一章节</p>\n</blockquote>\n<p>官方只提供了 <code>Windows</code> 、 <code>MacOS</code> 、 <code>Linux</code> 平台的客户端，所以 <code>Docker</code> 只能我们自己来构建</p>\n<ul>\n<li><code>YesPlayMusic</code> 依赖于另一个开源项目 <code>Binaryify/NeteaseCloudMusicApi（网易云 API）</code> 的部署， 因此 <code>API URL</code> 是不能预先设定的。老苏按照参考文档，采用了占位符的方式</li>\n<li>最近在学习多阶段构建方式，正好拿这个项目实践一下</li>\n</ul>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> node:<span class=\"number\">16.5</span> as build-deps</span><br><span class=\"line\"><span class=\"keyword\">MAINTAINER</span> laosu&lt;wbsu2003@gmail.com&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># environment</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> VUE_APP_NETEASE_API_URL netease_vanau</span><br><span class=\"line\"><span class=\"keyword\">ENV</span> VUE_APP_ELECTRON_API_URL netease_vaeau</span><br><span class=\"line\"><span class=\"keyword\">ENV</span> VUE_APP_ELECTRON_API_URL_DEV netease_vaeaud</span><br><span class=\"line\"><span class=\"keyword\">ENV</span> VUE_APP_LASTFM_API_KEY netease_valak</span><br><span class=\"line\"><span class=\"keyword\">ENV</span> VUE_APP_LASTFM_API_SHARED_SECRET netease_valass</span><br><span class=\"line\"><span class=\"keyword\">ENV</span> DEV_SERVER_PORT netease_dsp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /app</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> package.json yarn.lock ./</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> yarn</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> . ./</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> yarn build</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> nginx:<span class=\"number\">1.12</span>-alpine</span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> --from=build-deps /app/dist /usr/share/nginx/html</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> --from=build-deps /app/replace_api_url.sh /  </span></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"bash\"> [<span class=\"string\">&quot;sh&quot;</span>, <span class=\"string\">&quot;replace_api_url.sh&quot;</span>]</span></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">80</span></span><br></pre></td></tr></table></figure>\n\n<p><code>replace_api_url.sh</code> 用于替换 <code>ENV</code> 设置的占位符</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/env sh</span><br><span class=\"line\"></span><br><span class=\"line\">find <span class=\"string\">&#x27;/usr/share/nginx/html&#x27;</span> -name <span class=\"string\">&#x27;*.js&#x27;</span> -exec sed -i -e <span class=\"string\">&#x27;s,netease_vanau,&#x27;</span><span class=\"string\">&quot;$VUE_APP_NETEASE_API_URL&quot;</span><span class=\"string\">&#x27;,g&#x27;</span> &#123;&#125; \\;</span><br><span class=\"line\"></span><br><span class=\"line\">find <span class=\"string\">&#x27;/usr/share/nginx/html&#x27;</span> -name <span class=\"string\">&#x27;*.js&#x27;</span> -exec sed -i -e <span class=\"string\">&#x27;s,netease_vaeau,&#x27;</span><span class=\"string\">&quot;$VUE_APP_ELECTRON_API_URL&quot;</span><span class=\"string\">&#x27;,g&#x27;</span> &#123;&#125; \\;</span><br><span class=\"line\"></span><br><span class=\"line\">find <span class=\"string\">&#x27;/usr/share/nginx/html&#x27;</span> -name <span class=\"string\">&#x27;*.js&#x27;</span> -exec sed -i -e <span class=\"string\">&#x27;s,netease_vaeaud,&#x27;</span><span class=\"string\">&quot;$VUE_APP_ELECTRON_API_URL_DEV&quot;</span><span class=\"string\">&#x27;,g&#x27;</span> &#123;&#125; \\;</span><br><span class=\"line\"></span><br><span class=\"line\">find <span class=\"string\">&#x27;/usr/share/nginx/html&#x27;</span> -name <span class=\"string\">&#x27;*.js&#x27;</span> -exec sed -i -e <span class=\"string\">&#x27;s,netease_valak,&#x27;</span><span class=\"string\">&quot;$VUE_APP_LASTFM_API_KEY&quot;</span><span class=\"string\">&#x27;,g&#x27;</span> &#123;&#125; \\;</span><br><span class=\"line\"></span><br><span class=\"line\">find <span class=\"string\">&#x27;/usr/share/nginx/html&#x27;</span> -name <span class=\"string\">&#x27;*.js&#x27;</span> -exec sed -i -e <span class=\"string\">&#x27;s,netease_valass,&#x27;</span><span class=\"string\">&quot;$VUE_APP_LASTFM_API_SHARED_SECRET&quot;</span><span class=\"string\">&#x27;,g&#x27;</span> &#123;&#125; \\;</span><br><span class=\"line\"></span><br><span class=\"line\">find <span class=\"string\">&#x27;/usr/share/nginx/html&#x27;</span> -name <span class=\"string\">&#x27;*.js&#x27;</span> -exec sed -i -e <span class=\"string\">&#x27;s,netease_dsp,&#x27;</span><span class=\"string\">&quot;$DEV_SERVER_PORT&quot;</span><span class=\"string\">&#x27;,g&#x27;</span> &#123;&#125; \\;</span><br><span class=\"line\"></span><br><span class=\"line\">nginx -g <span class=\"string\">&quot;daemon off;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>构建镜像和容器运行的基本命令如下👇</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载代码,当前对应的是 0.4.1</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/qier222/YesPlayMusic.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 或者镜像站点</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://hub.fastgit.org/qier222/YesPlayMusic.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> YesPlayMusic</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 Dockerfile 和 replace_api_url.sh 放进代码目录中</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 构建镜像</span></span><br><span class=\"line\">docker build -t wbsu2003/yesplaymusic:v1 .</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成容器</span></span><br><span class=\"line\">docker run -d \\</span><br><span class=\"line\">--name=yesplaymusic \\</span><br><span class=\"line\">-p 3310:80 \\</span><br><span class=\"line\">-e VUE_APP_NETEASE_API_URL=http://192.168.0.114:3000 \\ <span class=\"comment\"># 网易云 API 地址</span></span><br><span class=\"line\">wbsu2003/yesplaymusic:v1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># --------调试-------------</span></span><br><span class=\"line\"><span class=\"comment\"># 将生成的静态文件拷贝到容器外</span></span><br><span class=\"line\">docker cp yesplaymusic:/usr/share/nginx/html/. ./dist</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将生成的静态文件拷贝到容器内</span></span><br><span class=\"line\">docker cp /dist/. yesplaymusic:/usr/share/nginx/html</span><br><span class=\"line\"><span class=\"comment\"># ------------------------</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。播放器依赖于 <code>网易云音乐 Node.js API service</code>， 所以要先部署 <code>API</code></p>\n<h2 id=\"网易云音乐-API\"><a href=\"#网易云音乐-API\" class=\"headerlink\" title=\"网易云音乐 API\"></a>网易云音乐 API</h2><p>在注册表中搜索 <code>binaryify</code> ，选择第一个 <code>binaryify/netease_cloud_music_api</code>，双击直接下载。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110100007405.png\"></p>\n<h3 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h3><p>端口不冲突就行</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>3300</code></td>\n<td align=\"center\"><code>3000</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110100012925.png\"></p>\n<h3 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h3><p>在浏览器中输入 <code>http://群晖IP:3300</code> 就能看到主界面，看到界面表示服务已经运行成功了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110100013252.png\"></p>\n<h2 id=\"网易云音乐播放器\"><a href=\"#网易云音乐播放器\" class=\"headerlink\" title=\"网易云音乐播放器\"></a>网易云音乐播放器</h2><p>注册表中搜索 <code>wbsu2003</code> ，找到 <code>wbsu2003/yesplaymusic</code>，版本选 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110101744458.png\"></p>\n<h3 id=\"端口-1\"><a href=\"#端口-1\" class=\"headerlink\" title=\"端口\"></a>端口</h3><p>端口不冲突就行</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>3310</code></td>\n<td align=\"center\"><code>80</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110101750027.png\"></p>\n<h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>VUE_APP_NETEASE_API_URL</code></td>\n<td align=\"center\">网易云 <code>API</code> 地址</td>\n</tr>\n<tr>\n<td align=\"center\"><code>VUE_APP_LASTFM_API_KEY</code></td>\n<td align=\"center\"><code>Last.fm</code> 获取的 <code>API Key</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>VUE_APP_LASTFM_API_SHARED_SECRET</code></td>\n<td align=\"center\"><code>Last.fm</code> 获取的 <code>Shared Secret</code></td>\n</tr>\n</tbody></table>\n<blockquote>\n<ul>\n<li>如果你还没有 <code>Last.fm</code> 账号，可以去 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGFzdC5mbS9hcGkvYWNjb3VudC9jcmVhdGU=\">https://www.last.fm/api/account/create<i class=\"fa fa-external-link-alt\"></i></span> 创建一个 <code>API</code> 帐户。</li>\n</ul>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110101806493.png\"></p>\n<p>目前情况下只设置 <code>VUE_APP_NETEASE_API_URL</code> 即可</p>\n<blockquote>\n<ul>\n<li><code>VUE_APP_NETEASE_API_URL</code> 是必须要的，后两项为可选项，不填也不影响使用，而且老苏也没设置成功，<code>Issues</code> 中也有人提，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3FpZXIyMjIvWWVzUGxheU11c2ljL2lzc3Vlcy83MTI=\">https://github.com/qier222/YesPlayMusic/issues/712<i class=\"fa fa-external-link-alt\"></i></span>，但没看到解决办法。</li>\n</ul>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110151235865.png\"></p>\n<h1 id=\"运行-1\"><a href=\"#运行-1\" class=\"headerlink\" title=\"运行\"></a>运行</h1><h2 id=\"PC端\"><a href=\"#PC端\" class=\"headerlink\" title=\"PC端\"></a>PC端</h2><p>在浏览器中输入 <code>http://群晖IP:3310</code> 就能看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110101809314.png\"></p>\n<p>切到 <code>发现</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110101822624.png\"></p>\n<p><code>音乐库</code> 需要登录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110101922766.png\"></p>\n<p>登录成功后就能看到你的音乐库了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110101924364.png\"></p>\n<p>直接点图片就可以开始播放音乐了，更多的功能等大家慢慢研究和挖掘。</p>\n<h2 id=\"移动端\"><a href=\"#移动端\" class=\"headerlink\" title=\"移动端\"></a>移动端</h2><p>应该主要是针对桌面的，所以没有为移动端优化</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110102026892.jpg\"></p>\n<p>缩放后使用没问题，就是字体太小</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110102027255.jpg\"></p>\n<p>所以在移动端使用的话，老苏建议还是用官方的客户端吧</p>\n<h1 id=\"遗留问题\"><a href=\"#遗留问题\" class=\"headerlink\" title=\"遗留问题\"></a>遗留问题</h1><ol>\n<li>不能修改环境变量</li>\n</ol>\n<p><code>YesPlayMusic</code> 镜像采用了占位符方式编译，只有第一次容器创建的时候会发生变量替换，所以如果你中途修改了环境变量，比如先用了内网地址，之后又想用域名，只能删除了重建，暂时没有想到好的办法，也许把前一次的环境变量作为变量再替换一次？容老苏再想想</p>\n<ol start=\"2\">\n<li>前面的部署方式只适合局域网</li>\n</ol>\n<p>如果想要在公网运行，这种方式还不行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110112156796.png\"></p>\n<p>老苏先将 <code>网易云 API</code> 反代到了 <code>https://api.laosu.ml</code>，然后将 <code>YesPlayMusic</code> 反代到了 <code>https://mplayer.laosu.ml</code></p>\n<p>然后就遇到了这样的问题👇</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Mixed Content: The page at &#39;&lt;URL&gt;&#39; was loaded over HTTPS, but requested an insecure XMLHttpRequest endpoint &#39;&lt;URL&gt;&#39;. This request has been blocked; the content must be served over HTTPS.</span><br></pre></td></tr></table></figure>\n\n<p>更具体一点👇就是在代码运行过程中，<code>https://api.laosu.ml</code> 会被解析到局域网地址 <code>http://192.168.0.197:3300</code>，导致了 <code>https</code> 协议和 <code>http</code> 协议混用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Content: The page at &#39;https:&#x2F;&#x2F;mplayer.laosu.ml&#x2F;&#39; was loaded over HTTPS, but requested an insecure XMLHttpRequest endpoint &#39;http:&#x2F;&#x2F;192.168.0.197:3300&#x2F;personal_fm?timestamp&#x3D;1633960861058&amp;cookie&#x3D;MUSIC_U%3Dnull%3B&amp;realIP&#x3D;211.161.244.70&#39;. This request has been blocked; the content must be served over HTTPS.</span><br></pre></td></tr></table></figure>\n\n<p>群晖的反代不支持直接将 <code>网易云 API</code> 反代成 <code>https://mplayer.laosu.ml/api</code> ，折腾了一下群晖的 <code>nginx</code> 设置文件，但是没搞定</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110121115973.png\"></p>\n<p>老苏现在在公网使用的办法是：</p>\n<ol>\n<li>将 <code>网易云 API</code> 反代到了 <code>https://api.laosu.ml</code></li>\n<li>公网直接用 <code>tailscale</code> 的 <code>IP</code> 访问 <code>YesPlayMusic</code>，相当于还是局域网访问，规避了可能造成的问题</li>\n<li>局域网还可以继续使用 <code>http://192.168.0.197:3310</code> 访问 <code>YesPlayMusic</code></li>\n</ol>\n<blockquote>\n<p>如果你还没用过 <code>tailscale</code> 可以去看看： 『 <a href=\"https://laosu.ml/2020/11/04/%E5%A4%96%E7%BD%91%E8%AE%BF%E9%97%AE%E7%BE%A4%E6%99%96%E7%9A%84%E6%96%B0%E6%96%B9%E6%A1%88Tailscale/\">外网访问群晖的新方案Tailscale</a> 』</p>\n</blockquote>\n<p>遗留问题老苏会继续研究，争取下一版能解决，不说了，老苏去听歌🎧了，周末愉快~</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110131434828.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>qier222/YesPlayMusic: 高颜值的第三方网易云播放器，支持 Windows / macOS / Linux<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3FpZXIyMjIvWWVzUGxheU11c2lj\">https://github.com/qier222/YesPlayMusic<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Binaryify/NeteaseCloudMusicApi: 网易云音乐 Node.js API service<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0JpbmFyeWlmeS9OZXRlYXNlQ2xvdWRNdXNpY0FwaQ==\">https://github.com/Binaryify/NeteaseCloudMusicApi<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>网易云音乐 NodeJS 版 API<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iaW5hcnlpZnkuZ2l0aHViLmlvL05ldGVhc2VDbG91ZE11c2ljQXBpLyMvP2lkPSVlNSVhZSU4OSVlOCVhMyU4NQ==\">https://binaryify.github.io/NeteaseCloudMusicApi/#/?id=%e5%ae%89%e8%a3%85<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>前端如何调用后端接口_前后端分离，如何在前端项目中动态插入后端API基地址？…_weixin_39876282的博客-CSDN博客<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTg3NjI4Mi9hcnRpY2xlL2RldGFpbHMvMTExMjg5MTYz\">https://blog.csdn.net/weixin_39876282/article/details/111289163<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","音乐"]},{"title":"体验重构版的可道云Kodbox","url":"/2021/10/13/%E4%BD%93%E9%AA%8C%E9%87%8D%E6%9E%84%E7%89%88%E7%9A%84%E5%8F%AF%E9%81%93%E4%BA%91Kodbox/","content":"<p>在『 <a href=\"https://laosu.ml/2021/05/03/Web%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%99%A8KodExplorer\">Web资源文件管理器KodExplorer</a> 』中我们提到了 <code>KodExplorer</code> 的升级换代产品 <code>Kodbox</code>；</p>\n<p>官方的说法是 <code>KodBox 是在 KodExplorer 基础上进行了系统重构的全新产品。为满足系统更强性能、更安全、更多特性的拓展需求，Kodbox 对底层架构、存储方式、权限机制等进行了重构，同时继承并升级了 KodExplorer 优秀前端体验。整体而言，KodExplorer 适用于个人用户或小型团队和企业；KodBox 更多针对企业级的应用需求，可支撑高并发、更多用户数、更高协作和安全要求。</code></p>\n<p>对老苏而言，两者有很多相似的部分，比如都使用了图形化的界面，类似操作系统的文件管理器。但是不同的是 <code>kodbox</code> 把自己定位在 <code>像 Windows 操作一样的企业网盘</code>，另一个差别就是 <code>kodbox</code> 不仅加入了数据库的支持，而且支持配置第三方云存储。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>kodbox</code> ，选择第一个 <code>kodcloud/kodbox</code> ，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210506161821.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>kodbox</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/kodbox</code></td>\n<td align=\"center\"><code>/var/www/html</code></td>\n<td align=\"center\">数据目录</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210506162822.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><blockquote>\n<p> 注意：这里有个坑，容器端口应该是 <code>80</code>，而不是 <code>9000</code>；</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110121152001.png\"></p>\n<p>默认的端口 <code>9000</code> 分给了 <code>portainer</code> ，所以换成了 <code>9100</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>9100</code></td>\n<td align=\"center\"><code>80</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210507095836.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:9100</code>，就能看到主界面了，第一次需要设置</p>\n<p>第一步是环境检测</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210507100443.png\"></p>\n<p>第二步是数据库设置，全部默认就行</p>\n<blockquote>\n<p>老苏偷了一回懒，这次没有用 <code>MariaDB</code>，而是直接用了 <code>SQLite</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210507100716.png\"></p>\n<p>第三步账号设置，只要设置密码即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210507100807.png\"></p>\n<p>设置完成</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210507100858.png\"></p>\n<p>登录界面和 <code>kodexplorer</code> 是一样的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210507101003.png\"></p>\n<p>登录成功后发现左侧多了一栏菜单</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210507101124.png\"></p>\n<p>可以方便的切换<code>桌面</code>和<code>文件管理</code>，还是那熟悉的味道。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210507101238.png\"></p>\n<h1 id=\"新增特性\"><a href=\"#新增特性\" class=\"headerlink\" title=\"新增特性\"></a>新增特性</h1><h2 id=\"第三方存储\"><a href=\"#第三方存储\" class=\"headerlink\" title=\"第三方存储\"></a>第三方存储</h2><p> 桌面 <code>系统设置</code> –&gt; <code>存储/文件</code> –&gt; <code>存储管理</code> –&gt; <code>新增</code></p>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210507103904.png\"></p>\n<p> 最新版本界面变得更好看了</p>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110121200535.png\"></p>\n<p> 非常遗憾，<code>kodbox</code> 支持的我都没有，所以没办法测试，要是能像 <code>Cloudreve</code> 一样支持 <code>OneDrive</code> 做存储就好了。</p>\n<blockquote>\n<p>关于<code>Cloudreve</code> 可以看：『 <a href=\"https://laosu.ml/2020/07/30/%E5%88%A9%E7%94%A8Cloudreve%E6%90%AD%E5%BB%BA%E8%87%AA%E7%94%A8%E7%BD%91%E7%9B%98\">利用Cloudreve搭建自用网盘</a> 』</p>\n</blockquote>\n<h2 id=\"分享\"><a href=\"#分享\" class=\"headerlink\" title=\"分享\"></a>分享</h2><p> 任何文件都支持 <code>外链分享</code></p>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210507105040.png\"></p>\n<p> 而外链的管理在桌面 <code>系统设置</code> –&gt; <code>存储/文件</code> –&gt; <code>分享管理</code> </p>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210507105138.png\"></p>\n<h2 id=\"WebDAV\"><a href=\"#WebDAV\" class=\"headerlink\" title=\"WebDAV\"></a>WebDAV</h2><p>WebDAV 默认是没有开启的，需要在桌面找到 <code>系统设置</code> –&gt; <code>存储/文件</code> –&gt; <code>WebDAV 挂载</code> 中开启 <code>WebDAV</code> 服务</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210507101641.png\"></p>\n<p>保存后，点 <code>立即连接使用</code> ，会显示 <code>WebDAV</code> 地址</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210507102704.png\"></p>\n<p>以 <code>Expandrive</code> 为例</p>\n<blockquote>\n<p>账号、密码就是登录 <code>Kodbox</code>的账号、密码</p>\n</blockquote>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210507103004.png\"></p>\n<p> 挂载成功后</p>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210507103323.png\"></p>\n<p> 和网页 <code>文件管理</code> 是完全一致的</p>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210507103503.png\"></p>\n<h2 id=\"丰富的app\"><a href=\"#丰富的app\" class=\"headerlink\" title=\"丰富的app\"></a>丰富的app</h2><p><code>kodbox</code> 具有丰富的客户端，这是 <code>kodexplrer</code> 不具备的。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210507105537.png\"></p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p><code>kodexplorer</code> 作为服务器文件管理器来说是一款很成熟又好用的程序，<code>kodbox</code> 则是走向类似 <code>Cloudreve</code> 的支持外链云存储的云盘程序，并且更易于操作和使用，同时还支持桌面和手机客户端。</p>\n<p>要说缺点，那就是第三方存储支持的有点少，或者说我老苏想要的没有吧。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>kodcloud/kodbox<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9yL2tvZGNsb3VkL2tvZGJveA==\">https://hub.docker.com/r/kodcloud/kodbox<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>KodCloud-dev/docker: docker for kodbox<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0tvZENsb3VkLWRldi9kb2NrZXI=\">https://github.com/KodCloud-dev/docker<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>使用docker-compose快速部署kodbox（测试) - 可道云社区<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYnMua29kY2xvdWQuY29tL2QvNzU4\">https://bbs.kodcloud.com/d/758<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","网盘"]},{"title":"低代码开源框架Appsmith","url":"/2021/10/11/%E4%BD%8E%E4%BB%A3%E7%A0%81%E5%BC%80%E6%BA%90%E6%A1%86%E6%9E%B6Appsmith/","content":"<p><strong>什么是 Appsmith ？</strong></p>\n<blockquote>\n<p><code>Appsmith</code> 是一个用于构建内部应用程序的低代码、开源框架。通过拖放组件来构建完全自定义的管理面板、<code>CRUD</code> 应用程序和工作流。使用 <code>30</code> 多个 <code>React</code> 组件来构建没有 <code>HTML/CSS</code> 的页面。构建速度提高 <code>10</code> 倍。</p>\n</blockquote>\n<p>其工作原理👇并不复杂</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110022010575.png\"></p>\n<h1 id=\"前期准备\"><a href=\"#前期准备\" class=\"headerlink\" title=\"前期准备\"></a>前期准备</h1><p>因为需要数据来演示，所以老苏在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9pbmRleC1vdGhlci5odG1s\">https://dev.mysql.com/doc/index-other.html<i class=\"fa fa-external-link-alt\"></i></span> 下载了 <code>world database</code>，解压出来的 <code>SQL</code> 脚本可以在 <code>phpMyAdmin</code> 中直接导入</p>\n<blockquote>\n<p>至于 <code>MariaDB</code> 的版本无所谓，老苏还是用了 <code>MariaDB 5</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110022131203.png\"></p>\n<p>虽然只有 <code>3</code> 张表，但都是有数据的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110022132347.png\"></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>appsmith-ce</code> ，选择第一个 <code>appsmith/appsmith-ce</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110022003888.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>appsmith</code>，并在  <code>appsmith</code> 目录下建一个子目录 <code>stacks</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/appsmith/stacks</code></td>\n<td align=\"center\"><code>/appsmith-stacks</code></td>\n<td align=\"center\">存放设置</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110022016619.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不冲突就可以</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>9280</code></td>\n<td align=\"center\"><code>80</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>9243</code></td>\n<td align=\"center\"><code>443</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>9201</code></td>\n<td align=\"center\"><code>9001</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110022018957.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>稍等一会儿（应该不超过 <code>1</code> 分钟吧），在浏览器中输入 <code>http://群晖IP:9280</code> 就能看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110022023391.png\"></p>\n<p>点橘黄色的按钮 <code>GET STARTED</code> ，首先需要填写一些信息，主要是 <code>Email</code> 和 <code>Password</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110022031215.png\"></p>\n<p>默认两个都是启用的，老苏给取消了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110022032385.png\"></p>\n<p>完成后进入了主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110022034372.png\"></p>\n<h1 id=\"第一个应用\"><a href=\"#第一个应用\" class=\"headerlink\" title=\"第一个应用\"></a>第一个应用</h1><p>点正中间的橘黄色按钮 <code>BUILD MY FIRST APP</code> 开始我们的第一个应用</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110022038340.png\"></p>\n<h2 id=\"数据源\"><a href=\"#数据源\" class=\"headerlink\" title=\"数据源\"></a>数据源</h2><p>首先要选择数据源</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110022051301.png\"></p>\n<p>前面我们已经准备好了，所以选择 <code>Mysql</code>，如果 <code>Test</code> 没问题，就可以点 <code>Save</code> 保存了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110022142541.png\"></p>\n<h2 id=\"页面\"><a href=\"#页面\" class=\"headerlink\" title=\"页面\"></a>页面</h2><p>点 <code>GENERATE NEW PAGE</code> 就可以开始创建新页面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110022216459.png\"></p>\n<p>你要做的就是在下拉框中选<code>表</code>和要查询的<code>字段</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110022219363.png\"></p>\n<p>点 <code>Generate Page</code> 创建页面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110022223977.png\"></p>\n<p>生成的页面中有一个 <code>Table</code> 来显示、增加和删除数据，可以在 <code>Form</code> 中进行修改</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110022234444.png\"></p>\n<p>点右上角的 <code>Deploy</code> 发布即可生成一个页面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110022231296.png\"></p>\n<h2 id=\"组件\"><a href=\"#组件\" class=\"headerlink\" title=\"组件\"></a>组件</h2><p>但是这种页面是固定格式的，返回的是所有的数据，如果你需要个性化的应用，就需要通过拖拽 <code>Widget</code> ，搭建自己的应用界面</p>\n<blockquote>\n<p>设定一个目标 –&gt; 根据选定的国家，显示属于这个国家的城市</p>\n</blockquote>\n<p>新建页面，选择 <code>Build with Drag &amp; Drop</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110030914747.png\"></p>\n<p>首先需要通过顶部的菜单确定应用的类型</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110030917033.png\"></p>\n<p>然后建 <code>2</code> 个查询</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110031227468.png\"></p>\n<p>一个是 <code>get_Country</code>，用来查询所有的国家名称</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> `Name` <span class=\"keyword\">FROM</span> `country`</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110031054529.png\"></p>\n<p>在右侧 <code>Suggested widgets</code> 中绑定到 <code>SELECT</code> 组件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110031253525.png\"></p>\n<p><code>SELECT</code> 组件的属性</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110031057458.png\"></p>\n<p>再建一个查询 <code>get_City</code>，根据选定的国家来显示这个国家的城市</p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">SELECT * FROM `city` WHERE `CountryCode` = (SELECT `Code` FROM `country` WHERE country.Name = &#123;&#123;Select1.selectedOptionValue&#125;&#125; ) </span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110031103886.png\"></p>\n<p>在右侧 <code>Add New Widget</code> 中绑定到 <code>TABLE</code> 组件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110031256809.png\"></p>\n<p><code>TABLE</code> 组件的属性</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110031104998.png\"></p>\n<p>为了实现联动，也就是当 <code>SELECT</code> 组件下拉框中的国家发生变化时，<code>TABLE</code> 组件中的城市能同步变化，需要在 <code>SELECT</code> 组件的 <code>Action</code> 中的 <code>onOptionChage</code> 事件中，触发 <code>get_City.run()</code> 查询这个国家的所有城市 </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110031106034.png\"></p>\n<p>最终的 <code>UI</code> 效果</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110031053469.png\"></p>\n<p>老苏录制了一张动图，这样更容易理解和展示已实现的效果</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110031122159.gif\"></p>\n<h2 id=\"发布和分享\"><a href=\"#发布和分享\" class=\"headerlink\" title=\"发布和分享\"></a>发布和分享</h2><p>右上角有 <code>Share</code> 和 <code>Deploy</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110031154686.png\"></p>\n<p> 发布（<code>Deploy</code>）后，可以在不同的页面进行切换</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110031156349.png\"></p>\n<p>邀请（<code>Share</code> ）：把链接发给别人来使用你发布的应用</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110031157341.png\"></p>\n<p>还可以给邀请用户设置不同的权限</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110031206367.png\"></p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>通过上面的案例，总结出在 <code>Appsmith</code> 中创建应用程序的五个简单步骤：</p>\n<ul>\n<li>连接任何数据源：您可以将任何数据库与 <code>Appsmith</code> 集成，包括 <code>REST API</code>、<code>MySQL</code>、<code>Postgres</code>、<code>MongoDB</code>、<code>Google Sheets</code> 等；</li>\n<li>构建 <code>UI</code>：使用预构建的小部件，您可以在几秒钟内创建 <code>UI</code>；</li>\n<li>创建和执行查询：在 <code>SQL</code> 或 <code>JS</code> 编辑器中编写查询和业务逻辑，然后绑定响应；</li>\n<li>轻松定制：随处编写 <code>JS</code>，甚至在您的数据库查询中，以定制您的应用程序；</li>\n<li>协作和部署：只需单击一下，即可邀请您的同事和朋友与您合作并部署您的应用程序。</li>\n</ul>\n<h1 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h1><p>如果你打开 <code>http://群晖IP:9201</code>，你会看到一个 <code>Supervisor</code> 进程管理界面，可以用来启停服务</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110022024309.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>appsmithorg/appsmith: Build completely custom admin panels and internal tools. Use 30+ react components to build pages without HTML/CSS.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FwcHNtaXRob3JnL2FwcHNtaXRo\">https://github.com/appsmithorg/appsmith<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Appsmith<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYXBwc21pdGguY29tLw==\">https://www.appsmith.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>appsmith-docs/docker.md at v1.3 · appsmithorg/appsmith-docs<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FwcHNtaXRob3JnL2FwcHNtaXRoLWRvY3MvYmxvYi92MS4zL3NldHVwL2RvY2tlci5tZA==\">https://github.com/appsmithorg/appsmith-docs/blob/v1.3/setup/docker.md<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Docker - Appsmith<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmFwcHNtaXRoLmNvbS9zZXR1cC9kb2NrZXI=\">https://docs.appsmith.com/setup/docker<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","表格","低代码"]},{"title":"文件管理和分发软件ProjectSend","url":"/2021/10/08/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%92%8C%E5%88%86%E5%8F%91%E8%BD%AF%E4%BB%B6ProjectSend/","content":"<blockquote>\n<p>这篇文章起头于今年的 <code>2</code> 月，大概完成于 <code>4</code> 月。当时的 <code>ProjectSend</code> 的版本为 <code>r1070</code>，现在的版本为 <code>r1295</code>。老苏已重新验证过，虽然在界面上已经存在细节上的差异，但并不会影响对本文的理解</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210416170035.png\"></p>\n<p><strong>什么是 ProjectSend ？</strong></p>\n<blockquote>\n<p><code>ProjectSend</code> 是一款免费的开源软件，可让您与客户共享文件，注重易用性和隐私性。它支持客户端组、系统用户角色、统计、多语言、详细日志等等！</p>\n</blockquote>\n<p>简单的说就是有点像发邮件，只有指定的收件人才能收到发件人发送的文件，但又不依赖于邮件</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"建数据库\"><a href=\"#建数据库\" class=\"headerlink\" title=\"建数据库\"></a>建数据库</h2><p><code>ProjectSend</code> 需要至少具有 <code>php 7.1</code> 和 <code>MySQL 5</code> 或更高版本才能运行该软件。</p>\n<p>所以数据库这块我直接用的群晖的 <code>MariaDB 5</code>，在 <code>phpMyAdmin</code> 中创建了表名为 <code>projectsend</code> 的空表</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210324152150.png\"></p>\n<h2 id=\"安装镜像\"><a href=\"#安装镜像\" class=\"headerlink\" title=\"安装镜像\"></a>安装镜像</h2><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>projectsend</code> ，选择第一个 <code>linuxserver/projectsend</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/24/1614162911589-1614162911598.png\" alt=\"title\"></p>\n<h3 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h3><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>projectsend</code>，然后在 <code>projectsend</code> 文件夹中再创建两个新的子文件夹，分别命名为 <code>config</code> 和 <code>data</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/24/1614169543833-1614169543841.png\" alt=\"title\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/projectsend/config</code></td>\n<td align=\"center\"><code>/config</code></td>\n<td align=\"center\">存放设置</td>\n</tr>\n<tr>\n<td align=\"center\"><code>docker/projectsend/data</code></td>\n<td align=\"center\"><code>/data</code></td>\n<td align=\"center\">存放数据</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/24/1614169804820-1614169804822.png\" alt=\"title\"></p>\n<h3 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h3><p>默认的端口 <code>80</code> 不能用，换成了不冲突的 <code>8222</code>，<code>443</code> 用不上，所以老苏给删了</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>8222</code></td>\n<td align=\"center\"><code>80</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/24/1614170366796-1614170366803.png\" alt=\"老版\"></p>\n<h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">TZ</td>\n<td align=\"center\">设置为 <code>Asia/Shanghai</code></td>\n</tr>\n<tr>\n<td align=\"center\">PGID</td>\n<td align=\"center\"><code>&lt;gid&gt;</code> 设为 <code>1000</code></td>\n</tr>\n<tr>\n<td align=\"center\">PUID</td>\n<td align=\"center\"><code>&lt;uid&gt;</code> 设为 <code>1000</code></td>\n</tr>\n</tbody></table>\n<blockquote>\n<p><code>PUID</code> 为什么默认设置为 <code>1000</code>，请看老苏写的『<a href=\"https://laosu.ml/2021/03/12/%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96PUID%E5%92%8CPGID/\">如何获取PUID和PGID</a>』</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/24/1614170473254-1614170473262.png\" alt=\"title\"></p>\n<h1 id=\"初始化设置\"><a href=\"#初始化设置\" class=\"headerlink\" title=\"初始化设置\"></a>初始化设置</h1><p>在浏览器中输入 <code>http://群晖IP:8222</code>，就能看到主界面了，第一次需要设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210224205744.png\"></p>\n<p>默认情况下数据库右侧是红色的感叹号，必须全部变绿</p>\n<blockquote>\n<p>注意：下图中密码被我隐藏了，不是为空</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210324160926.png\"></p>\n<p>拉到底部，按钮从 <code>check</code> 变成了 <code>Check again</code> 和 <code>Write config file</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210324153612.png\"></p>\n<p>点 <code>Write config file</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210324153711.png\"></p>\n<p>点 <code>Continue to installation</code></p>\n<blockquote>\n<p>项目地址和数据库地址不同是因为：<code>100</code> 开头的是 <code>tailscale</code> 的地址，对应的局域网 <code>IP</code> 为 <code>192.168.0.199</code>，实际上这两个地址是同一台机器，当然数据库也可以安装在另外一台机器上</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210324153815.png\"></p>\n<p>填写站点名称和管理员信息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210324154013.png\"></p>\n<p>继续 <code>install</code>，到这里就设置完成了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210324161233.png\"></p>\n<h1 id=\"高级设置\"><a href=\"#高级设置\" class=\"headerlink\" title=\"高级设置\"></a>高级设置</h1><h2 id=\"增加上传的文件大小限制\"><a href=\"#增加上传的文件大小限制\" class=\"headerlink\" title=\"增加上传的文件大小限制\"></a>增加上传的文件大小限制</h2><p>有三个地方可以修改，第一种是在初始化的时候设置，第二种是设置全局参数，第三种是给每个账户单独设置</p>\n<h3 id=\"初始化设置-1\"><a href=\"#初始化设置-1\" class=\"headerlink\" title=\"初始化设置\"></a>初始化设置</h3><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210326151017.png\"></p>\n<h3 id=\"全局设置\"><a href=\"#全局设置\" class=\"headerlink\" title=\"全局设置\"></a>全局设置</h3><p>找到 <code>sys.config.php</code> 文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210324164743.png\"></p>\n<blockquote>\n<p>修改前需要先修改  <code>sys.config.php</code> 文件的权限，需勾选 <code>写入</code> 权限</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202110081342744.png\"></p>\n<p>找到 <code>MAX_FILESIZE</code>，默认是 <code>2048MB</code>，也就是 <code>2GB</code>，可以将 <code>2048</code> 更改为所需的任何内容，但必须是整数。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210324164931.png\"></p>\n<h3 id=\"单独设置\"><a href=\"#单独设置\" class=\"headerlink\" title=\"单独设置\"></a>单独设置</h3><p>在新建用户时，单独设置 <code>Max. upload filesize</code>，如果保留为空或将其设置为0，它将使用全局值。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210324165748.png\"></p>\n<h2 id=\"汉化\"><a href=\"#汉化\" class=\"headerlink\" title=\"汉化\"></a>汉化</h2><p>目前已经支持 <code>71</code> 种语言，需要在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucHJvamVjdHNlbmQub3JnL3RyYW5zbGF0aW9ucy8=\">https://www.projectsend.org/translations/<i class=\"fa fa-external-link-alt\"></i></span> 页面下载</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210326140240.png\"></p>\n<p>将下载的 <code>zh_CN.zip</code> 文件解压到 <code>projectsend</code> 目录中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210326140457.png\"></p>\n<p>语言包目录中包含了 <code>zh_CN.mo</code> 和 <code>zh_CN.po</code> 的文件</p>\n<ul>\n<li><code>PO</code> 是 <code>Portable Object</code>（可移植对象）的缩写形式，它是面向翻译人员的、提取于源代码的一种资源文件。</li>\n<li><code>MO</code> 是 <code>Machine Object</code>（机器对象）的缩写形式，它是面向计算机的、由 <code>.po</code> 文件通过 <code>GNU gettext</code> 工具包编译而成的二进制文件，应用程序通过读取 <code>.mo</code> 文件使自身的界面转换成用户使用的语言，如简体中文。</li>\n</ul>\n<blockquote>\n<p>可以在 <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5kYXlhbnphaS5tZS9wb2VkaXQtcHJvLmh0bWw=\">http://www.dayanzai.me/poedit-pro.html<i class=\"fa fa-external-link-alt\"></i></span> 下载 <code>Poedit</code> 文件，用于将 <code>.po</code> 文件编译为 <code>.mo</code> 文件</p>\n</blockquote>\n<p>语言包在容器中的路径对应下表</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">模块</th>\n<th align=\"center\">路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">主程序</td>\n<td align=\"center\"><code>/app/projectsend/lang</code></td>\n</tr>\n<tr>\n<td align=\"center\">模板 <code>Default</code></td>\n<td align=\"center\"><code>/app/projectsend/templates/default/lang</code></td>\n</tr>\n<tr>\n<td align=\"center\">模板 <code>Gallery</code></td>\n<td align=\"center\"><code>/app/projectsend/templates/gallery/lang</code></td>\n</tr>\n<tr>\n<td align=\"center\">模板 <code>Pinboxes</code></td>\n<td align=\"center\"><code>/app/projectsend/templates/pinboxes/lang</code></td>\n</tr>\n</tbody></table>\n<p>SSH 连接到群晖，执行下面的拷贝命令</p>\n<blockquote>\n<p>【注意】：</p>\n<ul>\n<li><code>/volume2/docker/projectsend/zh_CN/.</code> 是群晖上汉化包解压出来的目录</li>\n<li><code>linuxserver-projectsend1</code> 为容器名称</li>\n<li><code>/app/projectsend</code> 容器内的目录</li>\n</ul>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 从群晖拷贝到容器linuxserver-projectsend1内</span></span><br><span class=\"line\">docker cp /volume2/docker/projectsend/zh_CN/. linuxserver-projectsend1:/app/projectsend</span><br></pre></td></tr></table></figure>\n\n<p>修改  <code>sys.config.php</code> 文件，将 <code>define（&#39;SITE_LANG&#39;，&#39;en&#39;）</code> 改为 <code>define（&#39;SITE_LANG&#39;，&#39;zh_CN&#39;）</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210326151312.png\"></p>\n<p>保存后 <code>logout</code> ，登录界面 <code>语言</code> 默认就是中文了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210326152026.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>回到 <code>http://群晖IP:8222</code>，会看到登录页面，用刚才创建的管理员账号和密码登录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210402162830.png\"></p>\n<p>使用还是很简单的，简单介绍下流程：</p>\n<p>为了开始上传文件并与客户共享，首先，您需要添加客户</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210402163428.png\"></p>\n<p>邮件没设置，而且用户的邮箱地址也是乱填的，报错信息不用管</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210402163534.png\"></p>\n<p>然后单击文件栏，然后从下拉菜单中选择“上传”按钮以添加添加，然后上传文件。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210402163212.png\"></p>\n<p>上传文件后，您可以选择要共享的特定客户</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210402163726.png\"></p>\n<p>分配完成后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210402163812.png\"></p>\n<p>要检查状态并管理上传的文件，请点击文件栏下方的 <code>管理文件</code> 选项</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210402163857.png\"></p>\n<p>客户登录后，就能看到分享给自己的文档了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210402164022.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>projectsend/projectsend: ProjectSend is a free, open source software that lets you share files with your clients, focused on ease of use and privacy. It supports clients groups, system users roles, statistics, multiple languages, detailed logs… and much more!<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Byb2plY3RzZW5kL3Byb2plY3RzZW5k\">https://github.com/projectsend/projectsend<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>ProjectSend - Share files with your clients from your own server. Open source, free software.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucHJvamVjdHNlbmQub3JnLw==\">https://www.projectsend.org/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","文件分享"]},{"title":"在线乐谱协作编辑器composing.studio","url":"/2021/10/06/%E5%9C%A8%E7%BA%BF%E4%B9%90%E8%B0%B1%E5%8D%8F%E4%BD%9C%E7%BC%96%E8%BE%91%E5%99%A8composing.studio/","content":"<p><strong>什么是 composing.studio ？</strong></p>\n<blockquote>\n<p><code>composing.studio</code> 是使用 <code>Rust</code>、<code>WebAssembly</code> 和 <code>TypeScript</code> 构建的在线实时协作音乐编辑器，采用了 <code>ABC</code> 记谱法，允许任何人创建简单的音乐作品，具有即时乐谱渲染和实时音频播放。任何人都可以通过创建一个新的协作会话，并与其他作曲家共享链接，协同工作。</p>\n</blockquote>\n<p><strong>什么是 ABC 记谱法 ？</strong></p>\n<blockquote>\n<p><code>ABC</code> 记谱法（<code>ABC Music Notation</code>）出现于 19 世纪，由 <code>Chris Walshaw</code> 发明。<code>ABC</code> 记谱法以 <code>A</code> 到 <code>G</code> 的字母记录音高，再用其它符号来记录变化音、音长等。 <code>ABC</code> 记谱法基于 <code>ASCII</code> ，可以用文本编辑器进行编辑，并且有很多音乐软件可以读取 <code>ABC</code> 符号以及处理成 <code>MIDI</code> 格式文件。</p>\n</blockquote>\n<p><strong>什么是 abc.js ?</strong></p>\n<blockquote>\n<p><code>Paul Rosen</code> 和 <code>Gregory Dyke</code> 开发的一个渲染 <code>ABC</code> 乐谱的<code>javascript</code> 库，该库可以在网页上显示标准音乐符号，还可以生成<code>MIDI</code> 文件或直接在浏览器中播放。</p>\n</blockquote>\n<p>官网可以直接体验使用：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb21wb3Npbmcuc3R1ZGlvLw==\">https://composing.studio<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"构建镜像\"><a href=\"#构建镜像\" class=\"headerlink\" title=\"构建镜像\"></a>构建镜像</h1><p>没有搜索到镜像，可能是老苏搜索的关键词不对，不过官方提供了 <code>Dockerfile</code> ，可以自己构建。</p>\n<p>这个 <code>Dockerfile</code> 采用了多阶段构建，值得学习和进一步研究</p>\n<blockquote>\n<p>如果你不想自己构建，可以跳过，直接阅读下一章节</p>\n</blockquote>\n<p>构建镜像的基本流程如下👇</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载代码</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/ekzhang/composing.studio.git cs</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> cs</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 构建镜像  </span></span><br><span class=\"line\">docker build -t wbsu2003/composing-studio:v1 .</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 运行容器</span></span><br><span class=\"line\">docker run -d --name composing-studio \\</span><br><span class=\"line\">--restart=always \\</span><br><span class=\"line\">-p 3030:3030 \\</span><br><span class=\"line\">wbsu2003/composing-studio:v1</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>wbsu2003</code> ，找到 <code>wbsu2003/composing-studio</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109251443492.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">3030</td>\n<td align=\"center\">3030</td>\n</tr>\n</tbody></table>\n<p>默认没有映射端口</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109251446797.png\"></p>\n<p>需要点 <code>+</code> 号自行添加，直接用了默认的端口 <code>3030</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109251447532.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:3030</code> 就能看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109251451054.png\"></p>\n<p>点 <code>ENTER</code> 进入音乐编辑器界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109251453594.png\"></p>\n<p>默认创建的文件名是随机的，可以通过 <code>http://群晖IP:3030/文件名</code> 的方式指定文件名</p>\n<p>例如在浏览器中输入 <code>http://192.168.0.199:3030/MoneyLost</code>，会在 <code>documents</code> 目录中新建 <code>MoneyLost</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109251517674.png\"></p>\n<p>老苏并不懂 <code>ABC</code> 记谱法，下面👇这首是网上找的，可以用于测试，将其复制、并粘贴到中间的编辑区</p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">X: 22</span><br><span class=\"line\">T:Money Lost</span><br><span class=\"line\">M:3/4</span><br><span class=\"line\">L:1/8</span><br><span class=\"line\">Q:1/4=100</span><br><span class=\"line\">C:Paul Rosen</span><br><span class=\"line\">S:Copyright 2007, Paul Rosen</span><br><span class=\"line\">R:Klezmer</span><br><span class=\"line\">K:Dm</span><br><span class=\"line\">Ade|:&quot;Dm&quot;(f2d)e gf|&quot;A7&quot;e2^c4|&quot;Gm&quot;B&gt;&gt;^c BA BG|&quot;A&quot;A3Ade|&quot;Dm&quot;(f2d)e gf|&quot;A7&quot;e2^c4|</span><br><span class=\"line\">&quot;Gm&quot;A&gt;&gt;B &quot;A7&quot;AG FE|1&quot;Dm&quot;D3Ade:|2&quot;Dm&quot;D3DEF||:&quot;Gm&quot;(G2D)E FG|&quot;Dm&quot;A2F4|&quot;Gm&quot;B&gt;&gt;c &quot;A7&quot;BA BG|</span><br><span class=\"line\">&quot;Dm&quot;A3 DEF|&quot;Gm&quot;(G2D)EFG|&quot;Dm&quot;A2F4|&quot;E°&quot;E&gt;&gt;Fy &quot;(A7)&quot;ED^C2|1&quot;Dm&quot;D3DEF:|2&quot;Dm&quot;D6||</span><br></pre></td></tr></table></figure>\n\n<p>预览播放区立刻能看到渲染好的标准乐谱</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109251530222.png\"></p>\n<p>可以直接播放</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109251500980.png\"></p>\n<p>将 <code>Share Link</code> 分享给别人之后，<code>Active Users</code> 多出了一个人</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109251502901.png\"></p>\n<p>可以修改自己的名字</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109251506732.png\"></p>\n<p>但是需要注意的是，<code>composing.studio</code> 目前还没有保存和下载，但可以通过固定文件名的方式找到编辑过的内容</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109251530808.png\"></p>\n<p><strong>除非你重启了容器</strong>，否则只要输入这个链接，都能看到之前编辑、修改的内容</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>ekzhang/composing.studio: Collaborative music composition for everyone.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2VremhhbmcvY29tcG9zaW5nLnN0dWRpbw==\">https://github.com/ekzhang/composing.studio<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Composing Studio<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb21wb3Npbmcuc3R1ZGlvLw==\">https://composing.studio/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>abcjs: Quick Editor<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lZGl0b3IuZHJhd3RoZWRvdHMuY29tLw==\">https://editor.drawthedots.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>abcjs<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWJjanMubmV0Lw==\">https://www.abcjs.net/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>maiwenan/hexo-tag-abcjs: A hexo tag for rendering abc music notation on your blog posts.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21haXdlbmFuL2hleG8tdGFnLWFiY2pz\">https://github.com/maiwenan/hexo-tag-abcjs<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>一个渲染ABC乐谱的开源Javascript库abcjs — 1024.COM - 好人一生平安<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly8xMDI0LmNvbS9hLzY0Ng==\">https://1024.com/a/646<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>ABC 记谱法教程 - 简书<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9mNDNmOWIyYWViMmQ=\">https://www.jianshu.com/p/f43f9b2aeb2d<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>使用带有 abcjs 支持的 markdown 编辑器编写五线谱 - 初步印象 - 链滴<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZDI0Ni5jb20vYXJ0aWNsZS8xNTc5NDI0MDg3Mjg1\">https://ld246.com/article/1579424087285<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","音乐"]},{"title":"能在路由器里挂载阿里云盘的aliyundrive-webdav","url":"/2021/10/04/%E8%83%BD%E5%9C%A8%E8%B7%AF%E7%94%B1%E5%99%A8%E9%87%8C%E6%8C%82%E8%BD%BD%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98%E7%9A%84aliyundrive-webdav/","content":"<p><strong>什么是 aliyundrive-webdav ？</strong></p>\n<blockquote>\n<p><code>aliyundrive-webdav</code> 是阿里云盘 <code>WebDAV</code> 服务，主要使用场景为配合支持 <code>WebDAV</code> 协议的客户端 <code>App</code> 如 <code>Infuse</code>、<code>nPlayer</code> 等实现在电视上直接观看云盘视频内容， 支持上传文件，但受限于 <code>WebDAV</code> 协议不支持文件秒传。</p>\n</blockquote>\n<p><code>aliyundrive-webdav</code> 和老苏之前介绍的『<a href=\"https://laosu.ml/2021/08/04/%E8%83%BD%E5%B0%86%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98%E6%8C%82%E8%BD%BD%E4%B8%BAwebdav%E7%9A%84webdav-aliyundriver\">能将阿里云盘挂载为webdav的webdav-aliyundriver</a>』，从功能上来说是一样的，但是也有差别</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"center\"><code>aliyundrive-webdav</code></th>\n<th align=\"center\"><code>webdav-aliyundriver</code></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">语言</td>\n<td align=\"center\"><code>Rust</code></td>\n<td align=\"center\"><code>Java</code></td>\n</tr>\n<tr>\n<td align=\"center\">发布</td>\n<td align=\"center\"><code>exe</code>、<code>ipk</code> 等</td>\n<td align=\"center\">只有 <code>jar</code> 包</td>\n</tr>\n<tr>\n<td align=\"center\">包大小</td>\n<td align=\"center\">小，一般在 <code>2M</code> 左右，镜像约 <code>11M</code></td>\n<td align=\"center\">大，近 <code>20M</code>，镜像高达 <code>500MB</code></td>\n</tr>\n<tr>\n<td align=\"center\">架构</td>\n<td align=\"center\"><code>ARM、MIPS、X86</code> 等</td>\n<td align=\"center\">理论上可以在非 <code>X86</code> 上运行，可能需要自己用源码重编</td>\n</tr>\n</tbody></table>\n<p>总体来看，<code>aliyundrive-webdav</code> 在适应性和资源占用上具有很大的优势</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>aliyundrive-webdav</code> ，选择第一个 <code>messense/aliyundrive-webdav</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011742645.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>aliwebdav</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/aliwebdav</code></td>\n<td align=\"center\"><code>/etc/aliyundrive-webdav</code></td>\n<td align=\"center\">存放设置</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011756745.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不冲突就行，需要点 <code>+</code> 号新增</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011757890.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">8321</td>\n<td align=\"center\">8080</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011758526.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>REFRESH_TOKEN</code></td>\n<td align=\"center\"><code>refresh token</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>WEBDAV_AUTH_USER</code></td>\n<td align=\"center\"><code>webdav</code> 用户</td>\n</tr>\n<tr>\n<td align=\"center\"><code>WEBDAV_AUTH_PASSWORD</code></td>\n<td align=\"center\"><code>webdav</code> 密码</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p><code>refresh token</code> 的获取方法可以参考 『<a href=\"https://laosu.ml/2021/08/04/%E8%83%BD%E5%B0%86%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98%E6%8C%82%E8%BD%BD%E4%B8%BAwebdav%E7%9A%84webdav-aliyundriver\">能将阿里云盘挂载为webdav的webdav-aliyundriver</a>』</p>\n</blockquote>\n<p>局域网测试，所以老苏没设置密码，如果你要在公网访问，一定要记得设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011759995.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:8321</code> 就能看到文件列表</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011846083.png\"></p>\n<p>老苏在 <code>Windows</code> 上测试了用 <code>RainDrive</code> 挂载阿里云盘</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011848765.png\"></p>\n<p>和 <code>webdav-aliyundriver</code> 不同，<code>aliyundrive-webdav</code> 能获取空间大小</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011849843.png\"></p>\n<h1 id=\"路由器\"><a href=\"#路由器\" class=\"headerlink\" title=\"路由器\"></a>路由器</h1><h2 id=\"Koolshare-梅林固件\"><a href=\"#Koolshare-梅林固件\" class=\"headerlink\" title=\"Koolshare 梅林固件\"></a>Koolshare 梅林固件</h2><p>老苏的 <code>R6300V2</code> 下载了 <code>aliyundrivewebdav-merlin-arm380-armv7.tar.gz</code>，在软件中心离线安装</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011903750.png\"></p>\n<p>安装过程很快，毕竟还不到 <code>2M</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011904441.png\"></p>\n<p>只要填 <code>refresh token</code>，其他的老苏都用的默认值</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011906367.png\"></p>\n<p>点 <code>确定</code> 即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011906624.png\"></p>\n<p>可以通过在浏览器中输入 <code>http://路由器IP:8321</code> 看到文件列表</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011914475.png\"></p>\n<p> <code>RainDrive</code> 挂载</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011918018.png\"></p>\n<p>从不同的设备上挂载，结果是一样的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011931493.png\"></p>\n<h2 id=\"OpenWrt-路由器\"><a href=\"#OpenWrt-路由器\" class=\"headerlink\" title=\"OpenWrt 路由器\"></a>OpenWrt 路由器</h2><p>这玩意老苏没有，有需要的同学去官网自己研究吧</p>\n<h1 id=\"主流操作系统\"><a href=\"#主流操作系统\" class=\"headerlink\" title=\"主流操作系统\"></a>主流操作系统</h1><p>支持 <code>Windows</code>、<code>MacOS</code>、<code>Linux</code>，都是采用的命令行方式</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110011938716.png\"></p>\n<p>老苏下载了 <code>aliyundrive-webdav-windows-x64.zip</code>，解压出来就一个文件 <code>aliyundrive-webdav.exe</code>，需要在 <code>命令提示符</code> 下运行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110012121539.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">参数</th>\n<th align=\"center\">简写</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>--cache-size</code></td>\n<td align=\"center\"></td>\n<td align=\"center\">下载缓存，默认值为 <code>10485760</code> ，单位 <code>bytes</code>，也就是 <code>10M</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>--host</code></td>\n<td align=\"center\"></td>\n<td align=\"center\">主机 <code>IP</code>，缺省为 <code>0.0.0.0</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>--port </code></td>\n<td align=\"center\"><code>-p</code></td>\n<td align=\"center\">端口号，缺省为 <code>8080</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>--read-buffer-size </code></td>\n<td align=\"center\"><code>-S</code></td>\n<td align=\"center\">目录缓存，默认值为 <code>1000</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>--refresh-token </code></td>\n<td align=\"center\"><code>-r</code></td>\n<td align=\"center\"><code>refresh token</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>--root</code></td>\n<td align=\"center\"></td>\n<td align=\"center\">缺省根目录是 <code>/</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>--auth-user</code></td>\n<td align=\"center\"><code>-U</code></td>\n<td align=\"center\"><code>WebDAV</code> 用户</td>\n</tr>\n<tr>\n<td align=\"center\"><code>--auth-password</code></td>\n<td align=\"center\"><code>-W</code></td>\n<td align=\"center\"><code>WebDAV</code> 密码</td>\n</tr>\n<tr>\n<td align=\"center\"><code>--workdir</code></td>\n<td align=\"center\"><code>-w</code></td>\n<td align=\"center\">工作目录，存储 <code>refresh_token</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>--auto-index</code></td>\n<td align=\"center\"><code>-I</code></td>\n<td align=\"center\">自动生成 <code>index.html</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>--help</code></td>\n<td align=\"center\"><code>-h</code></td>\n<td align=\"center\">帮助</td>\n</tr>\n<tr>\n<td align=\"center\"><code>--version</code></td>\n<td align=\"center\"><code>-v</code></td>\n<td align=\"center\">版本，当前为 <code>0.4.1</code></td>\n</tr>\n</tbody></table>\n<p>所以最少只要带两个参数 <code>--auto-index --refresh-token &lt;refresh-token&gt;</code> 就可以正常工作，也可以简写为 <code>-I -r &lt;refresh-token&gt;</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110012142238.png\"></p>\n<blockquote>\n<p>如果不带 <code>-I</code> 或者 <code>--auto-index</code>，会显示 <code>HTTP ERROR 405</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/10/202110012159291.png\"></p>\n<p>在浏览器中输入 <code>http://本机IP:8080</code> 或者 <code>http://localhost:8080</code> 即可看到文件列表，和 <code>docker</code> 或者 <code>R6300V2</code> 上是完全一样的，所以用哪种方式，完全取决于您自己，要考虑硬件条件，也要考虑大数据拷贝时资源占用，当然还有软件设置的易用性</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>messense/aliyundrive-webdav: 阿里云盘 WebDAV 服务<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21lc3NlbnNlL2FsaXl1bmRyaXZlLXdlYmRhdg==\">https://github.com/messense/aliyundrive-webdav<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","网盘","路由器","R6300V2"]},{"title":"在线问卷工具LimeSurvey","url":"/2021/10/01/%E5%9C%A8%E7%BA%BF%E9%97%AE%E5%8D%B7%E5%B7%A5%E5%85%B7LimeSurvey/","content":"<p><strong>什么是 LimeSurvey ？</strong></p>\n<blockquote>\n<p><code>LimeSurvey</code> 是一款开源的在线问卷管理系统，具有问卷的设计、修改、发布、回收和统计等多项功能。它集成了调查程序开发、调查问卷的发布以及数据收集等功能，网上收集的调查数据可以导出多种文件格式以便分析，例如 <code>spss</code> 数据格式 <code>*.dat</code> 文件。支持 <code>49</code> 种语言/方言版本；</p>\n</blockquote>\n<p>官方体验地址👇，凭据已预先填写好了，只需单击 <code>Log in</code>：<br><span class=\"exturl\" data-url=\"aHR0cDovL2RlbW8ubGltZXN1cnZleS5vcmcvaW5kZXgucGhwP3I9YWRtaW4vYXV0aGVudGljYXRpb24vc2EvbG9naW4=\">http://demo.limesurvey.org/index.php?r=admin/authentication/sa/login<i class=\"fa fa-external-link-alt\"></i></span>,</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>limesurvey</code> ，选择第一个 <code>crramirez/limesurvey</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210409134924.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>limesurvey</code>，然后在 <code>limesurvey</code> 文件夹中再创建两个新的子文件夹，分别命名为 <code>upload</code> 和 <code>mysql</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210409173654.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/limesurvey/upload</code></td>\n<td align=\"center\"><code>/app/upload</code></td>\n<td align=\"center\">上传文件夹</td>\n</tr>\n<tr>\n<td align=\"center\"><code>docker/limesurvey/mysql</code></td>\n<td align=\"center\"><code>/var/lib/mysql</code></td>\n<td align=\"center\">数据库文件夹</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210409173841.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>默认的端口 <code>80</code> 不能用，所以换成了 <code>8111</code>，不冲突就行<br><code>3306</code> 是 <code>MySQL</code> 的端口，这个和群晖的 <code>MariaDB</code> 冲突，所以也要修改</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">8111</td>\n<td align=\"center\">80</td>\n</tr>\n<tr>\n<td align=\"center\">3307</td>\n<td align=\"center\">3306</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p> 【注意】：如果同时安装了 <code>MariaDB 5</code> 和 <code>MariaDB 10</code>，<code>3307</code> 是 <code>MariaDB 10</code> 默认的端口，所以也是不能使用的</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210409140352.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>HTTP_LOCATION</code></td>\n<td align=\"center\">选填项，如果要在其他 <code>http</code> 位置运行 <code>limesurvey</code></td>\n</tr>\n</tbody></table>\n<p>按现在的设置，访问 <code>limesurvey</code> 的地址是 <code>http://群晖IP:8111</code>;</p>\n<p>当你设置 <code>HTTP_LOCATION=&quot;surveys&quot;</code> 后，访问 <code>limesurvey</code> 的地址就变成了 <code>http://群晖IP:8111/surveys</code>;</p>\n<p>环境直接用的默认</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210409140952.png\"></p>\n<h1 id=\"初始化设置\"><a href=\"#初始化设置\" class=\"headerlink\" title=\"初始化设置\"></a>初始化设置</h1><p>在浏览器中输入 <code>http://群晖IP:8111</code>，就能看到主界面了，第一次需要设置</p>\n<ul>\n<li>语言选择：系统支持多种语言</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210409141232.png\"></p>\n<p>选择 <code>简体中文</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210409174025.png\"></p>\n<ul>\n<li>许可：直接接受就可以了</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210409141352.png\"></p>\n<ul>\n<li>环境检测：如果都是绿勾就没问题，下一步</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210409141446.png\"></p>\n<ul>\n<li>配置数据库：按下表的值填写</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">类型</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">数据库类型</td>\n<td align=\"center\">默认为 <code>MySQL</code></td>\n</tr>\n<tr>\n<td align=\"center\">数据库位置</td>\n<td align=\"center\">默认为 <code>localhost</code>，如果前面修改了，要加上端口</td>\n</tr>\n<tr>\n<td align=\"center\">数据库用户</td>\n<td align=\"center\"><code>root</code></td>\n</tr>\n<tr>\n<td align=\"center\">数据库密码</td>\n<td align=\"center\">为空，不需要填</td>\n</tr>\n<tr>\n<td align=\"center\">数据库名</td>\n<td align=\"center\">无要求，建议填 <code>limesurvey</code></td>\n</tr>\n<tr>\n<td align=\"center\">表前缀</td>\n<td align=\"center\">默认为 <code>Lime</code></td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>记得 <code>localhost</code> 后面要加上前面修改过的端口号</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210409142235.png\"></p>\n<ul>\n<li>创建数据库</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210409142324.png\"></p>\n<ul>\n<li>创建成功</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210409143001.png\"></p>\n<ul>\n<li>设置管理员：<strong>记得修改管理员密码，默认语言改简体中文</strong></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210409143146.png\"></p>\n<ul>\n<li>安装完成</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210409174300.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>点 <code>管理</code> 会跳转到登录界面</p>\n<blockquote>\n<p>管理员登录地址 <code>http://群晖IP:8111/index.php/admin/</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210409174341.png\"></p>\n<blockquote>\n<p>用 <code>admin</code> 和前面设置的密码登录</p>\n</blockquote>\n<p>登录成功后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210409143454.png\"></p>\n<p>跳过教程</p>\n<blockquote>\n<p>第一次使用还是建议看看教程，对熟悉系统很有帮助！</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210409143537.png\"></p>\n<p>让我们创建一个问卷调查，<code>文字元素</code> 页必填的有 <code>调查标题</code></p>\n<blockquote>\n<p>详细的操作，可以参考 <span class=\"exturl\" data-url=\"aHR0cHM6Ly90ZWNoLm1pbmRzZWVkLmNuL0xpbWVTdXJ2ZXkvNDk5Lmh0bWw=\">LimeSurvey基础教程（三）—— 创建新问卷调查（https://tech.mindseed.cn/LimeSurvey/499.html）<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210409152149.png\"></p>\n<p>添加新问题默认创建的问题类型是 <code>长自由文本</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210409151227.png\"></p>\n<p>可以更改为其他类型</p>\n<blockquote>\n<p>关于各种问题类型的说明，可以参考 <span class=\"exturl\" data-url=\"aHR0cHM6Ly90ZWNoLm1pbmRzZWVkLmNuL0xpbWVTdXJ2ZXkvNDUyLmh0bWw=\">LimeSurvey基础教程（二）——问题类型（https://tech.mindseed.cn/LimeSurvey/452.html）<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210409151105.png\"></p>\n<p>生成预览</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210409172920.png\"></p>\n<p>下一页才是题目</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210409170531.png\"></p>\n<p>软件的安装很简单，功能也很强大，但是说实话刚开始不太容易上手，需要花时间去实践和熟悉。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>LimeSurvey/LimeSurvey: The most popular FOSS online survey tool on the web.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0xpbWVTdXJ2ZXkvTGltZVN1cnZleQ==\">https://github.com/LimeSurvey/LimeSurvey<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>用户手册 - LimeSurvey Manual<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYW51YWwubGltZXN1cnZleS5vcmcvTGltZVN1cnZleV9NYW51YWwvemgtY24=\">https://manual.limesurvey.org/LimeSurvey_Manual/zh-cn<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>LimeSurvey教程 - 心站日志—MindSeed技术站<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly90ZWNoLm1pbmRzZWVkLmNuL0xpbWVTdXJ2ZXkuaHRtbA==\">https://tech.mindseed.cn/LimeSurvey.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","问卷"]},{"title":"开源生产力套件Nextcloud","url":"/2021/09/29/%E5%BC%80%E6%BA%90%E7%94%9F%E4%BA%A7%E5%8A%9B%E5%A5%97%E4%BB%B6Nextcloud/","content":"<p><strong>什么是 Nextcloud ？</strong></p>\n<blockquote>\n<p><code>Nextcloud</code> 是一套用于创建网络硬盘的客户端/服务器开源软件。<code>Nextcloud</code> 服务器是以 <code>PHP</code> 与 <code>JavaScript</code> 脚本语言撰写，可与多种数据库管理系统一协同运作，包含了 <code>SQLite</code> 、 <code>MariaDB</code> 、 <code>MySQL</code> 、 <code>Oracle</code> 、<code>PostgreSQL</code> 数据库。与 <code>Dropbox</code> 等专有服务相比，<code>Nextcloud</code> 的开放架构让用户可以利用应用程序的方式在服务器上新增额外的功能，并让用户可以完全掌控自己的资料。<code>NextCloud</code> 的客户端覆盖了 <code>Windows</code> 、<code>Mac</code> 、<code>Android</code> 、<code>iOS</code> 、<code>Linux</code> 等各种平台，也提供了网页端以及 <code>WebDAV</code> 接口，所以你几乎可以在各种设备上方便地访问你的云盘。</p>\n</blockquote>\n<p>最新版本 <code>Nextcloud 21</code> 除了提供出色的基于云的文件服务器外，还支持各种文件的在线编辑，办公软件的在线读取，还添加了更多协作功能，包括内置的视频会议和小组会议服务等等。</p>\n<blockquote>\n<p>本文完成于 <code>2021</code> 年上半年，目前最新版本已是 <code>Nextcloud 22</code> ，老苏已对本文进行了相应的调整和补充</p>\n</blockquote>\n<p>简而言之，<code>Nextcloud Hub</code> 已经是一个具有音频+视频团队聊天，实时协作文档编辑，邮件客户端和日历+联系人管理等功能的一个完全集成的本地内容协作平台。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"数据库\"><a href=\"#数据库\" class=\"headerlink\" title=\"数据库\"></a>数据库</h2><p>通过 <code>phpMyAdmin</code> 在 <code>MariaDB 5</code> 中新建用户 <code>nextcloud</code>，创建同名的库 <code>nextcloud</code> 并授予所有权限。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109290921709.png\"></p>\n<p>建议使用 <code>MariaDB 10</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109290947607.png\"></p>\n<h2 id=\"安装镜像\"><a href=\"#安装镜像\" class=\"headerlink\" title=\"安装镜像\"></a>安装镜像</h2><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>nextcloud</code> ，选择第一个 <code>nextcloud</code>，版本选择 <code>22.1.0</code>（通过 <code>version.php</code> 获知详细版本为 <code>22.1.0.1</code>）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109291041775.png\"></p>\n<p>不能用 <code>latest</code> 版本（目前是 <code>22.1.1.2</code>），因为在初始化时会出现下面的错误</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Function not implemented: AH00141: Could not initialize random number generator</span><br></pre></td></tr></table></figure>\n\n<p>官网有人反馈：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25leHRjbG91ZC9kb2NrZXIvaXNzdWVzLzE1NzQ=\">https://github.com/nextcloud/docker/issues/1574<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>不光老苏的 <code>DSM 6.1.7</code>，就是 <code>DSM 6.2.4</code> 、<code>DSM 7.0</code> 上也一样，从回复看像是群晖内核版本太低导致的问题</p>\n<p><code>Your NAS is using a linux kernel &lt; 3.16 and is missing some dependencies required by apache2 now.</code></p>\n<h3 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h3><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>nextcloud</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>/docker/nextcloud</code></td>\n<td align=\"center\"><code>/var/www/html</code></td>\n<td align=\"center\">主目录</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210517210906.png\"></p>\n<h3 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h3><p>端口不能冲突</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n<th align=\"center\">类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">8383</td>\n<td align=\"center\">80</td>\n<td align=\"center\">TCP</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210516144013.png\"></p>\n<h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>MYSQL_HOST</code></td>\n<td align=\"center\">数据库服务器的地址</td>\n</tr>\n<tr>\n<td align=\"center\"><code>MYSQL_DATABASE</code></td>\n<td align=\"center\"><code>mysql/mariadb</code> 数据库的名称</td>\n</tr>\n<tr>\n<td align=\"center\"><code>MYSQL_USER</code></td>\n<td align=\"center\">数据库的用户名</td>\n</tr>\n<tr>\n<td align=\"center\"><code>MYSQL_PASSWORD</code></td>\n<td align=\"center\">数据库用户的密码</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p><code>Mariadb 5</code> 端口是 <code>3306</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210516213510.png\" alt=\"5\"></p>\n<blockquote>\n<p><code>MariaDB 10</code> 端口是 <code>3307</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109291029199.png\" alt=\"10\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:8383</code>，就能看到主界面了</p>\n<blockquote>\n<p>第一次需要初始化，主要是创建数据库、拷贝文件</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210516173656.png\"></p>\n<p>第一次使用需要进行设置，首先需要创建 <code>管理员账号</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210516173835.png\"></p>\n<p>如果遇到错误，一般是数据库设置问题</p>\n<blockquote>\n<p>老苏会用类似 <code>Navicat for MySQL</code> 的数据库工具连接测试一下</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210517220735.png\"></p>\n<p>如果没有遇到错误</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210516201519.png\"></p>\n<p>应用安装完成之后，会显示几页简介</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210516201936.png\"></p>\n<p>接下来就可以使用了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210516210411.png\"></p>\n<p><code>Nextcloud</code> 跨平台支持 <code>Windows</code>、<code>Mac</code>、<code>Android</code>、<code>iOS</code>、<code>Linux</code> 等平台，而且还提供了 <code>网页版</code> 以及 <code>WebDAV</code> 形式访问，因此你几乎可以在任何电脑、手机设备上都能轻松获取和访问你的文件文档。</p>\n<p><code>NextCloud</code> 最强大的是各种应用，包括 <code>Markdown</code> 在线编辑、<code>OnlyOffice</code>（需另外部署服务端）、笔记、思维导图、日历、联系人等，你可以自行选择用以丰富网盘的功能。所以用得好 <code>Nextcloud</code> 绝对是生产力工具。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210517230219.png\"></p>\n<p>老苏建议大家看看『 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zc3BhaS5jb20vcG9zdC82MTcxMQ==\">Nextcloud 和我的一天（https://sspai.com/post/61711）<i class=\"fa fa-external-link-alt\"></i></span> 』，写的非常棒。</p>\n<p>工具好不好，还得看你怎么用。</p>\n<h1 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h1><h2 id=\"远程访问\"><a href=\"#远程访问\" class=\"headerlink\" title=\"远程访问\"></a>远程访问</h2><p>反向代理设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210516215003.png\"></p>\n<p>但是用域名访问时会显示错误</p>\n<blockquote>\n<p>老苏用 <code>taiscale</code> 的 IP 访问也是同样的提示</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210516215131.png\"></p>\n<p>按提示我们需要编辑  <code>config/config.php</code>文件，不过直接编辑会显示权限不足</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210516215730.png\"></p>\n<ol>\n<li>需要我们 <code>SSH</code> 登录到群晖，在 <code>config</code> 目录下修改 <code>config.php</code> 文件的权限</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在 config 目录执行</span></span><br><span class=\"line\">chmod 777 config.php</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210517223509.png\"></p>\n<ol start=\"2\">\n<li>或者右键属性</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109291056062.png\"></p>\n<p><code>权限</code> –&gt; <code>新增</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109291107135.png\"></p>\n<p>接下来可以直接用 <code>vi</code> 编辑，也可以回到群晖桌面编辑。找到 <code>trusted_domains</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210516220614.png\"></p>\n<p>添加了两条，其中</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\">/* 第1条是 tailscale 的 IP */</span></span><br><span class=\"line\">   <span class=\"number\">1</span> =&gt; <span class=\"string\">&#x27;100.95.238.3:8383&#x27;</span>,</span><br><span class=\"line\"><span class=\"comment\">/* 第2二条是远程访问的域名 */</span></span><br><span class=\"line\">   <span class=\"number\">2</span> =&gt; <span class=\"string\">&#x27;nc.xxxx.ml&#x27;</span>,</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210517223925.png\"></p>\n<p>保存之后回到 <code>SSH</code> 客户端，再将权限改回去</p>\n<blockquote>\n<p>可不可以不改，当然是可以的</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在 config 目录执行</span></span><br><span class=\"line\">chmod 644 config.php</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210517224408.png\"></p>\n<p>不需要重启，直接刷新页面就可以了</p>\n<h2 id=\"数据库-1\"><a href=\"#数据库-1\" class=\"headerlink\" title=\"数据库\"></a>数据库</h2><p> 老苏用了 <code>MariaDB 5</code> 而不是 <code>MariaDB 10</code>，在 <code>设置</code> –&gt; <code>管理</code> –&gt; <code>概览</code> 中，会看到这些警告</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210517231005.png\"></p>\n<p>所以老苏建议大家最好使用  <code>MariaDB 10</code>。</p>\n<h2 id=\"安全性\"><a href=\"#安全性\" class=\"headerlink\" title=\"安全性\"></a>安全性</h2><p>老苏非常赞成这句话： <strong><code>Privacy does not exist without security.</code></strong></p>\n<p>所以对映射到公网的地址，应该定期到 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zY2FuLm5leHRjbG91ZC5jb20v\">https://scan.nextcloud.com/<i class=\"fa fa-external-link-alt\"></i></span> 进行扫描和检测</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210517231645.png\"></p>\n<p>往下拉有扫描的漏洞和建议</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210517232346.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>nextcloud/server: ☁️ Nextcloud server, a safe home for all your data<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25leHRjbG91ZC9zZXJ2ZXI=\">https://github.com/nextcloud/server<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Nextcloud<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9uZXh0Y2xvdWQuY29tLw==\">https://nextcloud.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Synology: How to Install Nextcloud Using Docker – Marius Hosting<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXJpdXNob3N0aW5nLmNvbS9zeW5vbG9neS1ob3ctdG8taW5zdGFsbC1uZXh0Y2xvdWQtdXNpbmctZG9ja2VyLw==\">https://mariushosting.com/synology-how-to-install-nextcloud-using-docker/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","网盘"]},{"title":"能在浏览器中运行桌面版linux的Webtop","url":"/2021/09/27/%E8%83%BD%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E8%BF%90%E8%A1%8C%E6%A1%8C%E9%9D%A2%E7%89%88linux%E7%9A%84Webtop/","content":"<p><strong>什么是 WebTop ？</strong></p>\n<blockquote>\n<p>它是一个基于 <code>Linux</code> （ <code>Ubuntu</code> 和 <code>Alpine</code> 两种版本）的轻量级容器，具有在浏览器中运行的完整桌面环境，具有基本的窗口管理器、像素完美的渲染分辨率、音频支持、剪贴板支持、屏幕键盘支持，以及用于上传/下载的远程文件管理。</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>推荐用命令行（<code>docker cli</code>）或者 <code>docker compose</code> 安装，因为可以通过 <code>shm_size</code> 参数调整共享内存的大小，来达到优化效果。</p>\n<blockquote>\n<p><code>optional</code> 为可选项，请根据需要进行修改</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建容器</span></span><br><span class=\"line\">docker run -d \\</span><br><span class=\"line\">  --name=webtop \\</span><br><span class=\"line\">  --privileged `<span class=\"comment\">#optional` \\</span></span><br><span class=\"line\">  -e PUID=1000 \\</span><br><span class=\"line\">  -e PGID=1000 \\</span><br><span class=\"line\">  -e TZ=Asia/Shanghai \\</span><br><span class=\"line\">  -e SUBFOLDER=/ `<span class=\"comment\">#optional` \\</span></span><br><span class=\"line\">  -p 3000:3000 \\</span><br><span class=\"line\">  -v /path/to/data:/config \\</span><br><span class=\"line\">  -v /var/run/docker.sock:/var/run/docker.sock `<span class=\"comment\">#optional` \\</span></span><br><span class=\"line\">  --shm-size=<span class=\"string\">&quot;1gb&quot;</span> `<span class=\"comment\">#optional` \\</span></span><br><span class=\"line\">  --restart unless-stopped \\</span><br><span class=\"line\">  linuxserver/webtop</span><br></pre></td></tr></table></figure>\n\n<p>当然也可以用群晖 Docker 管理器安装。</p>\n<p>在注册表中搜索 <code>webtop</code> ，选择第一个 <code>linuxserver/webtop</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109142309835.png\"></p>\n<p>默认是 <code>Alpine</code> ，看起来还有 <code>fedora</code>、<code>Ubuntu</code>、而桌面环境或者窗口管理器有 <code>Xfce</code>、<code>Openbox</code>、<code>Ubuntu MATE</code>、<code>KDE</code>、<code>IceWM</code>、<code>i3</code>，排列组合之后版本让人有点眼花缭乱。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109162305720.png\"></p>\n<p>但是从官网看，已经没有 <code>fedora</code> 了，可能是被弃用了，所以其实也没那么多版本</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Tag</th>\n<th align=\"center\">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">latest</td>\n<td align=\"center\">XFCE Alpine</td>\n</tr>\n<tr>\n<td align=\"center\">ubuntu-xfce</td>\n<td align=\"center\">XFCE Ubuntu</td>\n</tr>\n<tr>\n<td align=\"center\">alpine-kde</td>\n<td align=\"center\">KDE Alpine</td>\n</tr>\n<tr>\n<td align=\"center\">ubuntu-kde</td>\n<td align=\"center\">KDE Ubuntu</td>\n</tr>\n<tr>\n<td align=\"center\">alpine-mate</td>\n<td align=\"center\">MATE Alpine</td>\n</tr>\n<tr>\n<td align=\"center\">ubuntu-mate</td>\n<td align=\"center\">MATE Ubuntu</td>\n</tr>\n<tr>\n<td align=\"center\">alpine-i3</td>\n<td align=\"center\">i3 Alpine</td>\n</tr>\n<tr>\n<td align=\"center\">ubuntu-i3</td>\n<td align=\"center\">i3 Ubuntu</td>\n</tr>\n<tr>\n<td align=\"center\">alpine-openbox</td>\n<td align=\"center\">Openbox Alpine</td>\n</tr>\n<tr>\n<td align=\"center\">ubuntu-openbox</td>\n<td align=\"center\">Openbox Ubuntu</td>\n</tr>\n<tr>\n<td align=\"center\">alpine-icewm</td>\n<td align=\"center\">IceWM Alpine</td>\n</tr>\n<tr>\n<td align=\"center\">ubuntu-icewm</td>\n<td align=\"center\">IceWM Ubuntu</td>\n</tr>\n</tbody></table>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>webtop</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/webtop</code></td>\n<td align=\"center\"><code>/config</code></td>\n<td align=\"center\">存放设置</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109141914238.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不冲突即可</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">3388</td>\n<td align=\"center\">3000</td>\n</tr>\n<tr>\n<td align=\"center\">3389</td>\n<td align=\"center\">3389</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109141915730.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>PUID</code></td>\n<td align=\"center\"><code>&lt;uid&gt;</code> 设为 <code>1000</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>PGID</code></td>\n<td align=\"center\"><code>&lt;gid&gt;</code> 设为 <code>1000</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>TZ</code></td>\n<td align=\"center\">系统时区设置，设置为 <code>Asia/Shanghai</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109141917022.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>容器启动之后需要一些时间，在浏览器中输入 <code>http://群晖IP:3388</code>，会看到一个 <code>Alpine Xfce</code> 桌面环境</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109141924582.png\"></p>\n<p><code>about Xfce</code> 中的信息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109141926929.png\"></p>\n<p>浏览器的标题显示 <code>guacamole Client</code>，显然其内置了 <code>Apache Guacamole</code></p>\n<blockquote>\n<p>相关文章：『<a href=\"https://laosu.ml/2020/10/16/%E9%83%A8%E7%BD%B2Guacamole%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E7%BD%91%E5%85%B3%E6%9C%8D%E5%8A%A1/\">部署Guacamole远程桌面网关服务</a>』</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109180843087.png\"></p>\n<h2 id=\"中文支持\"><a href=\"#中文支持\" class=\"headerlink\" title=\"中文支持\"></a>中文支持</h2><p>默认 <code>Alpine Xfce</code> 桌面环境是不支持中文的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109141930562.png\"></p>\n<p>先进入容器内部</p>\n<blockquote>\n<p>理论上桌面的终端（<code>Terminal</code>） 应该也是可以的，不过老苏没试，主要是命令比较多，不能直接复制、粘贴所以觉得比较麻烦</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入容器</span></span><br><span class=\"line\">docker <span class=\"built_in\">exec</span> -it --user root linuxserver-webtop1 /bin/bash</span><br></pre></td></tr></table></figure>\n\n<p>然后执行下面的命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装 wget</span></span><br><span class=\"line\">apk --no-cache add ca-certificates wget </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装公钥 </span></span><br><span class=\"line\">wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#下载字体</span></span><br><span class=\"line\">wget https://github.com/Fangyh09/font-ttf/raw/master/simsun.ttc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建文件夹 </span></span><br><span class=\"line\">mkdir /usr/share/fonts/win</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 移动字库</span></span><br><span class=\"line\">mv simsun.ttc /usr/share/fonts/win</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 扫描字体目录并生成字体信息的缓存</span></span><br><span class=\"line\">fc-cache -vf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看系统内所有中文字体及字体文件的路径</span></span><br><span class=\"line\">fc-list :lang=zh</span><br></pre></td></tr></table></figure>\n\n<p>刷新页面，原来的小方块已经可以正常显示了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109142250729.png\"></p>\n<h2 id=\"访问认证\"><a href=\"#访问认证\" class=\"headerlink\" title=\"访问认证\"></a>访问认证</h2><p>默认情况下，镜像启用 <code>abc</code> 用户，无需认证就可以访问。<code>abc</code> 用户默认密码也是 <code>abc</code>。如果要更改此密码并在访问界面时启用身份验证，需要通过在容器中执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker <span class=\"built_in\">exec</span> -it linuxserver-webtop1 passwd abc </span><br></pre></td></tr></table></figure>\n\n<p>或者在 <code>Alpine Xfce</code> 桌面的终端里执行 <code>passwd abc </code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109142256035.png\"></p>\n<p>然后通过 <code>http://群晖IP:3388/?login=true</code> 访问</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109142024333.png\"></p>\n<h2 id=\"安装应用\"><a href=\"#安装应用\" class=\"headerlink\" title=\"安装应用\"></a>安装应用</h2><p>屏幕的左侧是一个箭头，该箭头可以用来扩展某些内置的远程交互功能的菜单，也可以使用 <code>ctrl + alt + shift</code> 组合键打开和关闭此菜单：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109142022714.png\"></p>\n<p><code>ClipBoard</code> 可以用来实现内外部的复制和粘贴操作</p>\n<blockquote>\n<p>安装软件的意义在于，构建带 <code>GUI</code> 的镜像不一定非要用 <code>VNC</code> 了，应该算是多了一个选择吧</p>\n</blockquote>\n<p>如果你愿意，可以安装诸如 <code>Libre Office</code> 等应用程序。</p>\n<h3 id=\"Libre-Office\"><a href=\"#Libre-Office\" class=\"headerlink\" title=\"Libre Office\"></a>Libre Office</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 切换用户</span></span><br><span class=\"line\">sudo -i</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 更新最新本地镜像源</span></span><br><span class=\"line\">apk update</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装指定软件</span></span><br><span class=\"line\">apk add libreoffice</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109162120941.png\"></p>\n<p>可以在 <code>application</code> 中找到安装好的 <code>libreoffice</code> 套件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109162125714.png\"></p>\n<p>没有安装中文输入法，不能打中文，但是显示是没问题的</p>\n<blockquote>\n<p>输入法需要自己编译，可以参考： <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzM1ODAyODE5MS9hbnN3ZXIvMTE1Nzk0ODMzNQ==\">https://www.zhihu.com/question/358028191/answer/1157948335<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109162135476.png\"></p>\n<h3 id=\"VLC\"><a href=\"#VLC\" class=\"headerlink\" title=\"VLC\"></a>VLC</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装指定软件</span></span><br><span class=\"line\">apk add vlc-qt</span><br></pre></td></tr></table></figure>\n\n<p>可以在 <code>application</code> 中找到安装好的 <code>VLC media player</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109271632808.png\"></p>\n<p>将视频文件放在容器的 <code>/config</code> 目录中</p>\n<blockquote>\n<p>对应于前面主机映射的卷，老苏的是 <code>/volume2/docker/webtop</code> </p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109271626401.png\"></p>\n<p>有跳帧，但还能接受，声音估计要开启 <code>https</code> 才会有</p>\n<h3 id=\"Pyboy\"><a href=\"#Pyboy\" class=\"headerlink\" title=\"Pyboy\"></a>Pyboy</h3><p>老苏也尝试了 <code>Pyboy</code>，安装好了所需要的环境，运行之后没有报错，只是看不到图像</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109270911477.png\"></p>\n<p>感觉上像是性能不足（不确定是 <code>CPU</code> 还是 <code>GPU</code> ），慢慢研究</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>linuxserver/docker-webtop: Ubuntu and Alpine based Webtop images, Linux in a web browser supporting popular desktop environments.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xpbnV4c2VydmVyL2RvY2tlci13ZWJ0b3A=\">https://github.com/linuxserver/docker-webtop<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Meet Webtops A Linux Desktop Environment In Your Browser | LinuxServer.io<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGludXhzZXJ2ZXIuaW8vYmxvZy8yMDIxLTA1LTA1LW1lZXQtd2VidG9wcy1hLWxpbnV4LWRlc2t0b3AtZW52aXJvbm1lbnQtaW4teW91ci1icm93c2Vy\">https://www.linuxserver.io/blog/2021-05-05-meet-webtops-a-linux-desktop-environment-in-your-browser<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","Linux"]},{"title":"一个简易的网盘目录列表PanIndex","url":"/2021/09/24/%E4%B8%80%E4%B8%AA%E7%AE%80%E6%98%93%E7%9A%84%E7%BD%91%E7%9B%98%E7%9B%AE%E5%BD%95%E5%88%97%E8%A1%A8PanIndex/","content":"<p>网盘的目录文件列表应用非常多，老苏之前也写过一些，有的支持多种网盘</p>\n<blockquote>\n<ul>\n<li><a href=\"https://laosu.ml/2021/01/15/%E6%94%AF%E6%8C%81%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9A%84%E5%9C%A8%E7%BA%BF%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95ShareList\">支持天翼云的在线文件目录ShareList</a></li>\n<li><a href=\"https://laosu.ml/2020/12/25/%E5%9C%A8%E7%BA%BF%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95Z-file\">在线文件目录Z-file</a></li>\n</ul>\n</blockquote>\n<p>而有的只支持某一种网盘</p>\n<blockquote>\n<ul>\n<li><a href=\"https://laosu.ml/2021/08/18/%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98%E7%9A%84%E7%9B%AE%E5%BD%95%E6%96%87%E4%BB%B6%E5%88%97%E8%A1%A8%E7%A8%8B%E5%BA%8FAlist\">阿里云盘的目录文件列表程序Alist</a></li>\n</ul>\n</blockquote>\n<p><code>PanIndex</code> 属于前者，支持 <code>天翼云</code>、<code>teambition盘</code>、<code>阿里云盘</code>、<code>OneDrive</code>等</p>\n<p>官方提供了在线演示地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly90MS5uZXRyc3MuY2Yv\">https://t1.netrss.cf/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>pan-index</code> ，选择第一个 <code>iicm/pan-index</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210908144312.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>panindex</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/panindex</code></td>\n<td align=\"center\"><code>/app/data</code></td>\n<td align=\"center\">存放设置</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210908152209.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>直接用了默认的端口 <code>5238</code> ，点 <code>+</code> 号新增</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">5238</td>\n<td align=\"center\">5238</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210908152258.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>PORT</code></td>\n<td align=\"center\"><code>5238</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210908152548.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:5238</code>，就能看到登录界面</p>\n<blockquote>\n<p>默认账号：<code>admin</code>，密码：<code>PanIndex</code>，记得修改</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210908153018.png\"></p>\n<p>登陆成功后的主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210908153931.png\"></p>\n<p>先设置 <code>基础配置</code>，老苏就只设置网站标题，其他的没动</p>\n<p>关于 <code>基础配置</code> 中各参数的说明，请看官方文档：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9saWJzZ2guZ2l0aHViLmlvL1BhbkluZGV4LyMvY29uZmlnP2lkPSVFNSU5RiVCQSVFNyVBMSU4MCVFOSU4NSU4RCVFNyVCRCVBRQ==\">https://libsgh.github.io/PanIndex/#/config?id=基础配置<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"本地\"><a href=\"#本地\" class=\"headerlink\" title=\"本地\"></a>本地</h2><p>本地模式利用的是群晖的空间，因为采用容器安装的，而容器中唯一映射的卷只有 <code>/app/data</code>，所以老苏将根目录指向了容器的 <code>/app/data/local</code> 目录，这对应的是群晖的 <code>/volume2/docker/panindex/local</code> 目录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210908170134.png\"></p>\n<p>保存之后要启用一下（其实应该就是主页默认显示）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210908170218.png\"></p>\n<p>到  <code>基础配置</code> 中点一次保存，然后打开 <code>http://群晖IP:5238</code> 回到首页，因为什么都没上传，所以还是空空的</p>\n<blockquote>\n<p>进 <code>管理后台</code> 只要输入 <code>http://群晖IP:5238/?admin</code> 即可</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210908161640.png\"></p>\n<p>回到群晖的 <code>File Station</code>，在 <code>docker/panindex</code> 目录中新建子目录 <code>local</code>，并在其中上传一张图片 </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210908170928.png\"></p>\n<p>再次刷新 <code>PanIndex</code> 主页</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210908171013.png\"></p>\n<p>点开图片，默认能看到路径</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210908171104.png\"></p>\n<h2 id=\"阿里云盘\"><a href=\"#阿里云盘\" class=\"headerlink\" title=\"阿里云盘\"></a>阿里云盘</h2><p><code>Refresh Token</code> 的获取方法可以参考『 <a href=\"https://laosu.ml/2021/08/18/%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98%E7%9A%84%E7%9B%AE%E5%BD%95%E6%96%87%E4%BB%B6%E5%88%97%E8%A1%A8%E7%A8%8B%E5%BA%8FAlist\">阿里云盘的目录文件列表程序Alist</a> 』一文中方法</p>\n<ul>\n<li><code>刷新令牌</code> 填入上面获取的  <code>Refresh Token</code> </li>\n<li><code>根目录</code> 填入 <code>root</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210908173312.png\"></p>\n<p><code>添加</code> 完成后需要启用</p>\n<blockquote>\n<p>默认显示只能是一个，当启用了阿里云盘，之前的本地盘会自动关闭</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210908173411.png\"></p>\n<p>刷新首页就能看到阿里云盘的内容了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210908173459.png\"></p>\n<p>同样也打开一张图片能获取到详细信息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210908173625.png\"></p>\n<h2 id=\"OneDrive\"><a href=\"#OneDrive\" class=\"headerlink\" title=\"OneDrive\"></a>OneDrive</h2><p>方法和『  <a href=\"https://laosu.ml/2021/08/16/%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84web%E4%BA%91%E7%9B%98go-drive/\">一个简单的web云盘go-drive</a> 』差不多，但也有点小差异</p>\n<blockquote>\n<p>测试了 <code>personal</code> 类型的账号是成功的，但是 <code>bussiness</code> 类型的一直是空的，不确定是不是不支持 <code>bussiness</code> 类型的 <code>OneDrive</code>，期待大家的反馈。</p>\n</blockquote>\n<p>打开下面的网址注册应用：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3J0YWwuYXp1cmUuY29tLyNibGFkZS9NaWNyb3NvZnRfQUFEX1JlZ2lzdGVyZWRBcHBzL0FwcGxpY2F0aW9uc0xpc3RCbGFkZQ==\">https://portal.azure.com/#blade/Microsoft_AAD_RegisteredApps/ApplicationsListBlade<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210910174850.png\"></p>\n<p>注册 <code>新应用</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210910175256.png\"></p>\n<p>重定向 URI填：<code>https://mgaa.noki.workers.dev/</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109130928892.png\"></p>\n<p>获取 <code>Client ID</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109130932386.png\"></p>\n<p>并 <code>添加证书</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109130948555.png\"></p>\n<p>获取 <code>Client Secret</code></p>\n<blockquote>\n<p><code>Client Secret</code> 是前面的 <code>值</code>，而不是后面的 <code>机密 ID</code>，这个值要保存好，刷新后就不再显示了</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109130959489.png\"></p>\n<p>进入 <code>API</code> 权限，删除默认的权限</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109131157219.png\"></p>\n<p>重新添加</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109131118127.png\"></p>\n<p><code>Microsoft API</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109131120421.png\"></p>\n<p><code>Microsoft Graph</code> –&gt; <code>委托的权限</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109131120862.png\"></p>\n<p><code>OpenId 权限</code> –&gt; <code>offline_access</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109131122318.png\"></p>\n<p><code>Files</code> 权限 –&gt; <code>Files.Read</code>、<code>Files.Read.All</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109131125886.png\"></p>\n<p>添加权限之后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109131126999.png\"></p>\n<p>打开网页：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZ2FhLm5va2kud29ya2Vycy5kZXYv\">https://mgaa.noki.workers.dev/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>在第4步填入 <code>Client ID</code>，点 <code>AUTHORIZE</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109131002566.png\"></p>\n<p>需要授权</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109131200713.png\"></p>\n<p>经过一段时间的等待，会返回 <code>Code</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109131017273.png\"></p>\n<p>在第5步填入 <code>Client Secret</code>，<code>Client ID</code> 、<code>Code</code> 和  <code>Redirect Ur</code> 是自动填入的，完成之后点 <code>GET TOKEN</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109131006317.png\"></p>\n<p>返回了 <code>access_token</code> 和 <code>refresh_token</code> 值</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109131016757.png\"></p>\n<p>返回到 <code>panindex</code> 后台管理页面，选择 <code>Onedrive</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109131035279.png\"></p>\n<p><code>OneDrive</code> 缓存可能需要时间</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109131224625.png\"></p>\n<h2 id=\"天翼云盘\"><a href=\"#天翼云盘\" class=\"headerlink\" title=\"天翼云盘\"></a>天翼云盘</h2><p>有天翼盘的可以自己研究一下，官方文档 ：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9saWJzZ2guZ2l0aHViLmlvL1BhbkluZGV4LyMvY29uZmln\">https://libsgh.github.io/PanIndex/#/config<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"切换网盘\"><a href=\"#切换网盘\" class=\"headerlink\" title=\"切换网盘\"></a>切换网盘</h1><p>点左上角的 <code>home</code> 图标</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241354609.png\"></p>\n<p>可以在不同的网盘之间进行切换</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109241355655.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>libsgh/PanIndex: 网盘目录列表，目前支持天翼云、teambition盘、阿里云盘、OneDrive等<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xpYnNnaC9QYW5JbmRleA==\">https://github.com/libsgh/PanIndex<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>PanIndex<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9saWJzZ2guZ2l0aHViLmlvL1BhbkluZGV4LyMv\">https://libsgh.github.io/PanIndex/#/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>群晖套件PanIndex网盘目录列表 支持天翼云、阿里云盘等 - 我不是矿神<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbW5rcy5jb20vMjc1Ni5odG1s\">https://imnks.com/2756.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>PanIndexv一个简易的网盘目录列表（目前支持天翼云、teambition盘，本地目录） - 云尚分享-云尚分享<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueXVucy50b3AvamlzaHUvMTI3MS5odG1s\">https://www.yuns.top/jishu/1271.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","网盘"]},{"title":"开源的在线MIDI编辑器signal","url":"/2021/09/22/%E5%BC%80%E6%BA%90%E7%9A%84%E5%9C%A8%E7%BA%BFMIDI%E7%BC%96%E8%BE%91%E5%99%A8signal/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>中秋节宅在家折腾了几个项目，选题的范围涵盖了人工智能、网盘、游戏和音乐，但是几乎差点颗粒无收，成功率只有可怜的 <code>25%</code></p>\n<h2 id=\"Real-ESRGAN\"><a href=\"#Real-ESRGAN\" class=\"headerlink\" title=\"Real-ESRGAN\"></a>Real-ESRGAN</h2><p>这是一套算法，简单的说是就是把低分辨率的模糊图像，还原成更高的分辨率，作者 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3hpbm50YW8=\">Xintao Wang<i class=\"fa fa-external-link-alt\"></i></span>（<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3hpbm50YW8=\">https://github.com/xinntao<i class=\"fa fa-external-link-alt\"></i></span>） 是腾讯 ARC 实验室的研究员，老苏用来构建镜像的是 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0FLMzkx\">AK391<i class=\"fa fa-external-link-alt\"></i></span>（<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0FLMzkx\">https://github.com/AK391<i class=\"fa fa-external-link-alt\"></i></span>）集成了 <code>Gradio</code> 的版本，<code>demo</code> 在： <span class=\"exturl\" data-url=\"aHR0cHM6Ly9odWdnaW5nZmFjZS5jby9zcGFjZXMvYWtoYWxpcS9SZWFsLUVTUkdBTg==\">https://huggingface.co/spaces/akhaliq/Real-ESRGAN<i class=\"fa fa-external-link-alt\"></i></span> </p>\n<p>项目地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3hpbm50YW8vUmVhbC1FU1JHQU4=\">https://github.com/xinntao/Real-ESRGAN<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>镜像构建成功后存在几个问题：</p>\n<ul>\n<li>本地不能访问，增加了 <code>share=true</code> 之后，可以通过 <code>https://xxx.gradio.app</code> 这样的临时地址（ <code>72</code> 小时有效）访问</li>\n<li>每次运行会重复下载 <code>RealESRGAN_x4plus.pth</code>，但是保存的目录似乎不对</li>\n<li>上传图片后 <code>Output</code> 有报错（可能跟上一条有关）</li>\n</ul>\n<p>老苏觉得自己有点膨胀了，居然都敢开始玩人工智能了</p>\n<h2 id=\"B2A\"><a href=\"#B2A\" class=\"headerlink\" title=\"B2A\"></a>B2A</h2><p><code>B2A</code> 就是 <code>BaiduYun To AliYun</code> 的缩写，程序基于 <code>Python cli</code> 实现了从百度云盘迁移文件到阿里云盘，官方只提供了 <code>exe</code> 程序</p>\n<p>项目地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3lhcm9uenovQmFpZHVZdW5Ub0FsaVl1bg==\">https://github.com/yaronzz/BaiduYunToAliYun<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>镜像构建成功后，能够登录阿里云和百度云，并且也能列出文件目录，但是在迁移时显示文件下载错误</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Err: 下载文件块失败：Can&#39;t instantiate abstract class RangeRequestIO with abstract methods __enter__, __exit__, closed, fileno, flush, isatty, mode, name, readable, readline, readlines, truncate, write, writelines</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109201716005.png\"></p>\n<h2 id=\"PyBoy\"><a href=\"#PyBoy\" class=\"headerlink\" title=\"PyBoy\"></a>PyBoy</h2><p><code>PyBoy</code> 是一个基于 <code>Python</code> 的 <code>Game Boy</code> 模拟器，官方提供了很多版本的 <code>Dockerfile</code> 文件，但是老苏依次编译后没有一个能成功启动容器，即便改成了源代码编译也是一样，而且没有任何报错信息</p>\n<p>项目地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0JhZWthbGZlbi9QeUJveQ==\">https://github.com/Baekalfen/PyBoy<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>这几个项目本身没问题，有问题的是容器这种运行环境可能不适合项目，需要做代码或者其他的调整，但是老苏水平有限，只能暂时搁置。</p>\n<p>唯一成功的项目只有 <code>signal</code></p>\n<h2 id=\"signal\"><a href=\"#signal\" class=\"headerlink\" title=\"signal\"></a>signal</h2><p><strong>什么是 signal ？</strong></p>\n<blockquote>\n<p><code>signal</code> 是使用 <code>React</code> 构建的完全开源的在线 <code>MIDI</code> 编辑器和播放器。</p>\n</blockquote>\n<p>项目官网地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaWduYWwudmVyY2VsLmFwcC8=\">https://signal.vercel.app<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><strong>什么是 MIDI ？</strong></p>\n<blockquote>\n<p><code>MIDI</code> （ <code>Musical Instrument Digital Interface</code>）乐器数字接口 ，是编曲界最广泛的音乐标准格式，可称为“计算机能理解的乐谱”。它用音符的数字控制信号来记录音乐。几乎所有的现代音乐都是用 <code>MIDI</code> 加上音色库来制作合成的。<code>MIDI</code> 传输的不是声音信号，而是音符、控制参数等指令，它指示 <code>MIDI</code> 设备要做什么，怎么做， 如演奏哪个音符、多大音量等。它们被统一表示成 <code>MIDI</code> 消息（<code>MIDI Message</code>）。【改编自百度百科】</p>\n</blockquote>\n<h1 id=\"构建镜像\"><a href=\"#构建镜像\" class=\"headerlink\" title=\"构建镜像\"></a>构建镜像</h1><blockquote>\n<p>如果你不想自己构建，可以跳过，直接阅读下一章节</p>\n</blockquote>\n<p><code>Signal</code> 官方没有提供 <code>Dockerfile</code> 或者镜像，也没有找到第三方的，所以老苏准备自己构建</p>\n<p>要准备两个文件，一个是 <code>Dockerfile</code>，用于构建镜像</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> node:<span class=\"number\">16.5</span> as build-deps</span><br><span class=\"line\"><span class=\"keyword\">MAINTAINER</span> laosu&lt;wbsu2003@gmail.com&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /signal</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> package.json tsconfig.json ./</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> yarn</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> . ./</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> yarn build</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> nginx:<span class=\"number\">1.12</span>-alpine</span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> --from=build-deps /signal/dist /usr/share/nginx/html</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> rm /etc/nginx/conf.d/default.conf</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> default.conf /etc/nginx/conf.d</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"bash\"> [<span class=\"string\">&quot;nginx&quot;</span>, <span class=\"string\">&quot;-g&quot;</span>, <span class=\"string\">&quot;daemon off;&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n\n<p>另一个是 <code>default.conf</code> 文件，这是 <code>nginx</code> 的设置文件，可以让 <code>nginx</code> 上的静态网页在访问的时候没有 <code>html</code> 后缀</p>\n<p>老苏是从 <code>nginx:1.12-alpine</code> 中把默认的 <code>/etc/nginx/conf.d/default.conf</code> 拷贝出来，在 <code>location</code> 中新增下面的内容，达到了访问时没有 <code>html</code> 后缀的目的</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">if (!-e $request_filename)&#123;</span><br><span class=\"line\">   rewrite ^(.*)$ &#x2F;$1.html last;</span><br><span class=\"line\">   break;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109212153425.png\"></p>\n<p>完整的 <code>default.conf</code> 如下👇</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen       80;</span><br><span class=\"line\">    server_name  localhost;</span><br><span class=\"line\"></span><br><span class=\"line\">    #charset koi8-r;</span><br><span class=\"line\">    #access_log  &#x2F;var&#x2F;log&#x2F;nginx&#x2F;host.access.log  main;</span><br><span class=\"line\"></span><br><span class=\"line\">    location &#x2F; &#123;</span><br><span class=\"line\">        root   &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html;</span><br><span class=\"line\">        index  index.html index.htm;</span><br><span class=\"line\">        if (!-e $request_filename)&#123;</span><br><span class=\"line\">           rewrite ^(.*)$ &#x2F;$1.html last;</span><br><span class=\"line\">           break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    #error_page  404              &#x2F;404.html;</span><br><span class=\"line\"></span><br><span class=\"line\">    # redirect server error pages to the static page &#x2F;50x.html</span><br><span class=\"line\">    #</span><br><span class=\"line\">    error_page   500 502 503 504  &#x2F;50x.html;</span><br><span class=\"line\">    location &#x3D; &#x2F;50x.html &#123;</span><br><span class=\"line\">        root   &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    # proxy the PHP scripts to Apache listening on 127.0.0.1:80</span><br><span class=\"line\">    #                                           </span><br><span class=\"line\">    #location ~ \\.php$ &#123;                         </span><br><span class=\"line\">    #    proxy_pass   http:&#x2F;&#x2F;127.0.0.1;         </span><br><span class=\"line\">    #&#125;                                                         </span><br><span class=\"line\">                                               </span><br><span class=\"line\">    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br><span class=\"line\">    #                                                       </span><br><span class=\"line\">    #location ~ \\.php$ &#123;                         </span><br><span class=\"line\">    #    root           html;                   </span><br><span class=\"line\">    #    fastcgi_pass   127.0.0.1:9000;         </span><br><span class=\"line\">    #    fastcgi_index  index.php;               </span><br><span class=\"line\">    #    fastcgi_param  SCRIPT_FILENAME  &#x2F;scripts$fastcgi_script_name;  </span><br><span class=\"line\">    #    include        fastcgi_params;         </span><br><span class=\"line\">    #&#125;                                                                             </span><br><span class=\"line\">    # deny access to .htaccess files, if Apache&#39;s document root         </span><br><span class=\"line\">    # concurs with nginx&#39;s one                   </span><br><span class=\"line\">    #                                           </span><br><span class=\"line\">    #location ~ &#x2F;\\.ht &#123;                         </span><br><span class=\"line\">    #    deny  all;                             </span><br><span class=\"line\">    #&#125;                                           </span><br><span class=\"line\">&#125;   </span><br></pre></td></tr></table></figure>\n\n<p>构建镜像的基本流程如下👇</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载代码</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/ryohey/signal.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> signal</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 Dockerfile 和 default.conf 放到代码根目录</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 构建镜像</span></span><br><span class=\"line\">docker build -t wbsu2003/signal:v1 .</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 运行容器</span></span><br><span class=\"line\">docker run -d --name signal \\</span><br><span class=\"line\">--restart=always \\</span><br><span class=\"line\">-p 7800:80 \\</span><br><span class=\"line\">wbsu2003/signal:v1</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>wbsu2003</code> ，找到 <code>wbsu2003/signal</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109221010698.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p> 找了个不冲突的本地端口 <code>7800</code> </p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">7800</td>\n<td align=\"center\">80</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109221023533.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:7800</code>，就能看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109221026033.png\"></p>\n<p>点 <code>Launch</code> 进入到编辑界面，左侧是钢琴的琴键🎹，可以直接弹奏</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109221028761.png\"></p>\n<p>右侧随便点点就可以形成一首曲子播放了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109221046252.png\"></p>\n<p>可以保存为 <code>mid</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109221047061.png\"></p>\n<p>软件的界面很友好，如果你懂乐理，上手应该很容易的，就算和老苏一样完全不懂，也可以当 <code>MIDI</code> 播放器用</p>\n<h1 id=\"答疑\"><a href=\"#答疑\" class=\"headerlink\" title=\"答疑\"></a>答疑</h1><ol>\n<li><code>WebGL can&#39;t be initialized. may be browser doesn&#39;t support</code></li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109221059317.png\"></p>\n<p>【建议】：换个浏览器试试，一般来说现代浏览器都是没问题的，老苏试过  <code>Chrome</code> 、<code>Edge</code>、<code>Safari</code>，上图只出现在『 <a href=\"https://laosu.ml/2020/11/01/%E7%BB%99%E7%BE%A4%E6%99%96%E5%AE%89%E8%A3%85firefox%E6%B5%8F%E8%A7%88%E5%99%A8\">给群晖安装firefox浏览器</a>  』一文安装的 <code>firefox</code> 上，可能是版本老了，也可能是其他原因</p>\n<ol start=\"2\">\n<li><code>Web MIDI API is not Supported by your browser</code></li>\n</ol>\n<p>在 <code>Setting</code> 中，你会看到提示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109221051705.png\"></p>\n<p>并不是说你的浏览器真的不支持 <code>Web MIDI API</code> ，而是因为局域网中使用了 <code>http</code> 而不是 <code>https</code> 协议</p>\n<p>老苏用的 <code>frp</code>，需做反代设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109221056746.png\"></p>\n<p>通过 <code>https://域名</code> 再进入编辑界面时，会弹出权限申请，要点 <code>允许</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109221107081.png\"></p>\n<p>再进到 <code>Setting</code>，发现⚠️警告⚠️已经没有了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109221108140.png\"></p>\n<p>点网址前面的锁🔐标志可以修改权限</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109221355823.png\"></p>\n<p>地址栏也可以修改权限</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109221110261.png\"></p>\n<ol start=\"3\">\n<li> 导入 <code>mid</code> 文件报错</li>\n</ol>\n<p><code>Windows + Chrome</code> 出现这样的错误： <code>TypeError: Cannot read property &#39;value&#39; of null</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109221229901.png\"></p>\n<p><code>MacOS + Chrome</code> 则显示 <code>TypeError: Cannot read property of null (reading &#39;value&#39;)</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109221348413.png\"></p>\n<p>可能：</p>\n<ul>\n<li>存在 <code>MIDI</code> 格式兼容问题</li>\n<li>或者存在音色库不支持的乐器</li>\n</ul>\n<p>老苏尝试过几个 <code>mid</code>，这几个文件用 <code>Windows Media Player</code> 测试都是能正常播放的，也在下面两个网站上做过测试都是 <code>OK</code> 的</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVzZXF1ZW5jZXIubmV0Lw==\">https://onlinesequencer.net<i class=\"fa fa-external-link-alt\"></i></span>  </li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub25saW5lbWlkaS5jb20vRWRpdG9yLnBocA==\">https://www.onlinemidi.com/Editor.php<i class=\"fa fa-external-link-alt\"></i></span>  </li>\n</ul>\n<p>但在 <code>signal</code> 上有的可以导入，并能正常播放⏯，比如下面这首百听不厌的钢琴曲：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3dic3UyMDAzL2dpdG5vdGUtaW1hZ2VzQG1hc3Rlci9waWNnby8yMDIxLzA5LzIwMjEwOTIyMTEzMTYyNC5taWQ=\">石进-夜的钢琴曲(ONE).mid<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109221136791.png\"></p>\n<p>而像下面👇这两首导入时会出现上面👆的报错</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3dic3UyMDAzL2dpdG5vdGUtaW1hZ2VzQG1hc3Rlci9waWNnby8yMDIxLzA5LzIwMjEwOTIyMTIyNjMwNy5taWQ=\">After The ThrillIs Gone.mid<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3dic3UyMDAzL2dpdG5vdGUtaW1hZ2VzQG1hc3Rlci9waWNnby8yMDIxLzA5LzIwMjEwOTIyMTIyNzU2Mi5taWQ=\">稻香-周杰伦.mid<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>还有的导入时并不报错，但是导入后编辑器是空的</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3dic3UyMDAzL2dpdG5vdGUtaW1hZ2VzQG1hc3Rlci9waWNnby8yMDIxLzA5LzIwMjEwOTIyMTQzOTcxMS5taWQ=\">茉莉花.mid<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3dic3UyMDAzL2dpdG5vdGUtaW1hZ2VzQG1hc3Rlci9waWNnby8yMDIxLzA5LzIwMjEwOTIyMTQzNDgyNC5taWQ=\">在水一方.mid<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3dic3UyMDAzL2dpdG5vdGUtaW1hZ2VzQG1hc3Rlci9waWNnby8yMDIxLzA5LzIwMjEwOTIyMTQzNjcyNi5taWQ=\">只盼着深山出太阳.mid<i class=\"fa fa-external-link-alt\"></i></span></p>\n<blockquote>\n<p>以上 <code>mid</code> 文件均来自网上，仅用于做软件测试、验证，请不要用于商业用途。</p>\n</blockquote>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>ryohey/signal: A friendly music sequencer built with web technology<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3J5b2hleS9zaWduYWwv\">https://github.com/ryohey/signal/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>signal - Online MIDI Editor<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaWduYWwudmVyY2VsLmFwcC8=\">https://signal.vercel.app/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>让nginx上的静态网页在访问的时候没有html后缀-云社区-华为云<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYnMuaHVhd2VpY2xvdWQuY29tL2Jsb2dzL2RldGFpbC8xMjYyMTE=\">https://bbs.huaweicloud.com/blogs/detail/126211<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>11 Best Free Online MIDI Editors &amp; MIDI Players<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oaXBob3BtYWtlcnMuY29tL2ZyZWUtb25saW5lLW1pZGktZWRpdG9ycy1taWRpLXBsYXllcnM=\">https://hiphopmakers.com/free-online-midi-editors-midi-players<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","音乐","MIDI"]},{"title":"开源的SNMP网管系统LibreNMS","url":"/2021/09/20/%E5%BC%80%E6%BA%90%E7%9A%84SNMP%E7%BD%91%E7%AE%A1%E7%B3%BB%E7%BB%9FLibreNMS/","content":"<p><strong>什么是 SNMP ？</strong></p>\n<blockquote>\n<p>简单网络管理协议（ <code>SNMP</code>） 是专门设计用于在 <code>IP</code> 网络管理网络节点（服务器、工作站、路由器、交换机及 <code>HUBS</code> 等）的一种标准协议，它是一种应用层协议。<code>SNMP</code> 使网络管理员能够管理网络效能，发现并解决网络问题以及规划网络增长。通过 <code>SNMP</code> 接收随机消息（及事件报告）获知网络出现问题。【百度百科】</p>\n</blockquote>\n<p><strong>什么是 LibreNMS ？</strong></p>\n<blockquote>\n<p><code>LibreNMS</code> 是一套开源、功能齐全的网络监控系统，基于 <code>PHP</code> 、<code>MySQL</code>、<code>SNMP</code> 技术开发，提供丰富的功能和设备支持。</p>\n</blockquote>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>对于熟悉 <code>Docker Compose</code> 的人来说，<code>LibreNMS</code> 的安装并不复杂，官方提供了安装的 <code>demo</code>，在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xpYnJlbm1zL2RvY2tlci90cmVlL21hc3Rlci9leGFtcGxlcy9jb21wb3Nl\">https://github.com/librenms/docker/tree/master/examples/compose<i class=\"fa fa-external-link-alt\"></i></span> 能找到 <code>4</code> 个文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210906092526.png\"></p>\n<p>下载后根据自己的情况修改保存，主要也就是端口和卷，然后建两个空目录，分别是 <code>db</code> 和 <code>librenms</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210906095223.png\"></p>\n<p>再运行 <code>docker-compose up -d</code> 就搞定了，一共会启动 <code>8</code> 个容器</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210906094216.png\"></p>\n<p>使用了一阵，各方面都挺正常的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210906092037.png\"></p>\n<p>but，老苏觉得咱也不是专业的网管，能不能简化一下呢？比如就装一个 <code>librenms</code> 容器呢？</p>\n<p>结论是可行的，但是图表出不来</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109170929616.png\"></p>\n<p>下图是 <code>Docker Compose</code> 安装的同一个页面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210907155954.png\"></p>\n<p>其他功能可以正常使用，具体原因老苏也没弄明白。如果你只是想体验一下，而且没有强迫症的话，就跟着老苏来试试单容器的效果。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"数据库\"><a href=\"#数据库\" class=\"headerlink\" title=\"数据库\"></a>数据库</h2><p>通过 <code>phpMyAdmin</code> 在 <code>MariaDB 10</code> 中新建用户 <code>librenms</code>，创建同名的库 <code>librenms</code> 并授予所有权限。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210830120536.png\"></p>\n<p>如果使用 <code>MariaDB 5</code>，首次登陆会显示下图</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210830120045.png\"></p>\n<p>群晖上的 <code>MariaDB 10</code> 版本是 <code>10.3.7</code>，已经可以满足要求，不然就需要另外通过容器来安装了 <code>MariaDB</code> 了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210830120404.png\"></p>\n<h2 id=\"安装镜像\"><a href=\"#安装镜像\" class=\"headerlink\" title=\"安装镜像\"></a>安装镜像</h2><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>librenms</code> ，选择第一个 <code>librenms/librenms</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210830094748.png\"></p>\n<h3 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h3><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>librenms</code>，再建一个子目录 <code>data</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/librenms/data</code></td>\n<td align=\"center\"><code>/data</code></td>\n<td align=\"center\">存放设置等</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p><code>/data</code>：包含配置、插件、<code>rrd</code> 数据库、日志、额外的监控插件、额外的 <code>syslog-ng</code> 配置文件</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109170913025.png\"></p>\n<h3 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h3><p><code>http</code> 端口改为了 <code>8234</code> ，其他采用了默认的自动</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">8234</td>\n<td align=\"center\">8000</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210830112250.png\"></p>\n<h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><p>完整的环境变量参数在：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xpYnJlbm1zL2RvY2tlci9ibG9iL21hc3Rlci9kb2MvZG9ja2VyL2Vudmlyb25tZW50LXZhcmlhYmxlcy5tZA==\">https://github.com/librenms/docker/blob/master/doc/docker/environment-variables.md<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>老苏只是按自己的需要改了几个跟数据库相关的部分：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>TZ</code></td>\n<td align=\"center\">时区</td>\n</tr>\n<tr>\n<td align=\"center\"><code>DB_HOST</code></td>\n<td align=\"center\">数据库主机名或者 IP</td>\n</tr>\n<tr>\n<td align=\"center\"><code>DB_PORT</code></td>\n<td align=\"center\">数据库端口</td>\n</tr>\n<tr>\n<td align=\"center\"><code>DB_NAME</code></td>\n<td align=\"center\">数据库名称</td>\n</tr>\n<tr>\n<td align=\"center\"><code>DB_USER</code></td>\n<td align=\"center\">数据库用户</td>\n</tr>\n<tr>\n<td align=\"center\"><code>DB_PASSWORD</code></td>\n<td align=\"center\">数据库密码</td>\n</tr>\n<tr>\n<td align=\"center\"><code>DB_TIMEOUT</code></td>\n<td align=\"center\">数据库超时</td>\n</tr>\n</tbody></table>\n<p><code>TZ</code> 默认值为 <code>UTC</code>，改为 <code>Asia/Shanghai</code>、<code>PUID</code> 和 <code>PGID</code> 用了默认的 <code>1000</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109170918696.png\"></p>\n<p>点 <code>+</code> 号新增跟数据库相关的内容</p>\n<blockquote>\n<p><code>3306</code> 是 <code>MariaDB 5</code> 的默认端口，<code>3307</code> 才是 <code>MariaDB 10</code> 的默认端口</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210830165121.png\" alt=\"数据库\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:8234</code>，就能看到登陆界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210830123603.png\"></p>\n<blockquote>\n<p>默认的账号：librenms，密码：librenms</p>\n</blockquote>\n<p>登陆成功后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210830123845.png\"></p>\n<h2 id=\"设置中文\"><a href=\"#设置中文\" class=\"headerlink\" title=\"设置中文\"></a>设置中文</h2><p>点右上角用户 <code>librenms</code> –&gt; <code>My Settings</code> –&gt; <code>Language</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210830143536.png\"></p>\n<p>下拉选择 <code>简体中文</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210830143904.png\"></p>\n<p>就像界面上提示的 <code>多国语系功能尚未完备</code>，很多地方依然还是显示的英文</p>\n<h2 id=\"新增设备\"><a href=\"#新增设备\" class=\"headerlink\" title=\"新增设备\"></a>新增设备</h2><p>菜单栏中 <code>设备</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210830161243.png\"></p>\n<p>点 <code>新增设备</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210830161419.png\"></p>\n<p>这种方式只能一台设备一台设备添加</p>\n<h3 id=\"路由器\"><a href=\"#路由器\" class=\"headerlink\" title=\"路由器\"></a>路由器</h3><p>首先要在路由器中启用 <code>SNMP</code> 协议</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210830163103.png\"></p>\n<p>填入相关信息，应用</p>\n<ul>\n<li>第一个红框中是一些说明信息</li>\n<li>第二个框是 <code>Community String</code>，你可以认为这是一个密码，建议像密码一样设的复杂一点，老苏这里只是为了演示。</li>\n<li>大部分网络供应商提供的设备默认密码为 “<code>public</code>” 。（这就是所谓的“默认公共社区字符串”。）</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210903090040.png\"></p>\n<p>回到 <code>LibreNMS</code> 的 <code>新增设备</code> 页面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210903092150.png\"></p>\n<p>刚添加完成，还是一个 <code>Generic Device</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210903113511.png\"></p>\n<p>需要在 <code>Capture</code> 中 <code>Discovery</code>一下（<code>Docker Compose</code> 安装的似乎不用，估计是有 <code>dispatcher</code> 的缘故）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210903114017.png\"></p>\n<p>完成之后就能正确显示了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210903114103.png\"></p>\n<h3 id=\"群晖\"><a href=\"#群晖\" class=\"headerlink\" title=\"群晖\"></a>群晖</h3><p><code>控制面板</code> –&gt; <code>终端机和SNMP</code> –&gt; <code>SNMP</code>，默认也没有启用 <code>SNMP</code> 服务</p>\n<ul>\n<li>这里的 <code>社群</code> 就是 <code>Community String</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210830165715.png\"></p>\n<p>回到 <code>LibreNMS</code> 的 <code>新增设备</code> 页面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210830165806.png\"></p>\n<p>两个设备添加完成之后，可以在设备列表中看到</p>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210903092939.png\"></p>\n<h2 id=\"自动发现\"><a href=\"#自动发现\" class=\"headerlink\" title=\"自动发现\"></a>自动发现</h2><p>如果你是一个网管，管理着很多的设备，这种逐个添加设备的方式显然不太适合，因此就会需要用到自动发现功能</p>\n<p>但是在你使用之前，老苏想告诉你，这个功能特别耗资源，而且也很费时，如果你是在内存比较小的机器、或者猫盘这类设备上安装的 <code>LibreNMS</code>，不建议使用，一旦开启就会像下面👇这样，老苏的机器中途还自动关机了一次</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210831160009.png\"></p>\n<p>操作需要进入容器内部，进入容器可以通过 <code>SSH</code> 客户端，也可以通过群晖 <code>Docker</code> 的终端机</p>\n<h3 id=\"SSH-客户端\"><a href=\"#SSH-客户端\" class=\"headerlink\" title=\"SSH 客户端\"></a>SSH 客户端</h3><p><code>SSH</code> 客户端直接执行下面👇的命令即可进入到容器内部</p>\n<blockquote>\n<p><code>librenms-librenms1</code> 为容器的名称</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 用 root 身份进入</span></span><br><span class=\"line\">docker <span class=\"built_in\">exec</span> --user root -it librenms-librenms1 /bin/bash</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"终端机\"><a href=\"#终端机\" class=\"headerlink\" title=\"终端机\"></a>终端机</h3><p>容器上右键进入「详情」</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210903095716.png\"></p>\n<p>「终端机」 =&gt; 「新增」 =&gt; 「通过命令启动」=&gt; 「请输入一个命令」=&gt; 「bash」</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210903095759.png\"></p>\n<p>进入容器之后，操作命令都是一样的了，默认在 <code>/opt/librenms</code> 下</p>\n<p>你可以抓取自定义的网段</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 自定义网段扫描</span></span><br><span class=\"line\">./snmp-scan.py 192.168.0.0/16</span><br></pre></td></tr></table></figure>\n\n<p>也可以将需要扫描的网段添加在 <code>config.php</code> 中</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$config</span>[<span class=\"string\">&#x27;nets&#x27;</span>][] = <span class=\"string\">&quot;192.168.0.0/16&quot;</span>;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210903100529.png\"></p>\n<p>然后执行扫描</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 根据配置文件扫描</span></span><br><span class=\"line\">./snmp-scan.py</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"诊断\"><a href=\"#诊断\" class=\"headerlink\" title=\"诊断\"></a>诊断</h1><p>如果运行中有什么问题，可以用下面的方法进行诊断</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Do not run validate.php as root</span></span><br><span class=\"line\">docker <span class=\"built_in\">exec</span> --user librenms -it librenms-librenms1 /bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 诊断</span></span><br><span class=\"line\">./validate.php</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/202109032059658.png\"></p>\n<p>似乎不管怎么装都会有这个数据库警告</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/202109032100411.png\"></p>\n<p>处不处理好像也没什么不同，只是看着舒服一点</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/202109032101524.png\"></p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p><code>LibreNMS</code> 可以通过 <code>SNMP</code> 协议，将设备的处理器、操作系统、内存、网卡、存储等信息收集起来，通过图表的方式进行展示和查询，利用报警可以让我们及时了解设备的状况，而通过历史数据又可以很容易分析出故障的原因，更多的功能等待你去发掘。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>librenms/librenms: Community-based GPL-licensed network monitoring system<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xpYnJlbm1zL2xpYnJlbm1z\">https://github.com/librenms/librenms<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>LibreNMS<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGlicmVubXMub3JnLw==\">https://www.librenms.org/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>librenms/docker: LibreNMS Docker image based on Alpine Linux and Nginx<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xpYnJlbm1zL2RvY2tlcg==\">https://github.com/librenms/docker<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>LibreNMS Docs<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmxpYnJlbm1zLm9yZy8=\">https://docs.librenms.org/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Synology SNMP Network Monitoring with LibreNMS Docker - Jason Loong<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9qYXNvbmxvb25nLmNvbS8yMDE3L3N5bm9sb2d5LXNubXAtbmV0d29yay1tb25pdG9yaW5nLXdpdGgtbGlicmVubXMtZG9ja2VyLw==\">https://jasonloong.com/2017/synology-snmp-network-monitoring-with-librenms-docker/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","网络"]},{"title":"乐谱管理软件SheetAble","url":"/2021/09/17/%E4%B9%90%E8%B0%B1%E7%AE%A1%E7%90%86%E8%BD%AF%E4%BB%B6SheetAble/","content":"<p>周三 <a href=\"https://laosu.ml/\">https://laosu.ml</a> 国内访问中断了3个小时，但没有看到 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudmVyY2VsLXN0YXR1cy5jb20v\">https://www.vercel-status.com/<i class=\"fa fa-external-link-alt\"></i></span> 有任何说明，如果再次出现不能访问，可以试试下面的备站：</p>\n<ul>\n<li>国内最快的：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93YnN1MjAwMy5naXRlZS5pby8=\">https://wbsu2003.gitee.io<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>备站（Github）：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYW9zdS5nYS8=\">https://laosu.ga<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>备站（Netlify）：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYW9zdS50ay8=\">https://laosu.tk<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>备站（Cloudflare）：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93YnN1MjAwMy5wYWdlcy5kZXYv\">https://wbsu2003.pages.dev<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<p>如果你会科学上网，当我啥也没说~</p>\n<hr>\n<p><strong>什么是 SheetAble ？</strong></p>\n<blockquote>\n<p><code>SheetAble</code> 是一款易于使用的乐谱管理软件，适用于所有音乐爱好者。作者的目标是想让 <code>SheetAble</code> 在所有设备上可用，可以通过 <code>Tablet/iPad</code> 在 <code>pdf</code> 上做笔记，并将它们存储在您的家庭服务器上。</p>\n</blockquote>\n<p>来一张官方的动图</p>\n<p><img src=\"http://sheetable.net/img/SheetAbleShowcase.gif\"></p>\n<p><strong>什么是 OOPS ？</strong></p>\n<blockquote>\n<p>主界面的 <code>OOPS</code> 应该是指 <code>Open Opus API</code>，这是免费、开放的古典音乐元数据，通过 <code>API</code> 能获取作曲家和作品的完整而准确的信息。可以移步 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9vcGVub3B1cy5vcmcv\">https://openopus.org<i class=\"fa fa-external-link-alt\"></i></span> 做进一步了解。</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>sheetable</code> ，选择第一个 <code>vallezw/sheetable</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109170958076.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>sheetable</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/sheetable</code></td>\n<td align=\"center\"><code>/app/config</code></td>\n<td align=\"center\">存放数据</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109171014879.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>本地端口不冲突就行</p>\n<blockquote>\n<p>这里要注意，默认的容器端口 <code>8000</code> 是不对的，应该是 <code>8080</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109171032404.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">8585</td>\n<td align=\"center\">8080</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109171317962.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><p><code>SheetAble</code> 支持 <code>SQLite</code>、<code>MySQL</code>, <code>PostgreSQL</code> 三种数据库，如果你用 <code>sqlite</code> 可以不用设置环境变量，如果你想用 <code>MySQL</code>，首先要在 <code>MariaDB 10</code> 中建库</p>\n<blockquote>\n<p>文档中未找到对 <code>MariaDB</code> 版本的要求，但是老苏尝试用 <code>MariaDB 5</code>，容器日志中会报错导致无法启动</p>\n</blockquote>\n<p>通过 <code>phpMyAdmin</code> 在 <code>MariaDB 10</code> 中新建用户 <code>sheetable</code>，创建同名的库 <code>sheetable</code> 并授予所有权限。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109171002291.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>DB_DRIVER</code></td>\n<td align=\"center\">mysql, postgres, sqlite</td>\n</tr>\n<tr>\n<td align=\"center\"><code>DB_HOST</code></td>\n<td align=\"center\">数据库主机地址</td>\n</tr>\n<tr>\n<td align=\"center\"><code>DB_PORT</code></td>\n<td align=\"center\">数据库端口</td>\n</tr>\n<tr>\n<td align=\"center\"><code>DB_USER</code></td>\n<td align=\"center\">数据库用户</td>\n</tr>\n<tr>\n<td align=\"center\"><code>DB_PASSWORD</code></td>\n<td align=\"center\">数据库密码</td>\n</tr>\n<tr>\n<td align=\"center\"><code>DB_NAME</code></td>\n<td align=\"center\">数据库表名</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109171026787.png\" alt=\"3307\"></p>\n<p>如果设置有错误，默认会启用 <code>SQLite</code>，是否设置正确看看 <code>MariaDB</code> 中有没有建表就知道了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109171041664.png\"></p>\n<p>更多的环境变量，请参考官方文档：<br><span class=\"exturl\" data-url=\"aHR0cDovL3NoZWV0YWJsZS5uZXQvZG9jcy9jb25maWd1cmF0aW9u\">http://sheetable.net/docs/configuration<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:8585</code>，就能看到登录界面了</p>\n<blockquote>\n<ul>\n<li>  <strong>Email:</strong> <code>admin@admin.com</code></li>\n<li>  <strong>Password:</strong> <code>sheetable</code></li>\n</ul>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109171046251.png\"></p>\n<p>登录成功后的主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109171047239.png\"></p>\n<p>展开左侧菜单</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109171050690.png\"></p>\n<p>老苏在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tdXNvcGVuLm9yZy96aC1oYW50L3NoZWV0bXVzaWMv\">https://musopen.org/zh-hant/sheetmusic/<i class=\"fa fa-external-link-alt\"></i></span> 下载了莫扎特的 <code>Piano Sonata no. 11, K. 331</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109171127042.png\"></p>\n<p>将 <code>pdf</code> 文件直接拖拽到红框中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109171102795.png\"></p>\n<p>开始上传</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109171104884.png\"></p>\n<p>上传完成</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109171104919.png\"></p>\n<p>点 <code>UPLOAD</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109171112919.png\"></p>\n<p>上传的文件可以在 <code>File Station</code> 中找到</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109171131407.png\"></p>\n<p>选中一篇 <code>Sheets</code>  可以直接查看</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/202109171121022.png\"></p>\n<p>右下角的 <code>Media Player Coming Soon</code> 是否意味着很快就可以直接播放🎼乐谱🎼呢？不知道这个功能是否也会包含在基础版里？</p>\n<p>毕竟这个功能原来是需要专门的软件来完成的，像 <code>PDFtoMusic Pro</code>、<code>Neuratron PhotoScore</code> 、<code>SeeScore</code> 等，当然也有专门的网站能实现，比如：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tdXNlc2NvcmUub3JnL3poLWhhbnMvJUU3JTk0JUE4JUU2JTg4JUI3JUU2JTg5JThCJUU1JTg2JThDLyVFNSU5QyVBOCVFNyVCQSVCRiVFNSU4NSVCMSVFNCVCQSVBQiVFNCVCOSU5MCVFOCVCMCVCMQ==\">https://musescore.org/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>SheetAble/SheetAble: Self-hosted music sheet organizing software<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1NoZWV0QWJsZS9TaGVldEFibGU=\">https://github.com/SheetAble/SheetAble<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Self-hosted music sheet organizer | SheetAble<br>地址：<span class=\"exturl\" data-url=\"aHR0cDovL3NoZWV0YWJsZS5uZXQv\">http://sheetable.net/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>免費樂譜 - 免費下載超過100,000個pdf文件Musopen<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tdXNvcGVuLm9yZy96aC1oYW50L3NoZWV0bXVzaWMv\">https://musopen.org/zh-hant/sheetmusic/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Sheet Music Library (PDF) , Sheet Music Library (PDF)<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaGVldG11c2ljbGlicmFyeS53ZWJzaXRlLw==\">https://sheetmusiclibrary.website/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","音乐","OOPS"]},{"title":"网络测速服务器OpenSpeedTest","url":"/2021/09/15/%E7%BD%91%E7%BB%9C%E6%B5%8B%E9%80%9F%E6%9C%8D%E5%8A%A1%E5%99%A8OpenSpeedTest/","content":"<p><strong>什么是 OpenSpeedTest ？</strong></p>\n<blockquote>\n<p><code>OpenSpeedTest</code> 是一个跨平台的互联网速度测试应用程序。因此，您可以在不同操作系统中的各种网络浏览器中测试您的互联网速度，而无需安装任何其他应用程序或插件（无需 <code>Flash</code> 或 <code>Java</code>）。这意味着您可以通过 <code>iPhone</code>、<code>iPad</code>、<code>Android</code>、<code>Windows</code>、<code>Linux</code> 等任何设备（任何台式机、笔记本电脑、手机和平板电脑）运行宽带速度测试。</p>\n</blockquote>\n<p>官方提供了测速网站：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9vcGVuc3BlZWR0ZXN0LmNvbS8=\">https://openspeedtest.com<i class=\"fa fa-external-link-alt\"></i></span> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210530134434.png\"></p>\n<p>点中间的播放键开始测试</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210530134233.png\"></p>\n<p>稍等一下就会有测试结果</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210530134318.png\"></p>\n<p>该网站也提供了可以自托管的速度测试应用程序，它是一种快速简便的工具，用于测试服务器的速度。接下来老苏准备把 <code>OpenSpeedTest</code> 部署到我们的 NAS 服务器上。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>openspeedtest</code> ，选择第一个 <code>openspeedtest/latest </code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210530125951.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>之前安装 <code>LibreSpeed</code> 用了 <code>8180</code>，所以这次我们用 <code>8280</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">8280</td>\n<td align=\"center\">8080</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210530132112.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:8280</code>，就能看到主界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210530132332.png\"></p>\n<p>点 <code>Start</code> 开始测试</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210530132509.png\"></p>\n<p>很奇怪，换了路由之后下行一直跑不满，<code>LibreSpeed</code> 也是一样的</p>\n<blockquote>\n<p>关于 <code>LibreSpeed</code> 可以看老苏之前写的：『 <a href=\"https://laosu.ml/2020/10/27/%E8%87%AA%E5%BB%BASpeedtest%E7%BD%91%E7%BB%9C%E6%B5%8B%E9%80%9F%E6%9C%8D%E5%8A%A1%E5%99%A8\">自建Speedtest网络测速服务器</a>』</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210530133550.png\"></p>\n<p>不过两者的数据是非常接近的，所以测试结果应该是没问题的，接下来你可以把 <code>OpenSpeedTest</code> 映射到公网。</p>\n<p>至于安装 <code>LibreSpeed</code> 还是 <code>OpenSpeedTest</code> 就看个人喜欢了。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>OpenSpeedTest™️ - Pure HTML5 Internet Speed Test.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9vcGVuc3BlZWR0ZXN0LmNvbS8=\">https://openspeedtest.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>HTML5 网速测试应用程序源代码<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9nby5vcGVuc3BlZWR0ZXN0LmNvbS9Tb3VyY2U=\">https://go.openspeedtest.com/Source<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","测速","网络"]},{"title":"网络性能监控工具Smokeping","url":"/2021/09/13/%E7%BD%91%E7%BB%9C%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7Smokeping/","content":"<p><strong>什么是 Smokeping ？</strong></p>\n<blockquote>\n<p><code>SmokePing</code> 是一款监控网络状态和稳定性的开源软件（它是 <code>RRDTool</code> 的作者开发的），通过它可以监控如延时，丢包率，是否 <code>BGP</code> 多线等网络状况；<code>smokeping</code> 会向目标设备和系统发送各种类型的测试数据包，测量、记录，并通过图形化地展示网络的时延情况，进而能够清楚的判断出网络的即时通信情况；</p>\n</blockquote>\n<p>可以用于监控群晖主机的网络状态，也可以用于监控多台 <code>vps</code> 的运行状态，支持通过邮件报警。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>smokeping</code> ，选择第一个 <code>linuxserver/smokeping</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210729092746.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>smokeping</code>，并在 <code>smokeping</code> 中建两个子目录，分别命名为 <code>config</code> 和 <code>data</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210729092931.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>/docker/smokeping/data</code></td>\n<td align=\"center\"><code>/data</code></td>\n<td align=\"center\">数据库和应用数据目录</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/docker/smokeping/config</code></td>\n<td align=\"center\"><code>/config</code></td>\n<td align=\"center\">配置文件目录</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210729093333.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不能冲突</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n<th align=\"center\">类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">8580</td>\n<td align=\"center\">80</td>\n<td align=\"center\">TCP</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210729093402.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">TZ</td>\n<td align=\"center\">设置为 <code>Asia/Shanghai</code></td>\n</tr>\n<tr>\n<td align=\"center\">PGID</td>\n<td align=\"center\"><code>&lt;gid&gt;</code> 设为 <code>1000</code></td>\n</tr>\n<tr>\n<td align=\"center\">PUID</td>\n<td align=\"center\"><code>&lt;uid&gt;</code> 设为 <code>1000</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210729093606.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:8580</code>，就能看到主界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210729093916.png\"></p>\n<h2 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h2><p>配置文件在 <code>/docker/smokeping/config</code> 目录中，知道了用途可以方便后面的修改</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件</th>\n<th align=\"center\">用途</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>Alerts</code></td>\n<td align=\"center\">报警设置</td>\n</tr>\n<tr>\n<td align=\"center\"><code>Database</code></td>\n<td align=\"center\">采样频率设置</td>\n</tr>\n<tr>\n<td align=\"center\"><code>General</code></td>\n<td align=\"center\">常规设置</td>\n</tr>\n<tr>\n<td align=\"center\"><code>httpd.conf</code></td>\n<td align=\"center\">Apache Web 服务器设置</td>\n</tr>\n<tr>\n<td align=\"center\"><code>pathnames</code></td>\n<td align=\"center\">路径设置</td>\n</tr>\n<tr>\n<td align=\"center\"><code>Presentation</code></td>\n<td align=\"center\">模板文件</td>\n</tr>\n<tr>\n<td align=\"center\"><code>Probes</code></td>\n<td align=\"center\">探针设置</td>\n</tr>\n<tr>\n<td align=\"center\"><code>Slaves</code></td>\n<td align=\"center\">主从模式时，从机设置</td>\n</tr>\n<tr>\n<td align=\"center\"><code>ssmtp.conf</code></td>\n<td align=\"center\">邮件服务器设置</td>\n</tr>\n<tr>\n<td align=\"center\"><code>Targets</code></td>\n<td align=\"center\">监控目标设置</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210729175324.png\"></p>\n<h2 id=\"Database\"><a href=\"#Database\" class=\"headerlink\" title=\"Database\"></a>Database</h2><p>打开 <code>smokeping/config/Database</code> 文件，全部采用了默认值，也就是 300 秒（5 分钟）ping 20 次</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210812092225.png\"></p>\n<h2 id=\"Probes\"><a href=\"#Probes\" class=\"headerlink\" title=\"Probes\"></a>Probes</h2><p>编辑 <code>smokeping/config/Probes</code> 文件，将 dns 中的 <code>google.com</code> 改为了 <code>baidu.com</code>，其他都是默认的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210812105415.png\"></p>\n<h2 id=\"邮件报警\"><a href=\"#邮件报警\" class=\"headerlink\" title=\"邮件报警\"></a>邮件报警</h2><p>第一步、编辑 <code>ssmtp.conf</code></p>\n<blockquote>\n<p>配置生效需要重启容器</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210819092450.png\"></p>\n<p>除了密码都在下面👇</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">Debug</span>=<span class=\"literal\">YES</span></span><br><span class=\"line\"><span class=\"comment\"># Config file for sSMTP sendmail</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># The person who gets all mail for userids &lt; 1000</span></span><br><span class=\"line\"><span class=\"comment\"># Make this empty to disable rewriting.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">root</span>=wbsu2003@<span class=\"number\">88</span>.com</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># The place where the mail goes. The actual machine name is required no</span></span><br><span class=\"line\"><span class=\"comment\"># MX records are consulted. Commonly mailhosts are named mail.domain.com</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">mailhub</span>=smtp.<span class=\"number\">88</span>.com:<span class=\"number\">465</span></span><br><span class=\"line\"><span class=\"attr\">AuthUser</span>=wbsu2003@<span class=\"number\">88</span>.com</span><br><span class=\"line\"><span class=\"attr\">AuthPass</span>=<span class=\"number\">88</span>邮箱设置的专用密码</span><br><span class=\"line\"><span class=\"attr\">UseSTARTTLS</span>=<span class=\"literal\">NO</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">UseTLS</span>=<span class=\"literal\">YES</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Where will the mail seem to come from?</span></span><br><span class=\"line\"><span class=\"attr\">rewriteDomain</span>=<span class=\"number\">88</span>.com</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># The full hostname</span></span><br><span class=\"line\"><span class=\"attr\">hostname</span>=linuxserver-smokeping1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Are users allowed to set their own From: address?</span></span><br><span class=\"line\"><span class=\"comment\"># YES - Allow the user to specify their own From: address</span></span><br><span class=\"line\"><span class=\"comment\"># NO - Use the system generated From: address</span></span><br><span class=\"line\"><span class=\"attr\">FromLineOverride</span>=<span class=\"literal\">YES</span></span><br></pre></td></tr></table></figure>\n\n<p>老苏用的是 <code>88</code> 邮箱，相关参数可以在 <code>设置</code> 中找到</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210819092918.png\"></p>\n<p>设置完成后，可以通过 『终端机』 进入容器内进行 <code>Email</code> 发送调试，命令行下输入 <code>ssmtp -v wbsu2003@hotmail.com</code> ，再依次输入：</p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">To: wbsu2003@hotmail.com</span><br><span class=\"line\">From: wbsu2003@88.com</span><br><span class=\"line\">Subject: alert &lt;回车2次&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">test123 &lt;ctrl+D&gt;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210819094313.png\"></p>\n<p>去收件箱查看邮件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210819092303.png\"></p>\n<p>第二步、编辑 <code>Alerts</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210819094514.png\"></p>\n<p>修改红框部分</p>\n<ul>\n<li><code>to</code>：接收报警的邮箱，也可以是自定义脚本；</li>\n<li><code>from</code>：发送报警信息的邮箱，也就是上一步在 <code>ssmtp.conf</code> 中设置的邮箱；</li>\n</ul>\n<p>下面是报警触发的条件</p>\n<blockquote>\n<p>设的比较低是想更容易触发报警，实际应用延时可以设在 <code>200ms</code> </p>\n</blockquote>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\">*** Alerts ***</span><br><span class=\"line\"><span class=\"attr\">to</span> = wbsu2003@hotmail.com</span><br><span class=\"line\"><span class=\"attr\">from</span> = wbsu2003@<span class=\"number\">88</span>.com</span><br><span class=\"line\"> </span><br><span class=\"line\">+rttdetect</span><br><span class=\"line\"><span class=\"attr\">type</span> = rtt</span><br><span class=\"line\"><span class=\"attr\">pattern</span> = &lt;<span class=\"number\">20</span>,&lt;<span class=\"number\">20</span>,&lt;<span class=\"number\">20</span>,&lt;<span class=\"number\">20</span>,&lt;<span class=\"number\">20</span>,&gt;<span class=\"number\">20</span>,&gt;<span class=\"number\">20</span>,&gt;<span class=\"number\">20</span></span><br><span class=\"line\"><span class=\"attr\">comment</span> = 连续<span class=\"number\">3</span>次延时<span class=\"number\">20</span>以上</span><br><span class=\"line\"></span><br><span class=\"line\">+lossdetect</span><br><span class=\"line\"><span class=\"attr\">type</span> = loss</span><br><span class=\"line\"><span class=\"attr\">pattern</span> = ==<span class=\"number\">0</span>%,==<span class=\"number\">0</span>%,==<span class=\"number\">0</span>%,==<span class=\"number\">0</span>%,==<span class=\"number\">0</span>%,&gt;<span class=\"number\">0</span>%,&gt;<span class=\"number\">0</span>%,&gt;<span class=\"number\">0</span>%</span><br><span class=\"line\"><span class=\"attr\">comment</span> = 突然有丢包</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210812105620.png\"></p>\n<h2 id=\"Targets\"><a href=\"#Targets\" class=\"headerlink\" title=\"Targets\"></a>Targets</h2><p><code>Internet Sites</code> 基本上是我们正常无法访问的站点，所以需要进行修改，不然会没有数据</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210729103108.png\"></p>\n<p>编辑 <code>smokeping/config/Targets</code> 文件</p>\n<blockquote>\n<p>编辑之前请先做好备份</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210729103945.png\"></p>\n<p>格式一目了然，采用了是分层结构，用+表示，例如第一层“+”，第二层“++”一次类推可以增加也可以修改</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210729104143.png\"></p>\n<p>下面👇这段来自 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93emZvdS5jb20vc21va2VwaW5nLw==\">https://wzfou.com/smokeping/<i class=\"fa fa-external-link-alt\"></i></span>，但根据我们前面设置的 <code>Probes</code> 和 <code>Alerts</code>进行了微调</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\">+ Other</span><br><span class=\"line\"><span class=\"attr\">menu</span> = 三大网络监控</span><br><span class=\"line\"><span class=\"attr\">title</span> = 监控统计</span><br><span class=\"line\"><span class=\"attr\">probe</span> = FPing</span><br><span class=\"line\"></span><br><span class=\"line\">++ dianxin</span><br><span class=\"line\"><span class=\"attr\">menu</span> = 电信网络监控</span><br><span class=\"line\"><span class=\"attr\">title</span> = 电信网络监控列表</span><br><span class=\"line\"><span class=\"attr\">host</span> = /Other/dianxin/dianxin-bj /Other/dianxin/dianxin-hlj /Other/dianxin/dianxin-tj /Other/dianxin/dianxin-sc /Other/dianxin/dianxin-sh /Other/dianxin/dianxin-gz</span><br><span class=\"line\"></span><br><span class=\"line\">+++ dianxin-bj</span><br><span class=\"line\"><span class=\"attr\">menu</span> = 北京电信</span><br><span class=\"line\"><span class=\"attr\">title</span> = 北京电信</span><br><span class=\"line\"><span class=\"attr\">host</span> = <span class=\"number\">202.96</span>.<span class=\"number\">199.133</span></span><br><span class=\"line\"><span class=\"attr\">alerts</span> = rttdetect,lossdetect</span><br><span class=\"line\"> </span><br><span class=\"line\">+++ dianxin-hlj</span><br><span class=\"line\"><span class=\"attr\">menu</span> = 黑龙江电信</span><br><span class=\"line\"><span class=\"attr\">title</span> = 黑龙江电信</span><br><span class=\"line\"><span class=\"attr\">host</span> = <span class=\"number\">219.147</span>.<span class=\"number\">198.242</span></span><br><span class=\"line\"><span class=\"attr\">alerts</span> = rttdetect,lossdetect</span><br><span class=\"line\"> </span><br><span class=\"line\">+++ dianxin-tj</span><br><span class=\"line\"><span class=\"attr\">menu</span> = 天津电信</span><br><span class=\"line\"><span class=\"attr\">title</span> = 天津电信</span><br><span class=\"line\"><span class=\"attr\">host</span> = <span class=\"number\">219.150</span>.<span class=\"number\">32.132</span></span><br><span class=\"line\"><span class=\"attr\">alerts</span> = rttdetect,lossdetect</span><br><span class=\"line\"> </span><br><span class=\"line\">+++ dianxin-sc</span><br><span class=\"line\"><span class=\"attr\">menu</span> = 四川电信</span><br><span class=\"line\"><span class=\"attr\">title</span> = 四川电信</span><br><span class=\"line\"><span class=\"attr\">host</span> = <span class=\"number\">61.139</span>.<span class=\"number\">2.69</span></span><br><span class=\"line\"><span class=\"attr\">alerts</span> = rttdetect,lossdetect</span><br><span class=\"line\"> </span><br><span class=\"line\">+++ dianxin-sh</span><br><span class=\"line\"><span class=\"attr\">menu</span> = 上海电信</span><br><span class=\"line\"><span class=\"attr\">title</span> = 上海电信</span><br><span class=\"line\"><span class=\"attr\">host</span> = <span class=\"number\">116.228</span>.<span class=\"number\">111.118</span></span><br><span class=\"line\"><span class=\"attr\">alerts</span> = rttdetect,lossdetect</span><br><span class=\"line\"> </span><br><span class=\"line\">+++ dianxin-gz</span><br><span class=\"line\"><span class=\"attr\">menu</span> = 广东电信</span><br><span class=\"line\"><span class=\"attr\">title</span> = 广东电信</span><br><span class=\"line\"><span class=\"attr\">host</span> = <span class=\"number\">113.111</span>.<span class=\"number\">211.22</span></span><br><span class=\"line\"><span class=\"attr\">alerts</span> = rttdetect,lossdetect</span><br><span class=\"line\"> </span><br><span class=\"line\">++ liantong</span><br><span class=\"line\"><span class=\"attr\">menu</span> = 联通网络监控</span><br><span class=\"line\"><span class=\"attr\">title</span> = 联通网络监控列表</span><br><span class=\"line\"><span class=\"attr\">host</span> = /Other/liantong/liantong-bj /Other/liantong/liantong-hlj /Other/liantong/liantong-tj /Other/liantong/liantong-sc /Other/liantong/liantong-sh /Other/liantong/liantong-gz</span><br><span class=\"line\"> </span><br><span class=\"line\">+++ liantong-bj</span><br><span class=\"line\"><span class=\"attr\">menu</span> = 北京联通</span><br><span class=\"line\"><span class=\"attr\">title</span> = 北京联通</span><br><span class=\"line\"><span class=\"attr\">host</span> = <span class=\"number\">61.135</span>.<span class=\"number\">169.121</span></span><br><span class=\"line\"><span class=\"attr\">alerts</span> = rttdetect,lossdetect</span><br><span class=\"line\"> </span><br><span class=\"line\">+++ liantong-hlj</span><br><span class=\"line\"><span class=\"attr\">menu</span> = 黑龙江联通</span><br><span class=\"line\"><span class=\"attr\">title</span> = 黑龙江联通</span><br><span class=\"line\"><span class=\"attr\">host</span> = <span class=\"number\">202.97</span>.<span class=\"number\">224.69</span></span><br><span class=\"line\"><span class=\"attr\">alerts</span> = rttdetect,lossdetect</span><br><span class=\"line\"> </span><br><span class=\"line\">+++ liantong-tj</span><br><span class=\"line\"><span class=\"attr\">menu</span> = 天津联通</span><br><span class=\"line\"><span class=\"attr\">title</span> = 天津联通</span><br><span class=\"line\"><span class=\"attr\">host</span> = <span class=\"number\">202.99</span>.<span class=\"number\">96.68</span></span><br><span class=\"line\"><span class=\"attr\">alerts</span> = rttdetect,lossdetect</span><br><span class=\"line\"> </span><br><span class=\"line\">+++ liantong-sc</span><br><span class=\"line\"><span class=\"attr\">menu</span> = 四川联通</span><br><span class=\"line\"><span class=\"attr\">title</span> = 四川联通</span><br><span class=\"line\"><span class=\"attr\">host</span> = <span class=\"number\">119.6</span>.<span class=\"number\">6.6</span></span><br><span class=\"line\"><span class=\"attr\">alerts</span> = rttdetect,lossdetect</span><br><span class=\"line\"> </span><br><span class=\"line\">+++ liantong-sh</span><br><span class=\"line\"><span class=\"attr\">menu</span> = 上海联通</span><br><span class=\"line\"><span class=\"attr\">title</span> = 上海联通</span><br><span class=\"line\"><span class=\"attr\">host</span> = <span class=\"number\">210.22</span>.<span class=\"number\">84.3</span></span><br><span class=\"line\"><span class=\"attr\">alerts</span> = rttdetect,lossdetect</span><br><span class=\"line\"> </span><br><span class=\"line\">+++ liantong-gz</span><br><span class=\"line\"><span class=\"attr\">menu</span> = 广东联通</span><br><span class=\"line\"><span class=\"attr\">title</span> = 广东联通</span><br><span class=\"line\"><span class=\"attr\">host</span> = <span class=\"number\">221.5</span>.<span class=\"number\">88.88</span></span><br><span class=\"line\"><span class=\"attr\">alerts</span> = rttdetect,lossdetect</span><br><span class=\"line\"> </span><br><span class=\"line\">++ yidong</span><br><span class=\"line\"><span class=\"attr\">menu</span> = 移动网络监控</span><br><span class=\"line\"><span class=\"attr\">title</span> = 移动网络监控列表</span><br><span class=\"line\"><span class=\"attr\">host</span> = /Other/yidong/yidong-bj /Other/yidong/yidong-hlj /Other/yidong/yidong-tj /Other/yidong/yidong-sc /Other/yidong/yidong-sh /Other/yidong/yidong-gz </span><br><span class=\"line\"> </span><br><span class=\"line\">+++ yidong-bj</span><br><span class=\"line\"><span class=\"attr\">menu</span> = 北京移动</span><br><span class=\"line\"><span class=\"attr\">title</span> = 北京移动</span><br><span class=\"line\"><span class=\"attr\">host</span> = <span class=\"number\">221.130</span>.<span class=\"number\">33.52</span></span><br><span class=\"line\"><span class=\"attr\">alerts</span> = rttdetect,lossdetect</span><br><span class=\"line\"> </span><br><span class=\"line\">+++ yidong-hlj</span><br><span class=\"line\"><span class=\"attr\">menu</span> = 黑龙江移动</span><br><span class=\"line\"><span class=\"attr\">title</span> = 黑龙江移动</span><br><span class=\"line\"><span class=\"attr\">host</span> = <span class=\"number\">211.137</span>.<span class=\"number\">241.35</span></span><br><span class=\"line\"><span class=\"attr\">alerts</span> = rttdetect,lossdetect</span><br><span class=\"line\"> </span><br><span class=\"line\">+++ yidong-tj</span><br><span class=\"line\"><span class=\"attr\">menu</span> = 天津移动</span><br><span class=\"line\"><span class=\"attr\">title</span> = 天津移动</span><br><span class=\"line\"><span class=\"attr\">host</span> = <span class=\"number\">211.137</span>.<span class=\"number\">160.5</span></span><br><span class=\"line\"><span class=\"attr\">alerts</span> = rttdetect,lossdetect</span><br><span class=\"line\"> </span><br><span class=\"line\">+++ yidong-sc</span><br><span class=\"line\"><span class=\"attr\">menu</span> = 四川移动</span><br><span class=\"line\"><span class=\"attr\">title</span> = 四川移动</span><br><span class=\"line\"><span class=\"attr\">host</span> = <span class=\"number\">218.201</span>.<span class=\"number\">4.3</span></span><br><span class=\"line\"><span class=\"attr\">alerts</span> = rttdetect,lossdetect</span><br><span class=\"line\"> </span><br><span class=\"line\">+++ yidong-sh</span><br><span class=\"line\"><span class=\"attr\">menu</span> = 上海移动</span><br><span class=\"line\"><span class=\"attr\">title</span> = 上海移动</span><br><span class=\"line\"><span class=\"attr\">host</span> = <span class=\"number\">117.131</span>.<span class=\"number\">19.23</span></span><br><span class=\"line\"><span class=\"attr\">alerts</span> = rttdetect,lossdetect</span><br><span class=\"line\"> </span><br><span class=\"line\">+++ yidong-gz</span><br><span class=\"line\"><span class=\"attr\">menu</span> = 广东移动</span><br><span class=\"line\"><span class=\"attr\">title</span> = 广东移动</span><br><span class=\"line\"><span class=\"attr\">host</span> = <span class=\"number\">211.136</span>.<span class=\"number\">192.6</span></span><br><span class=\"line\"><span class=\"attr\">alerts</span> = rttdetect,lossdetect</span><br></pre></td></tr></table></figure>\n\n<p>因为有中文，要使用 <code>utf-8</code> 格式</p>\n<blockquote>\n<p>配置生效需要重启容器</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210812110811.png\"></p>\n<p>如果是用默认的 <code>GB18030</code> 编码保存，中文会乱码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210729105235.png\"></p>\n<p>而正常显示应该是这样的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210729110617.png\"></p>\n<p>随着时间的推移，逐步会产生数据</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210729141433.png\"></p>\n<p>当触发了设定的延迟（ <code>rttdetect</code> ）或者丢包（ <code>lossdetect</code> ）条件时，会收到邮件提醒</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210820084030.png\"></p>\n<p>而如果邮件设置有问题，会在 <code>config</code> 目录中生成 <code>dead.letter</code> 文件，用于记录触发过的报警</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210818164308.png\"></p>\n<p>下载之后打开文件内容是下面👇这样的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210818164507.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>oetiker/SmokePing: The Active Monitoring System<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL29ldGlrZXIvU21va2VQaW5n\">https://github.com/oetiker/SmokePing<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>SmokePing - About SmokePing<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9vc3Mub2V0aWtlci5jaC9zbW9rZXBpbmcv\">https://oss.oetiker.ch/smokeping/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>How to install SmokePing – sleeplessbeastie’s notes<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zbGVlcGxlc3NiZWFzdGllLmV1LzIwMjAvMDYvMTkvaG93LXRvLWluc3RhbGwtc21va2VwaW5nLw==\">https://sleeplessbeastie.eu/2020/06/19/how-to-install-smokeping/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Smokeping安装与配置-免费开源网络性能监控工具可视化主/从部署 - 挖站否-挖掘建站的乐趣<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93emZvdS5jb20vc21va2VwaW5nLw==\">https://wzfou.com/smokeping/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>ssmtp-命令行发送邮件 | Hom<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9nb2hvbS53aW4vMjAxNi8xMC8wNy9zc210cC8=\">https://gohom.win/2016/10/07/ssmtp/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","网络"]},{"title":"网站在线监控工具Uptime Kuma","url":"/2021/09/10/%E7%BD%91%E7%AB%99%E5%9C%A8%E7%BA%BF%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7Uptime%20Kuma/","content":"<p>如果你有多个服务或者多台服务器（包括群晖或者vps）在运行，就需要一个在线监控工具来协助管理，提高可用性，防止因为服务器、程序错误等原因导致网站无法访问。如果只是自己用问题不大，但是如果是对外提供服务的，那问题就大了。</p>\n<p>能提供在线监控的网站挺多的，包括 <code>Uptime robot</code>、<code>阿里云监控</code> 等</p>\n<p><strong>什么是 Uptime Kuma ？</strong></p>\n<blockquote>\n<p><code>Uptime Kuma</code> 是一个类似于 <code>Uptime Robot</code> 的自托管监控工具。</p>\n</blockquote>\n<p>目前 <code>Uptime Kuma</code> 项目代码更新比较活跃，有兴趣可以关注下作者的开发计划：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xvdWlzbGFtL3VwdGltZS1rdW1hL3Byb2plY3RzLzE=\">https://github.com/louislam/uptime-kuma/projects/1<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>uptime-kuma</code> ，选择第一个 <code>louislam/uptime-kuma</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/202108311914905.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>uptime-kuma</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/uptime-kuma</code></td>\n<td align=\"center\"><code>/app/data</code></td>\n<td align=\"center\">存放设置</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/202108311932803.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不冲突就行，老苏随便选了个 <code>3211</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>3211</code></td>\n<td align=\"center\"><code>3001</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/202108311932380.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:3211</code>，就能看到创建用户界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/202108311933517.png\"></p>\n<p>创建完成后会自动跳转到登录界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/202108311935800.png\"></p>\n<p>登录成功后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/202108311936632.png\"></p>\n<h1 id=\"设置报警\"><a href=\"#设置报警\" class=\"headerlink\" title=\"设置报警\"></a>设置报警</h1><p>点右上角的 <code>Settings</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/202108312017192.png\"></p>\n<p>点 <code>Setup Notification</code>，报警方式很多，还有我们之前介绍过的 <code>Apprise</code></p>\n<blockquote>\n<p>相关文档：『 <a href=\"https://laosu.ml/2021/09/06/%E5%87%A0%E4%B9%8E%E6%AF%8F%E4%B8%AA%E5%B9%B3%E5%8F%B0%E9%83%BD%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%E7%9A%84%E6%8E%A8%E9%80%81%E9%80%9A%E7%9F%A5apprise/\">几乎每个平台都可以使用的推送通知apprise</a> 』</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/202108312018143.png\"></p>\n<p>虽然方式众多，但老苏独爱 <code>Email</code>，还是以 <code>88</code> 邮箱为例</p>\n<blockquote>\n<p><code>Password</code> 不是邮箱密码，而是用于第三方邮件客户端登录的专用密码</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/202108312025487.png\"></p>\n<p>填完之后点 <code>Test</code>，右下角有发送标识</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/202108312028405.png\"></p>\n<p>检查邮箱，如果收到这样的邮件，表示设置 <code>OK</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/202108312029767.png\"></p>\n<p>保存邮件设置就可以了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/202108312031152.png\"></p>\n<h1 id=\"创建监控\"><a href=\"#创建监控\" class=\"headerlink\" title=\"创建监控\"></a>创建监控</h1><p>点 <code>Add New Monitor</code> 新增一个监控，监控类型支持 <code>HTTP(s)</code>、<code>TCP Port</code> 、<code>Ping</code> 、<code>HTTP(s)-Keyword</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/202108311940426.png\"></p>\n<p>假设我们来监控老苏群晖中的 <code>HomeAssistant</code>，因为采用了 <code>frp</code> 反代，当在外网访问不到 <code>HomeAssistant</code> 时，我们可能一时并不清楚是 <code>frp</code> 出了问题还是 <code>HomeAssistant</code> 服务本身出了问题，但是借助 <code>Uptime Kuma</code> ，我们可以进行分段监控</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">网络</th>\n<th align=\"center\">地址</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>局域网</code></td>\n<td align=\"center\"><code>http://192.168.0.199:7123</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>公网</code></td>\n<td align=\"center\"><code>https://ha.abc.xyz</code></td>\n</tr>\n</tbody></table>\n<p>设置很简单，别忘了打开报警 <code>Notifications</code>，否则收不到邮件的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/202108312046559.png\"></p>\n<p>保存监控设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/202108312048454.png\"></p>\n<p>再设一个公网的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/202108312050370.png\"></p>\n<p>当检测不到时会收到下线的邮件通知</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210903142302.png\"></p>\n<p>而上线的时候也一样有通知</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210903142337.png\"></p>\n<p>通过监控的结果我们可以很容易判断出问题出在哪一段</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">局域网</th>\n<th align=\"center\">公网</th>\n<th align=\"center\">结论</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">×</td>\n<td align=\"center\"></td>\n<td align=\"center\">HA 服务挂了</td>\n</tr>\n<tr>\n<td align=\"center\">√</td>\n<td align=\"center\">×</td>\n<td align=\"center\">外网故障或者 frp 反代挂了</td>\n</tr>\n<tr>\n<td align=\"center\">√</td>\n<td align=\"center\">√</td>\n<td align=\"center\">一切正常</td>\n</tr>\n</tbody></table>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>louislam/uptime-kuma: A fancy self-hosted monitoring tool<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xvdWlzbGFtL3VwdGltZS1rdW1h\">https://github.com/louislam/uptime-kuma<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>【好玩的Docker项目】5分钟搭建一个网站监控工具！ - Break The Wall<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9icmVha3RoZXdhMTEuY29tL2FyY2hpdmVzL2RvY2tlci11cHRpbWUta3VtYS5odG1s\">https://breakthewa11.com/archives/docker-uptime-kuma.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","网站监控"]},{"title":"类Notion的项目管理工具Focalboard","url":"/2021/09/08/%E7%B1%BBNotion%E7%9A%84%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7Focalboard/","content":"<p><strong>什么是 Focalboard ？</strong></p>\n<blockquote>\n<p><code>Focalboard</code> 号称是 <code>Trello</code>、<code>Asana</code> 和 <code>Notion</code> 的开源替代品。它是一个项目管理工具，使用看板视图帮助个人和团队对任务进行组织、跟踪和管理。有两个版本：<code>Focalboard</code> 个人桌面版和 <code>Focalboard</code> 个人服务器版</p>\n</blockquote>\n<p>之前我们介绍过他们家的开源协作平台 <code>Mattermost</code> ：『<a href=\"https://laosu.ml/2020/08/28/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E8%81%8A%E5%A4%A9%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88Mattermost%E7%AF%87%EF%BC%89\">搭建自己的聊天服务器（Mattermost篇）</a>』</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>focalboard</code> ，选择第一个 <code>mattermost/focalboard</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210906123100.png\"></p>\n<p><code>focalboard</code> 支持 <code>SQLite</code> 、<code>MySQL</code>、<code>PostgreSQL</code> 三种数据库，如果你是生产环境，官方建议用 <code>PostgreSQL</code> ，采用 <code>Docker Compose</code> 方式进行安装，在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21hdHRlcm1vc3QvZm9jYWxib2FyZC90cmVlL21haW4vZG9ja2Vy\">https://github.com/mattermost/focalboard/tree/main/docker<i class=\"fa fa-external-link-alt\"></i></span> 能找到官方提供的 <code>docker-compose.yml</code> 文件。</p>\n<p>而 <code>MySQL</code> 可以作为 <code>Postgres</code> 的替代方案，具体方法：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZm9jYWxib2FyZC5jb20vZG93bmxvYWQvcGVyc29uYWwtZWRpdGlvbi91YnVudHUvI2luc3RhbGwtbXlzcWw=\">https://www.focalboard.com/download/personal-edition/ubuntu/#install-mysql<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>个人体验用 <code>SQLite</code> 足够了</p>\n<blockquote>\n<p>习惯命令行方式安装的请按下面👇的命令操作，目录请根据自己的修改</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建目录</span></span><br><span class=\"line\">mkdir /volume2/docker/focalboard</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入 focalboard 目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /volume2/docker/focalboard</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建空数据库</span></span><br><span class=\"line\">sqlite3 focalboard.db <span class=\"string\">&quot;create table t(f int); drop table t;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 或者建个空的文件</span></span><br><span class=\"line\">touch focalboard.db</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 一定要修改数据库文件的权限</span></span><br><span class=\"line\">chmod 777 focalboard.db</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 目录权限不改也会报错</span></span><br><span class=\"line\">chmod 777 /volume2/docker/focalboard</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 运行容器</span></span><br><span class=\"line\">docker run -it \\</span><br><span class=\"line\">--name mattermost-focalboard1 \\</span><br><span class=\"line\">-v /volume2/docker/focalboard:/data \\</span><br><span class=\"line\">-p 9090:8000 \\</span><br><span class=\"line\">mattermost/focalboard</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>focalboard</code></p>\n<p>在电脑上新建一个空的 <code>txt</code> 文件，将其重命名为 <code>focalboard.db</code> ，并上传到 <code>focalboard</code>目录中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210907173752.png\"></p>\n<p><code>目录</code> 上右键 –&gt; <code>属性</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210907173944.png\"></p>\n<p>属性界面，进入 <code>权限</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210907174056.png\"></p>\n<p><code>权限</code> –&gt; <code>新增</code> –&gt; 用户中选取 <code>Everyone</code> –&gt; 勾选 <code>读取</code> 和 <code>写入</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210907174339.png\"></p>\n<p>勾选 <code>应用到这个文件夹、子文件夹及文件</code>，然后确定</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210907174624.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/focalboard</code></td>\n<td align=\"center\"><code>/data</code></td>\n<td align=\"center\">存放数据库</td>\n</tr>\n<tr>\n<td align=\"center\"><code>docker/focalboard/config.json</code></td>\n<td align=\"center\"><code>/opt/focalboard/config.json</code></td>\n<td align=\"center\">设置文件</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>采用 <code>SQLite</code> 做数据库可以不需要配置 <code>config.json</code>、而用<code>MySQL</code>、<code>PostgreSQL</code> 需要通过 <code>config.json</code> 的 <code>dbtype</code> 、<code>dbconfig</code> 来指定数据库类型和连接参数</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210907174835.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不冲突就行</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">9090</td>\n<td align=\"center\">8000</td>\n</tr>\n<tr>\n<td align=\"center\">自动</td>\n<td align=\"center\">9092</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210906124921.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:9090</code>，就能看到主界面了，第一次需要点红框部分进行注册</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210906143346.png\"></p>\n<p>需要输入邮箱、账号和密码</p>\n<blockquote>\n<p>密码不能少于8个字符</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210906143555.png\"></p>\n<p>登录之后，主界面现在还是空空如也</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210906144131.png\"></p>\n<h2 id=\"设置中文\"><a href=\"#设置中文\" class=\"headerlink\" title=\"设置中文\"></a>设置中文</h2><p>先设置中文，左下角 <code>Settings</code> –&gt; <code>Set Language</code> –&gt; <code>中文（简体）</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210906144223.png\"></p>\n<h2 id=\"新增版面\"><a href=\"#新增版面\" class=\"headerlink\" title=\"新增版面\"></a>新增版面</h2><p><code>新增版面</code> 时，可以选择不同的模板，如果模板不够用，也可以自建模板</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210906173309.png\"></p>\n<p>先试试 <code>Poroject Tasks</code> 模板</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210907103409.png\"></p>\n<p>直接生成了一个看板，新建一个任务</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210907104420.png\"></p>\n<p>任务中可以 <code>新增属性</code>，类型支持文本框、邮件、链接等等</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210907105351.png\"></p>\n<p><code>新增内容</code> 支持文本、图片等</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210907105438.png\"></p>\n<p>老苏随便加了几个，卡片支持拖拽操作</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210907105228.png\"></p>\n<p>支持多种排序和查看方式</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210907105903.png\"></p>\n<p>还能导出和分享</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210907110207.png\"></p>\n<p><code>Personal Goals</code> 和 <code>Personal Tasks</code> 都差不多。</p>\n<h2 id=\"新模板\"><a href=\"#新模板\" class=\"headerlink\" title=\"新模板\"></a>新模板</h2><p>老苏建了个 <code>ToDo</code> 的模板</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210907141338.png\"></p>\n<p>在 <code>新增版面</code> 中可以直接使用</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210907141710.png\"></p>\n<p>和模板是一模一样的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210907141601.png\"></p>\n<h2 id=\"插件\"><a href=\"#插件\" class=\"headerlink\" title=\"插件\"></a>插件</h2><p> 从代码库看 <code>Focalboard</code> 支持插件，可以从 <code>Trello</code>、<code>Asana</code> 、<code>Notion</code>、<code>todoist</code> 导入数据，但是看说明文档有点云里雾里的，最后在 <code>Release</code> 中找到了一行小字 </p>\n<blockquote>\n<p><code>NOTE: The v0.9 Focalboard plugin requires Mattermost v6.0.</code></p>\n</blockquote>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/202109072225816.png\"></p>\n<p> 查了一下，<code>Mattermost v6.0</code> 原计划在 9 月份发布，但最新消息推迟到了 10 月，留给有兴趣折腾的小伙伴吧</p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p> 如果你用过 <code>Notion</code> 或者 <code>我来</code>，感觉 <code>Focalboard</code> 上手还是很容易的。</p>\n<p>  除了个人服务器版外，还有个人桌面版，可以在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZm9jYWxib2FyZC5jb20vZG93bmxvYWQvcGVyc29uYWwtZWRpdGlvbi9kZXNrdG9wLw==\">https://www.focalboard.com/download/personal-edition/desktop/<i class=\"fa fa-external-link-alt\"></i></span> 找到各平台的安装包。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>mattermost/focalboard: Focalboard is an open source, self-hosted alternative to Trello, Notion, and Asana.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21hdHRlcm1vc3QvZm9jYWxib2FyZA==\">https://github.com/mattermost/focalboard<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Focalboard: Open source alternative to Trello, Asana, and Notion<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZm9jYWxib2FyZC5jb20v\">https://www.focalboard.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Upcoming Changes with Mattermost 6.0 - Announcements - Mattermost, Inc.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb3J1bS5tYXR0ZXJtb3N0Lm9yZy90L3VwY29taW5nLWNoYW5nZXMtd2l0aC1tYXR0ZXJtb3N0LTYtMC8xMTg3OA==\">https://forum.mattermost.org/t/upcoming-changes-with-mattermost-6-0/11878<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","看板","项目管理软件"]},{"title":"几乎每个平台都可以使用的推送通知apprise","url":"/2021/09/06/%E5%87%A0%E4%B9%8E%E6%AF%8F%E4%B8%AA%E5%B9%B3%E5%8F%B0%E9%83%BD%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%E7%9A%84%E6%8E%A8%E9%80%81%E9%80%9A%E7%9F%A5apprise/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>之所以拿 <code>Apprise</code> 出来单独写一篇，不仅是上一篇 『<a href=\"https://laosu.ml/2021/09/03/%E7%94%A8Changedetection%E7%9B%91%E6%8E%A7%E7%BD%91%E9%A1%B5%E7%9A%84%E5%8F%98%E5%8C%96/\">用Changedetection监控网页的变化</a>』 中 <code>Changedetection</code> 用了 <code>Apprise</code> 来做通知服务，还有我们尚未介绍的网站在线监控工具 <code>Uptime Kuma</code> 同样支持 <code>Apprise</code>，所以单独拎出来简单介绍一下。</p>\n<p><strong>什么是 Apprise API ？</strong></p>\n<blockquote>\n<p><code>Apprise</code> 允许您向我们今天可用的几乎所有最流行的通知服务发送通知，例如：<code>Telegram</code>、<code>Discord</code>、 <code>Slack</code>、<code>Amazon SNS</code>、<code>Gotify</code> 等。此 <code>API</code> 提供了一个简单的网关，可以通过 <code>HTTP</code> 接口直接访问它。</p>\n</blockquote>\n<p><code>apprise</code> 可以让研发人员不再需要研究每一个通知服务，只需要包含这一个库，就可以立即访问我们今天几乎所有可用的通知服务。</p>\n<blockquote>\n<p>这个项目是老外的，所以微信啥的就别指望了，期待有国内的研发人员参与到项目中去</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>apprise</code> ，选择第一个 <code>caronc/apprise</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210808190108.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中创建一个新文件夹，将其命名为 <code>apprise</code>，再在 <code>apprise</code> 中建一个子目录 <code>config</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/apprise/config</code></td>\n<td align=\"center\"><code>/config </code></td>\n<td align=\"center\">存放设置</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210808191426.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不能冲突</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">8181</td>\n<td align=\"center\">8000</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210808191522.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:8181</code>，就能看到主界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210808191933.png\"></p>\n<h2 id=\"邮件通知\"><a href=\"#邮件通知\" class=\"headerlink\" title=\"邮件通知\"></a>邮件通知</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210810145139.png\"></p>\n<p>点 <code>Configration Manager</code> –&gt; <code>CONFIGRATION</code>，在文本框中填入下面的内容</p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 88 邮箱</span><br><span class=\"line\">mailto://wbsu2003:密码@88.com?smtp=smtp.88.com&amp;to=wbsu2003@gmail.com</span><br></pre></td></tr></table></figure>\n\n<p>参数在『 <a href=\"https://laosu.ml/2021/09/03/%E7%94%A8Changedetection%E7%9B%91%E6%8E%A7%E7%BD%91%E9%A1%B5%E7%9A%84%E5%8F%98%E5%8C%96/\">用Changedetection监控网页的变化</a> 』一文中已做了详细描述</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210808211022.png\"></p>\n<p>如果保存失败</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210808195948.png\"></p>\n<p>需要执行下面的命令重新设置 <code>config</code> 目录的权限</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">chmod 777 /volume2/docker/apprise/config</span><br></pre></td></tr></table></figure>\n\n<p>修改权限之后，保存就应该没问题了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210808200724.png\"></p>\n<p>点 <code>NOTIFICATIONS</code>，输入标题和内容，<code>tags</code> 可以不填</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210808211322.png\"></p>\n<p>点 <code>SEND NOTIFICATION</code> 按钮</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210808211450.png\"></p>\n<p>一会儿就能收到邮件了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210808212422.png\"></p>\n<h2 id=\"Home-Assistant\"><a href=\"#Home-Assistant\" class=\"headerlink\" title=\"Home Assistant\"></a>Home Assistant</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210810145328.png\"></p>\n<p>用管理员账号登录 <code>Home Assistant</code>，进入 <code>用户资料</code>，下拉到最底部的 <code>长期访问令牌</code>，点 <code>创建令牌</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210810152541.png\"></p>\n<p>为令牌指定名称</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210810153647.png\"></p>\n<p>会生成一个 <code>token</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210810153935.png\"></p>\n<p>不需要了可以删除</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210810154058.png\"></p>\n<p>点 <code>Configration Manager</code> –&gt; <code>CONFIGRATION</code>，在文本框中填入下面的内容</p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\"># home assistant</span><br><span class=\"line\">hassio://hostname:port/accesstoken</span><br></pre></td></tr></table></figure>\n\n<p>完成后记得 <code>SAVE CONFIGURATION</code> 保存</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210810154626.png\"></p>\n<p>点 <code>NOTIFICATIONS</code>，输入标题和内容，<code>tags</code> 可以不填</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210810154501.png\"></p>\n<p>点 <code>SEND NOTIFICATION</code> 按钮</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210810160106.png\"></p>\n<p>在 <code>Home Assistant</code> 中左下角 <code>消息</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210810160427.png\"></p>\n<p>打开可以看到刚刚的消息推送</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210810160244.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>caronc/apprise: Apprise - Push Notifications that work with just about every platform!<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2Nhcm9uYy9hcHByaXNl\">https://github.com/caronc/apprise<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","消息推送"]},{"title":"用Changedetection监控网页的变化","url":"/2021/09/03/%E7%94%A8Changedetection%E7%9B%91%E6%8E%A7%E7%BD%91%E9%A1%B5%E7%9A%84%E5%8F%98%E5%8C%96/","content":"<p><strong>什么是 ChangeDetect ？</strong></p>\n<blockquote>\n<p>ChangeDetect 能提供网页监控服务。每当您关注的网页上的内容发生变化时，都会收到自动电子邮件通知。</p>\n</blockquote>\n<p>老苏之前写过的类似应用：『 <a href=\"https://laosu.ml/2021/08/06/%E7%BD%91%E9%A1%B5%E7%9B%91%E6%8E%A7%E6%8F%90%E9%86%92%E5%B7%A5%E5%85%B7WebMonitor/\">网页监控提醒工具WebMonitor</a> 』</p>\n<p>个人感觉两者各有特点，在网页监控方面 <code>ChangeDetect</code> 的设置更简单，但是通知方面 <code>WebMonitor</code> 符合国人的习惯，至于安装哪个看您的需求</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>changedetection</code> ，选择第一个 <code>dgtlmoon/changedetection.io</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210808124413.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>changedetection</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/changedetection</code></td>\n<td align=\"center\"><code>/datastore</code></td>\n<td align=\"center\">存放设置</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210808125445.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>需要新增端口， 容器端口为 <code>5000</code>，需要映射一个不冲突的本地端口</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">5321</td>\n<td align=\"center\">5000</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210808125742.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>HTTPS_PROXY</code></td>\n<td align=\"center\">代理设置，一般不用设置，只有在你要监测的网站需要科学上网访问时才需要</td>\n</tr>\n<tr>\n<td align=\"center\"><code>NO_PROXY</code></td>\n<td align=\"center\">不需要走代理的网站，例如：<code>localhost,192.168.0.0/24</code></td>\n</tr>\n</tbody></table>\n<p>老苏没设置代理，更多的环境变量示例可以看官方的 <code>docker-compose.yml</code> 文件：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2RndGxtb29uL2NoYW5nZWRldGVjdGlvbi5pby9ibG9iL21hc3Rlci9kb2NrZXItY29tcG9zZS55bWw=\">https://github.com/dgtlmoon/changedetection.io/blob/master/docker-compose.yml<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:5321</code>，就能看到主界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210808131205.png\"></p>\n<h2 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h2><p>点右上角的 <code>SETTINGS</code> 是 <code>default global settings</code>，只需要在 <code>Notification URL List</code> 中设置通知方式</p>\n<p><code>Changedetection</code> 采用了 <code>apprise</code> 项目来实现 <code>通知</code> 功能，可惜除了 <code>邮件</code> ，老苏没找到手机上已经安装的应用</p>\n<blockquote>\n<p>所有支持的通知方式都在这里：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2Nhcm9uYy9hcHByaXNl\">https://github.com/caronc/apprise<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<p>邮件发送的 <code>URL</code> 地址是👇这样的</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">mailto:&#x2F;&#x2F;&#123;userid&#125;:&#123;password&#125;@&#123;domain&#125;:&#123;port&#125;?smtp&#x3D;&#123;smtp_server&#125;&amp;from&#x3D;&#123;from_email&#125;&amp;to&#x3D;&#123;to_email&#125;</span><br></pre></td></tr></table></figure>\n\n<p>参数说明</p>\n<ul>\n<li><code>userid</code>：登录 <code>SMTP</code> 的用户</li>\n<li><code>password</code>：登录 <code>SMTP</code> 的用户的密码</li>\n<li><code>domain</code>：邮件的域地址</li>\n<li><code>port</code>：邮件服务器端口</li>\n<li><code>smtp</code>：<code>SMTP</code> 服务器</li>\n<li><code>from</code>：如果您希望电子邮件地址 <code>ReplyTo</code> 地址不是您自己的电子邮件地址，那么您可以在此处指定它。</li>\n<li><code>to</code>：收件地址</li>\n</ul>\n<blockquote>\n<p>邮件设置的详细说明可以参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2Nhcm9uYy9hcHByaXNlL3dpa2kvTm90aWZ5X2VtYWls\">https://github.com/caronc/apprise/wiki/Notify_email<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<p>只是其内置支持的邮箱服务都是国外的，如果要使用国内的邮件，需要自定义功能</p>\n<h3 id=\"自定义邮箱\"><a href=\"#自定义邮箱\" class=\"headerlink\" title=\"自定义邮箱\"></a>自定义邮箱</h3><p>老苏用 <code>88</code> 邮箱做测试，<code>88</code> 邮箱相关参数可以在 <code>设置</code> 中找到</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210806105358.png\"></p>\n<p>自用不需要设置回复邮箱，所以省略了 <code>from</code> 参数，但 88 邮箱不能省略 <code>smtp</code> 参数，否则会发送不成功</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">mailto:&#x2F;&#x2F;wbsu2003:password@88.com?smtp&#x3D;smtp.88.com&amp;to&#x3D;wbsu2003@gmail.com</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>gmail 有可能屏蔽了 88 邮箱，收件邮箱换成 hotmail 的就没问题了</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210808152257.png\"></p>\n<p>点 <code>Save</code> 保存，因为勾选了 <code>Send test notification on save</code>，所以会收到测试邮件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210808212239.png\"></p>\n<h2 id=\"网页监控\"><a href=\"#网页监控\" class=\"headerlink\" title=\"网页监控\"></a>网页监控</h2><p>还是以之前的电影网站为例，分别填入下面的内容，点 <code>Watch</code></p>\n<ul>\n<li>网址：<code>https://www.bd2020.com/movies/index.htm</code></li>\n<li>tag：<code>电影</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210808132603.png\"></p>\n<p>添加成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210808132645.png\"></p>\n<p>点 <code>Edit</code>，进行进一步的设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210808143217.png\"></p>\n<p>老苏什么都没改，所以默认使用了缺省的全局设置 <code>default global settings</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210810112846.png\"></p>\n<p>等网页有变化之后就会有通知邮件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210809140244.png\"></p>\n<p>有变化之后，最后的 <code>Preview</code> 会变成 <code>Diff</code>，点击就可以看到页面的具体变化和差异</p>\n<blockquote>\n<p>绿色为 <code>Inserted Text</code>也就是新增内容，红色为 <code>Removed text</code>也就是消失的内容</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/09/20210903141323.png\"></p>\n<h2 id=\"JSON-API-监控\"><a href=\"#JSON-API-监控\" class=\"headerlink\" title=\"JSON API 监控\"></a>JSON API 监控</h2><p>老苏找了个天气预报的 <code>JSON API</code>，请求是<code>restfull</code> 风格，city_code 为 <code>9</code> 位数字。只要拼接在地址 “<code>http://t.weather.itboy.net/api/weather/city/+</code>city_code” 后面即可。</p>\n<p><code>city_code</code> 可以在这里查询： <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JhaWNoZW5nemhvdS93ZWF0aGVyLmFwaS9ibG9iL21hc3Rlci9zcmMvbWFpbi9yZXNvdXJjZXMvY2l0eWNvZGUtMjAxOS0wOC0yMy5qc29u\">https://github.com/baichengzhou/weather.api/blob/master/src/main/resources/citycode-2019-08-23.json<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>比如上海的 <code>city_code</code> 为 <code>101020100</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210810115835.png\"></p>\n<p>所以在浏览器中输入 <code>http://t.weather.itboy.net/api/weather/city/101020100</code> 就能看到上海的天气信息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210810120118.png\"></p>\n<p>将网页上的文本全部复制（<code>Ctrl+A</code> 然后 <code>Ctrl+C</code>）,接着打开网页：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9qc29ucGF0aC5jb20v\">https://jsonpath.com<i class=\"fa fa-external-link-alt\"></i></span></p>\n<blockquote>\n<p>这个网址可用于 <code>JSON</code> 的语法测试</p>\n</blockquote>\n<p>将前面复制的内容粘贴到左侧的 <code>Inputs</code>，因为老苏希望返回所有的数据，所以在 <code>JSONPath Syntax</code> 中输入了 <code>$</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210810133259.png\"></p>\n<p>右侧的 <code>Evaluation Results</code> 不仅返回了所有的数据，并且对 <code>JSON</code> 数据进行了格式化处理，更易于阅读</p>\n<p>如果只是需要获取温度，可以在 <code>JSONPath Syntax</code> 中输入 <code>$.data.wendu</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210810134401.png\"></p>\n<p>准备工作到这里就差不多了，返回到 <code>Changedetection</code> 新增一个监控，分别填入下面的内容后，点 <code>Watch</code></p>\n<ul>\n<li>网址：<code>http://t.weather.itboy.net/api/weather/city/101020100</code></li>\n<li>tag：<code>天气</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210810134937.png\"></p>\n<p>添加成功后点 <code>Edit</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210810135108.png\"></p>\n<p>在 <code>CSS/JSON Filter</code> 中输入 <code>json:$.data.wendu</code>，其中前缀 <code>json:</code> 是必须要的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210810135357.png\"></p>\n<p>保存，180分钟后如果温度有变化，就会发送邮件了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210810191740.png\"></p>\n<p>查看 <code>Diff</code>，温度从 <code>37C°</code> 降为了 <code>33C°</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210810191420.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>dgtlmoon/changedetection.io: changedetection.io - The best and simplest self-hosted website change detection monitoring and notification service. An alternative to Visualping, Watchtower etc. Designed for simplicity - the main goal is to simply monitor which websites had a text change. Open source web page change detection - Now also includes JSON API change detection and monitoring support!<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2RndGxtb29uL2NoYW5nZWRldGVjdGlvbi5pbw==\">https://github.com/dgtlmoon/changedetection.io<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>免费天气API，天气JSON API，不限次数获取十五天的天气预报 —技术博客<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc29qc29uLmNvbS9ibG9nLzMwNS5odG1s\">https://www.sojson.com/blog/305.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","网页监控"]},{"title":"用来打发时间的EUserv","url":"/2021/08/31/%E7%94%A8%E6%9D%A5%E6%89%93%E5%8F%91%E6%97%B6%E9%97%B4%E7%9A%84EUserv/","content":"<p><strong>什么是 EUserv ？</strong></p>\n<blockquote>\n<p><code>EUserv</code> 是一家德国主机商，提供专用服务器托管，虚拟专用服务器，云服务，网站托管和域注册服务。<code>EUserv</code> 默认提供的免费 <code>VPS</code> 仅提供 <code>IPv6</code> 地址，支持按月续期。</p>\n</blockquote>\n<p><code>EUserv</code> 其实是支持 <code>IPv4</code> 的，只不过需要花钱而已</p>\n<p><strong>什么是 VPS ？</strong></p>\n<blockquote>\n<p><code>VPS</code> 服务器（虚拟专用服务器）（<code>Virtual Private Server</code>，或简称 <code>VPS</code>）是利用虚拟服务器软件（如微软的 <code>Virtual Server</code>、<code>VMware</code> 的<code>ESX server</code>、<code>SWsoft</code> 的 <code>Virtuozzo</code> ）在一台物理服务器上创建多个相互隔离的小服务器。【百度百科】</p>\n</blockquote>\n<h1 id=\"申请\"><a href=\"#申请\" class=\"headerlink\" title=\"申请\"></a>申请</h1><p>怎么申请 <code>EUserv</code> 的网上教程太多了，这里就略过了，老苏从申请到开通足足用了 8 天，在自己都快不记得的时候，终于收到了邮件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210901095316.png\"></p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><p>登录后台，首先要找到 <code>IP</code> 和密码，这个在 <code>Serverdata</code> 中，一定要<strong>做好记录</strong></p>\n<blockquote>\n<p><code>IPv6</code> 地址不要带后面的 <code>/128</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210901095831.png\"></p>\n<p>对于这种纯 <code>IPv6</code> 的 <code>VPS</code> ，怎么连上去设置是个大问题，老苏研究了很多网上的教程，大致做个总结：</p>\n<ul>\n<li><p>第一种是在 <code>Windows 10</code> 下，通过设置 <code>Teredo</code> 服务器来开启 <code>IPv6</code> 访问，这种方法一旦搞定可以一劳永逸，可惜不知道是老苏太笨，还是教程过期，总之没搞成功，虽然 <code>ipconfig /all</code> 中已经看到分配的  <code>IPv6</code> 地址</p>\n</li>\n<li><p>第二种是正好你的宽带已经支持  <code>IPv6</code> ，但是老苏所在的区域还不支持</p>\n</li>\n</ul>\n<blockquote>\n<p>测试地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly90ZXN0LWlwdjYuY29tL2luZGV4Lmh0bWwuemhfQ04=\">https://test-ipv6.com/index.html.zh_CN<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210901100824.png\"></p>\n<ul>\n<li>第三种方式是通过中转网站，比如 <code>嘿哟终端</code> ：（<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXl0ZXJtLmNvbS8=\">https://heyterm.com<i class=\"fa fa-external-link-alt\"></i></span>）来访问，但是老苏试过所以的节点，不是超时就是无法连接，估摸着用的人太多了吧</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210901101921.png\"></p>\n<ul>\n<li>第四种方式和第三种有点类似，但需要你自己有一台同时支持 <code>IPv4</code> 和 <code>IPv6</code> 的 <code>VPS</code> 来做 <code>SSH</code> 中转</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210901102953.png\"></p>\n<ul>\n<li>第五种用手机做热点，一般来说手机拨号默认采用的 <code>APN</code> 协议同时支持 <code>IPv4/IPv6</code>，如果不是自己改一下就行</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210901102333.png\"></p>\n<p>所以对老苏来说，可行的方案只有第五种了，但是不是每次都需要这么麻烦而且不经济呢？显然不是，因为老苏想到了 <code>Tailscale</code></p>\n<blockquote>\n<p>相关文章：『 <a href=\"https://laosu.ml/2020/11/04/%E5%A4%96%E7%BD%91%E8%AE%BF%E9%97%AE%E7%BE%A4%E6%99%96%E7%9A%84%E6%96%B0%E6%96%B9%E6%A1%88Tailscale\">外网访问群晖的新方案Tailscale</a> 』</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/202109011249654.png\"></p>\n<p><code>Tailscale</code> 本身是完全支持 <code>IPv6</code> 的，即使您的 <code>ISP</code> 不支持 <code>IPv6</code>，<code>Tailscale</code> 也可以将 <code>IPv6</code> 数据包加密后通过 <code>WireGuard</code> 隧道在 <code>Tailscale</code> 节点之间传输，更多关于 <code>Tailscale IPv6</code> 的相关内容请参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly90YWlsc2NhbGUuY29tL2tiLzExMjEvaXB2Ng==\">https://tailscale.com/kb/1121/ipv6<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>所以 <code>EUserv</code> 到手之后的第一件事情就是 <code>SSH</code> 登录并安装 <code>Tailscale</code>，之后除非重装系统，否则你都可以用 <code>Tailscale</code> 的 <code>IPv4</code> 地址来登录了</p>\n<p>安装教程可以在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly90YWlsc2NhbGUuY29tL2Rvd25sb2FkL2xpbnV4L2NlbnRvcy03\">https://tailscale.com/download/linux/centos-7<i class=\"fa fa-external-link-alt\"></i></span> 找到，应该基本覆盖上了 <code>EUserv</code> 支持的系统</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210901111201.png\"></p>\n<p>接下来就和一般的 <code>IPv4</code> 的 <code>VPS</code> 一样使用了，你可以安装宝塔，或者直接搭建 <code>LNMP</code>，<strong>只要性能允许</strong>。</p>\n<p>当然如果你搭的网站想要给别人用，还需要再套一个 <code>Cloudflare</code>，不然别人还是访问不了，这方面的教程也很多，有兴趣可以自己研究。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210901143853.png\"></p>\n<h1 id=\"续期\"><a href=\"#续期\" class=\"headerlink\" title=\"续期\"></a>续期</h1><p>可能是因为用的人太多，<code>EUserv</code> 已经改成了需要每个月手动续期，当然这种小事情肯定难不倒聪明的网友，有利用 <code>github action</code> 自动续期的，也有利用 <code>腾讯云函数</code> 自动续期的，不过老苏注意到，有人因此被封了 <code>github</code> 账号。</p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p><code>EUserv</code> 有很多优点，比如不光免费还不要用信用卡认证，所以用来学习 <code>linux</code>、搭建网站是不错的选择</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210901133610.png\"></p>\n<p>但是说实话，性子急的人不适合玩 <code>EUserv</code> ，不光光是因为申请时间长，而是 <code>EUserv</code> 中途经常会玩失联，而且一旦失联时间还不好说，快则几个小时，慢则几天，期间能证明它还存在的唯一证据只有在 <code>Tailscale</code> 的管理页面上还显示着 <code>Connected</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210901115053.png\"></p>\n<p>上一次的 <code>Reinstallation</code> 和 <code>Webreboot</code> 过去了四天还没处理</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210901115417.png\"></p>\n<p>但是它居然活过来了，现在宝塔里的状态</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210901115705.png\"></p>\n<p>不过更多的时候是这样的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210901120842.png\"></p>\n<p>执行下面👇的命令可以获取一些主机信息，供大家参考</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">wget -qO- bench.sh | bash</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210901133230.png\"></p>\n<p>如果你和老苏一样不用考虑时间成本，可以撸一个来玩玩，不然还是算了吧，免得你生气砸坏键盘，那就得不偿失了😜</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>EUserv 德国永久免费VPS申请 支持IPv6/IPv4 安装宝塔以及自动续期 | 站长资源网<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYm95aG9zdC5jbi9mcmVlcGhwaG9zdGluZy9ldXNlcnYuaHRtbA==\">https://www.boyhost.cn/freephphosting/euserv.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>如何用腾讯云函数给EUserv德国免费VPS自动续期-把握度<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYXdvZHUuY29tL2V1c2Vydi1yZW5ldy8=\">https://bawodu.com/euserv-renew/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>cokemine/EUserv_extend: A simple Python Script help you renew free EUserv IPv6 VPS<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0Nva2VNaW5lL0VVc2Vydl9leHRlbmQ=\">https://github.com/CokeMine/EUserv_extend<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>p3terx/euserv-extend - Docker Image | Docker Hub<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9yZWdpc3RyeS5odWIuZG9ja2VyLmNvbS9yL3AzdGVyeC9ldXNlcnYtZXh0ZW5k\">https://registry.hub.docker.com/r/p3terx/euserv-extend<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["vps","EUserv"]},{"title":"告别excel，用phpIPAM来管理家庭网络","url":"/2021/08/30/%E5%91%8A%E5%88%ABexcel%EF%BC%8C%E7%94%A8phpIPAM%E6%9D%A5%E7%AE%A1%E7%90%86%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C/","content":"<p><strong>什么是 phpIPAM ？</strong></p>\n<blockquote>\n<p><code>phpIPAM</code> 是一个开源、高效的 <code>IP</code> 地址管理应用软件，可以提供自动的 <code>ping</code> 扫描，状态报告以及电子邮件通知。</p>\n</blockquote>\n<p>随着智能设备的增加，家庭中需要上网的设备也越来越多，要跟踪某个<code>IP</code> 被分配到了哪个设备，就需要进行登记造册了。最简单的方法，就是使用 <code>Excel</code> 来记录 <code>IP</code> 地址的分配信息。少量的问题不大，但是一多还是比较容易混乱的，更重要的是缺乏可视化管理。</p>\n<p> <code>phpIPAM</code> 是一个开源、高效的 <code>IP</code> 地址管理应用软件，通过 <code>web</code> 能在任何地方访问并管理，而且其后端数据库也能保证所有更新能正确同步并实时生效。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"数据库\"><a href=\"#数据库\" class=\"headerlink\" title=\"数据库\"></a>数据库</h2><p>通过 <code>phpMyAdmin</code> 在 <code>MariaDB 5</code> 中新建用户 <code>phpipam</code>，并授予 <code>全局权限</code>。</p>\n<blockquote>\n<p>不要创建数据库，因为后面的安装向导会创建，否则就需要自己导入 SQL 脚本了</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210630221731.png\"></p>\n<h2 id=\"安装镜像\"><a href=\"#安装镜像\" class=\"headerlink\" title=\"安装镜像\"></a>安装镜像</h2><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>phpipam</code> ，选择第二个 <code>pierrecdn/phpipam </code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210630211342.png\"></p>\n<h3 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h3><p>端口不能冲突</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n<th align=\"center\">类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">4180</td>\n<td align=\"center\">80</td>\n<td align=\"center\">TCP</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210630214759.png\"></p>\n<h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>MYSQL_ENV_MYSQL_HOST</code></td>\n<td align=\"center\">数据库服务器的主机名，支持IP+端口</td>\n</tr>\n<tr>\n<td align=\"center\"><code>MYSQL_ENV_MYSQL_USER</code></td>\n<td align=\"center\">数据库的用户名</td>\n</tr>\n<tr>\n<td align=\"center\"><code>MYSQL_ENV_MYSQL_ROOT_PASSWORD</code></td>\n<td align=\"center\">数据库用户的密码</td>\n</tr>\n<tr>\n<td align=\"center\"><code>MYSQL_ENV_MYSQL_DB</code></td>\n<td align=\"center\">数据库的名称</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210630215706.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:4180</code>，第一次会跳转到设置界面</p>\n<ul>\n<li>选择 <code>New phpipam installation</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210630220252.png\"></p>\n<ul>\n<li>选择 <code>Automatic database installation</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210630220421.png\"></p>\n<ul>\n<li>填写数据库用户和密码，点击 <code>Install phpipam database</code></li>\n</ul>\n<blockquote>\n<p>不一定要用 root ，但一定要有权限创建数据库</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210630220646.png\"></p>\n<ul>\n<li>数据库安装成功后会显示 <code>Database installed successfully!</code> ，点后面的 <code>Continue</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210630221937.png\"></p>\n<ul>\n<li>设置管理员密码</li>\n</ul>\n<blockquote>\n<p>密码最小长度为 8 位</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210630222314.png\"></p>\n<ul>\n<li>完成后会显示 <code>Settings updated, installation complete!</code> ，点下面的 <code>Proceed to login</code> </li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210630222425.png\"></p>\n<ul>\n<li>输入账号和密码</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210630222733.png\"></p>\n<p>会看到登录成功的提示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210630222811.png\"></p>\n<ul>\n<li>接下来会自动跳转到主界面</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210630223040.png\"></p>\n<h1 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h1><h2 id=\"语言设置\"><a href=\"#语言设置\" class=\"headerlink\" title=\"语言设置\"></a>语言设置</h2><p>很奇怪，设置了中文，但是没有任何变化</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210630232811.png\"></p>\n<h2 id=\"创建-Section\"><a href=\"#创建-Section\" class=\"headerlink\" title=\"创建 Section\"></a>创建 Section</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210630234035.png\"></p>\n<h2 id=\"创建-Subnet\"><a href=\"#创建-Subnet\" class=\"headerlink\" title=\"创建 Subnet\"></a>创建 Subnet</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210701002411.png\"></p>\n<h2 id=\"添加-IP\"><a href=\"#添加-IP\" class=\"headerlink\" title=\"添加 IP\"></a>添加 IP</h2><p>现在可以在 <code>Subnet</code> 中添加 <code>IP</code> 地址了。一种方法是逐个来添加它们，另一种方法是扫描所有主机并自动添加。</p>\n<p>在选择一个 <code>Subnet</code> 子网后，点击 <code>Scan subnet for new hosts</code> 来扫描 <code>IP</code> 地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210630235059.png\"></p>\n<p>但是显示 <code>No alive host found!</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210701203414.png\"></p>\n<p> 用 <code>SSH</code> 客户端连上群晖，执行下面的命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker <span class=\"built_in\">exec</span> --user root -it pierrecdn-phpipam1  php <span class=\"built_in\">functions</span>/scripts/discoveryCheck.php</span><br></pre></td></tr></table></figure>\n\n<p>然后返回当前页面刷新，再往下拉就能看到 <code>IP</code> 地址（IP addresses in subnets）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210701201942.png\"></p>\n<p>拉到最下面 <code>Visual subnet display</code> 中点亮了的是在线设备，大概也有 20 台了吧</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210701201817.png\"></p>\n<p>接下来就可以一台一台对设备进行编辑了，可以通过 <code>Hostname</code> 、 <code>Description</code>、<code>Device</code> 来标识不同的设备和用途</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210701202302.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>phpipam/phpipam: phpipam development repository<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3BocGlwYW0vcGhwaXBhbQ==\">https://github.com/phpipam/phpipam<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>安装与初步配置IP地址管理工具phpipam | NGX Project | NGX.HK<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9uZ3guaGsvMjAxNy8wMi8yMi8lRTUlQUUlODklRTglQTMlODUlRTQlQjglOEUlRTUlODglOUQlRTYlQUQlQTUlRTklODUlOEQlRTclQkQlQUVpcCVFNSU5QyVCMCVFNSU5RCU4MCVFNyVBRSVBMSVFNyU5MCU4NiVFNSVCNyVBNSVFNSU4NSVCN3BocGlwYW0uaHRtbA==\">https://ngx.hk/2017/02/22/%E5%AE%89%E8%A3%85%E4%B8%8E%E5%88%9D%E6%AD%A5%E9%85%8D%E7%BD%AEip%E5%9C%B0%E5%9D%80%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7phpipam.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>系统运维|如何使用phpIPAM来管理IP地址和子网<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW51eC5jbi9hcnRpY2xlLTMxODgtMS5odG1s\">https://linux.cn/article-3188-1.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","网络"]},{"title":"Airtable的开源替代方案NocoDB","url":"/2021/08/27/Airtable%E7%9A%84%E5%BC%80%E6%BA%90%E6%9B%BF%E4%BB%A3%E6%96%B9%E6%A1%88NocoDB/","content":"<p><strong>什么是 Airtable ？</strong></p>\n<blockquote>\n<p><code>Airtable</code> 是新型的在线表格制作工具，不仅局限于表格，它还可以把文字、图片、链接、文档等各种资料整合在一起。是电子表格-数据库混合体，具有数据库的功能，但实际上还是电子表格。</p>\n</blockquote>\n<p><strong>什么是 REST API ？</strong></p>\n<blockquote>\n<p><code>REST API</code> 也称为 <code>RESTful API</code>，是遵循 <code>REST</code> 架构规范的应用编程接口（<code>API</code> 或 <code>Web API</code>），支持与 <code>RESTful Web</code> 服务进行交互。<code>REST</code> 是表述性状态传递的英文缩写（<code>Representational State Transfer</code>），由计算机科学家 <code>Roy Fielding</code> 在 2000 年提出。它的简单易用性，可扩展性，伸缩性受到广大 <code>Web</code> 开发者的喜爱。</p>\n</blockquote>\n<p><strong>什么是 GraphQL ?</strong></p>\n<blockquote>\n<p><code>GraphQL</code> 是一种新的 <code>API</code> 标准，它提供了一种比 <code>REST</code> 更有效、更强大和更灵活的替代方案。作为 <code>REST</code> 的替代方案，<code>GraphQL</code> 允许开发人员构建相应的请求，从而通过单个 <code>API</code> 调用从多个数据源中提取数据。<code>GraphQL</code> 由 <code>Facebook</code> 开发，并于 2012 年首次应用于移动应用，于 2015 年实现开源。</p>\n</blockquote>\n<p><code>REST API</code> 在之前的『 <a href=\"https://laosu.ml/2021/08/02/%E7%AE%80%E7%BA%A6%E4%BD%86%E7%BB%9D%E4%B8%8D%E7%AE%80%E5%8D%95%E7%9A%84Komga/\">简约但绝不简单的Komga</a> 』一文中已经遇到了，而 <code>NocoDB</code> 同时支持 <code>REST API</code>和 <code>GraphQL API</code></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"数据库\"><a href=\"#数据库\" class=\"headerlink\" title=\"数据库\"></a>数据库</h2><p>通过 <code>phpMyAdmin</code> 在 <code>MariaDB 10</code> 中新建用户 <code>nocodb</code>，创建同名的库 <code>nocodb</code> 并授予所有权限。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210804141251.png\" alt=\"10\"></p>\n<p>如果使用 <code>MariaDB 5</code>，在创建 <code>table</code> 时会遇到下面👇这样的错误</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">CODE:</span><br><span class=\"line\">ER_TOO_MUCH_AUTO_TIMESTAMP_COLS</span><br></pre></td></tr></table></figure>\n\n<p>从而导致创建失败</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210804135833.png\"></p>\n<h2 id=\"安装镜像\"><a href=\"#安装镜像\" class=\"headerlink\" title=\"安装镜像\"></a>安装镜像</h2><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>nocodb</code> ，选择第一个 <code>nocodb/nocodb</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210804110617.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>nocodb</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/nocodb</code></td>\n<td align=\"center\"><code>/usr/app/data</code></td>\n<td align=\"center\">存放数据</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210805151127.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不冲突就行，这里用了 <code>2380</code> </p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">2380</td>\n<td align=\"center\">8080</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210804111443.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>NC_DB</code></td>\n<td align=\"center\">数据库连接参数，<code>mysql2://群晖IP:3307?u=用户&amp;p=密码&amp;d=表</code></td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>MariaDB 5 默认的端口是 3306，MariaDB 10 默认的端口是 3307</p>\n</blockquote>\n<p>所以根据前面的设置，连接参数应该是 <code>mysql2://192.168.0.197:3307?u=nocodb&amp;p=TWYQDFsgq9Ng&amp;d=nocodb</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210805151355.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:2380</code>，就看到欢迎界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210805151524.png\"></p>\n<p>跳过欢迎界面之后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210805152056.png\"></p>\n<p>第一次需要注册，这个账号将成为管理员账号</p>\n<blockquote>\n<p>密码至少有 8 个字母，其中包括 1 个大写字母、1 个数字和 1 个特殊字母</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210804113329.png\"></p>\n<h2 id=\"创建新项目\"><a href=\"#创建新项目\" class=\"headerlink\" title=\"创建新项目\"></a>创建新项目</h2><p>注册成功之后可以开始新建项目</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210805155318.png\"></p>\n<p>输入项目名称，可以选择生成的 <code>API</code> 类型</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210805155523.png\"></p>\n<h2 id=\"建表\"><a href=\"#建表\" class=\"headerlink\" title=\"建表\"></a>建表</h2><p>可以通过 <code>+</code> 号创建 <code>table</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210804151634.png\"></p>\n<p>输入表名，然后点 <code>Submit</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210805155702.png\"></p>\n<blockquote>\n<p>id 列是不能禁用的，</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210804152216.png\"></p>\n<p>成功提交后，表格将创建并作为新选项卡打开。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210804143303.png\"></p>\n<h3 id=\"列\"><a href=\"#列\" class=\"headerlink\" title=\"列\"></a>列</h3><p>单击表格右上角的 <code>+</code> 图标</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210804152447.png\"></p>\n<p>弹出表单中可以填写列名、类型、长度等，其中类型非常丰富</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210804152623.png\"></p>\n<p>修改后保存</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210804152808.png\"></p>\n<h3 id=\"行\"><a href=\"#行\" class=\"headerlink\" title=\"行\"></a>行</h3><p>点下图中的 <code>+</code> 号可以创建新的行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210804153324.png\"></p>\n<p>输入 <code>title</code> 和 <code>url</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210804153514.png\"></p>\n<p>点右上角的 <code>Save Row</code>，就有数据了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210804153613.png\"></p>\n<p>又加了一行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210804155600.png\"></p>\n<h2 id=\"REST-API-访问\"><a href=\"#REST-API-访问\" class=\"headerlink\" title=\"REST API 访问\"></a>REST API 访问</h2><p>在主界面点最右上角的图标，单击 <code>Copy auth token</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210804154033.png\"></p>\n<p>单击同样的按钮，这次选择 <code>Swagger APIs Doc</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210804154530.png\"></p>\n<p>选择 <code>Schemes</code> 并单击<code>Authorize</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210804154705.png\"></p>\n<p>粘贴复制的令牌，然后单击 <code>Authorize</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210804154751.png\"></p>\n<p>验证成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210804154823.png\"></p>\n<p>用 <code>Get list</code> 接口</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210804155759.png\"></p>\n<p>可以查询到我们刚才建的两条数据</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210804155909.png\"></p>\n<h2 id=\"从数据库导入项目\"><a href=\"#从数据库导入项目\" class=\"headerlink\" title=\"从数据库导入项目\"></a>从数据库导入项目</h2><p>通过连接外部数据库创建项目</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210804113551.png\"></p>\n<p>需要进行数据库配置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210804141802.png\"></p>\n<p>老苏用了之前 <code>兰空图床</code> 的数据库</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210805160209.png\"></p>\n<p>点 <code>Test Database Connection</code> 测试数据库连接 </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210804114209.png\"></p>\n<p>没问题的话就点 <code>OK &amp; Save Project</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210805160411.png\"></p>\n<p>可以看到数据都已经过来了，接下来就可以通过 <code>REST API</code> 访问了</p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p><code>NocoDB</code> 和我们之前介绍的 <code>SeaTable</code> 非常类似，区别在于 <code>SeaTable</code> 偏向于提供应用模板，而 <code>NocoDB</code> 偏向于提供接口，是一个从数据库到 <code>REST-GraphQL API</code> 的生成器，更方便做二次开发</p>\n<p>按官方的规划，未来可实现拖拽设计页面，这又有点像 <code>Tduck</code>了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/202108262332490.png\"></p>\n<hr>\n<p>【小彩蛋】：一段时间不操作，界面会变得像黑客帝国</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210804133309.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>nocodb/nocodb: 🔥 🔥 The Open Source Airtable alternative - Powered by Vue.js 🚀 🚀<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25vY29kYi9ub2NvZGI=\">https://github.com/nocodb/nocodb<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>NocoDB Documentation - NocoDB<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm5vY29kYi5jb20v\">https://docs.nocodb.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>How to Install NocoDB on Your Synology NAS – Marius Hosting<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXJpdXNob3N0aW5nLmNvbS9ob3ctdG8taW5zdGFsbC1ub2NvZGItb24teW91ci1zeW5vbG9neS1uYXMv\">https://mariushosting.com/how-to-install-nocodb-on-your-synology-nas/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","表格"]},{"title":"数据可视化平台Superset（踩坑篇）","url":"/2021/08/25/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E5%B9%B3%E5%8F%B0Superset%EF%BC%88%E8%B8%A9%E5%9D%91%E7%AF%87%EF%BC%89/","content":"<p>从主菜单可以看出来，第一层是数据（Data)，第二层是图表（Charts），第三层是看板（Dashboards）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210331163946.png\"></p>\n<p>数据形成了图表，而图表又构成了看板</p>\n<h1 id=\"理解数据\"><a href=\"#理解数据\" class=\"headerlink\" title=\"理解数据\"></a>理解数据</h1><p>为了能展示数据，我找到了一篇文章 <span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80NTg3NzQ4OA==\">Excel数据分析实例—牛油果销售分析（https://zhuanlan.zhihu.com/p/45877488）<i class=\"fa fa-external-link-alt\"></i></span>，看能否用 <code>Superset</code> 来练习数据展示。</p>\n<blockquote>\n<p>数据来源： <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cua2FnZ2xlLmNvbS9uZXVyb211c2ljL2F2b2NhZG8tcHJpY2Vz\">Avocado Prices（https://www.kaggle.com/neuromusic/avocado-prices）<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<p>首先用 <code>Excel</code> 打开 <code>avocado.csv</code> 文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401111929.png\"></p>\n<p>对数据的标题稍作调整</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401111637.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">列</th>\n<th align=\"center\">含义</th>\n<th align=\"center\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Week</td>\n<td align=\"center\">第几周</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">Data</td>\n<td align=\"center\">日期</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">AveragePrice</td>\n<td align=\"center\">单个牛油果的平均价格</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">Total Volume</td>\n<td align=\"center\">牛油果销售总量</td>\n<td align=\"center\">包含了3种牛油果 PLU-4046,PLU-4225, PLU-4770 单个出售量 和 按袋出售的牛油果个数 Total Bags</td>\n</tr>\n<tr>\n<td align=\"center\">PLU-4046</td>\n<td align=\"center\">PLU-4046的销售个数</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">PLU-4225</td>\n<td align=\"center\">PLU-4225的销售个数</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">PLU-4770</td>\n<td align=\"center\">PLU-4770的销售个数</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">Total Bags</td>\n<td align=\"center\">袋装牛油果的销售总量</td>\n<td align=\"center\">为以袋为单位出售的牛油果的总个数，包含小袋Small Bags，大袋Large Bags和超大袋XLarge Bags三种不同规格</td>\n</tr>\n<tr>\n<td align=\"center\">Small Bags</td>\n<td align=\"center\">小袋牛油果销售个数</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">Large Bags</td>\n<td align=\"center\">大袋牛油果销售个数</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">XLarge Bags</td>\n<td align=\"center\">超大袋牛油果销售个数</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">type</td>\n<td align=\"center\">牛油果类型</td>\n<td align=\"center\">标明牛油果是普通的还是有机的</td>\n</tr>\n<tr>\n<td align=\"center\">year</td>\n<td align=\"center\">年份</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">region</td>\n<td align=\"center\">地区</td>\n<td align=\"center\">表示美国不同地区的牛油果销售量，包含部分城市、西部、东北部等地区和全美总体数据</td>\n</tr>\n</tbody></table>\n<h1 id=\"新建数据库\"><a href=\"#新建数据库\" class=\"headerlink\" title=\"新建数据库\"></a>新建数据库</h1><p>通过 <code>phpMyAdmin</code> 新建一个库 <code>demo</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401130949.png\"></p>\n<h1 id=\"上传数据\"><a href=\"#上传数据\" class=\"headerlink\" title=\"上传数据\"></a>上传数据</h1><h2 id=\"连接到新数据库\"><a href=\"#连接到新数据库\" class=\"headerlink\" title=\"连接到新数据库\"></a>连接到新数据库</h2><p>在主界面 <code>数据库（Data）</code> –&gt; <code>数据库（Databases）</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401114957.png\"></p>\n<p>点右上侧的 <code>+ 数据库（DATABASE）</code>，在弹出界面填写 <code>数据库名称（DATAASE NAME）</code> 和<code>SQLAlchemy URI</code></p>\n<blockquote>\n<p><code>SQLAlchemy URI</code> 和之前 <code>config.py</code> 中的 <code>SQLALCHEMY_DATABASE_URI</code> 格式是一致的，也是 <code>mysql://用户:密码@xx.xx.xx.xx:3306/数据库名称?charset=utf8</code> </p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401131510.png\"></p>\n<p>点 <code>测试连接（TEST CONNECTION）</code>，如果测试不通过，下方会有提示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401115902.png\"></p>\n<p>通过之后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401115803.png\"></p>\n<p><code>SQL LAB SETTINGS</code> 页中勾选 <code>允许 CREATE TABLE AS</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401133019.png\"></p>\n<p><code>扩展</code> 页中勾选 <code>Allow Data Upload</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401131723.png\"></p>\n<p>点 <code>ADD</code> 保存</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401132014.png\"></p>\n<h2 id=\"注册新表-失败\"><a href=\"#注册新表-失败\" class=\"headerlink\" title=\"注册新表(失败)\"></a>注册新表(失败)</h2><p>在主界面 <code>数据库（Data）</code> –&gt; <code>数据库（Datasets）</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401120502.png\"></p>\n<p>点右上侧的 <code>+ 数据库（DATASET）</code>，在弹出界面，模式选 <code>demo</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401132147.png\"></p>\n<p>因为 <code>demo</code> 是空库，所以 <code>表</code>也是空的，需要自己填 <code>avocado</code>，然后点 <code>Create avocado</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401132449.png\"></p>\n<p>点 <code>ADD</code>，居然出错了，没权限？</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401132706.png\"></p>\n<h2 id=\"上传-CSV（失败）\"><a href=\"#上传-CSV（失败）\" class=\"headerlink\" title=\"上传 CSV（失败）\"></a>上传 CSV（失败）</h2><p>在主界面 <code>数据库</code> –&gt; <code>上传CSV文件</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401113152.png\"></p>\n<p>填写表名</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401134838.png\"></p>\n<p>点 <code>保存</code> ，居然又出错了，显示 <code>No such file or directory</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401135106.png\"></p>\n<p>显示不存在目录，进入容器后发现确实 <code>/usr/local/lib/python3.8/site-packages/superset/</code> 确实不存在 <code>app</code>，依次创建 <code>/app/static/uploads/</code> 三级目录，再上传</p>\n<p>这次显示的是 <code>Permission denied</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401142602.png\"></p>\n<h2 id=\"新思路1：直接将csv作为数据源（失败）\"><a href=\"#新思路1：直接将csv作为数据源（失败）\" class=\"headerlink\" title=\"新思路1：直接将csv作为数据源（失败）\"></a>新思路1：直接将csv作为数据源（失败）</h2><p>将 <code>avocado.csv</code> 丢到 <code>/docker/superset</code>目录，右键 –&gt; <code>属性</code> 获取 <code>所在位置</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401153110.png\"></p>\n<p>SSH 登录到群晖</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 从 avocado.csv 群晖拷贝到容器 amancevice-superset1 内</span></span><br><span class=\"line\">docker cp /volume1/docker/superset/avocado.csv amancevice-superset1:/usr/<span class=\"built_in\">local</span>/lib/python3.8/site-packages/superset/</span><br></pre></td></tr></table></figure>\n\n<p>尝试将 SQLite 作为数据源</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sqlite:////usr/<span class=\"built_in\">local</span>/lib/python3.8/site-packages/superset/avocado.csv</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401155057.png\"></p>\n<p><code>测试连接</code> 失败</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401155143.png\"></p>\n<h2 id=\"新思路2：将csv导入MySQL\"><a href=\"#新思路2：将csv导入MySQL\" class=\"headerlink\" title=\"新思路2：将csv导入MySQL\"></a>新思路2：将csv导入MySQL</h2><p><code>phpMyAdmin</code> 存在文件大小的限制，所以用了 <code>Navicat</code> 导数据</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401160035.png\"></p>\n<p>选中<code>表</code>，右键选择 <code>导入向导</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401160543.png\"></p>\n<p>格式选择 <code>csv</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401160708.png\"></p>\n<p>添加文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210825134035.png\" alt=\"已模糊\"></p>\n<p>这里不动，继续</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401160849.png\"></p>\n<p>时间的格式默认是 <code>DMY</code>，改为 <code>YMD</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401161050.png\"></p>\n<p>表名不变，默认的就可以</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401161136.png\"></p>\n<p>字段也不用改，因为前面已经处理过了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401161216.png\"></p>\n<p>第一次导入，默认还没有数据，所以选什么都一样</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401161302.png\"></p>\n<p>开始导入</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210825134349.png\" alt=\"已模糊\"></p>\n<p>导入成功后有提示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210825134510.png\" alt=\"已模糊\"></p>\n<p>看一下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401161534.png\"></p>\n<h1 id=\"数据分析\"><a href=\"#数据分析\" class=\"headerlink\" title=\"数据分析\"></a>数据分析</h1><p>在开始分析之前，重新整理下思路：</p>\n<ol>\n<li> <code>csv</code> 因为安全原因，不能直接作为数据源；</li>\n<li> 数据不能直接导入 <code>Superset</code>;</li>\n<li> 需要一个 <code>MySQL</code> 或者其他类型的数据库作为存储；</li>\n</ol>\n<h2 id=\"设置数据库（Databases）\"><a href=\"#设置数据库（Databases）\" class=\"headerlink\" title=\"设置数据库（Databases）\"></a>设置数据库（Databases）</h2><p>这一步，已经在 <a href=\"#%E8%BF%9E%E6%8E%A5%E5%88%B0%E6%96%B0%E6%95%B0%E6%8D%AE%E5%BA%93\">连接到新数据库</a> 中完成了，所以可以跳过；</p>\n<h2 id=\"设置表（Datasets）\"><a href=\"#设置表（Datasets）\" class=\"headerlink\" title=\"设置表（Datasets）\"></a>设置表（Datasets）</h2><p>在主界面 <code>数据库（Data）</code> –&gt; <code>数据库（Datasets）</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401120502.png\"></p>\n<p>点右上侧的 <code>+ 数据库（DATASET）</code>，在弹出界面，模式选 <code>demo</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401162735.png\"></p>\n<p>直接点 <code>ADD</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401162808.png\"></p>\n<h2 id=\"设置图表（Charts）\"><a href=\"#设置图表（Charts）\" class=\"headerlink\" title=\"设置图表（Charts）\"></a>设置图表（Charts）</h2><p>在主界面 <code>Chart</code> –&gt; <code>+ 图表</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401163159.png\"></p>\n<p>下拉框中选表</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401163449.png\"></p>\n<p><code>创建新图表</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401163550.png\"></p>\n<p>终于看到图表了，但接下来就不知道怎么玩了，这个得先学 <code>数据分析</code> 了吧？</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401165833.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>AWS 教您手把手玩转 Apache Superset 可视化 Amazon S3 里的数据 | 亚马逊AWS官方博客<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hd3MuYW1hem9uLmNvbS9jbi9ibG9ncy9jaGluYS9hd3MtdGVhY2hlcy15b3UtdG8tcGxheS13aXRoLWFwYWNoZS1zdXBlcnNldC10by12aXN1YWxpemUtdGhlLWRhdGEtaW4tYW1hem9uLXMzLw==\">https://aws.amazon.com/cn/blogs/china/aws-teaches-you-to-play-with-apache-superset-to-visualize-the-data-in-amazon-s3/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>#mac# 篇三：自建Superset数据可视化平台并创建疫情地图网站（上）_服务器_什么值得买<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2E2bHI2ejZlLw==\">https://post.smzdm.com/p/a6lr6z6e/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>#mac# 篇四：自建Superset数据可视化平台并创建疫情地图网站（下）_服务器_什么值得买<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2EyNTkycG9xLw==\">https://post.smzdm.com/p/a2592poq/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>canghailan/Wuhan-2019-nCoV: 2019-nCoV 新冠状病毒 2019-12-01至今国家、省、市三级每日统计数据（支持接口读取）<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NhbmdoYWlsYW4vV3VoYW4tMjAxOS1uQ29W\">https://github.com/canghailan/Wuhan-2019-nCoV<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>如何让Superset的地图显示中文<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZWliby5jb20vdHRhcnRpY2xlL3Avc2hvdz9pZD0yMzEzNTAxMDAwMDE0MTc5NzQwODM4Nzg1NDI5JnN1ZGFyZWY9d3d3Lmdvb2dsZS5jb20=\">https://weibo.com/ttarticle/p/show?id=2313501000014179740838785429&amp;sudaref=www.google.com<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>superset导出csv中文乱码问题_Python - UCloud云社区<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudWNsb3VkLmNuL3l1bi80Mzg2OS5odG1s\">https://www.ucloud.cn/yun/43869.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Excel数据分析实例—牛油果销售分析 - 知乎<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80NTg3NzQ4OA==\">https://zhuanlan.zhihu.com/p/45877488<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","BI"]},{"title":"数据可视化平台Superset（安装篇）","url":"/2021/08/23/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E5%B9%B3%E5%8F%B0Superset%EF%BC%88%E5%AE%89%E8%A3%85%E7%AF%87%EF%BC%89/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>过程和结果哪个更重要？有人说结果重要，也有人说过程重要，更有人觉得过程和结果都很重要，其实老苏觉得这个要分什么事情，就折（xue）腾（xi）来说，老苏觉得过程比结果重要，因为虽然有可能你最终折腾失败了，但是在折腾的过程中你依然能学到很多东西。</p>\n<p>以前老苏发文都是最终已经折腾成功的，但其实在老苏的笔记里还有大量折腾失败的案例，本文就是其中之一。</p>\n<p>大概是3月份的时候，一个朋友准备搞数据可视化分析，让我折腾一下 <code>Superset</code> ，和很多软件一样，<code>Superset</code> 安装并不复杂，真正难的是怎么使用。</p>\n<hr>\n<p><strong>什么是 Superset ？</strong></p>\n<blockquote>\n<p><code>Superset</code> 是由  <code>Airbnb</code> （知名在线短租赁公司）开源的数据分析与可视化平台。支持丰富的数据源连接，多种可视化方式，并能够对用户实现细粒度的权限控制。该工具主要特点是可自助分析、自定义仪表盘、分析结果可视化（导出）、用户/角色权限控制，还集成了一个 <code>SQL</code> 编辑器，可以进行 <code>SQL</code> 编辑查询等。</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>superset</code> ，选择第一个 <code>amancevice/superset</code>，版本选择 <code>latest</code>。</p>\n<blockquote>\n<p>本文完成于2021年3月，当时的 <code>latest</code> 和现在安装的可能会存在差异</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210330153254.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>superset</code>。然后在 <code>superset</code> 文件夹中再创建两个新的子文件夹，命名为 <code>config</code>  和 <code>data</code>。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>/docker/superset/config</code></td>\n<td align=\"center\"><code>/home/superset</code></td>\n<td align=\"center\">存放配置文件</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210330192159.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不能冲突</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n<th align=\"center\">类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">8588</td>\n<td align=\"center\">8088</td>\n<td align=\"center\">TCP</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210330154721.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>开始资源会很高</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210330155233.png\"></p>\n<p>甚至CPU占用回到100%</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210330155304.png\"></p>\n<p>这个过程不会太长，这个时候你如果看日志，会发现日志在快速不停的刷新</p>\n<blockquote>\n<p>日志在 <code>Docker</code> –&gt; <code>容器</code> –&gt; <code>amancevice-superset1</code> –&gt; <code>详情</code> –&gt; <code>终端机</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210330192610.png\"></p>\n<p>等到日志不再刷新的时候，你就可以在浏览器中输入 <code>http://群晖IP:8588</code> ，并看到主界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210330164341.png\"></p>\n<p>这个时候资源消耗会稳定下来</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210330194335.png\"></p>\n<h2 id=\"配置用户名和密码\"><a href=\"#配置用户名和密码\" class=\"headerlink\" title=\"配置用户名和密码\"></a>配置用户名和密码</h2><p>启动 <code>Superset</code> 服务之后，使用 <code>superset-init</code> 脚本以 <code>admin</code> 用户和 <code>Superset</code> 表初始化数据库</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker <span class=\"built_in\">exec</span> -it amancevice-superset1 superset-init</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>其中 <code>amancevice-superset1</code> 是容器的名称</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210330165501.png\"></p>\n<p>用刚才创建的 admin 用户登录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210330171123.png\"></p>\n<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><p>命令查询</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker <span class=\"built_in\">exec</span> -it amancevice-superset1 superset --<span class=\"built_in\">help</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210330212707.png\"></p>\n<ol>\n<li> 设置您的本地管理员帐户</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker <span class=\"built_in\">exec</span> -it amancevice-superset1 superset fab create-admin \\</span><br><span class=\"line\">              --username admin \\</span><br><span class=\"line\">              --firstname Superset \\</span><br><span class=\"line\">              --lastname Admin \\</span><br><span class=\"line\">              --email admin@superset.com \\</span><br><span class=\"line\">              --password admin</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li> 将本地数据库迁移到最新版本</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker <span class=\"built_in\">exec</span> -it amancevice-superset1 superset db upgrade</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li> 加载示例</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker <span class=\"built_in\">exec</span> -it amancevice-superset1 superset load_examples</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li> 初始化 superset</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker <span class=\"built_in\">exec</span> -it amancevice-superset1 superset init</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"设置中文\"><a href=\"#设置中文\" class=\"headerlink\" title=\"设置中文\"></a>设置中文</h2><p><code>Superset</code> 的汉化并不完全，这里只是介绍方法。</p>\n<ol>\n<li>进入容器</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker <span class=\"built_in\">exec</span> --user root -it amancevice-superset1 /bin/bash</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>安装vim</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">apt-get install vim</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210330222920.png\"></p>\n<ol start=\"3\">\n<li>修改 <code>/usr/local/lib/python3.8/site-packages/superset/config.py</code></li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">vim /usr/<span class=\"built_in\">local</span>/lib/python3.8/site-packages/superset/config.py</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210330223215.png\"></p>\n<p>将 <code>en</code> 改为 <code>zh</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210330223510.png\"></p>\n<ol start=\"4\">\n<li>重新编译涉及到国际化的文件</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">pybabel compile -d /usr/<span class=\"built_in\">local</span>/lib/python3.8/site-packages/superset/translations</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210330224104.png\"></p>\n<ol start=\"5\">\n<li> 重启服务</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 退出容器</span></span><br><span class=\"line\"><span class=\"built_in\">exit</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 停止容器</span></span><br><span class=\"line\">docker stop amancevice-superset1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动容器</span></span><br><span class=\"line\">docker start amancevice-superset1</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210330230650.png\"></p>\n<ol start=\"6\">\n<li>打开主页 <code>http://群晖IP:8588</code>，已经是中文了</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210330224705.png\"></p>\n<h2 id=\"更换数据库\"><a href=\"#更换数据库\" class=\"headerlink\" title=\"更换数据库\"></a>更换数据库</h2><p>从安装日志可以看出来，系统默认使用的数据源为 <code>SQLite</code>，为了提高性能，可以改成 <code>MySQL</code> 数据库</p>\n<ol>\n<li>群晖 MariaDB 中新建数据库 <code>superset</code></li>\n</ol>\n<blockquote>\n<p>只是为了演示方便，创建用户时勾选了 <code>创建与用户同名的数据库并授予所有权限。</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210331114454.png\"></p>\n<ol start=\"2\">\n<li>进入容器</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker <span class=\"built_in\">exec</span> --user root -it amancevice-superset1 /bin/bash</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>修改 <code>/usr/local/lib/python3.8/site-packages/superset/config.py</code> 文件</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">vim /usr/<span class=\"built_in\">local</span>/lib/python3.8/site-packages/superset/config.py</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>修改系统数据源，格式为<code>SQLALCHEMY_DATABASE_URI =&quot;mysql://root:密码@xx.xx.xx.xx:3306/数据库名称?charset=utf8&quot;</code></li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210331115856.png\"></p>\n<ol start=\"5\">\n<li>初始化数据库</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 退出容器</span></span><br><span class=\"line\"><span class=\"built_in\">exit</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 初始化数据库</span></span><br><span class=\"line\">docker <span class=\"built_in\">exec</span> -it amancevice-superset1 superset db upgrade</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210331120033.png\"></p>\n<ol start=\"6\">\n<li>初始化 superset</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker <span class=\"built_in\">exec</span> -it amancevice-superset1 superset-init</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210331120439.png\"></p>\n<blockquote>\n<p>上图中可以看出已经切换到了 MySQL 了</p>\n</blockquote>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Welcome | Superset<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdXBlcnNldC5hcGFjaGUub3JnLw==\">https://superset.apache.org/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>apache/superset: Apache Superset is a Data Visualization and Data Exploration Platform<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FwYWNoZS9zdXBlcnNldA==\">https://github.com/apache/superset<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>amancevice/docker-superset: Docker image for AirBnB’s Superset<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtYW5jZXZpY2UvZG9ja2VyLXN1cGVyc2V0\">https://github.com/amancevice/docker-superset<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>amancevice/superset<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9yL2FtYW5jZXZpY2Uvc3VwZXJzZXQv\">https://hub.docker.com/r/amancevice/superset/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>docker-superset/examples at main · amancevice/docker-superset<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtYW5jZXZpY2UvZG9ja2VyLXN1cGVyc2V0L3RyZWUvbWFpbi9leGFtcGxlcw==\">https://github.com/amancevice/docker-superset/tree/main/examples<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>superset的docker安装配置和汉化_小小北漂-CSDN博客<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTQ1ODk4NTYvYXJ0aWNsZS9kZXRhaWxzLzEwMzU4MjgyNA==\">https://blog.csdn.net/u014589856/article/details/103582824<i class=\"fa fa-external-link-alt\"></i></span> </p>\n<p>Superset 基于Docker的安装&amp;入门解析_kamisamak的博客-CSDN博客<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMzODg3MDk2L2FydGljbGUvZGV0YWlscy8xMTQ1MzI5NDg=\">https://blog.csdn.net/qq_33887096/article/details/114532948<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","BI"]},{"title":"适合国内网盘的免费挂载工具CloudDrive","url":"/2021/08/20/%E9%80%82%E5%90%88%E5%9B%BD%E5%86%85%E7%BD%91%E7%9B%98%E7%9A%84%E5%85%8D%E8%B4%B9%E6%8C%82%E8%BD%BD%E5%B7%A5%E5%85%B7CloudDrive/","content":"<p>不久前老苏还在感慨国内的网盘可玩性不高，才没几天就被 <code>CloudDrive</code> 打脸了，虽然疼，但是大家有的玩老苏还是很开心的。</p>\n<p><strong>什么是 CloudDrive ?</strong></p>\n<blockquote>\n<p><code>CloudDrive</code> 是一款由网友开发的第三方网盘挂载工具，它支持将 <code>阿里云盘</code>、<code>115 网盘</code>、<code>天翼网盘</code>、<code>沃云盘</code>、<code>和彩云</code> 以及 <code>WebDAV</code> 协议映射变成为电脑的 <code>本地硬盘</code> 。</p>\n</blockquote>\n<p>这个项目并没有开源，目前已经支持 <code>windows</code> 和 <code>docker</code> 平台，建议先用小号尝鲜</p>\n<h1 id=\"docker安装\"><a href=\"#docker安装\" class=\"headerlink\" title=\"docker安装\"></a>docker安装</h1><p>和 <code>Rclone</code> 一样使用了 <code>fuse</code> 挂载云存储，所以我们会采用命令行方式来进行安装</p>\n<h2 id=\"第一步、建目录\"><a href=\"#第一步、建目录\" class=\"headerlink\" title=\"第一步、建目录\"></a>第一步、建目录</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>clouddrive</code>，然后在 <code>clouddrive</code> 文件夹中再创建两个新的子文件夹，分别命名为 <code>config</code> 和 <code>media</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210820110911.png\"></p>\n<h2 id=\"第二步、共享挂载\"><a href=\"#第二步、共享挂载\" class=\"headerlink\" title=\"第二步、共享挂载\"></a>第二步、共享挂载</h2><p>按官方教程，有2种方法</p>\n<p>方法1、在 <code>docker</code> 服务中启用 <code>MountFlags</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">mkdir -p /etc/systemd/system/docker.service.d/</span><br><span class=\"line\"></span><br><span class=\"line\">cat &lt;&lt;<span class=\"string\">EOF &gt; /etc/systemd/system/docker.service.d/clear_mount_propagation_flags.conf</span></span><br><span class=\"line\"><span class=\"string\">[Service]</span></span><br><span class=\"line\"><span class=\"string\">MountFlags=shared</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210820174553.png\"></p>\n<p>方法2、为主机中的映射卷启用共享挂载选项</p>\n<blockquote>\n<p>老苏用的方法2，因为这个之前老苏在『 <a href=\"https://laosu.ml/2021/06/21/%E7%BE%A4%E6%99%96%E4%B8%8A%E9%80%9A%E8%BF%87RcloneBrowser%E6%8C%82%E8%BD%BD%E4%BA%91%E7%9B%98\">群晖上通过RcloneBrowser挂载云盘</a> 』 一文中用过</p>\n</blockquote>\n<p>老苏映射的目录在 <code>volume2</code> 上，如果你的目录是其他的卷上，记得修改</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 共享挂载</span></span><br><span class=\"line\">mount --make-shared /volume2</span><br></pre></td></tr></table></figure>\n\n<p>这条命令在群晖重启后需要重新执行，可以把这句命令，通过 <code>任务计划</code> 加到开机脚本中，具体方法可以参考👇下文：</p>\n<blockquote>\n<p>『  <a href=\"https://laosu.ml/2021/06/21/%E7%BE%A4%E6%99%96%E4%B8%8A%E9%80%9A%E8%BF%87RcloneBrowser%E6%8C%82%E8%BD%BD%E4%BA%91%E7%9B%98\">群晖上通过RcloneBrowser挂载云盘</a>  』 的命令行安装部分</p>\n</blockquote>\n<h2 id=\"第三步、启动容器\"><a href=\"#第三步、启动容器\" class=\"headerlink\" title=\"第三步、启动容器\"></a>第三步、启动容器</h2><p>在 <code>ssh</code> 客户端中执行下面👇的命令即可</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run -d \\</span><br><span class=\"line\">--privileged \\</span><br><span class=\"line\">--name clouddrive \\</span><br><span class=\"line\">--device /dev/fuse:/dev/fuse \\</span><br><span class=\"line\">--restart unless-stopped \\</span><br><span class=\"line\">-v /volume2/docker/clouddrive:/CloudNAS:shared \\</span><br><span class=\"line\">-v /volume2/docker/clouddrive/config:/Config \\</span><br><span class=\"line\">-v /volume2/docker/clouddrive/media:/media:shared \\</span><br><span class=\"line\">-p 9798:9798 \\</span><br><span class=\"line\">cloudnas/clouddrive</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210820144542.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>当你在容器中看到 <code>clouddrive</code> ，就说明已经安装成功了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210820172610.png\"></p>\n<p>在浏览器中输入 <code>http://群晖IP:9798</code>，就能看到主界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210820113645.png\"></p>\n<p>先要注册账号，登录成功后是空白的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210820170805.png\"></p>\n<p>点图示之处，会显示支持的云盘</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210820114146.png\"></p>\n<h2 id=\"115\"><a href=\"#115\" class=\"headerlink\" title=\"115\"></a>115</h2><p>直接用手机 <code>APP</code> 扫描二维码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210820114513.png\"></p>\n<p>扫描成功后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210820114701.png\"></p>\n<p>进入目录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210820170858.png\"></p>\n<p>点开一部电影</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210820115910.png\"></p>\n<p>不过老苏因为不是 <code>115</code> 会员，所以速度不怎么样，基本上一直都在转圈。</p>\n<p>在 <code>file station</code> 能看到 <code>mount</code> 到本地的目录文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210820115222.png\"></p>\n<p>在 <code>ssh</code> 客户端中执行 <code>df -h</code> 能看到挂载成功的盘符</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210820174229.png\"></p>\n<p>但是新建目录、拷贝文件，都会报错，不过删除文件夹却可以</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210820131015.png\" alt=\"创建目录报错\"></p>\n<p>怀疑是权限问题，所以重新改了一下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run -d \\</span><br><span class=\"line\">--name clouddrive \\</span><br><span class=\"line\">--cap-add SYS_ADMIN \\</span><br><span class=\"line\">--device /dev/fuse \\</span><br><span class=\"line\">--security-opt apparmor=unconfined \\</span><br><span class=\"line\">--restart unless-stopped \\</span><br><span class=\"line\">-v /volume2/docker/clouddrive:/CloudNAS:shared \\</span><br><span class=\"line\">-v /volume2/docker/clouddrive/config:/Config \\</span><br><span class=\"line\">-v /volume2/docker/clouddrive/media:/media:shared \\</span><br><span class=\"line\">-p 9798:9798 \\</span><br><span class=\"line\">cloudnas/clouddrive</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210820155849.png\"></p>\n<p>但是情况还是一样的，只能后续再研究了</p>\n<h2 id=\"阿里云盘\"><a href=\"#阿里云盘\" class=\"headerlink\" title=\"阿里云盘\"></a>阿里云盘</h2><p>也是扫描二维码，这比需要自己抓取 <code>refresh_token</code> 简单多了，必须要给作者点个大大的赞👍</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210820120339.png\"></p>\n<p>扫描成功后的用法是一样的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210820130002.png\"></p>\n<p>看电影和原生的一样快，直接直接拖拽快进，所以不限速的阿里云盘还是很香的，如果你要注册，可以点👇下面的链接：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYWdlcy5hbGl5dW5kcml2ZS5jb20vbW9iaWxlLXBhZ2Uvd2ViL2JlaW52aXRlZC5odG1sP2NvZGU9NTg3M2FkYg==\">https://pages.aliyundrive.com/mobile-page/web/beinvited.html?code=5873adb<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"Windows-安装\"><a href=\"#Windows-安装\" class=\"headerlink\" title=\"Windows  安装\"></a>Windows  安装</h1><p>因为没有找到官方网站，所以老苏把安装程序放 <code>阿里云盘</code>做了分享，下载链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWxpeXVuZHJpdmUuY29tL3MvQnRLOHFackU1QW0=\">https://www.aliyundrive.com/s/BtK8qZrE5Am<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>安装很简单，完成后会用默认浏览器打开 <code>http://localhost:9798/</code>，因为开始已经注册过账号，这里只要登录即可，比 <code>docker</code> 安装的多了选择挂载的 <code>盘符</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210820170034.png\"></p>\n<p>但是 <code>docker</code> 那边已经挂载成功的 <code>115</code> 和 <code>阿里云</code> 并没有出现，说明并没有做数据同步，可能是因为老苏没有启用 <code>账号信息同步到云端</code> 吧</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210820170331.png\"></p>\n<p>还是需要扫码授权才能使用</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210820170706.png\"></p>\n<p>资源管理器中各种文件操作都正常</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210820171157.png\"></p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>虽然 <code>CloudDrive</code> 可能还存在一些 <code>bug</code> ，但是老苏还是很看好它，毕竟直接挂载才是网盘最终极的玩法。和 <code>RaiDrive</code>、<code>Mountain Duck</code> 等搭配使用，可以实现中外合璧的资源共享。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>cloudnas/clouddrive - Docker Image | Docker Hub<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9yL2Nsb3VkbmFzL2Nsb3VkZHJpdmU=\">https://hub.docker.com/r/cloudnas/clouddrive<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>CloudDrive - 将阿里云网盘变成电脑本地硬盘的免费挂载工具 (支持115/天翼/WebDAV) - 异次元软件下载<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaXBsYXlzb2Z0LmNvbS9jbG91ZGRyaXZlLmh0bWw=\">https://www.iplaysoft.com/clouddrive.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","网盘"]},{"title":"阿里云盘的目录文件列表程序Alist","url":"/2021/08/18/%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98%E7%9A%84%E7%9B%AE%E5%BD%95%E6%96%87%E4%BB%B6%E5%88%97%E8%A1%A8%E7%A8%8B%E5%BA%8FAlist/","content":"<p>网盘列表软件很多，老苏之前分享过 <code>Z-file</code> 和 <code>ShareList</code>，这两款软件都支持多家第三方存储，可以直接将网盘从个人使用变成一个面向大众的资源网站，不过老苏觉得还是自己低调用用就好了，毕竟是会加重网盘厂商访问压力的。</p>\n<blockquote>\n<p>『 <a href=\"https://laosu.ml/2020/12/25/%E5%9C%A8%E7%BA%BF%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95Z-file\">在线文件目录Z-file</a> 』<br>『 <a href=\"https://laosu.ml/2021/01/15/%E6%94%AF%E6%8C%81%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9A%84%E5%9C%A8%E7%BA%BF%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95ShareList\">支持天翼云的在线文件目录ShareList</a> 』</p>\n</blockquote>\n<p><strong>什么是 Alist ？</strong></p>\n<blockquote>\n<p><code>Alist</code> 是一款阿里云盘的目录文件列表程序，后端基于<code>golang</code> 最好的 <code>http</code> 框架 <code>gin</code> ，前端使用 <code>vue</code> 和 <code>ant design</code> 。</p>\n</blockquote>\n<p><code>Alist</code> 和前面两款软件最大的不同在于仅支持阿里云盘。</p>\n<h1 id=\"refresh-token\"><a href=\"#refresh-token\" class=\"headerlink\" title=\"refresh_token\"></a>refresh_token</h1><p>在 『 <a href=\"https://laosu.ml/2021/08/04/%E8%83%BD%E5%B0%86%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98%E6%8C%82%E8%BD%BD%E4%B8%BAwebdav%E7%9A%84webdav-aliyundriver\">能将阿里云盘挂载为webdav的webdav-aliyundriver</a>  』 一文中，老苏介绍过两种获取 <code>refresh_token</code> 的方法，但用这两种方法获取的 <code>refresh_token</code> 在这个项目中却不灵了，具体表现在：</p>\n<ol>\n<li>不能播放视频</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210817161711.png\"></p>\n<ol start=\"2\">\n<li>不能下载文件</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210817161904.png\"></p>\n<p>这显然不是我们希望的结果，按官方的说明，是因为 <code>web</code>  版的 <code>refresh_token</code> 有限制，所以需要抓取移动版的 <code>refresh_token</code> ，但是官方的文档写的太含糊，搞了半天才弄明白</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210818111058.png\"></p>\n<p>打开下图红框中的地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpYS5jb29sdWMuY29tL2RlY29kZV90b2tlbi8=\">https://media.cooluc.com/decode_token/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210818110535.png\"></p>\n<p>看到的是不是和老苏一样？</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210818110725.png\"></p>\n<p>必须<strong>往下拉</strong>，<strong>往下拉</strong>，<strong>往下拉</strong>才能看到教程，这坑踩得😶，害老苏花了半天时间找度娘</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210818111302.png\"></p>\n<p>为了方便大家看，把官方教程贴过来了，老苏略做了补充</p>\n<p>1、点击本页顶部 <code>移动端网页登录入口</code>，按 F12 打开 <code>chrome</code> 浏览器开发者工具，点击开发者工具 <code>Network</code> 栏。  </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210818111803.png\"></p>\n<p>需要重新加载一次才能记录网络活动</p>\n<blockquote>\n<p>windows 和 macos 下的快捷键不同，看提示操作就好了</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210818112419.png\"></p>\n<p>一定要看到下图中红框中的内容再进行下一步的操作</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210818112702.png\"></p>\n<p>2、输入阿里云盘账户信息进行登录（<strong>登录成功不会有任何提示</strong>），接着在开发人员工具找到并拷贝 <code>login.do?appName=aliyun</code> 链接的 <code>response</code> 数据。  </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210818111822.png\"></p>\n<p>3、粘贴 <code>response</code> 数据到输入框，点击 <code>解码Refresh Token</code> 按钮，页面会弹出你的 <code>refresh_token</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210818113303.png\"></p>\n<p>获取到 <code>refresh_token</code> 等于已经成功了一半，接下来我们就可以进入 <code>Alist</code> 的安装了</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>alist</code> ，选择第一个 <code>sbwml/alist</code>，双击直接下载。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210817171202.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>alist</code>，并在 <code>alist</code> 中新建子文件夹 <code>config</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/alist/config</code></td>\n<td align=\"center\"><code>/alist/config</code></td>\n<td align=\"center\">存放数据库和设置文件</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210816174103.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p><code>本地端口</code> 直接用了默认的端口 <code>5244</code> </p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">5244</td>\n<td align=\"center\">5244</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210816174238.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><p>不需要做任何修改，哪怕上一步修改了 <code>本地端口</code> 也不需要修改，因为这个 <code>PORT</code> 指的是 <code>容器端口</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210816174454.png\"></p>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><p>在 <code>File Station</code> 中打开 <code>docker/alist/config</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210816174831.png\"></p>\n<p>编辑 <code>conf.yml</code> 文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210816175444.png\"></p>\n<p>关于 <code>conf.yml</code> 中可以看看官方的文件，里面有注释，应该比较好理解，地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubm4uY2kvYXJjaGl2ZXMvYWxpc3QuaHRtbA==\">https://www.nn.ci/archives/alist.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>需要注意的是2个 <code>password</code>：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210818092826.png\"></p>\n<ul>\n<li><code>server</code> –&gt; <code>password</code> 是用于重构目录用的，老苏称之为 <code>重构密码</code>，可以为空；</li>\n<li><code>ali_drive</code>  –&gt; <code>drives</code>  –&gt; <code>password</code> 是访问网盘用的密码，老苏称之为 <code>盘符密码</code>，如果为空就可以直接刷出文件列表，多个盘可以单独设置不同的密码；</li>\n</ul>\n<p>当然最重要的还是填入之前获取的 <code>refresh_token</code> 值，保存之后需要重新启动容器。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210816180707.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:5244</code>，就能看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210817163526.png\"></p>\n<p>只是第一次会有报错信息 <code>path not found.(第一次请先点击网页底部rebuild)</code>，需要点底部的 <code>重构目录</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210817163813.png\"></p>\n<p>弹出菜单中，重建深度用了<code>-1</code>，输入前面设置的 <code>重构密码</code>（如果前面设置了的话）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210817163939.png\"></p>\n<p>根目录下重建的时间取决于文件的数量，可能需要的时间会比较长一些</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210817160218.png\"></p>\n<p>进入日志能看到有数据库插入操作</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210818104108.png\"></p>\n<p>完成后需要输入 <code>盘符密码</code>（如果前面设置了的话）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210818110017.png\"></p>\n<p>接着就能看到目录了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210817172157.png\"></p>\n<p>如果哪一级目录不显示，就重构一下目录即可</p>\n<blockquote>\n<p>前面虽然重建深度设置了 -1，但是 <code>max_files_count</code> 还是有限制的，不然这个重构时间会变得非常漫长</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210817172350.png\"></p>\n<p>然后就 OK 了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210817172632.png\"></p>\n<p>再来试试电影，已经可以非常流畅的播放了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210818110242.png\"></p>\n<p>如果你把这个项目映射到公网，别人在看电影的时候并不会占用你的带宽，也不会在群晖里生成缓存，而是直接走的阿里云，这也是为啥老苏说要低调使用的原因。</p>\n<p>唯一限制 <code>Alist</code> 速度的可能就是 <code>SQLite</code> ，而这可以通过配置为 <code>MySQL(MariaDB)</code>  来进行提升。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210818115606.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Xhofe/alist: 一个阿里云盘列表程序<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1hob2ZlL2FsaXN0\">https://github.com/Xhofe/alist<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Xhofe/alist-web: 阿里云盘列表的前端<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1hob2ZlL2FsaXN0LXdlYg==\">https://github.com/Xhofe/alist-web<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>阿里云盘列表AList部署教程 - Xhofe’s Blog<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubm4uY2kvYXJjaGl2ZXMvYWxpc3QuaHRtbA==\">https://www.nn.ci/archives/alist.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","网盘"]},{"title":"一个简单的web云盘go-drive","url":"/2021/08/16/%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84web%E4%BA%91%E7%9B%98go-drive/","content":"<p><strong>什么是 go-drive ?</strong></p>\n<blockquote>\n<p>go-drive 是一个简单的 web 云盘应用程序，支持本地、FTP/SFTP、S3、OneDrive、WebDAV、Google Drive。</p>\n</blockquote>\n<ul>\n<li><p>功能：</p>\n<ul>\n<li>  基本的文件管理(上传，下载，复制，移动，重命名，删除)</li>\n<li>  基于用户/组的访问控制</li>\n<li>  图片浏览</li>\n<li>  文本编辑</li>\n<li>  路径挂载</li>\n<li>  在 Drive 之间复制文件(夹)</li>\n<li>  Drive 管理界面</li>\n</ul>\n</li>\n<li><p>目前支持的 Drives</p>\n<ul>\n<li>  本地文件</li>\n<li>  FTP</li>\n<li>  SFTP</li>\n<li>  WebDAV 协议</li>\n<li>  S3 兼容的云存储</li>\n<li>  OneDrive</li>\n<li>  Google Drive</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>go-drive</code> ，选择第二个 <code>devld/go-drive</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210614123610.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>go-drive</code>。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>/docker/go-drive</code></td>\n<td align=\"center\"><code>/app/data</code></td>\n<td align=\"center\">数据目录</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210614124549.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不能冲突</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n<th align=\"center\">类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">8089</td>\n<td align=\"center\">8089</td>\n<td align=\"center\">TCP</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210614124759.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:8089</code>，就看到主界面，不过一开始是空空的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210614125406.png\"></p>\n<p>点右上角的 <code>登录</code> 按钮</p>\n<blockquote>\n<p>默认用户为 <code>admin</code>，密码 <code>123456</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210614125536.png\"></p>\n<p>登录成功后，点 <code>管理员</code> 可以进行设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210614125657.png\"></p>\n<h2 id=\"添加-OneDrive\"><a href=\"#添加-OneDrive\" class=\"headerlink\" title=\"添加 OneDrive\"></a>添加 OneDrive</h2><p>点中间的 <code>OneDrive README</code> 有详细的配置说明</p>\n<blockquote>\n<p>【注意】：似乎只能用 <code>personal</code> ，不能使用 <code>bussiness</code> 类型的 OneDrive，1~9步都没问题，但是第10步的验证如果用 <code>bussiness</code> 类型的盘，会显示账号不存在，比较遗憾。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210614130513.png\"></p>\n<ol>\n<li>访问 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3J0YWwuYXp1cmUuY29tLw==\">https://portal.azure.com/<i class=\"fa fa-external-link-alt\"></i></span>，首先登录你的 Microsoft 账户。</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210614131331.png\"></p>\n<ol start=\"2\">\n<li>在页面左侧的菜单中选择 <code>Azure Active Directory</code>。</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210614130742.png\"></p>\n<blockquote>\n<p>并不是所有的账号都支持，老苏就有一个号显示没有权限</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210614132116.png\"></p>\n<ol start=\"3\">\n<li>在打开的页面上找到 <code>应用注册</code></li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210614131837.png\"></p>\n<p>进入 <code>新注册</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210614132529.png\"></p>\n<p>填写 <code>名称</code>，<code>受支持的帐户类型</code> 改为 <code>仅 Microsoft 个人帐户</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210614132407.png\"></p>\n<p>点 <code>注册</code>，右上方会显示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210614132806.png\"></p>\n<ol start=\"4\">\n<li>完成之后会显示 <code>概要</code>，点 <code>添加重定向 URI</code>，或者左侧的 <code>身份验证</code></li>\n</ol>\n<blockquote>\n<p>这里的 <code>应用程序(客户端) ID</code>  就是 <code>客户端 ID</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210614133438.png\"></p>\n<ol start=\"5\">\n<li>选择 <code>添加平台</code>，在右侧选择 <code>Web</code> </li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210614133652.png\"></p>\n<ol start=\"6\">\n<li><code>重定向 URI</code> 可以填写 <code>https://go-drive.top/oauth_callback</code></li>\n</ol>\n<blockquote>\n<p> 这个链接是一个静态的 HTML 页面，代码在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2RldmxkL2dvLWRyaXZlL2Jsb2IvbWFzdGVyL2RvY3Mvb2F1dGhfY2FsbGJhY2suaHRtbA==\">https://github.com/devld/go-drive/blob/master/docs/oauth_callback.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210614134105.png\"></p>\n<ol start=\"7\">\n<li>在左侧找到 <code>证书和密码</code>，添加 <code>客户端密码</code></li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210614135511.png\"></p>\n<p>可以选择 <code>截止期限</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210614135732.png\"></p>\n<p>创建完成后，将 <code>值</code> 保存备用，<code>值</code> 即为 <code>Client Secret</code>，也就是 <code>客户端秘钥</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210614135909.png\"></p>\n<ol start=\"8\">\n<li>在页面左侧找到 <code>API 权限</code>，添加权限。</li>\n</ol>\n<p>选择 <code>常用 Microsoft API</code> 下的 <code>Microsoft Graph</code>，然后选择 <code>委托的权限</code>，应用需要三种权限：</p>\n<ul>\n<li>  <code>User.Read</code>: 读取用户的基本信息</li>\n<li>  <code>Files.ReadWrite</code>: 读写 OneDrive 的任何文件</li>\n<li>  <code>offline_access</code>: 这个权限用于登录成功后获取 <code>Refresh Token</code>，保持登录状态</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210614141445.png\"></p>\n<p>添加完成后，应该如下图所示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210614141627.png\"></p>\n<ol start=\"9\">\n<li>回到 <code>go-drive</code> 的设置界面，填入 <code>客户端 ID</code> 和 <code>客户端秘钥</code>，保存</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210614142250.png\"></p>\n<ol start=\"10\">\n<li>点 <code>连接到 OneDrive</code>，在弹出的界面中点 <code>是</code></li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210614143257.png\"></p>\n<ol start=\"11\">\n<li>下拉选择 <code>personal1</code>，点 <code>保存</code></li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210614144955.png\"></p>\n<ol start=\"12\">\n<li>点 <code>重新加载盘</code> </li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210614152614.png\"></p>\n<blockquote>\n<p>【注意】：任何对存储映射的修改均需点击 <code>重新加载盘</code>才可生效。</p>\n</blockquote>\n<ol start=\"13\">\n<li>点 <code>主页</code> ，可以看到我们刚刚加的 <code>OD</code></li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210614152838.png\"></p>\n<p>点 <code>OD</code> 进入</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210614152924.png\"></p>\n<p>上传个文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210614153102.png\"></p>\n<h2 id=\"添加本地目录\"><a href=\"#添加本地目录\" class=\"headerlink\" title=\"添加本地目录\"></a>添加本地目录</h2><p>默认情况下，<code>本地文件</code>的<code>根目录</code>为相对路径，并且被限制在 <code>&lt;数据目录&gt;/local</code> 目录中，如果要添加本地文件的映射，则需提前在 <code>&lt;数据目录&gt;/local</code> 下新建名为映射名称的目录。</p>\n<p>例如：我们在 <code>go-drive</code> 中建一个子目录 <code>local</code>，然后在 <code>local</code> 中再建一个子目录 <code>root</code>，看起来是这样的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210614153523.png\"></p>\n<p><code>添加盘</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210614154014.png\"></p>\n<p><code>保存</code> –&gt; <code>重新加载盘</code> –&gt; <code>主页</code>，就可以看到刚刚添加的 <code>本地磁盘</code> 了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210614154110.png\"></p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>安装简单，配置也不复杂，比较遗憾的是对 <code>Onedrive</code> 只支持 <code>personal</code> 而不支持 <code>bussiness</code> 类型，大大降低了可玩性。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>devld/go-drive: A simple cloud drive mapping web app supports local, FTP/SFTP, S3, OneDrive, WebDAV, Google Drive.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2RldmxkL2dvLWRyaXZl\">https://github.com/devld/go-drive<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Go-drive | go-drive<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9nby1kcml2ZS50b3Av\">https://go-drive.top/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","网盘"]},{"title":"在浏览器中运行Windows11网页版","url":"/2021/08/13/%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E8%BF%90%E8%A1%8CWindows11%E7%BD%91%E9%A1%B5%E7%89%88/","content":"<p>按照微软的预告，<code>Windows 11</code> 正式版会在 <code>2021</code> 年底推出。现在网上已经有了 <code>Windows 11 ISO</code> 预览版本，不过应该还是开发测试版，并不能应用于正式环境。</p>\n<p>老苏第一时间就下载了官方的升级检测工具，毕竟能直接运行 <code>Android</code> 还是很吸引人的。</p>\n<h1 id=\"官方检测工具\"><a href=\"#官方检测工具\" class=\"headerlink\" title=\"官方检测工具\"></a>官方检测工具</h1><ol>\n<li>下载 Windows PC 健康检查应用程序</li>\n</ol>\n<p>因为过高的配置要求导致微软被狂喷，目前这个工具已经被微软删除了，不过还可以在第三方下载，地址老苏就不贴了，搜 <code>Windows PC 健康检查应用程序</code> 就能找到</p>\n<ol start=\"2\">\n<li>安装并运行</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210625225143.png\"></p>\n<ol start=\"3\">\n<li>开始检查</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210625225441.png\"></p>\n<ol start=\"4\">\n<li>详情</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210810001256.png\"></p>\n<ol start=\"5\">\n<li>最低要求</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210625225745.png\"></p>\n<p>让老苏失望的是，老苏的台式机也不满足 <code>Windows 11</code> 的安装要求，大部分机器不能升级的原因是不支持 <code>TPM 2.0</code>，但老苏的机器显然不是，检测工具几乎没有提供关于如何修复任何问题的信息和指导，所以老苏又下载了第三方的检测工具。</p>\n<h1 id=\"第三方检测工具\"><a href=\"#第三方检测工具\" class=\"headerlink\" title=\"第三方检测工具\"></a>第三方检测工具</h1><p><code>WhyNotWin11</code> 是个开源项目：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3JjbWFlaGwvV2h5Tm90V2luMTE=\">https://github.com/rcmaehl/WhyNotWin11<i class=\"fa fa-external-link-alt\"></i></span>，可以在这里下到最新的版本：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3JjbWFlaGwvV2h5Tm90V2luMTEvcmVsZWFzZXM=\">https://github.com/rcmaehl/WhyNotWin11/releases<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>老苏直接下了最新的 v2.3.2，文件很小</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210809202952.png\"></p>\n<p>直接运行，如果报有毒信任一下即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210809202851.png\"></p>\n<p>从测试结果看应该是 <code>CPU</code> 不能满足要求，查了下最低需要 <code>英特尔 8 代 CPU</code>，看来注定是与 <code>Windows 11</code> 无缘了。</p>\n<h1 id=\"Web-版-Windows-11\"><a href=\"#Web-版-Windows-11\" class=\"headerlink\" title=\"Web 版 Windows 11\"></a>Web 版 Windows 11</h1><p>虽然 <code>Windows 11</code> 用不了，但是国外有个大牛在 Web 上复刻了 <code>Windows 11</code> 的界面及部分功能，可用于体验  <code>Windows 11</code> 的一些功能。</p>\n<p><strong>什么是 Windows 11 in React ？</strong></p>\n<blockquote>\n<p>这个开源项目旨在使用 React、CSS (SCSS) 和 JS 等标准 Web 技术在 Web 上复刻 Windows 11 桌面体验。目前该项目已经实现部分功能，例如微软商店、Edge 浏览器等。</p>\n</blockquote>\n<p>可以直接在线体验： <span class=\"exturl\" data-url=\"aHR0cHM6Ly93aW4xMS5ibHVlZWRnZS5tZS8=\">https://win11.blueedge.me<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>不过可能受网络影响，并不是特别顺畅，所以老苏打算在本地安装</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>在群晖上以 Docker 方式安装。</p>\n<p>因为这个镜像在 <code>ghcr.io</code>，而不是之前我们常用的 <code>registry.hub.docker.com</code>，本想在注册表中 <code>新增</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210809210214.png\"></p>\n<p>选中后点 <code>使用</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210809210440.png\"></p>\n<p>但会显示报错</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210809210348.png\"></p>\n<p>所以老苏只能用命令行来安装，先用 <code>SSH</code> 客户端登录到群晖，然后执行下面👇的命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run -d  --name windows11 \\</span><br><span class=\"line\">--restart always \\</span><br><span class=\"line\">-p 3018:3000 \\</span><br><span class=\"line\">ghcr.io/blueedgetechno/windows11:master</span><br></pre></td></tr></table></figure>\n\n<p>速度有点慢，如果中断了可以多执行几次，直到成功为止</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210809233254.png\"></p>\n<h2 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h2><p>在浏览器（建议用 <code>Chrome</code> ）中输入 <code>http://群晖IP:3018</code>，就能看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210809233538.png\"></p>\n<p>可以体验 <code>Edge</code> 浏览器、应用商店等功能，还有很多功能还在实现中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210809235048.png\"></p>\n<p>不过就是在局域网，感觉也不是特别流畅，刚启动时容器的 <code>CPU</code> 占用一度可以达到 <code>30%</code> 多</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210811150745.png\"></p>\n<p>稳定之后还是比较低的，不到 <code>1%</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210811150249.png\"></p>\n<p>用于体验体验应该还行吧</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>rcmaehl/WhyNotWin11: Detection Script to help identify why your PC is not Windows 11 Release Ready<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3JjbWFlaGwvV2h5Tm90V2luMTE=\">https://github.com/rcmaehl/WhyNotWin11<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>blueedgetechno/windows11: windows 11 in react 💻🌈⚡<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JsdWVlZGdldGVjaG5vL3dpbmRvd3MxMQ==\">https://github.com/blueedgetechno/windows11<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","windows"]},{"title":"开源的看板管理工具Wekan","url":"/2021/08/11/%E5%BC%80%E6%BA%90%E7%9A%84%E7%9C%8B%E6%9D%BF%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7Wekan/","content":"<p>本文也是应网友要求而写，大家有什么需求或者问题可以：</p>\n<ul>\n<li>给公众号发消息。虽然老苏的公众号并不支持留言，并且还有很多限制，但聊胜于无</li>\n<li>点『 阅读原文 』 去老苏的博客 （<a href=\"https://laosu.ml/\">https://laosu.ml</a>） 留言</li>\n<li>发邮件：<span class=\"exturl\" data-url=\"bWFpbHRvOndic3UyMDAzQGdtYWlsLmNvbQ==\">wbsu2003@gmail.com<i class=\"fa fa-external-link-alt\"></i></span>、<span class=\"exturl\" data-url=\"bWFpbHRvOndic3UyMDAzQGhvdG1haWwuY29t\">wbsu2003@hotmail.com<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<p>老苏会竭尽所能满足大家的要求。</p>\n<hr>\n<p><strong>什么是 Wekan ？</strong></p>\n<blockquote>\n<p>Wekan 是一款开源的卡片看板软件，可以用来规划个人计划，或和 <code>Scrum</code> 敏捷开发结合管理开发流程。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/03/08/1615182203189-1615182203222.png\" alt=\"title\"></p>\n<blockquote>\n<p>之前同类型的文章： <a href=\"https://laosu.ml/2020/05/10/%E9%80%82%E5%90%88%E5%B0%8F%E5%9B%A2%E9%98%9F%E7%9A%84Kanboard%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E8%BD%AF%E4%BB%B6/\">适合小团队的Kanboard项目管理软件</a></p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p><code>Wekan</code> 涉及到两个镜像，比较简单的安装方式是编排 <code>docker-compose.yml</code> 文件，然后用 <code>docker-compose up -d</code> 命令启动</p>\n<blockquote>\n<p><code>docker-compose.yml</code> 文件可以在这里下载：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3dla2FuL3dla2FuL21hc3Rlci9kb2NrZXItY29tcG9zZS55bWw=\">https://raw.githubusercontent.com/wekan/wekan/master/docker-compose.yml<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<p>但今天老苏想尝试用群晖传统的图形界面来安装</p>\n<h2 id=\"镜像下载\"><a href=\"#镜像下载\" class=\"headerlink\" title=\"镜像下载\"></a>镜像下载</h2><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>wekan</code> ，选择第一个 <code>wekanteam/wekan</code>，和以往不同，版本不能选择 <code>latest</code>，而要选择已发布的 <code>tags</code>，老苏选了最新的 <code>v5.41</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210805104716.png\"></p>\n<p>之所以不要选择 <code>latest</code>，官方有相关的说明：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dla2FuL3dla2FuL2lzc3Vlcy8zODc0\">https://github.com/wekan/wekan/issues/3874<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210805142706.png\"></p>\n<p>另外因为 <code>wekan</code> 依赖 <code>MongoDB</code> 而不是 <code>MySQL</code> 做数据库，所以数据库也需要进行安装</p>\n<p>在注册表中搜索 <code>mongo</code> ，选择第一个 <code>mongo</code>，但是关于版本在这里要做一个说明，一般情况下可以选 <code>latest</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210805110152.png\"></p>\n<p>但是 <code>latest</code> 的版本实际上是 <code>5.01</code> ，有网友反馈在某些不支持 <code>AVX 指令集</code> 的 <code>CPU</code> 上，会导致容器不断重启，并且在日志中看到下面的内容</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">MongoDB 5.0+ requires a CPU with AVX support</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>下图为网友提供</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210806220021.png\"></p>\n<p>老苏已测试过 <code>mongo</code> 的 <code>4.4</code> 版本可以正常使用，所以如果你不确定你的 <code>CPU</code> 是否支持 <code>AVX 指令集</code> ，可以直接选择这个版本来避免不必要的麻烦</p>\n<blockquote>\n<p>理论上 <code>5.0</code> 版本之前的都可以，但老苏只测试了 <code>4.4</code> </p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210808113245.png\"></p>\n<h2 id=\"安装-mongo\"><a href=\"#安装-mongo\" class=\"headerlink\" title=\"安装 mongo\"></a>安装 mongo</h2><p>容器名称这次没有用默认的，改为了 <code>wekandb</code>，因为这个名称后面会用到，当然你不改也可以，修改只是为了容易识别</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210805112047.png\"></p>\n<h3 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h3><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>wekan</code>，再在 <code>wekan</code> 目录中建一个子目录 <code>db</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/wekan/db</code></td>\n<td align=\"center\"><code>/data/db</code></td>\n<td align=\"center\">存放数据库</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210805111650.png\"></p>\n<h3 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h3><p>因为不需要从外部访问 <code>MongoDB</code> ，所以采用自动端口而没有指定，所以这里默认即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210805111806.png\"></p>\n<h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><p>全部默认，不需要做任何修改，截图只是为了看看 <code>mongo</code> 的版本号</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210805111745.png\"></p>\n<p><code>4.4</code> 版本号</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210811093924.png\"></p>\n<h3 id=\"高级设置\"><a href=\"#高级设置\" class=\"headerlink\" title=\"高级设置\"></a>高级设置</h3><p>勾选了 <code>启用自动重新启动</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210805111932.png\"></p>\n<p>如果运行正常并且不报错的话，就可以进行 <code>Wekan</code> 的安装了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210805112428.png\"></p>\n<h2 id=\"安装-Wekan\"><a href=\"#安装-Wekan\" class=\"headerlink\" title=\"安装 Wekan\"></a>安装 Wekan</h2><h3 id=\"端口-1\"><a href=\"#端口-1\" class=\"headerlink\" title=\"端口\"></a>端口</h3><p>不冲突就行，随便选了个 <code>2680</code> </p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">2680</td>\n<td align=\"center\">8080</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210805113024.png\"></p>\n<h3 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h3><p>点 <code>+</code> 号新增，容器名称中找到前面创建的 <code>wekandb</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210805113300.png\"></p>\n<p><code>别名</code> 老苏设置成了跟 <code>容器名称</code> 一样</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210805113350.png\"></p>\n<h3 id=\"环境-1\"><a href=\"#环境-1\" class=\"headerlink\" title=\"环境\"></a>环境</h3><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>MONGO_URL</code></td>\n<td align=\"center\">数据库地址，<code>mongodb://db的别名</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>ROOT_URL</code></td>\n<td align=\"center\">url 访问地址</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210805114150.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:2680</code>，也就是我们前面的 <code>ROOT_URL</code>，就能看到登录界面，需要先注册用户</p>\n<blockquote>\n<p>最下面是语言，如果不是 <code>简体中文</code>，可以自己重新选择一下</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210805114357.png\"></p>\n<p>登录成功后的主界面还是空空的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210805114706.png\"></p>\n<p>老苏尝试弄了个 <code>发文计划</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210806091323.png\"></p>\n<p>进入看板</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210805120425.png\"></p>\n<h1 id=\"内网穿透\"><a href=\"#内网穿透\" class=\"headerlink\" title=\"内网穿透\"></a>内网穿透</h1><p>老苏用 <code>frps</code> 做的内网穿透，反代时不需要修改 <code>ROOT_URL</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210806091547.png\"></p>\n<p>成功后可直接用域名访问</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>wekan/wekan: 源代码<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dla2FuL3dla2Fu\">https://github.com/wekan/wekan<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Wekan — Open-Source kanban<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZWthbi5naXRodWIuaW8v\">https://wekan.github.io/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Docker安装Wekan面板并修改访问端口 | 梓喵出没<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYXppbWlhby5jb20vNTUwMy5odG1s\">https://www.azimiao.com/5503.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","看板"]},{"title":"TrWebOCR开源的离线OCR","url":"/2021/08/09/TrWebOCR%E5%BC%80%E6%BA%90%E7%9A%84%E7%A6%BB%E7%BA%BFOCR/","content":"<p><strong>什么是 OCR ？</strong></p>\n<blockquote>\n<p>OCR（optical character recognition）文字识别是指电子设备（例如扫描仪或数码相机）检查纸上打印的字符，然后用字符识别方法将形状翻译成计算机文字的过程；即，对文本资料进行扫描，然后对图像文件进行分析处理，获取文字及版面信息的过程。【百度百科】</p>\n</blockquote>\n<p><strong>什么是 Tr ？</strong></p>\n<blockquote>\n<p>TR（Text Recognition）是一款针对扫描文档的离线文本识别 SDK，核心代码全部采用 C++ 开发，并提供 Python 接口。</p>\n</blockquote>\n<p><strong>什么是 TrWebOCR ？</strong></p>\n<blockquote>\n<p> TrWebOCR 是基于开源项目 Tr（Text Recognition） 构建的开源、易用的中文离线 OCR，识别率媲美大厂，并且提供了易用的 web 页面及 web 的接口，方便日常工作使用或者其他程序来调用。</p>\n</blockquote>\n<p>这是热心的网友推荐的，正好老苏整理小人书的时候用的着，有时候想从防拷贝的网页上抓些文字也是很方便的（当然你也可以安装 <code>Simple Allow Copy</code> 这样的 <code>Chrome</code> 插件）。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>TrWebOCR</code> ，选择第一个 <code>mmmz/trwebocr</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210717154013.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不冲突就行</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">8089</td>\n<td align=\"center\">8089</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210717154728.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:8089</code>，就看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210717154847.png\"></p>\n<h2 id=\"文字识别\"><a href=\"#文字识别\" class=\"headerlink\" title=\"文字识别\"></a>文字识别</h2><p>打开小人书直接用截图工具框选要识别的部分</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210717155305.png\"></p>\n<p>粘贴图片到网页中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210717155701.png\"></p>\n<p>点 <code>识别</code> 按钮</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210717155517.png\"></p>\n<p>即便有些倾斜，但是识别率也是非常准确的</p>\n<h2 id=\"图文混排\"><a href=\"#图文混排\" class=\"headerlink\" title=\"图文混排\"></a>图文混排</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210717160456.png\"></p>\n<p>粘贴图片到网页中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210717160532.png\"></p>\n<p><code>原始结果</code>中正确的识别了文字，但是 <code>识别的文字</code> 中是空的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210717160625.png\"></p>\n<p>看来图片还是会对识别形成干扰</p>\n<h2 id=\"竖排文字\"><a href=\"#竖排文字\" class=\"headerlink\" title=\"竖排文字\"></a>竖排文字</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210717160047.png\"></p>\n<p>粘贴图片到网页中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210717160139.png\"></p>\n<p>有点混乱</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210717160245.png\"></p>\n<p>基本上谈不上识别了，看来对于竖排文字有点无能为力</p>\n<h2 id=\"繁体中文\"><a href=\"#繁体中文\" class=\"headerlink\" title=\"繁体中文\"></a>繁体中文</h2><p>网上随便搜的一张名片</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210717161342.png\"></p>\n<p>只有个别字识别存在错误，而且繁体识别出来的文字还是繁体</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210717161429.png\"></p>\n<p>总体效果还是很不错的</p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>TrWebOCR 识别速度非常快，而且准确率很高，虽然代码已经一年没更新了，但对老苏来说绝对够用了</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>alisen39/TrWebOCR: 开源易用的中文离线OCR，识别率媲美大厂，并且提供了易用的web页面及web的接口，方便人类日常工作使用或者其他程序来调用~<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FsaXNlbjM5L1RyV2ViT0NS\">https://github.com/alisen39/TrWebOCR<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>myhub/tr: Free Offline OCR 离线的中文文本检测+识别SDK<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL215aHViL3Ry\">https://github.com/myhub/tr<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","OCR"]},{"title":"网页监控提醒工具WebMonitor","url":"/2021/08/06/%E7%BD%91%E9%A1%B5%E7%9B%91%E6%8E%A7%E6%8F%90%E9%86%92%E5%B7%A5%E5%85%B7WebMonitor/","content":"<p><strong>什么是 WebMonitor ？</strong></p>\n<blockquote>\n<p><code>WebMonitor</code> 是一款 <code>python</code> 写的开源的网页监控程序，能监控网页变化和 <code>RSS</code> 更新，并支持多种通知方式。</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>webmonitor</code> ，选择第一个 <code>logicjake/webmonito</code>，不需要选择版本，双击直接下载。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210731115707.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>webmonitor</code>。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>/docker/webmonitor</code></td>\n<td align=\"center\"><code>/app/db</code></td>\n<td align=\"center\">数据库目录</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210731123449.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不能冲突</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n<th align=\"center\">类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">8050</td>\n<td align=\"center\">5000</td>\n<td align=\"center\">TCP</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210731123608.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">PORT</td>\n<td align=\"center\">默认为 <code>5000</code></td>\n</tr>\n<tr>\n<td align=\"center\">USERNAME</td>\n<td align=\"center\">用户默认为 <code>admin</code></td>\n</tr>\n<tr>\n<td align=\"center\">PASSWORD</td>\n<td align=\"center\">密码默认为 <code>admin</code></td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>老苏只修改了密码，其他都还是默认值</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210731123826.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:8050</code>，就能看到登录界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210731124033.png\"></p>\n<p>登录成功后的主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210731124207.png\"></p>\n<h1 id=\"通知方式\"><a href=\"#通知方式\" class=\"headerlink\" title=\"通知方式\"></a>通知方式</h1><p>默认的通知方式除了邮件，老苏都没有，好在 <code>WebMonitor</code> 还支持自定义的通知方式，可以通过 <code>系统管理</code> –&gt; <code>通知方式</code> –&gt; <code>增加</code> 自定义通知。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210731194738.png\"></p>\n<h2 id=\"WxPusher\"><a href=\"#WxPusher\" class=\"headerlink\" title=\"WxPusher\"></a>WxPusher</h2><p>关于 <code>WxPusher</code> 可以看看老苏的之前写的 『 <a href=\"https://laosu.ml/2021/06/18/%E9%80%9A%E8%BF%87WxPusher%E5%9C%A8%E7%BE%A4%E6%99%96%E4%B8%8A%E5%AE%9E%E7%8E%B0%E5%BE%AE%E4%BF%A1%E6%8E%A8%E9%80%81\">通过WxPusher在群晖上实现微信推送</a> 』</p>\n<p>官网上可以找到 <code>POST</code> 示例： <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubG9naWNqYWtlLnh5ei9XZWJNb25pdG9yLyMvaG93P2lkPXBvc3Q=\">https://www.logicjake.xyz/WebMonitor/#/how?id=post<i class=\"fa fa-external-link-alt\"></i></span></p>\n<blockquote>\n<p><code>发送网址&#123;data=&#125;</code>。将要发送的 <code>body</code> 内容放在 <code>&#123;data=&#125;</code> 内，其中 <code>&#123;header&#125;</code> 和 <code>&#123;content&#125;</code> 替换掉标题和内容的位置。以 <code>WxPusher</code> 为例，格式如下：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 只要替换成您自己的 appToken 和 uid 值即可</span><br><span class=\"line\">http:&#x2F;&#x2F;wxpusher.zjiecode.com&#x2F;api&#x2F;send&#x2F;message&#123;data&#x3D;&#123;</span><br><span class=\"line\">  &quot;appToken&quot;:&quot;AT_xxx&quot;,</span><br><span class=\"line\">  &quot;content&quot;:&#123;content&#125;,</span><br><span class=\"line\">  &quot;summary&quot;:&#123;header&#125;,</span><br><span class=\"line\">  &quot;contentType&quot;:3,</span><br><span class=\"line\">  &quot;uids&quot;:[&quot;UID_xxxx&quot;],</span><br><span class=\"line\">  &quot;url&quot;:&quot;http:&#x2F;&#x2F;wxpusher.zjiecode.com&quot;</span><br><span class=\"line\">&#125;&#125;</span><br></pre></td></tr></table></figure>\n\n<p>保存即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210731135518.png\"></p>\n<h2 id=\"Alertover\"><a href=\"#Alertover\" class=\"headerlink\" title=\"Alertover\"></a>Alertover</h2><p>关于 <code>Alertover</code> 可以看看老苏的之前写的 『  <a href=\"https://laosu.ml/2021/02/26/%E7%94%A8Alertover%E5%AE%9E%E7%8E%B0%E7%BE%A4%E6%99%96%E7%9A%84%E5%AE%9E%E6%97%B6%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81\">用Alertover实现群晖的实时消息推送</a>  』</p>\n<blockquote>\n<p>之前为了安全性，我们设置了 <code>$localOnly = true;</code>，为了能被 <code>WebMonitor</code> 调用，需改为 <code>$localOnly = false;</code></p>\n</blockquote>\n<p>参考官网 <code>GET</code> 的示例：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubG9naWNqYWtlLnh5ei9XZWJNb25pdG9yLyMvaG93P2lkPWdldA==\">https://www.logicjake.xyz/WebMonitor/#/how?id=get<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><code>Alertover</code> 的格式如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;群晖IP或域名&#x2F;synology-alertover.php?source&#x3D;发送源ID&amp;receiver&#x3D;接收组ID&amp;title&#x3D;&#123;header&#125;&amp;content&#x3D;&#123;content&#125;</span><br></pre></td></tr></table></figure>\n\n<p>保存即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210731195210.png\"></p>\n<h1 id=\"RSS监控\"><a href=\"#RSS监控\" class=\"headerlink\" title=\"RSS监控\"></a>RSS监控</h1><p>在 <code>任务管理</code> –&gt; <code>RSS监控管理</code> 添加新任务</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210731192539.png\"></p>\n<p>保存任务</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210731192658.png\"></p>\n<p>保存任务后不会立即执行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210731193040.png\"></p>\n<p>5分钟后微信将收到第一次抓取的信息</p>\n<blockquote>\n<p>但是实际收到的时间有时候是 5 分钟，有时候是 10 分钟，真是让人迷惑啊</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210731194142.jpg\"></p>\n<p>之后有变化才会再次通知</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210802190705.jpg\"></p>\n<p><code>Alertover</code> 也是一样的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210731194250.jpg\"></p>\n<p>有变化之后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210802190427.jpg\"></p>\n<h1 id=\"网页监控\"><a href=\"#网页监控\" class=\"headerlink\" title=\"网页监控\"></a>网页监控</h1><p>一般都是用来监控价格变化，但老苏暂时没有什么想买的东西，所以就监控下每天发布的新片子吧</p>\n<p>打开网址 <code>https://www.bd2020.com/movies/index.htm</code>，按 <code>F12</code> 调出开发者工具</p>\n<ul>\n<li>① 按左上角的小箭头（Ctrl+Shift+C）开启选择模式</li>\n<li>② 选定区域后右键高亮的代码</li>\n<li>③ <code>Copy</code> –&gt; <code>Copy XPath</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210731215433.png\"></p>\n<p>在 <code>任务管理</code> –&gt; <code>网页监控管理</code> 添加新任务</p>\n<ul>\n<li>任务名称：随便</li>\n<li>监控网址：填写监控网址</li>\n<li>元素选择器类型：选择 <code>Xpath</code></li>\n<li>元素选择器：粘贴上一步复制的内容</li>\n<li>通知方式：同时添加了 <code>WxPusher</code> 和 <code>Alertover</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210731203242.png\"></p>\n<p>保存即可完成监控项目的创建</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210731210801.png\"></p>\n<p>5分钟后微信将收到第一次抓取的信息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210731214229.jpg\"></p>\n<p>之后有变化才会再次通知</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210801101822.jpg\"></p>\n<p><code>Alertover</code> 也是一样的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210731214308.jpg\"></p>\n<p>有变化之后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210801101858.jpg\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>LogicJake/WebMonitor: 实时监控网页变化，并发送通知（Monitor web page changes in real time and send notifications）<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0xvZ2ljSmFrZS9XZWJNb25pdG9y\">https://github.com/LogicJake/WebMonitor<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>用docker在树莓派上部署网页监控软件WebMonitor | 名实合为<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLm1qeWFpLmNvbS8yMDIwLzEyLzIyL3Jhc3BiZXJyeS1waS1kb2NrZXItd2VibW9uaXRvci8=\">https://blog.mjyai.com/2020/12/22/raspberry-pi-docker-webmonitor/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","RSS","网页监控"]},{"title":"《在群晖上使用天翼云盘》的更新说明","url":"/2021/08/05/%E3%80%8E%E5%9C%A8%E7%BE%A4%E6%99%96%E4%B8%8A%E4%BD%BF%E7%94%A8%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98%E3%80%8F%E7%9A%84%E6%9B%B4%E6%96%B0%E8%AF%B4%E6%98%8E/","content":"<p>有读者在后台反馈，按照『 <a href=\"https://laosu.ml/2021/06/25/%E5%9C%A8%E7%BE%A4%E6%99%96%E4%B8%8A%E4%BD%BF%E7%94%A8%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/\">群晖上使用天翼云盘</a> 』中的说明安装完成后，登录报错，并给我发了截图，很抱歉没能及时回复，等到排查完之后发现已经无法回复了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210804214717.png\"></p>\n<p>查了原作者的代码仓库，发现作者更新了 <code>core.py</code>，从代码看可能是因为天翼官方更改地址导致了登录失败</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210804214942.png\"></p>\n<p>老苏已经更新了镜像 <code>wbsu2003/cloud189-cli</code>，直接下 <code>latest</code> 或者 <code>v2</code> 即可</p>\n<p>再次向这位读者表示歉意，并感谢他发现了问题，更要感谢原作者及时进行了修复。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Aruelius/cloud189: 天翼云盘 CLI Python<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0FydWVsaXVzL2Nsb3VkMTg5\">https://github.com/Aruelius/cloud189<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>在群晖上使用天翼云盘 | 老苏的blog<br>地址：<a href=\"https://laosu.ml/2021/06/25/%E5%9C%A8%E7%BE%A4%E6%99%96%E4%B8%8A%E4%BD%BF%E7%94%A8%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/\">https://laosu.ml/2021/06/25/%E5%9C%A8%E7%BE%A4%E6%99%96%E4%B8%8A%E4%BD%BF%E7%94%A8%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/</a></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","网盘"]},{"title":"能将阿里云盘挂载为webdav的webdav-aliyundriver","url":"/2021/08/04/%E8%83%BD%E5%B0%86%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98%E6%8C%82%E8%BD%BD%E4%B8%BAwebdav%E7%9A%84webdav-aliyundriver/","content":"<p>天热了，人也懒了，给自己点压力，周三视情况增加一次发文，周一、周五还是固定发。</p>\n<hr>\n<p>虽然从内测开始就申请了阿里云盘，但是一直也没怎么用，网上一直强调的是阿里云盘的速度，但是在老苏看来天翼云也不算差，相对来说阿里云盘作为新的云盘，在功能上和百度云盘、天翼云盘这些成熟产品比还是存在很多欠缺的，直到我发现了 <code>webdav-aliyundriver</code>。</p>\n<p>虽然 <code>Google Drive</code> 和 <code>Microsoft OneDrive</code> 能挂载，但是网速有点不给力，而 <code>webdav-aliyundriver</code> 终于可以让国内云盘支持了标准协议，并可挂载成本地硬盘，因此也就具备了很多可玩性，比如搭配 <code>GoodSync</code> 实现云盘和本地磁盘间的备份或者同步，或者搭配 <code>Rclone</code> 实现云盘之间的数据对倒，再不然搭配 <code>aria2</code> 实现离线下载到阿里云盘，群晖自带的 <code>Cloud Sync</code> 给群晖做个备份、同步也很香啊。</p>\n<p>老苏已经错过了很多兑换码，发个邀请福利，据说每邀请成功一个你和我各自能增加 500G 的空间，试试也不会怀孕对吧：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYWdlcy5hbGl5dW5kcml2ZS5jb20vbW9iaWxlLXBhZ2Uvd2ViL2JlaW52aXRlZC5odG1sP2NvZGU9NTg3M2FkYg==\">https://pages.aliyundrive.com/mobile-page/web/beinvited.html?code=5873adb<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"获取refresh-token\"><a href=\"#获取refresh-token\" class=\"headerlink\" title=\"获取refresh token\"></a>获取refresh token</h1><p>围绕着阿里云盘的各种应用都离不开获取 <code>refresh token</code>，下面两种方法老苏已经亲测可用</p>\n<h2 id=\"方法一\"><a href=\"#方法一\" class=\"headerlink\" title=\"方法一\"></a>方法一</h2><blockquote>\n<p>本章节来自webdav-aliyundriver官网，老苏只是做了重新排版</p>\n</blockquote>\n<ol>\n<li><p> 先通过浏览器（建议chrome）打开阿里云盘官网并登录网页版：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWxpeXVuZHJpdmUuY29tL2RyaXZlLw==\">https://www.aliyundrive.com/drive/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p> 登录成功后，按 <code>F12</code> 打开开发者工具，点击 <code>Application</code>，点击 <code>Local Storage</code>，点击 <code>Local Storage</code> 下的 <code>https://www.aliyundrive.com/</code>，点击右边的 <code>token</code>，此时可以看到里面的数据，其中就有 <code>refresh_token</code>，把其值复制出来即可。</p>\n</li>\n</ol>\n<blockquote>\n<p>格式为小写字母和数字，不要复制双引号。例子：ca6bf2175d73as2188efg81f87e55f11</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210802215146.png\"></p>\n<h2 id=\"方法二\"><a href=\"#方法二\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2><blockquote>\n<p>本章节根据小白羊客户端的描述重新编排和截图</p>\n</blockquote>\n<ol>\n<li><p>先通过浏览器（建议chrome）打开阿里云盘官网并登录网页版：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWxpeXVuZHJpdmUuY29tL2RyaXZlLw==\">https://www.aliyundrive.com/drive/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>登录成功后，按 <code>F12</code> 打开开发者工具</p>\n<ul>\n<li>① 点击 <code>Console</code>进入控制台</li>\n<li>② 在控制台输入 <code>JSON.parse(window.localStorage[&quot;token&quot;]).refresh_token</code></li>\n<li>③ 复制返回的32位字符串，不要复制双引号</li>\n</ul>\n</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210803115707.png\"></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>webdav-aliyundriver</code> ，选择第一个 <code>zx5253/webdav-aliyundriver</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210802212627.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>aliyundriver</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/aliyundriver</code></td>\n<td align=\"center\"><code>/etc/aliyun-driver</code></td>\n<td align=\"center\">保存 refresh token 文件</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210802214008.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>默认的端口 <code>8080</code> 不能用，所以换成了 <code>8123</code>，不冲突就行</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">8123</td>\n<td align=\"center\">8080</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210802214142.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>TZ</code></td>\n<td align=\"center\">设为 <code>Asia/Shanghai</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>ALIYUNDRIVE_REFRESH_TOKEN</code></td>\n<td align=\"center\">你的 refresh token</td>\n</tr>\n<tr>\n<td align=\"center\"><code>ALIYUNDRIVE_AUTH_USER</code></td>\n<td align=\"center\">Webdav 账户，默认admin</td>\n</tr>\n<tr>\n<td align=\"center\"><code>ALIYUNDRIVE_AUTH_PASSWORD</code></td>\n<td align=\"center\">admin账户的密码，建议修改</td>\n</tr>\n<tr>\n<td align=\"center\"><code>JAVA_OPTS</code></td>\n<td align=\"center\">默认值 <code>-Xmx1g</code> 表示最大内存限制为 1g</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210802223610.png\"></p>\n<blockquote>\n<p>用户名保持默认的 <code>admin</code> 即可，如果修改了可能会出现验证失败</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210802223225.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>如果容器的日志中看到 <code>post /user/get, body &#123;&#125;, code 200</code> ，表示登录阿里云盘已经成功了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210802221850.png\"></p>\n<p>在浏览器中输入 <code>http://群晖IP:8123</code>，就看到目录和文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210804185815.png\"></p>\n<p>但这显然不是我们期待的运行方式，接下来我们要用软件进行挂载，使阿里云盘成为本地的一个盘，下表是官方提供的挂载软件情况</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">客户端</th>\n<th align=\"right\">下载</th>\n<th align=\"center\">上传</th>\n<th align=\"center\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">群辉Cloud Sync</td>\n<td align=\"right\">可用</td>\n<td align=\"center\">可用</td>\n<td align=\"center\">使用单向同步非常稳定</td>\n</tr>\n<tr>\n<td align=\"left\">Rclone</td>\n<td align=\"right\">可用</td>\n<td align=\"center\">可用</td>\n<td align=\"center\">推荐，支持各个系统</td>\n</tr>\n<tr>\n<td align=\"left\">Mac原生</td>\n<td align=\"right\">可用</td>\n<td align=\"center\">可用</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"left\">Windows原生</td>\n<td align=\"right\">可用</td>\n<td align=\"center\">有点小问题</td>\n<td align=\"center\">不建议，适配有点问题，上传报错</td>\n</tr>\n<tr>\n<td align=\"left\">RaiDrive</td>\n<td align=\"right\">可用</td>\n<td align=\"center\">可用</td>\n<td align=\"center\">Windows平台下建议用这个</td>\n</tr>\n</tbody></table>\n<h2 id=\"RaiDrive\"><a href=\"#RaiDrive\" class=\"headerlink\" title=\"RaiDrive\"></a>RaiDrive</h2><p>老苏先在 <code>Windows</code> 上测试了用 <code>RainDrive</code> 挂载阿里云盘</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210802223939.png\"></p>\n<p>打开资源管理器</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210804185941.png\"></p>\n<h3 id=\"读取速度\"><a href=\"#读取速度\" class=\"headerlink\" title=\"读取速度\"></a>读取速度</h3><p>从阿里云挂载盘拷贝电影到本地盘，虽然没跑满带宽也差不多了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210802224642.png\"></p>\n<h3 id=\"写入速度\"><a href=\"#写入速度\" class=\"headerlink\" title=\"写入速度\"></a>写入速度</h3><p>从本地盘拷贝电影到阿里云挂载盘，速度在300KB ~ 4MB/秒之间波动</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210802225746.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210802230500.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210802231005.png\"></p>\n<p>所以公共资源不建议这么传，还是用官方的客户端或者网页版比较好，电影基本上是秒传的</p>\n<h2 id=\"GoodSync\"><a href=\"#GoodSync\" class=\"headerlink\" title=\"GoodSync\"></a>GoodSync</h2><blockquote>\n<p><code>GoodSync</code> 同时支持 <code>Windows</code> 和 <code>MacOS</code></p>\n</blockquote>\n<p>新建一个备份任务</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210802232448.png\"></p>\n<p>左侧选择 <code>My Computer</code>，选择好要备份的目录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210802232556.png\"></p>\n<p>右侧选择 <code>WebDAV</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210802232740.png\"></p>\n<p>设置账号信息之后点 <code>执行</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210802232907.png\"></p>\n<p>设置如果没问题，应该就可以看到阿里云盘的文件目录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210802233246.png\"></p>\n<p>选好备份的目录，就可以开始备份了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/08/20210802233405.png\"></p>\n<h2 id=\"MacOS\"><a href=\"#MacOS\" class=\"headerlink\" title=\"MacOS\"></a>MacOS</h2><p>通过 <code>tailscale</code> 从远程连接到家里的群晖，分别下载了最新版本的 <code>ExpanDrive</code>、<code>CloudMount</code>、<code>Mountain Duck</code> 进行了挂载测试</p>\n<h3 id=\"ExpanDrive\"><a href=\"#ExpanDrive\" class=\"headerlink\" title=\"ExpanDrive\"></a>ExpanDrive</h3><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210803094636.png\"></p>\n<p>挂载没问题，上传下载都有问题，怀疑是破解版本身的问题</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210803100531.png\"></p>\n<h3 id=\"CloudMount\"><a href=\"#CloudMount\" class=\"headerlink\" title=\"CloudMount\"></a>CloudMount</h3><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210803091559.png\"></p>\n<p>上传下载都正常</p>\n<h3 id=\"Mountain-Duck\"><a href=\"#Mountain-Duck\" class=\"headerlink\" title=\"Mountain Duck\"></a>Mountain Duck</h3><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210803092528.png\"></p>\n<p>上传下载都正常</p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>其实别的云盘一样也可以实现这样的功能，只是厂商出于盈利的考虑对第三方做了各种限制甚至封杀，目前看来，阿里云盘还是比较包容的，起码第三方客户端 <code>阿里云盘小白羊版</code> 还在，但是能持续多久谁知道呢，且用且珍惜吧。</p>\n<p>你能看到这，说明确实对阿里云盘产生了有兴趣，不妨点下面的链接注册一个账号试试</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYWdlcy5hbGl5dW5kcml2ZS5jb20vbW9iaWxlLXBhZ2Uvd2ViL2JlaW52aXRlZC5odG1sP2NvZGU9NTg3M2FkYg==\">https://pages.aliyundrive.com/mobile-page/web/beinvited.html?code=5873adb<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>zxbu/webdav-aliyundriver: 阿里云盘(<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWxpeXVuZHJpdmUuY29tLw==\">https://www.aliyundrive.com/<i class=\"fa fa-external-link-alt\"></i></span>) 的webdav协议开源实现<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3p4YnUvd2ViZGF2LWFsaXl1bmRyaXZlcg==\">https://github.com/zxbu/webdav-aliyundriver<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>liupan1890/aliyunpan: 阿里云盘小白羊版 阿里云盘PC版<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xpdXBhbjE4OTAvYWxpeXVucGFu\">https://github.com/liupan1890/aliyunpan<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","网盘"]},{"title":"简约但绝不简单的Komga","url":"/2021/08/02/%E7%AE%80%E7%BA%A6%E4%BD%86%E7%BB%9D%E4%B8%8D%E7%AE%80%E5%8D%95%E7%9A%84Komga/","content":"<p><strong>什么是 Komga ？</strong></p>\n<blockquote>\n<p>Komga 是一个免费、开源的漫画服务器，支持 REST API 和 OPDS 。因此 Komga 理论上适用于任何支持 OPDS 协议的阅读器。支持的文件格式包括： CBZ、CBR、PDF 和 epub 格式。</p>\n</blockquote>\n<p>官方提供了演示网站可用于体验：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZW1vLmtvbWdhLm9yZy8=\">https://demo.komga.org<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>账号： <code>demo@komga.org</code><br>密码： <code>komga-demo</code></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>komga</code> ，选择第一个 <code>gotson/komga</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210630110329.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>komga</code>，并在 <code>komga</code> 中建两个子文件夹，分别命名为 <code>config</code> 和 <code>data</code></p>\n<blockquote>\n<p>在 <code>config</code> 中创建一个空的 <code>database.sqlite</code> 文件</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210630110621.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/komga/config</code></td>\n<td align=\"center\"><code>/config</code></td>\n<td align=\"center\">存放数据库和设置</td>\n</tr>\n<tr>\n<td align=\"center\"><code>docker/komga/data</code></td>\n<td align=\"center\"><code>/data</code></td>\n<td align=\"center\">存放书架</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>建议 <code>/data</code> 目录勾选 <code>只读</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210630110934.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不冲突就行，这里用了 <code>3080</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">3080</td>\n<td align=\"center\">8080</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210630112006.png\"></p>\n<h1 id=\"命令行安装\"><a href=\"#命令行安装\" class=\"headerlink\" title=\"命令行安装\"></a>命令行安装</h1><p>在 <code>CentOS</code> 安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在komga中创建子目录</span></span><br><span class=\"line\">mkdir config data</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建文件</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> config</span><br><span class=\"line\">touch database.sqlite</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 运行容器</span></span><br><span class=\"line\">docker run \\</span><br><span class=\"line\">  --name=komga \\</span><br><span class=\"line\">  --user 1000:1000 \\</span><br><span class=\"line\">  -p 3080:8080 \\</span><br><span class=\"line\">  -v /usr/komga/config:/config \\</span><br><span class=\"line\">  -v /usr/komga/data:/data \\</span><br><span class=\"line\">  --restart unless-stopped \\</span><br><span class=\"line\">  gotson/komga:latest</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:3080</code>，就能看到主界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210624154426.png\"></p>\n<p><code>Translation</code> 中拉到最底部是支持 <code>简体中文</code> 的，所见即所得，不需要重启和刷新</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210624154635.png\"></p>\n<p><code>创建用户账号</code> 完成后，底部红色的不用管，直接关闭就可以</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210630114129.png\"></p>\n<p>进入后台主界面，首先要 <code>添加库</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210624154831.png\"></p>\n<p><code>添加库</code>，这个 <code>/data</code> 是容器内的目录，对应了我们前面映射的目录 <code>/docker/komga/data</code></p>\n<blockquote>\n<p>老苏就建了一个库，所以指向了 <code>/data</code> 根目录，如果你有多个库，可以在 <code>/data</code> 建子目录，然后分别授权</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210625090207.png\"></p>\n<p>这个时候因为 <code>/data</code> 还是空的，所以会显示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210630114455.png\"></p>\n<p>将图书放到 <code>/data</code> 目录中即可，系统会自动刷新</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210625091358.png\"></p>\n<p>点开一本</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210625091606.png\"></p>\n<p>进入阅读，速度很快，比老苏之前介绍的 <code>Comics-Reader</code> 起码在速度上快得多，主要因为两者在实现方法上不同。</p>\n<blockquote>\n<p>相关阅读：<a href=\"https://laosu.ml/2021/03/26/%E7%94%A8Comics-Reader%E6%94%B6%E8%97%8F%E9%98%85%E8%AF%BB%E5%B0%8F%E4%BA%BA%E4%B9%A6\">用Comics-Reader收藏阅读小人书</a></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210625091704.png\"></p>\n<p>有阅读进度，能快速切换同目录的其他图书</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210625091856.png\"></p>\n<p>可以编辑图书信息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210625092011.png\"></p>\n<h1 id=\"接口\"><a href=\"#接口\" class=\"headerlink\" title=\"接口\"></a>接口</h1><p>Komga 支持 <code>OPDS 协议</code>，并提供了 <code>REST API</code> 接口</p>\n<h2 id=\"OPDS\"><a href=\"#OPDS\" class=\"headerlink\" title=\"OPDS\"></a>OPDS</h2><p><code>OPDS 协议</code> 路径：</p>\n<p>自建：<code>http://群晖IP:3080/opds/v1.2/catalog</code><br>公网：<code>https://demo.komga.org/opds/v1.2/catalog</code></p>\n<p>用 <code>静读天下</code> 做了测试，支持下载阅读（可能官方测试的测试数据是基于免费版的，所以结论是不支持下载）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210630115926.png\"></p>\n<h2 id=\"REST-API-RESTful-API\"><a href=\"#REST-API-RESTful-API\" class=\"headerlink\" title=\"REST API (RESTful API)\"></a>REST API (RESTful API)</h2><p><code>REST API 接口</code>  路径：<code>http://群晖IP:3080/swagger-ui.html</code>，如果您动手能力强，可以自己撸一个移动端</p>\n<h3 id=\"REST-API\"><a href=\"#REST-API\" class=\"headerlink\" title=\"REST API\"></a>REST API</h3><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210625101355.png\"></p>\n<h3 id=\"OPDS-1\"><a href=\"#OPDS-1\" class=\"headerlink\" title=\"OPDS\"></a>OPDS</h3><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210625101437.png\"></p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><ol>\n<li><p><code>Calibre</code>有一套自己的文件组织规则，脱离了网页或者客户端，你很难找到你要的内容，而 <code>Komga</code> 就不同了，采用了我们日常资源管理器的文件管理习惯，老苏更喜欢 <code>Komga</code> 的文件组织方式。</p>\n</li>\n<li><p> 采用多库管理，这样的好处是可以更精细的管理用户的权限。</p>\n</li>\n<li><p> 因为定期扫描，所以内存消耗略高，看官方文档这个需要创建一个 <code>application.yml</code>，通过配置项来更改，具体的实现请自行研究。</p>\n</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210630153443.png\"></p>\n<ol start=\"4\">\n<li>支持 <code>OPDS</code> 协议，使得除了官方的 <span class=\"exturl\" data-url=\"aHR0cHM6Ly90YWNoaXlvbWkub3JnLw==\">Tachiyomi（https://tachiyomi.org/）<i class=\"fa fa-external-link-alt\"></i></span>，还可以用第三方的阅读器。</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210722142336.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>gotson/komga: Media server for comics/mangas/BDs with API and OPDS support<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dvdHNvbi9rb21nYQ==\">https://github.com/gotson/komga<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>What is Komga? | Komga<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9rb21nYS5vcmcvZ3VpZGVzLyN3aGF0LW1lZGlhLWFuZC1kZXZpY2VzLXdvcms=\">https://komga.org/guides/#what-media-and-devices-work<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Install with Docker | Komga<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9rb21nYS5vcmcvaW5zdGFsbGF0aW9uL2RvY2tlci5odG1sI3ZlcnNpb24tdGFncw==\">https://komga.org/installation/docker.html#version-tags<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","calibre","小人书"]},{"title":"HTML5实现的经典播放器Winamp","url":"/2021/07/30/HTML5%E5%AE%9E%E7%8E%B0%E7%9A%84%E7%BB%8F%E5%85%B8%E6%92%AD%E6%94%BE%E5%99%A8Winamp/","content":"<p><strong>什么是 Winamp ？</strong></p>\n<blockquote>\n<p>Winamp是数字媒体播放的先驱，由Nullsoft公司在1997年开发，创始人Justin Frankel，该软件支持MP3， MP2， MOD， S3M， MTM， ULT，XM， IT， 669, CD-Audio，Line-In等等格式，至今已经从1.0版本升级到5.57版本。【百度百科】</p>\n</blockquote>\n<p><code>Winamp</code> 是一个超级经典的音频播放器，曾经统治过桌面端的音乐播放器市场，当年是很多人的装机必备，以丰富的插件支持和皮肤效果著称，但后来因大公司的内部斗争，最终被其它播放器给取代了。目前最新的版本不是百度百科说的 5.57 版 ，而是 5.8 版本，支持多国语言。</p>\n<p>其实今天我们要介绍的并不是 <code>Winamp</code> 本身，而是用 <code>HTML5</code> 和 <code>JavaScript</code> 复刻的 <code>Winamp 2.9</code>，一个可以在浏览器里运行的 <code>Webamp</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210727114751.png\"></p>\n<p>不愿意折腾的可以直接在这里试用：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZWJhbXAub3JnLw==\">https://webamp.org/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"镜像构建\"><a href=\"#镜像构建\" class=\"headerlink\" title=\"镜像构建\"></a>镜像构建</h1><p>老苏构建镜像一般在 <code>CentOS</code> 虚拟机里，不建议在群晖上这么干，虽然群晖也是 <code>Linux</code> 系统，但是主要是作为无头机用的。</p>\n<p>首先当然是下载源代码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载代码  </span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/captbaritone/webamp.git</span><br></pre></td></tr></table></figure>\n\n<p>如果 <code>git</code> 下载代码出现下面👇的错误</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">error: RPC failed; result=35, HTTP code = 0</span><br><span class=\"line\">fatal: The remote end hung up unexpectedly</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210727151853.png\"></p>\n<p>可以通过设置 <code>git</code> 的 <code>http</code> 缓存大小，解决了这个问题</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 如果 20M 不行就 50M</span></span><br><span class=\"line\">git config --global http.postBuffer 20M</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210727151817.png\"></p>\n<p>代码下载成功后依次执行下面的命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> webamp/packages/webamp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装依赖</span></span><br><span class=\"line\">yarn install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> demo</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打包</span></span><br><span class=\"line\">yarn run build</span><br></pre></td></tr></table></figure>\n\n<p>打包完成</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210727140057.png\"></p>\n<p>和我们之前介绍的发现导航nav不同，<code>Webamp</code> 因为不需要修改配置文件，所以可以考虑直接把编译的静态文件，也就是把 <code>built</code> 目录直接丢给 <code>nginx</code></p>\n<blockquote>\n<p>相关文章：<a href=\"https://laosu.ml/2021/07/26/%E4%B8%80%E4%B8%AA%E9%9D%9E%E5%B8%B8%E5%BC%BA%E5%A4%A7%E7%9A%84%E9%9D%99%E6%80%81%E5%AF%BC%E8%88%AA%E7%BD%91%E7%AB%99nav/\">一个非常强大的静态导航网站nav</a></p>\n</blockquote>\n<p><code>Dockerfile</code> 要放在代码 <code>webamp/packages/webamp/demo</code> 目录中</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> nginx:<span class=\"number\">1.12</span>-alpine</span><br><span class=\"line\"><span class=\"keyword\">MAINTAINER</span> laosu&lt;wbsu2003@gmail.com&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> /built /usr/share/nginx/html</span></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"bash\"> [<span class=\"string\">&quot;nginx&quot;</span>, <span class=\"string\">&quot;-g&quot;</span>, <span class=\"string\">&quot;daemon off;&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210727152316.png\"></p>\n<p>开始构建镜像</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建镜像  </span></span><br><span class=\"line\">docker build -t wbsu2003/webamp:v1 .</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成容器  </span></span><br><span class=\"line\">docker run -d -p 7080:80 --restart=always --name webamp wbsu2003/webamp:v1</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210730132220.png\"></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>webamp</code> ，选择第一个 <code>wbsu2003/webamp</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210727160201.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不冲突就行</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">7080</td>\n<td align=\"center\">80</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210727160322.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:7080</code>，就看到主界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210727155948.png\"></p>\n<p>因为是复刻的，所以也支持右键菜单</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210727161207.png\"></p>\n<p>除了内置的几首外，也可以加载本地的 <code>mp3</code> 文件，随便拖了几首 <code>mp3</code> 到 <code>playlist</code> 中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210727160714.png\"></p>\n<p>菜单上本来应该还可以 <code>Dropbox</code> 中的音乐文件，但是因为安全问题未开放，具体看这里：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NhcHRiYXJpdG9uZS93ZWJhbXAvaXNzdWVzLzc1MA==\">https://github.com/captbaritone/webamp/issues/750<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>这个是 <code>Mac OSX</code> 的皮肤，太复古了，也不知道是哪一年的 <code>MacOX</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210727161824.png\"></p>\n<h1 id=\"chrome实时字幕\"><a href=\"#chrome实时字幕\" class=\"headerlink\" title=\"chrome实时字幕\"></a>chrome实时字幕</h1><p>如果听英文歌曲，可以尝试下 <code>chrome</code> 的实时字幕，这个功能需要 <code>chrome</code>  89 及以上版本，该功能默认没有开启，需要在 <code>设置</code> –&gt; <code>高级</code> –&gt; <code>无障碍</code> 中启用，也可以在控制界面启用</p>\n<blockquote>\n<p>控制界面只有在 <code>chrome</code> 播放音视频的时候才会出现在插件栏</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210730160713.png\"></p>\n<p>浏览器插件栏上可以打开控制界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210728151320.png\"></p>\n<p>实时字幕目前只支持英文</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210728151000.png\"></p>\n<p>字幕（歌词）会出现在屏幕下方的中间，至于准不准确老苏就不知道了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210728151212.png\"></p>\n<p>泡上一壶茶，慢慢享受音乐🎵吧，enjoy it ~</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>captbaritone/webamp: Winamp 2 reimplemented for the browser<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NhcHRiYXJpdG9uZS93ZWJhbXA=\">https://github.com/captbaritone/webamp<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>如何在CentOS 7上安装Yarn<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubXlmcmVheC5jb20vaG93LXRvLWluc3RhbGwteWFybi1vbi1jZW50b3MtNy8=\">https://www.myfreax.com/how-to-install-yarn-on-centos-7/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","音乐"]},{"title":"一个非常强大的静态导航网站nav","url":"/2021/07/26/%E4%B8%80%E4%B8%AA%E9%9D%9E%E5%B8%B8%E5%BC%BA%E5%A4%A7%E7%9A%84%E9%9D%99%E6%80%81%E5%AF%BC%E8%88%AA%E7%BD%91%E7%AB%99nav/","content":"<p>什么是发现导航？</p>\n<blockquote>\n<p>一个纯静态、支持SEO、在线编辑的强大导航网站，内置收录多达 800+ 优质网站。</p>\n</blockquote>\n<ul>\n<li>  🍰 内置 <code>800+</code> 实用网站。</li>\n<li>  🍰 支持 SEO。</li>\n<li>  🍰 完全纯静态, 提供自动化部署功能。</li>\n<li>  🍰 三叉树分类、结构清晰、分类清晰。</li>\n<li>  🍰 支持一个网站关联多个网址</li>\n<li>  🍰 颜值与简约并存，不再是杀马特时代。</li>\n<li>  🍰 完全开源，轻松定制化。</li>\n<li>  🍰 支持多种浏览模式，创新。</li>\n<li>  🍰 支持足迹记忆。</li>\n<li>  🍰 支持移动端浏览。</li>\n<li>  🍰 支持搜索查询。</li>\n<li>  🍰 支持自定义引擎搜索。</li>\n<li>  🍰 多款主题切换。</li>\n<li>  🍰 支持暗黑模式。</li>\n<li>  🍰 支持后台管理, 无需部署。</li>\n<li>  🍰 支持从Chrome书签导入</li>\n</ul>\n<p>这是一个纯静态的网站，官方提供了 <code>github</code> 和 <code>vercel</code> 上的部署方式，但没有提供 <code>Docker</code> 部署方式，有网友问我能不能弄到群晖上，所以老苏尝试了一下</p>\n<h1 id=\"构建\"><a href=\"#构建\" class=\"headerlink\" title=\"构建\"></a>构建</h1><p>首先下载代码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载代码</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> --depth=1 https://github.com/xjh22222228/nav.git</span><br></pre></td></tr></table></figure>\n\n<p><code>Dockerfile</code> 来自 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlZnJlc2guaW8vZG9jcy9kb2NzL2xlYXJuLWJ5LWV4YW1wbGUvbm9kZWpzL3JlYWN0Lw==\">https://codefresh.io/docs/docs/learn-by-example/nodejs/react/<i class=\"fa fa-external-link-alt\"></i></span>，老苏只是做了微调，<code>Dockerfile</code> 放到代码根目录</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> node:<span class=\"number\">16.5</span> as build-deps</span><br><span class=\"line\"><span class=\"keyword\">MAINTAINER</span> laosu&lt;wbsu2003@gmail.com&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /nav</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> package.json yarn.lock ./</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> yarn</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> . ./</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> yarn build</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> nginx:<span class=\"number\">1.12</span>-alpine</span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> --from=build-deps /nav/dist /usr/share/nginx/html</span></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"bash\"> [<span class=\"string\">&quot;nginx&quot;</span>, <span class=\"string\">&quot;-g&quot;</span>, <span class=\"string\">&quot;daemon off;&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n\n<p>原理比较简单，就是把编译出来的静态文件丢到了 <code>nginx</code> 中，但这种方式再修改项目配置文件 <code>nav.config.ts</code> 是不生效的，因为修改了配置文件需要重新 <code>build</code> 。</p>\n<p>本来准备按开发环境来部署，但是对使用者来说有点麻烦，所以老苏决定直接用 <code>ng server</code>，这实际上是调试用的，为了能远程访问，要修改 <code>package.json</code></p>\n<p>将默认的</p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">&quot;start&quot;: &quot;ng serve --port=7000&quot;,</span><br></pre></td></tr></table></figure>\n\n<p>改为</p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">&quot;start&quot;: &quot;ng serve --port=7000 --host 0.0.0.0 --disableHostCheck&quot;,</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>因为禁用了 <code>Host Check</code>，所以理论上存在安全风险，但是如果不禁用在反向代理的时候，会显示 <code>Invalid Host header</code>，所以这个镜像只是给大家体验用的，不建议暴露到公网使用</p>\n</blockquote>\n<p>按下面的内容生成新 <code>Dockfile</code> 文件</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> node:<span class=\"number\">16.5</span>-slim</span><br><span class=\"line\"><span class=\"keyword\">MAINTAINER</span> laosu&lt;wbsu2003@gmail.com&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> . /mynav/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /nav/</span></span><br><span class=\"line\"><span class=\"keyword\">VOLUME</span><span class=\"bash\"> /nav</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">7000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"bash\"> \\</span></span><br><span class=\"line\"><span class=\"bash\">  <span class=\"keyword\">if</span> [ <span class=\"string\">&quot;<span class=\"subst\">$(ls -A /nav)</span>&quot;</span> ]; <span class=\"keyword\">then</span> \\</span></span><br><span class=\"line\"><span class=\"bash\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;***** nav目录存在并且有内容, 跳过 *****&quot;</span> ; \\</span></span><br><span class=\"line\"><span class=\"bash\">  <span class=\"keyword\">else</span> \\</span></span><br><span class=\"line\"><span class=\"bash\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;***** nav程序目录不存在或为空, 开始拷贝文件 *****&quot;</span> &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"bash\">    cp -R /mynav/. /nav/; \\</span></span><br><span class=\"line\"><span class=\"bash\">  <span class=\"keyword\">fi</span>; \\</span></span><br><span class=\"line\"><span class=\"bash\">  yarn &amp;&amp; yarn start; \\</span></span><br></pre></td></tr></table></figure>\n\n<p>接下来就可以构建镜像了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建镜像</span></span><br><span class=\"line\">docker build -t wbsu2003/nav:v1 . </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成容器</span></span><br><span class=\"line\">docker run -d -p 7000:7000 -v /volume2/docker/nav:/nav --restart=always --name nav wbsu2003/nav:v1</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>wbsu2003</code> ，选择第五个 <code>wbsu2003/nav</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210725152137.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>nav</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/nav</code></td>\n<td align=\"center\"><code>/nav</code></td>\n<td align=\"center\">程序目录</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210725153008.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不冲突就行，这里用了默认的 <code>7000</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">7000</td>\n<td align=\"center\">7000</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210725153038.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:7000</code>，但并不能马上看到主界面，因为第一次需要下载依赖项，所以比较耗时，尤其是网络不好的时候，整个 <code>node_modules</code> 差不多有 500~600 M</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210725143005.png\"></p>\n<p>只有当日志中显示两次 <code>Compiled successfully.</code>，这个时候才可以正常访问</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210725144025.png\"></p>\n<p> 打开 <code>http://群晖IP:7000</code> 能看到主界面</p>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210725160928.png\"></p>\n<p> 右下角能切换主题</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210725161057.png\"> </p>\n<p>使用方法可以去官方看看 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3hqaDIyMjIyMjI4L25hdg==\">https://github.com/xjh22222228/nav<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"修改配置\"><a href=\"#修改配置\" class=\"headerlink\" title=\"修改配置\"></a>修改配置</h2><p>如果修改了 <code>nav.config.ts</code> ，保存后要重启下容器</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210725175841.png\"></p>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><blockquote>\n<p>xjh22222228/nav: 🔍 发现导航 , 一个非常强大的静态导航网站(支持SEO)<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3hqaDIyMjIyMjI4L25hdg==\">https://github.com/xjh22222228/nav<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>React example with Yarn · Codefresh | Docs<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlZnJlc2guaW8vZG9jcy9kb2NzL2xlYXJuLWJ5LWV4YW1wbGUvbm9kZWpzL3JlYWN0Lw==\">https://codefresh.io/docs/docs/learn-by-example/nodejs/react/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>docker部署前端开发环境|mayloveless’s Blog<br>地址：<span class=\"exturl\" data-url=\"aHR0cDovL2xpbmdmZWkud2FuZy90ZWNobm90ZS8yMDE5LzA3LzA3L2RvY2tlciZub2RlLw==\">http://lingfei.wang/technote/2019/07/07/docker&amp;node/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","导航"]},{"title":"一款支持加密的笔记StandardNotes","url":"/2021/07/23/%E4%B8%80%E6%AC%BE%E6%94%AF%E6%8C%81%E5%8A%A0%E5%AF%86%E7%9A%84%E7%AC%94%E8%AE%B0StandardNotes/","content":"<p><strong>什么是 Standard Notes ？</strong></p>\n<blockquote>\n<p> Standard Notes 是一款免费、开源且完全加密的笔记应用程序，支持端到端加密，拥有强大的扩展程序、编辑器和主题，客户端跨平台，支持包括：Linux，MacOS，Windows，Android，iOS 和 Web 网页。</p>\n</blockquote>\n<p><code>Standard Notes</code> 最大的特点是没有人可以解密您的笔记，但是这种安全级别的缺点就是：如果您忘记密码，则会丢失笔记，因为无法恢复、重置忘记的密码。</p>\n<p>笔记是永久免费的，除非您想要使用其强大的扩展程序、编辑器和主题，不过没关系，既然是开源的，我们可以自己动手来丰衣足食。</p>\n<p>如果您不想自己安装，可以直接使用官方的免费服务，地址：<br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcHAuc3RhbmRhcmRub3Rlcy5vcmcv\">https://app.standardnotes.org/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"前期准备\"><a href=\"#前期准备\" class=\"headerlink\" title=\"前期准备\"></a>前期准备</h1><ol>\n<li>支持 Docker 的群晖主机（黑白无所谓）；</li>\n<li>拥有有效 SSL 证书的域名；</li>\n</ol>\n<p>下表是老苏准备的：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">应用</th>\n<th align=\"center\">局域网IP+端口</th>\n<th align=\"center\">对应域名</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">服务端</td>\n<td align=\"center\">192.168.0.197:3050</td>\n<td align=\"center\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcGkubGFvc3UubWwv\">https://api.laosu.ml<i class=\"fa fa-external-link-alt\"></i></span></td>\n</tr>\n<tr>\n<td align=\"center\">WEB端</td>\n<td align=\"center\">192.168.0.197:3001</td>\n<td align=\"center\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcHAubGFvc3UubWwv\">https://app.laosu.ml<i class=\"fa fa-external-link-alt\"></i></span></td>\n</tr>\n</tbody></table>\n<p>规划好之后可以先做反向代理，也可以在安装的过程中再设置</p>\n<h1 id=\"服务端安装\"><a href=\"#服务端安装\" class=\"headerlink\" title=\"服务端安装\"></a>服务端安装</h1><p><code>Standard Notes</code> 采用了微服务架构，按照官方的教程，服务端安装完成后会有 7 个容器</p>\n<blockquote>\n<p>官方教程：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnN0YW5kYXJkbm90ZXMub3JnL3NlbGYtaG9zdGluZy9kb2NrZXIv\">https://docs.standardnotes.org/self-hosting/docker/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210716105650.png\" alt=\"7个容器\"></p>\n<p>如果您跟老苏一样，采用了自定义数据库的话，安装完成后会有 6 个容器</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210716111546.png\" alt=\"自定义数据库6个容器\"></p>\n<p>对比两张图，您应该会发现少的那个是 <code>MySQL</code> 容器</p>\n<h2 id=\"创建数据库\"><a href=\"#创建数据库\" class=\"headerlink\" title=\"创建数据库\"></a>创建数据库</h2><blockquote>\n<p>这一步是可选的，按官方的教程 <code>MySQL</code> 数据库是部署在容器里的，但老苏不建议这么干，原因有兴趣的可以自己度娘。</p>\n</blockquote>\n<p>以往老苏都是用的 <code>MariaDB 5</code> ，但是这次终于踩了坑，容器 <code>standalone_syncing-server-js_1</code> 的日志中会出现类似👇下面的错误</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ERROR 1067 (42000): Invalid default value for &#39;created_at&#39;</span><br></pre></td></tr></table></figure>\n\n<p>查阅了很多文档发现是 <code>MariaDB 5.5</code> 的问题，所以老苏不得不又安装了 <code>MariaDB 10</code> </p>\n<p>通过 <code>phpMyAdmin</code> 在 <code>MariaDB 10</code> 中新建用户 <code>standardnote</code>，创建同名的库 <code>standardnote</code> 并授予所有权限。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210715103324.png\"></p>\n<h2 id=\"安装-git\"><a href=\"#安装-git\" class=\"headerlink\" title=\"安装 git\"></a>安装 git</h2><ul>\n<li> <code>套件中心</code> → <code>设置</code> –&gt; <code>套件来源</code> –&gt; <code>新增</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210411131200.png\"></p>\n<blockquote>\n<p>名称：随意，位置：<code>http://packages.synocommunity.com/</code></p>\n</blockquote>\n<ul>\n<li> <code>套件中心</code> –&gt; <code>社群</code>，找到并安装套件 <code>Git</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210411131711.png\"></p>\n<h2 id=\"下载代码\"><a href=\"#下载代码\" class=\"headerlink\" title=\"下载代码\"></a>下载代码</h2><p>用 SSH 客户端连到群晖，在 <code>docker</code> 目录中执行下面的命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载代码</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> --single-branch --branch main https://github.com/standardnotes/standalone.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> standalone</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210715101512.png\"></p>\n<h2 id=\"生成配置文件\"><a href=\"#生成配置文件\" class=\"headerlink\" title=\"生成配置文件\"></a>生成配置文件</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 初始化设置</span><br><span class=\"line\">.&#x2F;server.sh setup</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210715101836.png\"></p>\n<p>编辑 <code>.env</code> 文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210715102423.png\"></p>\n<p>这里可以修改 <code>EXPOSED_PORT</code>，默认端口为 <code>3000</code>，找一个不冲突的端口就可以，老苏随便改了个 <code>3050</code></p>\n<blockquote>\n<p>如果你准备和老苏一样使用自定义数据库，那跟数据库想关的部分也需要进行修改</p>\n<ul>\n<li><code>DB_HOST</code>：默认为 <code>db</code>，改为群晖（数据库主机）的 IP</li>\n<li><code>DB_REPLICA_HOST</code>：默认为 <code>db</code>，也改为群晖的 IP</li>\n<li><code>DB_PORT</code>：默认为 <code>3306</code>，但一般来说同时安装了 <code>MariaDB 5</code> 和 <code>MariaDB 10</code> 的话，<code>MariaDB 10</code> 端口是 <code>3307</code></li>\n<li><code>DB_USERNAME</code>：默认为 <code>std_notes_user</code>，改为我们第一步创建的 <code>standardnote</code></li>\n<li><code>DB_PASSWORD</code>：默认为 <code>changeme123</code>，改为我们第一步创建的密码</li>\n<li><code>DB_DATABASE</code>：默认为 <code>standard_notes_db</code>，改为我们第一步创建的 <code>standardnote</code></li>\n</ul>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210716161952.png\"></p>\n<h2 id=\"生成秘钥\"><a href=\"#生成秘钥\" class=\"headerlink\" title=\"生成秘钥\"></a>生成秘钥</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 生成秘钥，每次运行会产生不同的32位十六进制的值</span><br><span class=\"line\">openssl rand -hex 32</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210715104018.png\"></p>\n<p> 有 2 个文件 4 个环境变量值需要用到随机秘钥，这是出于安全性的考虑</p>\n<ul>\n<li>根目录下的 <code>.env</code> 文件中 <code>AUTH_JWT_SECRET</code>，默认值为 <code>auth_jwt_secret</code></li>\n<li><code>docker</code> 目录下的 <code>auth.env</code> 文件中的<ul>\n<li><code>JWT_SECRET</code> 默认值为 <code>secret</code></li>\n<li><code>LEGACY_JWT_SECRET</code> 默认值为 <code>legacy_jwt_secret</code></li>\n<li><code>ENCRYPTION_SERVER_KEY</code> 默认值为 <code>feffe9928665731c6d6a8f9467308308feffe9928665731c6d6a8f9467308308</code>，这个值必须要32位，前面3个没有这个要求</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>如果你只是搭着玩玩，不改也可以，如果是要放到公网使用，那最好别图省事。</p>\n</blockquote>\n<h2 id=\"编辑-docker-compose-yml\"><a href=\"#编辑-docker-compose-yml\" class=\"headerlink\" title=\"编辑 docker-compose.yml\"></a>编辑 docker-compose.yml</h2><p>如果你不打算用自定义数据库，这一步可以跳过，否则需删除<code>db</code> 相关部分</p>\n<blockquote>\n<p>动手修改前记得备份、备份、备份</p>\n</blockquote>\n<p>一、删除每个微服务 <code>depends_on:</code> 后面的 <code>- db</code>，大概有4处</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210715143238.png\"></p>\n<p>二、将 <code>entrypoint:[]</code> 中的 <code>db</code> 改为群晖 IP，大概也是4处</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210715153022.png\"></p>\n<p>改完之后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210715153347.png\"></p>\n<p>三、删除 db 节</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">db:</span></span><br><span class=\"line\">  <span class=\"attr\">image:</span> <span class=\"string\">mysql:5.6</span></span><br><span class=\"line\">  <span class=\"attr\">environment:</span></span><br><span class=\"line\">    <span class=\"attr\">MYSQL_DATABASE:</span> <span class=\"string\">&#x27;$&#123;DB_DATABASE&#125;&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">MYSQL_USER:</span> <span class=\"string\">&#x27;$&#123;DB_USERNAME&#125;&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">MYSQL_PASSWORD:</span> <span class=\"string\">&#x27;$&#123;DB_PASSWORD&#125;&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">MYSQL_ROOT_PASSWORD:</span> <span class=\"string\">&#x27;$&#123;DB_PASSWORD&#125;&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">ports:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"number\">3306</span></span><br><span class=\"line\">  <span class=\"attr\">restart:</span> <span class=\"string\">unless-stopped</span></span><br><span class=\"line\">  <span class=\"attr\">command:</span> <span class=\"string\">--default-authentication-plugin=mysql_native_password</span> <span class=\"string\">--character-set-server=utf8</span> <span class=\"string\">--collation-server=utf8_general_ci</span></span><br><span class=\"line\">  <span class=\"attr\">volumes:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">./data/mysql:/var/lib/mysql</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">./data/import:/docker-entrypoint-initdb.d</span></span><br><span class=\"line\">  <span class=\"attr\">networks:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">standardnotes_standalone</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210715143036.png\"></p>\n<h2 id=\"创建目录\"><a href=\"#创建目录\" class=\"headerlink\" title=\"创建目录\"></a>创建目录</h2><p> 在 <code>data</code> 目录新建两个子目录，<code>mysql</code> 和 <code>redis</code></p>\n<blockquote>\n<p>如果是自定义数据库，只要建一个 <code>redis</code> 就可以</p>\n</blockquote>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210715112025.png\"></p>\n<h2 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h2> <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 首次运行可能需要一段时间</span><br><span class=\"line\">.&#x2F;server.sh start</span><br></pre></td></tr></table></figure>\n<p>从脚本看，实际上就是执行了 <code>docker-compose up -d</code></p>\n<p>而从 <code>docker-compose.yml</code> 看，除了 <code>MySQL</code> 和 <code>Redis</code> 外，由于<code>Standard Notes</code> 采用了微服务架构，分为了 <code>auth</code>、<code>api-gateway</code>、<code>syncing-server-js</code> 多个服务</p>\n<p>如果中途报类似这样的错误</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210715111220.png\"></p>\n<p>一般都是网络问题，只要再次执行就可以了，反正老苏前前后后执行了 4 次才把镜像都下载成功，看到👇下图这样的就是已经成功了</p>\n<blockquote>\n<p>按官方指导启动</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210715112202.png\"></p>\n<blockquote>\n<p>使用自定义数据库启动</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210715150457.png\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 查看日志</span><br><span class=\"line\">.&#x2F;server.sh logs</span><br></pre></td></tr></table></figure>\n\n<p>只有看到 <code>api-gateway_1 | &#123;&quot;message&quot;:&quot;Server started on port 3000&quot;,&quot;level&quot;:&quot;info&quot;&#125;</code></p>\n<p>才表示服务已经启动成功。你也可以通过查询状态来看是否启动成功</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 查询状态</span><br><span class=\"line\">.&#x2F;server.sh status</span><br></pre></td></tr></table></figure>\n\n<p>如果所有的服务状态都是 <code>up</code>就可以了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210715113141.png\"></p>\n<p>还有更简单的办法，访问 <code>http://群晖IP:3050/healthcheck</code>，如果你看到 <code>OK</code>，也表示服务都启动了</p>\n<p>不用浏览器也是可以的</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 查询页面状态</span><br><span class=\"line\">curl http:&#x2F;&#x2F;localhost:3050&#x2F;healthcheck</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210715114935.png\"></p>\n<p>如果你修改了配置文件，可以用下面的命令重启服务</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 先停止再启动</span><br><span class=\"line\">.&#x2F;server.sh stop &amp;&amp; .&#x2F;server.sh start</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"设置反向代理\"><a href=\"#设置反向代理\" class=\"headerlink\" title=\"设置反向代理\"></a>设置反向代理</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210716165416.png\"></p>\n<p>到这里，服务端就安装完成了。</p>\n<h1 id=\"客户端安装\"><a href=\"#客户端安装\" class=\"headerlink\" title=\"客户端安装\"></a>客户端安装</h1><p>先设置反向代理，因为后面环境文件 <code>.env</code> 中会用到</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210716104410.png\"></p>\n<h2 id=\"web-客户端\"><a href=\"#web-客户端\" class=\"headerlink\" title=\"web 客户端\"></a>web 客户端</h2><p>在 <code>standalone</code> 新建子目录 <code>web</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 建子目录</span></span><br><span class=\"line\">mkdir web</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> web</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 新建 .env 文件</span></span><br><span class=\"line\">vi .env</span><br></pre></td></tr></table></figure>\n\n<p>将下面的内容粘贴进去，<code>:wq</code> 保存退出</p>\n<blockquote>\n<p>来自于官方的样例文件，地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N0YW5kYXJkbm90ZXMvd2ViL2Jsb2IvZGV2ZWxvcC8uZW52LnNhbXBsZQ==\">https://github.com/standardnotes/web/blob/develop/.env.sample<i class=\"fa fa-external-link-alt\"></i></span></p>\n<ul>\n<li><code>SF_DEFAULT_SERVER</code> 默认为 <code>http://localhost:3000</code>，为服务端地址，改用相应的域名 <code>https://api.laosu.ml</code>，如果你用的 http 协议，那么不管是注册还是登陆，都会卡死在 <code>generating register keys</code>或者 <code>generating login keys</code></li>\n<li><code>APP_HOST</code> 默认为 <code>http://localhost:3001</code>，为 WEB 客户端的地址，改用相应的域名 <code>https://app.laosu.ml</code></li>\n</ul>\n</blockquote>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">RAILS_ENV</span>=development</span><br><span class=\"line\"><span class=\"attr\">PORT</span>=<span class=\"number\">3001</span></span><br><span class=\"line\"><span class=\"attr\">WEB_CONCURRENCY</span>=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">RAILS_LOG_TO_STDOUT</span>=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># Log Level options: &quot;INFO&quot; | &quot;DEBUG&quot; | &quot;INFO&quot; | &quot;WARN&quot; | &quot;ERROR&quot; | &quot;FATAL&quot;</span></span><br><span class=\"line\"><span class=\"attr\">RAILS_LOG_LEVEL</span>=INFO</span><br><span class=\"line\"><span class=\"attr\">RAILS_SERVE_STATIC_FILES</span>=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">SECRET_KEY_BASE</span>=test</span><br><span class=\"line\"><span class=\"attr\">APP_HOST</span>=https://app.laosu.ml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">EXTENSIONS_MANAGER_LOCATION</span>=extensions/extensions-manager/dist/index.html</span><br><span class=\"line\"><span class=\"attr\">SF_DEFAULT_SERVER</span>=https://api.laosu.ml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Development options</span></span><br><span class=\"line\"><span class=\"attr\">DEV_DEFAULT_SYNC_SERVER</span>=https://api.standardnotes.com</span><br><span class=\"line\"><span class=\"attr\">DEV_EXTENSIONS_MANAGER_LOCATION</span>=public/extensions/extensions-manager/dist/index.html</span><br><span class=\"line\"><span class=\"attr\">ENABLE_UNFINISHED_FEATURES</span>=<span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">DEV_WEBSOCKET_URL</span>=wss://sockets-dev.standardnotes.com</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># NewRelic (Optional)</span></span><br><span class=\"line\"><span class=\"attr\">NEW_RELIC_ENABLED</span>=<span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">NEW_RELIC_THREAD_PROFILER_ENABLED</span>=<span class=\"literal\">false</span></span><br><span class=\"line\">NEW_RELIC_LICENSE_KEY=</span><br><span class=\"line\"><span class=\"attr\">NEW_RELIC_APP_NAME</span>=Web</span><br><span class=\"line\"><span class=\"attr\">NEW_RELIC_BROWSER_MONITORING_AUTO_INSTRUMENT</span>=<span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n\n<p>接下来就可以启动 Web 端容器了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 启动容器</span></span><br><span class=\"line\">docker run -d -p 3001:3001 --name standardnotes_web --env-file=.env standardnotes/web:stable</span><br></pre></td></tr></table></figure>\n\n<p>在浏览器中打开 <code>http://群晖IP:3001</code> 就能看到主界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210715170431.png\"></p>\n<p>首先要注册用户</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210715171443.png\"></p>\n<blockquote>\n<p>如果注册有问题，打开 <code>Advanced Option</code>，确认一下服务器地址是否正确，如果不正确可以重新输入正确的地址<br>密码千万不能忘记了，因为 <code>Standard Notes</code> 用密码来加密笔记</p>\n</blockquote>\n<p>接下来就可以开始使用了，虽然是英文，但是挺简单的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210716171655.png\"></p>\n<h2 id=\"PC客户端\"><a href=\"#PC客户端\" class=\"headerlink\" title=\"PC客户端\"></a>PC客户端</h2><p>PC 客户端是基于 <code>Electron</code> 开发的，所以和 <code>WEB客户端</code> 有着相同的界面，只要在 <code>Advanced Option</code> 中输入服务器地址即可使用。</p>\n<p>移动端没试，大家有兴趣可以自己试试。</p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>至于扩展程序之类的，暂时没精力去搞，不过老苏找到了一篇文章 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmxhY2t2b2lkLmNsdWIvc3RhbmRhcmQtbm90ZXMtZG9ja2VyLXNlbGYtaG9zdGVkLWFsdGVybmF0aXZlLw==\">Standard Notes - Docker self-hosted alternative for all your note needs<i class=\"fa fa-external-link-alt\"></i></span>，地址已经放在参考文档中，写的非常详细，有兴趣的可以自己研究一下。</p>\n<p>总的来说，在群晖里跑还是觉得有点臃肿了，只是尝尝鲜还是可以的。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Standard Notes<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N0YW5kYXJkbm90ZXM=\">https://github.com/standardnotes<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Standard Notes | A Simple And Private Notes App<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFuZGFyZG5vdGVzLmNvbS8=\">https://standardnotes.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Self-hosting with Docker | Standard Notes Documentation<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnN0YW5kYXJkbm90ZXMub3JnL3NlbGYtaG9zdGluZy9kb2NrZXIv\">https://docs.standardnotes.org/self-hosting/docker/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Standard Notes - Docker self-hosted alternative for all your note needs<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmxhY2t2b2lkLmNsdWIvc3RhbmRhcmQtbm90ZXMtZG9ja2VyLXNlbGYtaG9zdGVkLWFsdGVybmF0aXZlLw==\">https://www.blackvoid.club/standard-notes-docker-self-hosted-alternative/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","笔记"]},{"title":"Chevereto配合PicGo打造个人图床","url":"/2021/07/19/Chevereto%E9%85%8D%E5%90%88PicGo%E6%89%93%E9%80%A0%E4%B8%AA%E4%BA%BA%E5%9B%BE%E5%BA%8A/","content":"<p><strong>什么是 Chevereto ？</strong></p>\n<blockquote>\n<p>Chevereto 是目前最好的图床之一，功能也非常强大。其免费版和收费版的区别，在于收费版多了硬盘扩展，社交分享功能和技术支持。硬盘扩展指的是使用外部存储，例如：Amazon S3、Google Cloud、阿里云 OSS 等。<code>Chevereto</code> 的安装也非常简单，并且支持简体中文。</p>\n</blockquote>\n<p>从几天前作者发的公告看，如果没有人接手的话，免费版很可能就要终止了，如果这样的话实在太可惜了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/07/20210718195159.png\"></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"数据库\"><a href=\"#数据库\" class=\"headerlink\" title=\"数据库\"></a>数据库</h2><p>通过 <code>phpMyAdmin</code> 在 <code>MariaDB 5</code> 中新建用户 <code>chevereto</code>，创建同名的库 <code>chevereto</code> 并授予所有权限。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210520135519.png\"></p>\n<h2 id=\"安装镜像\"><a href=\"#安装镜像\" class=\"headerlink\" title=\"安装镜像\"></a>安装镜像</h2><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>chevereto</code> ，选择第一 <code>nmtan/chevereto</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210520135832.png\"></p>\n<h3 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h3><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>chevereto</code>，在 <code>chevereto</code> 再建一个子目录 <code>images</code></p>\n<blockquote>\n<p>默认 chevereto 支持不大于 2M 的图片文件，如果你的文件超过这个值，需要建一个 php.ini 文件，并在文件中加入下面的内容</p>\n</blockquote>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">upload_max_filesize</span> = <span class=\"number\">20</span>M</span><br><span class=\"line\"><span class=\"attr\">post_max_size</span> = <span class=\"number\">20</span>M</span><br></pre></td></tr></table></figure>\n\n<p>当然你还可以根据内存大小来限制内存的使用，例如</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">memory_limit</span> = <span class=\"number\">2048</span>M</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210520142139.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/chevereto/images</code></td>\n<td align=\"center\"><code>/var/www/html/images</code></td>\n<td align=\"center\">图片存放设置</td>\n</tr>\n<tr>\n<td align=\"center\"><code>docker/chevereto/php.ini</code></td>\n<td align=\"center\"><code>/usr/local/etc/php/php.ini</code></td>\n<td align=\"center\">配置文件</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>建议对 <code>php.ini</code> 设置为只读</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210520142335.png\"></p>\n<h3 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h3><p>找一个不冲突的端口 <code>8112</code> </p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">8112</td>\n<td align=\"center\">80</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210520142514.png\"></p>\n<h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>CHEVERETO_DB_HOST</code></td>\n<td align=\"center\">默认为 <code>db</code>，改为数据库 IP</td>\n</tr>\n<tr>\n<td align=\"center\"><code>CHEVERETO_DB_USERNAME</code></td>\n<td align=\"center\">默认为 <code>chevereto</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>CHEVERETO_DB_PASSWORD</code></td>\n<td align=\"center\">默认为 <code>chevereto</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>CHEVERETO_DB_NAME</code></td>\n<td align=\"center\">默认为 <code>chevereto</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>CHEVERETO_DB_PREFIX</code></td>\n<td align=\"center\">默认为 <code>chv_</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>CHEVERETO_DB_PORT</code></td>\n<td align=\"center\">默认为 <code>3306</code></td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>除了主机改成了群晖 IP（数据库服务器 IP），密码按实际设置的改动外，其他的都用的默认值</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210520142818.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:8112</code>，就能看到主界面了，但这是一个报错的界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210520143012.png\"></p>\n<p>原因是 PHP 用户 <code>www-data</code> 对文件夹 <code>images</code> 没有写入的权限。</p>\n<h2 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h2><p>用 SSH 客户端登录到群晖</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入到 chevereto 目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /volume1/docker/chevereto/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改权限</span></span><br><span class=\"line\">sudo chmod -R 777 images</span><br></pre></td></tr></table></figure>\n\n<p>再刷新页面，应该就可以开始设置了</p>\n<h2 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210520144331.png\"></p>\n<p>点 <code>Install Chevereto</code> 就可以了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210520144516.png\"></p>\n<p>点 <code>admin dashboard</code> 进入管理界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210520144612.png\"></p>\n<p>有点丑陋</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210520144712.png\"></p>\n<p>先改了个时区和语言</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210520145709.png\"></p>\n<p>在仪表盘的设置中更改了隐私模式，不再对 <code>访客开放</code>，毕竟是自用的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210520190300.png\"></p>\n<h2 id=\"图片上传\"><a href=\"#图片上传\" class=\"headerlink\" title=\"图片上传\"></a>图片上传</h2><p>点右上角的 <code>上传</code>进入上传模式，图片上传支持本地图片上传和拖拽</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210520145836.png\"></p>\n<p>拖了一组图片，可以单独标记和删除</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210520150631.png\"></p>\n<p>开始上传</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210520150750.png\"></p>\n<p>上传完毕</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210520150845.png\"></p>\n<p>按 <code>最新的</code> 的查看</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210520151034.png\"></p>\n<p>选中一张照片打开</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210520151149.png\"></p>\n<h2 id=\"图片的存储\"><a href=\"#图片的存储\" class=\"headerlink\" title=\"图片的存储\"></a>图片的存储</h2><p>从目录结构看是按日期来分类的，同时对图片做了处理，除了原图 <code>AAA.jpg</code> 外，还生成了中等图片 <code>AAA.md.jpg</code> 和 缩略图 <code>AAA.th.jpg</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210520152028.png\"></p>\n<p>虽然存储空间有一丢丢增大，但浏览速度有了很大的提高，同时很容易在文档、论坛中嵌入相应的图片</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210520152611.png\"></p>\n<h2 id=\"配合-PicGo\"><a href=\"#配合-PicGo\" class=\"headerlink\" title=\"配合 PicGo\"></a>配合 PicGo</h2><p>大家还记得 PicGo 吗？ 老苏曾经写过一篇『 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGFvc3UubWwvMjAyMC8xMC8xMy9NYXJrZG93biVFNyU5QSU4NCVFNSU5QiVCRSVFNyU4OSU4NyVFNCVCQyVCNCVFNCVCRSVBM1BpY0dv\">Markdown的图片伴侣PicGo<i class=\"fa fa-external-link-alt\"></i></span> 』</p>\n<p>在 <code>插件设置</code> 中搜索 <code>chevereto</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210520153216.png\"></p>\n<p>安装完成后 <code>图床设置</code> 中就会多出 <code>Chevereto Uploader</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210520193644.png\"></p>\n<p>回到 <code>仪表板</code> –&gt; <code>设置</code> –&gt; <code>API</code></p>\n<blockquote>\n<p>Chevereto API v1（也被称为Bridge API）允许访客上传图片到你的 Chevereto 驱动的网站上，支持从文件，base64或者图片的链接进行上传。API 的 V1 版本没有速率限制，但是会受到仪表盘中设置的最大上传限制的影响。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210520191852.png\"></p>\n<p>会拿到一串 <code>API v1 密钥</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210520192041.png\"></p>\n<p>填入到 PicGo </p>\n<blockquote>\n<p>Url：http(s)://服务器IP+端口或者域名/api/1/upload</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210520193136.png\"></p>\n<p>上传试试，刷新照片目录就有了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210520193405.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Chevereto - Open Source Image Hosting Software<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaGV2ZXJldG8uY29tLw==\">https://chevereto.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Chevereto/Chevereto-Free: Open source image hosting software<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0NoZXZlcmV0by9DaGV2ZXJldG8tRnJlZQ==\">https://github.com/Chevereto/Chevereto-Free<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Let’s Install Chevereto with Docker! Self-Hosted Image Hosting – NAS Hosted<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9nZWVrZWQuaG9zdC9sZXRzLWluc3RhbGwtY2hldmVyZXRvLXdpdGgtZG9ja2VyLXNlbGYtaG9zdGVkLWltYWdlLWhvc3Rpbmcv\">https://geeked.host/lets-install-chevereto-with-docker-self-hosted-image-hosting/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","图床"]},{"title":"FTP客户端FileZilla的安装","url":"/2021/07/16/FTP%E5%AE%A2%E6%88%B7%E7%AB%AFFileZilla%E7%9A%84%E5%AE%89%E8%A3%85/","content":"<p>这周事情比较多，没有时间写新的，找了篇旧文顶一下。</p>\n<p>这篇文章是年初写的，当时是因为一则新闻，但因为种种原因一直没发，确切的说主要是因为老苏都不记得上一次使用 FTP 是什么时候的事儿了，要知道当年资源网站大多都是采用 FTP 协议的，而现在基本上可以说已经绝迹了。</p>\n<p><strong>什么是 FTP 协议 ？</strong></p>\n<blockquote>\n<p>FTP（File Transfer Protocol，文件传输协议） 是 TCP/IP 协议组中的协议之一。FTP 协议包括两个组成部分，其一为 FTP 服务器，其二为 FTP 客户端。其中 FTP 服务器用来存储文件，用户可以使用 FTP 客户端通过 FTP 协议访问位于 FTP 服务器上的资源。在开发网站的时候，通常利用 FTP 协议把网页或程序传到 Web 服务器上。此外，由于 FTP 传输效率非常高，在网络上传输大的文件时，一般也采用该协议。【百度百科】</p>\n</blockquote>\n<p>FTP 是个 <code>古老</code> 的协议，年初谷歌在 Chrome 88 版本中正式禁用了文件传输协议（FTP），紧接着 Mozilla 也宣布，Firefox 浏览器将彻底移除对 FTP 文件传输协议的支持，主要原因是<strong>使用率低且不支持加密（FTPS）</strong>，这增加了通过 FTP 下载资源的安全风险。</p>\n<p><strong>什么是 FileZilla ?</strong></p>\n<blockquote>\n<p><code>FileZilla</code> 是免费开源的 <code>FTP</code> 解决方案，分为客户端版本和服务器版本，其客户端是一个快速可靠的、跨平台的 <code>FTP</code> ，<code>FTPS</code> 和 <code>SFTP</code> 客户端。具有图形用户界面（GUI）和很多有用的特性。</p>\n</blockquote>\n<p>这次要安装的 <code>FileZilla</code> 是 FTP 客户端版，这个镜像的原理和之前介绍的 <code>firefox</code> 、<code>baidunetdisk</code> 、<code>RcloneBrowser</code> 一样，都使用了 VNC 方式，不过还好，资源消耗不大。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613549994900-1613549994902.png\" alt=\"title\"></p>\n<p>相关文章:</p>\n<blockquote>\n<ul>\n<li><a href=\"https://laosu.ml/2020/12/31/Docker%E4%B8%AD%E8%BF%90%E8%A1%8C%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E5%AE%A2%E6%88%B7%E7%AB%AF/\">Docker中运行百度网盘客户端</a></li>\n<li><a href=\"https://laosu.ml/2020/11/01/%E7%BB%99%E7%BE%A4%E6%99%96%E5%AE%89%E8%A3%85firefox%E6%B5%8F%E8%A7%88%E5%99%A8/\">给群晖安装firefox浏览器</a></li>\n<li><a href=\"https://laosu.ml/2021/06/21/%E7%BE%A4%E6%99%96%E4%B8%8A%E9%80%9A%E8%BF%87RcloneBrowser%E6%8C%82%E8%BD%BD%E4%BA%91%E7%9B%98\">群晖上通过RcloneBrowser挂载云盘</a></li>\n</ul>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>filezilla</code> ，选择第一个 <code>jlesage/filezilla</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613539204669-1613539204671.png\" alt=\"title\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>filezilla</code>。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">/docker/filezilla</td>\n<td align=\"center\">/config</td>\n<td align=\"center\">应用程序在此处存储其配置，日志和任何需要持久性的文件</td>\n</tr>\n<tr>\n<td align=\"center\">&lt;path/to/file&gt;</td>\n<td align=\"center\">/storage</td>\n<td align=\"center\">该位置包含主机中需要应用程序访问的文件</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613544736418-1613544736420.png\" alt=\"title\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不能冲突</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n<th align=\"center\">类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">5802</td>\n<td align=\"center\">5800</td>\n<td align=\"center\">TCP</td>\n</tr>\n<tr>\n<td align=\"center\">5902</td>\n<td align=\"center\">5900</td>\n<td align=\"center\">TCP</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613545329937-1613545329938.png\" alt=\"title\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">GROUP_ID</td>\n<td align=\"center\"><code>&lt;gid&gt;</code> 默认值为 <code>1000</code></td>\n</tr>\n<tr>\n<td align=\"center\">USER_ID</td>\n<td align=\"center\"><code>&lt;uid&gt;</code> 默认值为 <code>1000</code></td>\n</tr>\n<tr>\n<td align=\"center\">TZ</td>\n<td align=\"center\">设置为 <code>Asia/Shanghai</code></td>\n</tr>\n<tr>\n<td align=\"center\">VNC_PASSWORD</td>\n<td align=\"center\">可选项，</td>\n</tr>\n<tr>\n<td align=\"center\">ENABLE_CJK_FONT</td>\n<td align=\"center\">可选项，设置为 <code>1</code> 时，将安装开源字体 <code>WenQuanYi Zen Hei</code> 。该字体包含各种中文/日文/韩文字符</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>更多环境变量的说明，请参考:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2psZXNhZ2UvZG9ja2VyLWZpbGV6aWxsYSNlbnZpcm9ubWVudC12YXJpYWJsZXM=\">https://github.com/jlesage/docker-filezilla#environment-variables<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613545940768-1613545940770.png\" alt=\"title\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:5802</code>，并不能马上看到主界面，从日志看在下载字库</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613546556656-1613546556658.png\" alt=\"title\"></p>\n<p>主界面，如果没有设置 <code>ENABLE_CJK_FONT = 1</code>， 中文的文件名和目录都是乱码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613547734664-1613547734666.png\" alt=\"title\"></p>\n<p>设置之后，原来乱码的部分已经能正常显示了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613549070748-1613549070751.png\" alt=\"title\"></p>\n<p>查看版本信息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613550491814-1613550491815.png\" alt=\"title\"></p>\n<p>使用上感觉比我用过的其他 <code>FTP</code> 软件要简单一些，你还可以在 <code>FileZilla</code> 中文网站上找到其他平台的客户端，比如 <code>Windows 平台</code>、<code>MacOS 平台</code> 等等</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZmlsZXppbGxhLmNuL2Rvd25sb2FkL2NsaWVudA==\">【FileZilla 客户端下载地址】：https://www.filezilla.cn/download/client<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210505232433.png\"></p>\n<p>只是现在会用到 FTP 的场合越来越少了。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>jlesage/docker-filezilla: Docker container for FileZilla<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2psZXNhZ2UvZG9ja2VyLWZpbGV6aWxsYQ==\">https://github.com/jlesage/docker-filezilla<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>How to Install FileZilla on Your Synology NAS – Marius Hosting<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXJpdXNob3N0aW5nLmNvbS9ob3ctdG8taW5zdGFsbC1maWxlemlsbGEtb24teW91ci1zeW5vbG9neS1uYXMv\">https://mariushosting.com/how-to-install-filezilla-on-your-synology-nas/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>FileZilla - The free FTP solution<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9maWxlemlsbGEtcHJvamVjdC5vcmcv\">https://filezilla-project.org/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","ftp"]},{"title":"简单好用的书签管理器OneNav","url":"/2021/07/12/%E7%AE%80%E5%8D%95%E5%A5%BD%E7%94%A8%E7%9A%84%E4%B9%A6%E7%AD%BE%E7%AE%A1%E7%90%86%E5%99%A8OneNav/","content":"<p><strong>什么是 OneNav ?</strong></p>\n<blockquote>\n<p>OneNav 是使用 PHP + SQLite 3 开发的简约导航/书签管理器，支持后台管理、私有链接、书签批量导入和多种主题风格。</p>\n</blockquote>\n<p>老苏已经折腾过的类似应用有 <code>WebStack</code>、<code>Heimdall</code>、<code>Organizr</code>，从定位上看与 <code>WebStack</code> 比较接近。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>onenav</code> ，选择第一个 <code>onenav</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210522194209.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>onenav</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/onenav</code></td>\n<td align=\"center\"><code>/data/wwwroot/default/data</code></td>\n<td align=\"center\">存放onenav数据</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210522195651.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不冲突就行，老苏这里用了 <code>9680</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">9680</td>\n<td align=\"center\">80</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210522195719.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>USER</code></td>\n<td align=\"center\">用户</td>\n</tr>\n<tr>\n<td align=\"center\"><code>PASSWORD</code></td>\n<td align=\"center\">密码</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210522195906.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:9680</code>，就可以看到主界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210522200049.png\"></p>\n<p>点右上角可以登录后台，账号和密码就是在前面 <code>环境变量</code> 里设置的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210522203131.png\"></p>\n<p>后台非常简单</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210522203218.png\"></p>\n<h2 id=\"第三方主题\"><a href=\"#第三方主题\" class=\"headerlink\" title=\"第三方主题\"></a>第三方主题</h2><p>内置了两套模板，所谓的第三方其实也就两款免费的主题，一款是作者自己开发的基于开源项目 <code>webstack</code> 适配的 <code>OneNav</code> 主题，作者自己说该主题支持的功能相对较少，不太建议使用。</p>\n<ul>\n<li>下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hlbGxveHovd2Vic3RhY2s=\">https://github.com/helloxz/webstack<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210522210558.png\"></p>\n<p>另一款是网友开发的，风格简约舒适，支持暗色主题。</p>\n<ul>\n<li><p>下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93Z2V0Lm92aC9zb3VyY2Uvb25lbmF2L3RoZW1lcy9iYWlzdS56aXA=\">https://wget.ovh/source/onenav/themes/baisu.zip<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>项目地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vYmFpc3Vjb2RlL29uZW5hdi10aGVtZS90cmVlL21hc3Rlci90ZW1wbGF0ZXMvYmFpc3U=\">https://gitee.com/baisucode/onenav-theme/tree/master/templates/baisu<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210522210750.png\"></p>\n<p>我下载了后面一款主题，解压至 <code>onenav</code> 目录下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210522213916.png\"></p>\n<p>用 SSH 客户端连接到群晖上，在 <code>onenav</code> 目录下执行下面的命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 拷贝主题文件</span></span><br><span class=\"line\">docker cp /volume1/docker/onenav/baisu helloz-onenav1:/data/wwwroot/default/templates</span><br></pre></td></tr></table></figure>\n\n<p>修改配置文件 <code>config.php</code>，将主题修改为 <code>baisu</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210522215522.png\"></p>\n<p>保存后不需要重启，直接刷新页面就可以看到新界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210522215654.png\"></p>\n<p>默认没有显示站点描述，打开 <code>baisu</code> 目录下的 <code>index.php</code> 文件，搜索 <code>&lt;?php echo $link[&#39;description&#39;]; ?&gt;</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210522220353.png\"></p>\n<p>取消注释即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/12/202112092346367.png\"></p>\n<p>保存之后，需要再次执行 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 拷贝主题文件</span></span><br><span class=\"line\">docker cp /volume1/docker/onenav/baisu helloz-onenav1:/data/wwwroot/default/templates</span><br></pre></td></tr></table></figure>\n\n<p>其实只要拷贝一个文件就可以了，只是老苏懒得去重写，还是复制粘贴更快捷，刷新界面就可以看到站点描述了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210522221033.png\"></p>\n<h2 id=\"一键添加\"><a href=\"#一键添加\" class=\"headerlink\" title=\"一键添加\"></a>一键添加</h2><p>随便添加个新标签， 右键 –&gt; 修改，标签名称栏随意填写， 标签网址填写下面这段代码</p>\n<blockquote>\n<p>记得将 <code>http://www.你的域名.com</code> 改成你自己的地址</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">javascript: <span class=\"keyword\">var</span> url = location.href;</span><br><span class=\"line\"><span class=\"keyword\">var</span> title = <span class=\"built_in\">document</span>.title;</span><br><span class=\"line\"><span class=\"keyword\">void</span>(open(<span class=\"string\">&#x27;http://www.你的域名.com/index.php?c=admin&amp;page=add_quick_tpl&amp;url=&#x27;</span> + <span class=\"built_in\">encodeURIComponent</span>(url) + <span class=\"string\">&#x27;&amp;title=&#x27;</span> + <span class=\"built_in\">encodeURIComponent</span>(title), <span class=\"string\">&quot;_blank&quot;</span>, <span class=\"string\">&quot;toolbar=yes, location=yes, directories=no, status=no, menubar=yes, scrollbars=yes, resizable=no, copyhistory=yes, left=200,top=200,width=420, height=480&quot;</span>));</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210522222053.png\"></p>\n<p>用法直接用了 <code>baisu</code> 作者的动图，一看就明白了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210522222535.gif\"></p>\n<p>这个给收藏带来了极大的便利，另外书签在移动端的表现也非常不错，虽然没有 <code>WebStack</code> 好看，但是胜在添加收藏更方便一些。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210524212633.jpg\"></p>\n<p>分类不支持层级，这点也不如  <code>WebStack</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210526092016.png\"></p>\n<p>但是也够用了，毕竟简约、方便才是 <code>OneNav</code>  的特点。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>helloxz/onenav: 使用PHP开发的简约导航/书签管理系统。<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hlbGxveHovb25lbmF2\">https://github.com/helloxz/onenav<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>使用Docker部署OneNav书签管理器 - 小z博客<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueGlhb3oubWUvYXJjaGl2ZXMvMTU4NzI=\">https://www.xiaoz.me/archives/15872<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>OneNav使用手册 · 语雀<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueXVxdWUuY29tL2hlbGxvei9vbmVuYXY=\">https://www.yuque.com/helloz/onenav<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>baisu: onenav主题 - Gitee.com<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vYmFpc3Vjb2RlL29uZW5hdi10aGVtZS90cmVlL21hc3Rlci90ZW1wbGF0ZXMvYmFpc3U=\">https://gitee.com/baisucode/onenav-theme/tree/master/templates/baisu<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","导航"]},{"title":"非docker方式搭建wallabag","url":"/2021/07/09/%E9%9D%9Edocker%E6%96%B9%E5%BC%8F%E6%90%AD%E5%BB%BAwallabag/","content":"<p><strong>什么是 wallabag ？</strong></p>\n<blockquote>\n<p>wallabag 是一款基于 Symfony 框架开发的 PHP 应用程序，是一款优秀的开源免费的稍后阅读工具。</p>\n</blockquote>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>本文是应一位网友的要求而撰写，他希望老苏写一篇使用群晖自带的 <code>web station</code> + 群晖数据库搭建 <code>wallabag</code> 的详细教程。</p>\n<p>坦率的说，老苏不建议在群晖上使用除了 <code>docker</code> 和 <code>套件</code> 之外的方式来安装服务，因为很容易把机器搞乱（后面有提到切换 PHP 版本带来的问题，虽然这个问题最终得到了解决），除非你和老苏一样，生产和测试不是在一台主机，并且有良好的备份习惯。</p>\n<p>下面的操作有一定的风险，除非你确定知道自己在做什么。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>安装前先说下老苏测试机的环境</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210709150625.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">软件</th>\n<th align=\"center\">版本</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">MariaDB 5</td>\n<td align=\"center\">5.5.59-0084</td>\n</tr>\n<tr>\n<td align=\"center\">phpMyAdmin</td>\n<td align=\"center\">4.9.2-0183</td>\n</tr>\n<tr>\n<td align=\"center\">PHP 5.6</td>\n<td align=\"center\">5.6.40-0059</td>\n</tr>\n<tr>\n<td align=\"center\">PHP 7.3</td>\n<td align=\"center\">7.3.16-0006</td>\n</tr>\n</tbody></table>\n<p>之所以要特别提到版本是因为老苏担心不同版本可能会存在各种差异</p>\n<h2 id=\"创建数据库\"><a href=\"#创建数据库\" class=\"headerlink\" title=\"创建数据库\"></a>创建数据库</h2><p>通过 <code>phpMyAdmin</code> 在 <code>MariaDB 5</code> 中新建用户 <code>wallabag</code>，创建同名的库 <code>wallabag</code> 并授予所有权限。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210704154439.png\"></p>\n<h2 id=\"下载源代码\"><a href=\"#下载源代码\" class=\"headerlink\" title=\"下载源代码\"></a>下载源代码</h2><p>不要用 <code>git</code> 下载，因为 <code>git</code> 下载的代码缺 <code>vendor</code> 目录，这个目录是项目的依赖包，如果你想自己编译生成 <code>vendor</code> 目录，需要在群晖上安装一堆东西，老苏不建议这么干，所以推荐直接到 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dhbGxhYmFnL3dhbGxhYmFnL3JlbGVhc2Vz\">https://github.com/wallabag/wallabag/releases<i class=\"fa fa-external-link-alt\"></i></span> 下载最新的 <code>wallabag-2.x.x.tar.gz</code> 压缩包。</p>\n<blockquote>\n<p>不要下 <code>Source code</code> ，因为也不带依赖包；</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210705113916.png\"></p>\n<p>将下载的压缩包上传到 <code>web</code> 目录，并用 SSH 客户端登录到群晖</p>\n<blockquote>\n<p>老苏的 web station 安装在 volume2 上，这里要根据你自己的卷标进行修改</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入 web station 根目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /volume2/web</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建目录</span></span><br><span class=\"line\">mkdir wallabag</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解压缩(不包含原目录)</span></span><br><span class=\"line\">tar -zxvf ./wallabag-2.4.2.tar.gz --strip-components 1 -C wallabag/</span><br></pre></td></tr></table></figure>\n\n<p>现在的目录结构是这样的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210705141808.png\"></p>\n<h2 id=\"切换-PHP-版本\"><a href=\"#切换-PHP-版本\" class=\"headerlink\" title=\"切换 PHP 版本\"></a>切换 PHP 版本</h2><p>在 SSH 客户端的命令行查询 PHP 的版本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 获取 php 版本</span></span><br><span class=\"line\">php -v</span><br></pre></td></tr></table></figure>\n\n<p>不出意外的话，应该是 5.6 版本</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210705145830.png\"></p>\n<blockquote>\n<p>如果你足够仔细的话会发现这个版本是 <code>5.6.11</code>，并不是我们前面记录的 <code>5.6.40</code>，老苏的好习惯又一次拯救了自己，因为老苏不仅在群晖上备份了，还顺手用 <code>WinSCP</code> 下载到了电脑一份。</p>\n</blockquote>\n<p>如果你还没有安装 <code>PHP</code> 其他版本，请到套件中心安装 <code>PHP 7.3</code> 版本</p>\n<blockquote>\n<p>官方写的是 **compatible with PHP &gt;= 7.2 (maybe not 7.4).**，但是用 7.2 安装并不成功，会提示需要  &gt;=  7.2.5，所以别纠结了，直接上 7.3</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210707155128.png\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 重命名原来 5.6 版本的 PHP，这一步很重要</span></span><br><span class=\"line\">mv /bin/php /bin/php56</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 用 7.3 版本的替换</span></span><br><span class=\"line\">cp -a /volume2/@appstore/PHP7.3/usr/<span class=\"built_in\">local</span>/bin/php73 /bin/php</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取 php 版本</span></span><br><span class=\"line\">php -v</span><br></pre></td></tr></table></figure>\n\n<p>这次应该是显示 7.3 版本</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210707152445.png\"></p>\n<p> <strong>【注意】</strong>：这么做是有后遗症的，会导致 <code>文本编辑器</code> 打开文件任何文件都是空的。</p>\n<p> 老苏也尝试过用 <code>PHP 7.2</code> 来替换， 但 <code>文本编辑器</code> 打开文件会显示 <code>无法联机，请检查你的网络设置。</code></p>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210709135653.png\"></p>\n<p>还有没有其他遗留问题，老苏也不能确定，不过这个问题最终得到了解决，之所以放到最后而不是在这里讲，并不是老苏想卖关子，而是有个执行顺序的问题。</p>\n<h2 id=\"修改配置文件\"><a href=\"#修改配置文件\" class=\"headerlink\" title=\"修改配置文件\"></a>修改配置文件</h2><p> 在 <code>app/config</code>子目录中找到 <code>parameters.yml</code> 文件并打开修改（因为上面的问题，老苏是下载到本地改完了再上传替换的，就是因为文本编辑器经常要使用，所以很容易发现了异常）</p>\n<ul>\n<li>database_user：默认是 <code>root</code>，改为我们前面创建的 <code>wallabag</code>；</li>\n<li>database_password：默认为 <code>null</code>，改为前面设置的密码；</li>\n<li>domain_name：默认为 <code>https://your-wallabag-url-instance.com</code>，老苏改为了 IP + 端口，之所以用端口是为了能像 <code>docker</code> 一样方便做反向代理，具体设置在后面的 <code>web station</code> 部分，当然你也可以一步到位，直接填写域名。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210709163337.png\"></p>\n<h2 id=\"设置-web-station\"><a href=\"#设置-web-station\" class=\"headerlink\" title=\"设置 web station\"></a>设置 web station</h2><p>因为没有启用 <code>个人网站</code> ，所以没安装 <code>Apache</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210707154850.png\"></p>\n<p>至于为什么安装了这么多 PHP 版本，说实话老苏自己也忘记了，但是这不重要，<code>wallabag</code> 只要有 <code>PHP 7.3</code> 就行</p>\n<p><code>PHP 设置</code> ，如果已经存在就 <code>编辑</code>，如果不存在就 <code>新增</code></p>\n<ul>\n<li> <code>PHP 版本</code> 必须是对应的 <code>PHP 7.3</code></li>\n<li> <code>扩展名</code> 其实就是用到的第三方插件，因为不好截图我把需要勾选的依次列一下，<code>bcmath</code>、<code>gd</code>、<code>intl</code>、<code>mysqli</code>、<code>pdomysql</code>、<code>sockets</code>、<code>zip</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210707160213.png\"></p>\n<p>接下来设置 <code>虚拟主机</code> –&gt; <code>新增</code> –&gt; <code>基于端口</code></p>\n<ul>\n<li>端口对应前面设置文件中的端口，前面设的 <code>5080</code>；</li>\n<li>文档根目录不是 <code>wallabag</code>，而是它的子目录 <code>web</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210707155716.png\"></p>\n<h2 id=\"控制台命令\"><a href=\"#控制台命令\" class=\"headerlink\" title=\"控制台命令\"></a>控制台命令</h2><p>软件开发有三个主要阶段，开发 -&gt; 测试 -&gt; 上线，所以对应了三种环境配置：</p>\n<ul>\n<li>  <strong>DEV</strong> – 开发环境。</li>\n<li>  <strong>TEST</strong> – 测试环境。</li>\n<li>  <strong>PROD</strong> – 生产环境。</li>\n</ul>\n<p><code>wallabag</code> 有许多 <code>CLI</code> 命令来管理一系列的任务。您可以通过 <code>bin/console</code> 在 <code>wallabag</code> 文件夹中执行来列出所有命令。</p>\n<blockquote>\n<p>我们不是用来开发也不是用来测试，而是要使用，所以要记住添加 <code>--env=prod</code> 到命令中。</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入 wallabag 目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> wallabag/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 用于显示详细的命令和参数</span></span><br><span class=\"line\">php bin/console --env=prod</span><br></pre></td></tr></table></figure>\n\n<p>接下来执行清理缓存，如果是第一次可以跳过</p>\n<blockquote>\n<p>例如你后面又更新了 <code>parameters.yml</code> 文件，就需要执行一次，否则加载的还是原来  <code>parameters.yml</code> 的内容</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#  Clears the cache </span></span><br><span class=\"line\"><span class=\"comment\"># 如果设置错误或更新了用于清除缓存</span></span><br><span class=\"line\">php bin/console cache:clear --env=prod</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210706212405.png\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># wallabag installer 包括创建第一个用户</span></span><br><span class=\"line\">php bin/console wallabag:install --env=prod</span><br></pre></td></tr></table></figure>\n\n<p>安装分为四步，第一步是 <code>Checking system requirements</code>，如果都是 OK 那就恭喜你了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210707110425.png\"></p>\n<p>第二步是 <code>Setting up database</code>，直接 <code>yes</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210707135202.png\"></p>\n<p>第三步是 <code>Administration setup</code>，依次输入用户名、密码有邮箱</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210707140600.png\"></p>\n<p>第四步是 <code>Config setup</code>，不需要输入，直接显示结果</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210707140645.png\"></p>\n<p>看到 <code>[OK] wallabag has been successfully installed.</code> 就是安装成功了。</p>\n<h2 id=\"文件夹权限\"><a href=\"#文件夹权限\" class=\"headerlink\" title=\"文件夹权限\"></a>文件夹权限</h2><p>这是为了避免出现 <code>Permission denied</code> 这样的错误信息</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 依次执行</span></span><br><span class=\"line\">chown -R http:http /volume2/web/wallabag/var</span><br><span class=\"line\">chown -R http:http /volume2/web/wallabag/bin</span><br><span class=\"line\">chown -R http:http /volume2/web/wallabag/app/config</span><br><span class=\"line\">chown -R http:http /volume2/web/wallabag/vendor</span><br><span class=\"line\">chown -R http:http /volume2/web/wallabag/data</span><br><span class=\"line\">chown -R http:http /volume2/web/wallabag/web</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"设置-nginx\"><a href=\"#设置-nginx\" class=\"headerlink\" title=\"设置 nginx\"></a>设置 nginx</h2><p>在 SSH 客户端命令行执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 显示文件内容</span></span><br><span class=\"line\">cat /etc/nginx/app.d/server.webstation-vhost.conf</span><br></pre></td></tr></table></figure>\n\n<p>找到端口对应的 <code>5080</code>，以及下面对应的配置文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210707162011.png\"></p>\n<blockquote>\n<p>conf.d 后面那串字符是不同的，要按自己的修改</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/etc/nginx/conf.d/a755a4a7-0762-422c-8dc7-e5f63392cc43/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 新建文件</span></span><br><span class=\"line\">vi user.conf.dir</span><br></pre></td></tr></table></figure>\n\n<p>将下面的内容粘贴进去，用 <code>:wq</code> 保存并退出</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">location &#x2F; &#123;</span><br><span class=\"line\">    # try to serve file directly, fallback to app.php</span><br><span class=\"line\">    try_files $uri &#x2F;app.php$is_args$args;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">location ~ ^&#x2F;app\\.php(&#x2F;|$) &#123;</span><br><span class=\"line\">    # if, for some reason, you are still using PHP 5,</span><br><span class=\"line\">    # then replace &#x2F;run&#x2F;php&#x2F;php7.0 by &#x2F;var&#x2F;run&#x2F;php5</span><br><span class=\"line\">    fastcgi_pass unix:&#x2F;run&#x2F;php&#x2F;php7.0-fpm.sock;</span><br><span class=\"line\">    fastcgi_split_path_info ^(.+\\.php)(&#x2F;.*)$;</span><br><span class=\"line\">    include fastcgi_params;</span><br><span class=\"line\">    # When you are using symlinks to link the document root to the</span><br><span class=\"line\">    # current version of your application, you should pass the real</span><br><span class=\"line\">    # application path instead of the path to the symlink to PHP</span><br><span class=\"line\">    # FPM.</span><br><span class=\"line\">    # Otherwise, PHP&#39;s OPcache may not properly detect changes to</span><br><span class=\"line\">    # your PHP files (see https:&#x2F;&#x2F;github.com&#x2F;zendtech&#x2F;ZendOptimizerPlus&#x2F;issues&#x2F;126</span><br><span class=\"line\">    # for more information).</span><br><span class=\"line\">    fastcgi_param  SCRIPT_FILENAME  $realpath_root$fastcgi_script_name;</span><br><span class=\"line\">    fastcgi_param DOCUMENT_ROOT $realpath_root;</span><br><span class=\"line\">    # Prevents URIs that include the front controller. This will 404:</span><br><span class=\"line\">    # http:&#x2F;&#x2F;domain.tld&#x2F;app.php&#x2F;some-path</span><br><span class=\"line\">    # Remove the internal directive to allow URIs like this</span><br><span class=\"line\">    internal;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># return 404 for all other php files not matching the front controller</span><br><span class=\"line\"># this prevents access to other php files you don&#39;t want to be accessible.</span><br><span class=\"line\">location ~ \\.php$ &#123;</span><br><span class=\"line\">    return 404;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">error_log &#x2F;var&#x2F;log&#x2F;nginx&#x2F;wallabag_error.log;</span><br><span class=\"line\">access_log &#x2F;var&#x2F;log&#x2F;nginx&#x2F;wallabag_access.log;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210707162846.png\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 重新加载配置文件</span></span><br><span class=\"line\">sudo nginx -s reload</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>见证奇迹的时刻终于到了，在浏览器中输入 <code>http://群晖IP:5080</code>，就能看到主界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210707141514.png\"></p>\n<p>用前面创建的用户 <code>wallabag</code> 登录，进入 <code>Quickstart</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210707143759.png\"></p>\n<p>首先当然是 <code>Configure the application</code> –&gt; <code>MORE</code> –&gt;  <code>SETTINGS</code> –&gt; <code>language</code> 中选择 <code>简体中文</code> –&gt; <code>SAVE</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210707143533.png\"></p>\n<p>不需要重启也不需要刷新</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210707143654.png\"></p>\n<p>和之前折腾过的 <code>docker</code> 版本似乎存在不少差异，有兴趣也可以看看老苏之前写的文章：</p>\n<blockquote>\n<p><a href=\"https://laosu.ml/2020/09/13/%E7%94%A8Wallabag%E6%90%AD%E5%BB%BA%E7%A8%8D%E5%90%8E%E9%98%85%E8%AF%BB\">用Wallabag搭建稍后阅读</a></p>\n</blockquote>\n<h1 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h1><p>老苏发现在 <code>user.conf.dir</code> 中有这么一段话，<code>if, for some reason, you are still using PHP 5, then replace /run/php/php7.0 by /var/run/php5</code>，让老苏有了新的想法，那就是在确保程序已经能正常运行的情况下，将 <code>PHP 7.3</code> 再换回到 <code>PHP 5.6</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 重命名原来 7.3 版本的 PHP</span></span><br><span class=\"line\">mv /bin/php /bin/php73</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重命名原来 5.6 版本的 PHP</span></span><br><span class=\"line\">mv /bin/php56 /bin/php</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 验证 php 版本</span></span><br><span class=\"line\">php -v</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210709164015.png\"></p>\n<p>现在 <code>文本编辑器</code> 恢复了正常，同时网页也不影响使用，为了证实确实有效，老苏还特意重启了几次。</p>\n<p> 还有一点需要说明的，<code>bin</code> 目录中原始的 <code>php</code> 一定要备份好，一旦丢失，就算你把 <code>/volume2/@appstore/PHP5.6/usr/local/bin/php56</code> 拷贝过来，<code>文本编辑器</code> 依然还是会空白，虽然这两个都是 <code>PHP 5.6</code> ，但是版本其实并不一样</p>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210709154539.png\"></p>\n<p> 虽然只是小版本的差异，但文件大小了差了很多</p>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210709154744.png\"></p>\n<p>虽然结果是正确的，但过程这么折腾，一定是有哪里还没做对，让老苏静静~</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>wallabag/wallabag: wallabag is a self hostable application for saving web pages: Save and classify articles. Read them later. Freely.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dhbGxhYmFnL3dhbGxhYmFn\">https://github.com/wallabag/wallabag<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Installation · GitBook<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2Mud2FsbGFiYWcub3JnL2VuL2FkbWluL2luc3RhbGxhdGlvbi9pbnN0YWxsYXRpb24uaHRtbA==\">https://doc.wallabag.org/en/admin/installation/installation.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>群晖系统上如何切换PHP版本-伊阳博客群晖系统上如何切换PHP版本-下载页面<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaHlpeWFuZy5jbi8xNDAuaHRtbA==\">https://chyiyang.cn/140.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>群晖web station搭建的WordPress 修改固定链接后出现404的解决方案 | 网言网事<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2luY2U4My5jbi8xNTEuaHRtbA==\">https://www.since83.cn/151.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","稍后阅读"]},{"title":"115网盘资源下载到群晖","url":"/2021/07/05/115%E7%BD%91%E7%9B%98%E8%B5%84%E6%BA%90%E4%B8%8B%E8%BD%BD%E5%88%B0%E7%BE%A4%E6%99%96/","content":"<p>简单说明：</p>\n<ul>\n<li><p>本方案不是用来提速的，只是方便将 115 网盘的资源下载到群晖</p>\n</li>\n<li><p>可以将 115 网盘的资源下载到任何地方，只是因为群晖是 7*24 小时开机的，所以更方便而已</p>\n</li>\n<li><p>也可以将 <code>Aria2</code> 作为通用的下载器，而不仅局限于下载 115 网盘的资源</p>\n</li>\n</ul>\n<h1 id=\"安装-Aria2\"><a href=\"#安装-Aria2\" class=\"headerlink\" title=\"安装 Aria2\"></a>安装 Aria2</h1><p><strong>什么是 Aria2 ？</strong></p>\n<blockquote>\n<p>aria2 是一个轻量级的多协议和多源命令行下载实用程序。它支持 HTTP/HTTPS、FTP、SFTP、 BitTorrent 和 Metalink 。aria2 可以最大程度利用你的网络带宽，你可以自由配置，包括线程数、网络传输速度、RPC 端口、断点续传是否开启等。</p>\n</blockquote>\n<p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>aria2</code> ，选择第一个 <code>p3terx/aria2-pro</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210621100801.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>aria2</code>，再在 <code>aria2</code> 建两个子目录，分别命名为 <code>config</code> 和 <code>downloads</code>。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>/docker/aria2/config</code></td>\n<td align=\"center\"><code>/config</code></td>\n<td align=\"center\">配置目录</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/docker/aria2/downloads</code></td>\n<td align=\"center\"><code>/downloads</code></td>\n<td align=\"center\">下载目录</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>老苏把下载目录指向了玩客云的盘</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210621102039.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不能冲突，这里都用了默认值</p>\n<blockquote>\n<p>如果这里做了更改，记得环境变量中也要做对应的变更</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n<th align=\"center\">类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">6800</td>\n<td align=\"center\">6800</td>\n<td align=\"center\">TCP</td>\n</tr>\n<tr>\n<td align=\"center\">6888</td>\n<td align=\"center\">6888</td>\n<td align=\"center\">TCP</td>\n</tr>\n<tr>\n<td align=\"center\">6888</td>\n<td align=\"center\">6888</td>\n<td align=\"center\">UDP</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210621102347.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">PGID</td>\n<td align=\"center\"><code>&lt;gid&gt;</code> 老苏习惯设为 <code>1000</code></td>\n</tr>\n<tr>\n<td align=\"center\">PUID</td>\n<td align=\"center\"><code>&lt;uid&gt;</code> 老苏习惯设为 <code>1000</code></td>\n</tr>\n<tr>\n<td align=\"center\">RPC_SECRET</td>\n<td align=\"center\">设置 RPC 秘密授权令牌</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p><code>RPC_SECRET</code> 的令牌，老苏是用 <code>bitwarden</code> 的密码生成器生成的，注意不要用特殊字符</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210621103333.png\"></p>\n<p>之所以留了很多空是因为其有默认值</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210621104839.png\"></p>\n<h2 id=\"高级设置\"><a href=\"#高级设置\" class=\"headerlink\" title=\"高级设置\"></a>高级设置</h2><p>勾选了 <code>启用自动重启启动</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210621105006.png\"></p>\n<h1 id=\"安装-fake115\"><a href=\"#安装-fake115\" class=\"headerlink\" title=\"安装 fake115\"></a>安装 fake115</h1><p><code>fake115</code> 原来主要是用来伪装 115 浏览器，但是据说现在 115 已经放开登录限制了，其中 <code>fake115.user.js</code> 是登录模拟，而 <code>fake115d.user.js</code> 是用来下载，我们只要用到后面这个下载的 <code>fake115d.user.js</code> </p>\n<p>下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2trSEFJS0UvZmFrZTExNQ==\">https://github.com/kkHAIKE/fake115<i class=\"fa fa-external-link-alt\"></i></span></p>\n<ol>\n<li><p>这是油猴脚本，chrome 浏览器需要先安装 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaHJvbWUuZ29vZ2xlLmNvbS93ZWJzdG9yZS9kZXRhaWwvZGhkZ2Zma2tlYmhta2Zqb2plam1wYmxkbXBvYmZrZm8=\">tampermonkey（https://chrome.google.com/webstore/detail/dhdgffkkebhmkfjojejmpbldmpobfkfo）<i class=\"fa fa-external-link-alt\"></i></span> 插件</p>\n</li>\n<li><p>复制 <code>fake115d.user.js</code> 内容</p>\n</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210621110040.png\"></p>\n<ol start=\"3\">\n<li>新建</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210621105623.png\"></p>\n<ol start=\"4\">\n<li>粘贴</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210621110242.png\"></p>\n<p>保存之后会出现在列表中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210621110403.png\"></p>\n<blockquote>\n<p>如果你不能在 <code>chrome</code> 上登录 115 网盘，老苏在 Mac 上就遇到登录不了，可以按照上面的方法，把 <code>fake115.user.js</code> 也添加进去</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210621120302.png\"></p>\n<h1 id=\"安装-Aria2-for-Chrome\"><a href=\"#安装-Aria2-for-Chrome\" class=\"headerlink\" title=\"安装 Aria2 for Chrome\"></a>安装 Aria2 for Chrome</h1><p>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaHJvbWUuZ29vZ2xlLmNvbS93ZWJzdG9yZS9kZXRhaWwvYXJpYTItZm9yLWNocm9tZS9tcGtvZGNjYm5nZm9hY2ZhbGxkamltaWdib2ZraGdqbi9yZWxhdGVk\">https://chrome.google.com/webstore/detail/aria2-for-chrome/mpkodccbngfoacfalldjimigbofkhgjn/related<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>进行 <code>选项</code> 进行设置</p>\n<blockquote>\n<p>① 就是我们前面设置的 <code>RPC_SECRET</code><br>② 建议用公网地址或者域名，这样能在任何地方使用，老苏用的还是 <code>tailscale</code> 分配的地址<br>③ 就是我们前面被映射出去的卷 <code>/downloads</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210621110921.png\"></p>\n<p>点浏览器上的图标，如果显示 <code>ARIA2 RPC 已连接</code> 说明设置是 OK 的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210621111020.png\"></p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><p>在 <code>chrome</code> 浏览器中打开 115 网盘，选中一个文件点 <code>下载</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210621112558.png\"></p>\n<p>屏幕中间会弹出 <code>文件下载</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210621112656.png\"></p>\n<p>可以 <code>复制链接地址</code>，也可以  <code>导出到 ARIA2 RPC</code></p>\n<blockquote>\n<p>如果是用其他下载软件建议用前者，如果你是按照老苏的教程安装了 Aria2 建议用后者</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210621122811.png\"></p>\n<p>老苏用了后者，直接点开浏览器上 <code>Aria2 for Chrome</code> 的图标，就能看到下载任务了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210621115730.png\"></p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>Aria2 作为下载神器，当然不仅仅是用来下载 115 网盘的资源，也可以结合我们前面介绍过的『  <a href=\"https://laosu.ml/2021/02/08/%E8%B5%84%E6%BA%90%E8%81%9A%E5%90%88%E6%90%9C%E7%B4%A2%E7%A5%9E%E5%99%A8Jackett\">资源聚合搜索神器Jackett</a> 』，变成 BT 下载器。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210705190933.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Aria2 Pro - 更好用的 Aria2 Docker 容器镜像 - P3TERX ZONE<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wM3RlcnguY29tL2FyY2hpdmVzL2RvY2tlci1hcmlhMi1wcm8uaHRtbA==\">https://p3terx.com/archives/docker-aria2-pro.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>kkHAIKE/fake115: 伪装115浏览器<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2trSEFJS0UvZmFrZTExNQ==\">https://github.com/kkHAIKE/fake115<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Aria2 for Chrome - Chrome 网上应用店<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaHJvbWUuZ29vZ2xlLmNvbS93ZWJzdG9yZS9kZXRhaWwvYXJpYTItZm9yLWNocm9tZS9tcGtvZGNjYm5nZm9hY2ZhbGxkamltaWdib2ZraGdqbg==\">https://chrome.google.com/webstore/detail/aria2-for-chrome/mpkodccbngfoacfalldjimigbofkhgjn<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>acgotaku/115: Assistant for 115 to export download links to aria2-rpc<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FjZ290YWt1LzExNQ==\">https://github.com/acgotaku/115<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","网盘"]},{"title":"开源的兰空图床LskyPro","url":"/2021/07/02/%E5%BC%80%E6%BA%90%E7%9A%84%E5%85%B0%E7%A9%BA%E5%9B%BE%E5%BA%8ALskyPro/","content":"<p><strong>什么是兰空图床？</strong></p>\n<blockquote>\n<p>为个人站长、开发者、写博文爱好者开发的图床程序，同时可用作网络云相册。</p>\n</blockquote>\n<h1 id=\"构建镜像\"><a href=\"#构建镜像\" class=\"headerlink\" title=\"构建镜像\"></a>构建镜像</h1><p>之前有读者给我推荐了兰空图床，既然是好东西当然要折腾一下，不过没找到官方的 <code>docker</code> 镜像</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210622113633.png\"></p>\n<p>官方代码也没提供 <code>Dockerfile</code>，所以老苏简单弄了一个，已在 <code>CentOS</code> 和群晖上测试通过</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> php:<span class=\"number\">7.4</span>-apache</span><br><span class=\"line\"><span class=\"keyword\">MAINTAINER</span> laosu&lt;wbsu2003@gmail.com&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ENV THINKPHP_VERSION=5.1.39</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> ln -s /etc/apache2/mods-available/rewrite.load /etc/apache2/mods-enabled/rewrite.load \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; sed -i <span class=\"string\">&#x27;s/AllowOverride None/AllowOverride All/g&#x27;</span> /etc/apache2/apache2.conf \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; sed -i <span class=\"string\">&#x27;s/\\/var\\/www\\/html/\\/var\\/www\\/html\\/public/g&#x27;</span> /etc/apache2/sites-enabled/000-default.conf</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># RUN curl -OL https://github.com/top-think/framework/archive/v$THINKPHP_VERSION.tar.gz \\</span></span><br><span class=\"line\"><span class=\"comment\">#    &amp;&amp; tar xvf v$THINKPHP_VERSION.tar.gz &amp;&amp; mv framework-$THINKPHP_VERSION thinkphp</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># install some base extensions</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> apt-get update &amp;&amp; apt-get install -y \\</span></span><br><span class=\"line\"><span class=\"bash\">        zlib1g-dev \\</span></span><br><span class=\"line\"><span class=\"bash\">        libzip-dev \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; docker-php-ext-install mysqli pdo_mysql zip</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#copy your files </span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> . /lskypro/</span></span><br><span class=\"line\"><span class=\"comment\"># COPY .env.example /lskypro/.env.example</span></span><br><span class=\"line\"><span class=\"comment\"># RUN ls -al</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># change working directory to root of apache webhost</span></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /var/www/html/</span></span><br><span class=\"line\"><span class=\"keyword\">VOLUME</span><span class=\"bash\"> /var/www/html</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">80</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># now start the server</span></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"bash\"> \\</span></span><br><span class=\"line\"><span class=\"bash\">  <span class=\"keyword\">if</span> [ <span class=\"string\">&quot;<span class=\"subst\">$(ls -A /var/www/html/public)</span>&quot;</span> ]; <span class=\"keyword\">then</span> \\</span></span><br><span class=\"line\"><span class=\"bash\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;***** public目录存在并且有内容, 跳过 *****&quot;</span> ; \\</span></span><br><span class=\"line\"><span class=\"bash\">  <span class=\"keyword\">else</span> \\</span></span><br><span class=\"line\"><span class=\"bash\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;***** public程序目录不存在或为空, 开始拷贝文件 *****&quot;</span> &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"bash\">\t<span class=\"comment\"># cp -a /lskypro/* /var/www/html/ &amp;&amp; \\</span></span></span><br><span class=\"line\"><span class=\"bash\">    cp -R /lskypro/. /var/www/html/ &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"bash\">    <span class=\"comment\"># chmod -R 777 /var/www/html/runtime &amp;&amp; \\</span></span></span><br><span class=\"line\"><span class=\"bash\">    <span class=\"comment\"># chmod -R 777 /var/www/html/public; \\</span></span></span><br><span class=\"line\"><span class=\"bash\">    chmod -R 777 /var/www/html; \\</span></span><br><span class=\"line\"><span class=\"bash\">  <span class=\"keyword\">fi</span>; \\</span></span><br><span class=\"line\"><span class=\"bash\">  apachectl -D FOREGROUND \\</span></span><br></pre></td></tr></table></figure>\n\n<p>总体上挺顺利，但是遇到两个小坑，做个记录</p>\n<h2 id=\"权限问题\"><a href=\"#权限问题\" class=\"headerlink\" title=\"权限问题\"></a>权限问题</h2><p>被目录权限搞得有点郁闷，开始是这么写的</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\">chmod -R <span class=\"number\">755</span> /var/www/html/runtime &amp;&amp; \\</span><br><span class=\"line\">chmod -R <span class=\"number\">755</span> /var/www/html/public; </span><br></pre></td></tr></table></figure>\n\n<p>直接显示页面错误</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210622165441.png\"></p>\n<p>改成这样的权限</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\">chmod -R <span class=\"number\">777</span> /var/www/html/runtime &amp;&amp; \\</span><br><span class=\"line\">chmod -R <span class=\"number\">777</span> /var/www/html/public; </span><br></pre></td></tr></table></figure>\n\n<p>又显示 <code>文件写入权限</code> 不足</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210622165843.png\"></p>\n<p>最后只能改成这样</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\">chmod -R <span class=\"number\">777</span> /var/www/html; </span><br></pre></td></tr></table></figure>\n\n<p>终于搞定</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210622170159.png\"></p>\n<h2 id=\"配置问题\"><a href=\"#配置问题\" class=\"headerlink\" title=\"配置问题\"></a>配置问题</h2><p>设置管理员账号时配置文件写入失败</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210622192013.png\"></p>\n<p>在官方的 <code>Issues</code>：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dpc3AteC9sc2t5LXByby9pc3N1ZXMvMTU1\">https://github.com/wisp-x/lsky-pro/issues/155<i class=\"fa fa-external-link-alt\"></i></span> 可以找到解决方法，原因是因为缺少 <code>.env.example</code> 文件。</p>\n<p>回溯了一下， <code>COPY . /lskypro/</code> 拷贝是成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210623105348.png\"></p>\n<p>但是 <code>cp -a /lskypro/* /var/www/html/</code> 没有成功，改为了  <code>cp -R /lskypro/. /var/www/html/</code> 就 OK 了</p>\n<h2 id=\"其他的-Dockerfile\"><a href=\"#其他的-Dockerfile\" class=\"headerlink\" title=\"其他的 Dockerfile\"></a>其他的 Dockerfile</h2><p>老苏后来在官网提供的一键部署文档网站，找到了 <code>Dockerfile</code> 文件，就算不是官方起码也算半个官方吧</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210622085452.png\"></p>\n<p>这个 <code>Dockerfile</code> 比老苏严谨、专业多了，如果你自己构建镜像，建议用👇这个</p>\n<p><code>Dockerfile</code> 文件地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0hhbmRzb21lZG9nZ3kvbHNreS1wcm8vYmxvYi9tYXN0ZXIvRG9ja2VyZmlsZQ==\">https://github.com/Handsomedoggy/lsky-pro/blob/master/Dockerfile<i class=\"fa fa-external-link-alt\"></i></span></p>\n<blockquote>\n<p>参考文档中还有一个基于 <code>docker ubuntu:18.04</code> 构建的 Dockerfile</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 构建镜像</span></span><br><span class=\"line\">docker build -t wbsu2003/lskypro:v1 .</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 运行容器</span></span><br><span class=\"line\">docker run --name=lskypro -p 4080:80 -v /var/www/html:/var/www/html wbsu2003/lskypro:v1</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"数据库\"><a href=\"#数据库\" class=\"headerlink\" title=\"数据库\"></a>数据库</h2><p>通过 <code>phpMyAdmin</code> 在 <code>MariaDB 5</code> 中新建用户 <code>lsky</code>，创建同名的库 <code>lsky</code> 并授予所有权限。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210622102346.png\"></p>\n<h2 id=\"安装镜像\"><a href=\"#安装镜像\" class=\"headerlink\" title=\"安装镜像\"></a>安装镜像</h2><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>lskypro</code> ，选择第二个 <code>wbsu2003/lskypro</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210622115417.png\"></p>\n<h3 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h3><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>lskypro</code>。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>/docker/lskypro</code></td>\n<td align=\"center\"><code>/var/www/html</code></td>\n<td align=\"center\">主目录</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210622191616.png\"></p>\n<h3 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h3><p>端口不能冲突</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n<th align=\"center\">类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">4080</td>\n<td align=\"center\">80</td>\n<td align=\"center\">TCP</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210622191645.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:4080</code>，就能看到设置界面，首先是环境检测</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210621180333.png\"></p>\n<p>设置数据库</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210622171009.png\"></p>\n<p>设置管理员账号</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210622103439.png\"></p>\n<p>安装成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210622102622.png\"></p>\n<p>网站首页</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210622103847.png\"></p>\n<p>登录进入后台</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210622120351.png\"></p>\n<h2 id=\"图片鉴黄\"><a href=\"#图片鉴黄\" class=\"headerlink\" title=\"图片鉴黄\"></a>图片鉴黄</h2><p>和 <code>ImgURL</code> 一样，使用 <code>Moderate Content</code> 提供的 API 来进行图片鉴黄</p>\n<p>建议直接看 『 <a href=\"https://laosu.ml/2021/06/04/%E4%B8%80%E6%AC%BE%E7%AE%80%E5%8D%95%E7%BA%AF%E7%B2%B9%E7%9A%84%E5%9B%BE%E5%BA%8AImgURL/\">一款简单纯粹的图床ImgURL</a> 』的【图片鉴黄】部分，申请的流程步骤是一样的</p>\n<p>复制 <code>API key</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210622134631.png\"></p>\n<p>系统设置 –&gt; 图片鉴黄 –&gt; key，<code>开启图片鉴黄</code> 然后保存即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210622134439.png\"></p>\n<h2 id=\"存储策略\"><a href=\"#存储策略\" class=\"headerlink\" title=\"存储策略\"></a>存储策略</h2><p>ImgURL 虽然也支持第三方存储，但是需要购买专业版，这一点上兰空没有做限制</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210622135105.png\"></p>\n<p> 不过老苏没有兰空支持的第三方存储，所以没测试，只能直接略过了。只使用本地存储的话可以留空，去首页上传一张试试</p>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210622172142.png\"></p>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><p>之前有读者问我 <code>ImgURL</code> 能不能当云盘用，老苏还真没注意，但是 <code>LskyPro</code> 肯定是可以的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210622172806.png\"></p>\n<p>首先在 <code>允许上传的文件后缀</code> 中增加你要上传的文件类型，再 <code>配合修改最大上传大小</code> 和 <code>用户初始配额容量</code> 就可以了。</p>\n<p>下图👇就是一个 <code>zip</code> 文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210623112522.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>wisp-x/lsky-pro: ☁️兰空图床(Lsky Pro) - Your photo album on the cloud.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dpc3AteC9sc2t5LXBybw==\">https://github.com/wisp-x/lsky-pro<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Handsomedoggy/lsky-pro: ☁️兰空图床(Lsky Pro) - Your photo album on the cloud.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0hhbmRzb21lZG9nZ3kvbHNreS1wcm8=\">https://github.com/Handsomedoggy/lsky-pro<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Lsky Pro - Your photo album on the cloud.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHNreS5wcm8v\">https://www.lsky.pro/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>简要 · Lsky Pro 使用手册 · 看云<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cua2FuY2xvdWQuY24vd2lzcHgvbHNreS1wcm8vODgwMDQy\">https://www.kancloud.cn/wispx/lsky-pro/880042<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Docker搭建lskypro兰空图床<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb3hpLmJ1ZHVhbndhbmcudmlwL2xpbnV4L2RvY2tlci8zMjMuaHRtbC8=\">https://foxi.buduanwang.vip/linux/docker/323.html/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","图床"]},{"title":"天翼云盘自动签到服务Cloud189Checkin","url":"/2021/06/28/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98%E8%87%AA%E5%8A%A8%E7%AD%BE%E5%88%B0%E6%9C%8D%E5%8A%A1Cloud189Checkin/","content":"<p><strong>什么是 Cloud189Checkin ？</strong></p>\n<blockquote>\n<p>Cloud189Checkin 是基于 c# 开发的天翼云盘自动签到服务。</p>\n</blockquote>\n<p>自动签到最大的好处就是不会忘记，毕竟天翼云盘每一天可以通过签到增加 100 多 M，虽然不多，但蚊子再小那也是肉啊</p>\n<p>网上天翼云盘的签到教程基本上都是通过 <code>Github Actions</code> 实现的，好处是不需要自建服务，但存在密码泄露的风险</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210618230447.png\"></p>\n<p>对老苏来说，还是在自己的服务器上运行的比较放心</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>cloud189checkin</code> ，选择第一个 <code>hetaoos/cloud189checkin </code>，双击直接下载</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210618232415.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>c189</code>，然后在  <code>c189</code> 中再建个子目录，命名为 <code>cookies</code></p>\n<p>在 <code>c189</code> 目录中新建配置文件 <code>appsettings.json</code>，文件的内容如下👇：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;Config&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;Times&quot;</span>: [ <span class=\"string\">&quot;07:10:00&quot;</span>, <span class=\"string\">&quot;22:30:00&quot;</span> ],</span><br><span class=\"line\">    <span class=\"attr\">&quot;Accounts&quot;</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;UserName&quot;</span>: <span class=\"string\">&quot;189xxxx001&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;Password&quot;</span>: <span class=\"string\">&quot;p@ssw0rd&quot;</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">\t  &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;UserName&quot;</span>: <span class=\"string\">&quot;189xxxx002&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;Password&quot;</span>: <span class=\"string\">&quot;p@ssw0rd&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">&quot;Logging&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;LogLevel&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">&quot;Default&quot;</span>: <span class=\"string\">&quot;Information&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">&quot;Microsoft&quot;</span>: <span class=\"string\">&quot;Warning&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">&quot;Microsoft.Hosting.Lifetime&quot;</span>: <span class=\"string\">&quot;Warning&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">&quot;Hangfire&quot;</span>: <span class=\"string\">&quot;Warning&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>字段说明：</p>\n<ul>\n<li><code>Times</code> 执行签到时间列表，”07:10:00” 表示在 7 点 10 分执行一次，秒部分无效，但不能省略。</li>\n<li><code>Accounts</code> 账号列表，这个示例中用了 2 个账号，<code>UserName</code> 和 <code>Password</code> 后面的引号中要改成你自己的</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210619001015.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/c189/cookies</code></td>\n<td align=\"center\"><code>/app/Cookies</code></td>\n<td align=\"center\">存放cookies数据</td>\n</tr>\n<tr>\n<td align=\"center\"><code>docker/c189/appsettings.json</code></td>\n<td align=\"center\"><code>/app/appsettings.json</code></td>\n<td align=\"center\">配置文件</td>\n</tr>\n</tbody></table>\n<p>一个是添加文件夹，一个是添加文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210619001115.png\"></p>\n<h2 id=\"高级设置\"><a href=\"#高级设置\" class=\"headerlink\" title=\"高级设置\"></a>高级设置</h2><p>勾选 <code>启用自动重新启动</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210619001313.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>如果配置无误，你可以在容器的日志中看到 <code>登录成功</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210619001923.png\"></p>\n<p>以及下一次执行的时间（the next time it will be executed）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210619002057.png\"></p>\n<p>一次完整运行的日志</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210619095705.png\"></p>\n<h1 id=\"查看\"><a href=\"#查看\" class=\"headerlink\" title=\"查看\"></a>查看</h1><p>登录网页版，在成长记录中可以看到详细的签到信息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210624134703.png\"></p>\n<p>手机客户端的 <code>每日签到</code> 中也能看到</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210625200332.jpg\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>hetaoos/Cloud189Checkin: 天翼云盘自动签到服务<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hldGFvb3MvQ2xvdWQxODlDaGVja2lu\">https://github.com/hetaoos/Cloud189Checkin<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>利用Github Actions为天翼云盘自动签到/抽奖，每月扩容3G+ - 教程资源|网络资源|首页不显示 - 如有乐享<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly81MS5ydXlvLm5ldC8xNjA1MC5odG1s\">https://51.ruyo.net/16050.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","网盘","天翼云盘"]},{"title":"在群晖上使用天翼云盘","url":"/2021/06/25/%E5%9C%A8%E7%BE%A4%E6%99%96%E4%B8%8A%E4%BD%BF%E7%94%A8%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/","content":"<p>国内的云盘接口一般都不公开，因此可玩性都不高，像 <code>Rclone</code> 中基本上都是国外的云盘，除了腾讯的 <code>COS</code> 和阿里的 <code>OSS</code>，因为这两者都支持 S3 对象存储。</p>\n<p>老苏年初买了个天翼云盘的会员，一直在寻找天翼云盘在群晖上使用的办法，目前找个两个开源项目，其中一个就是我们今天要折腾的 <code>天翼云盘 CLI Python</code>，简称 <code>cloud189-cli</code>。</p>\n<p>项目的代码地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0FydWVsaXVzL2Nsb3VkMTg5\">https://github.com/Aruelius/cloud189<i class=\"fa fa-external-link-alt\"></i></span></p>\n<blockquote>\n<p>另一个项目是 <code>cloudpan189-go</code>，从简介和功能看，除了开发语言不同，功能定位非常接近。有兴趣的可以在参考文档中找到代码地址。</p>\n</blockquote>\n<h1 id=\"生成镜像\"><a href=\"#生成镜像\" class=\"headerlink\" title=\"生成镜像\"></a>生成镜像</h1><p><code>cloud189-cli</code> 这个项目本身没有提供 <code>docker</code> 镜像，所以老苏简单弄了一个，你可以直接下源代码自己编，也可以下载老苏已经编好的。</p>\n<blockquote>\n<p>如果不打算自己编可以直接跳到下一个章节</p>\n</blockquote>\n<p><code>Dockerfile</code> 文件如下：</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> python:<span class=\"number\">3.8</span>-slim</span><br><span class=\"line\"><span class=\"keyword\">MAINTAINER</span> laosu&lt;wbsu2003@gmail.com&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /cloud189</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> . /cloud189</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Environment</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> TERM=xterm</span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> pip install -r requirements.txt </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Application</span></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> NAME cloud189-cli</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"bash\"> [<span class=\"string\">&quot;python3&quot;</span>, <span class=\"string\">&quot;/cloud189/main.py&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n\n<p>将 <code>Dockerfile</code> 文件放到代码根目录中，执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 构建镜像</span></span><br><span class=\"line\">docker build -t wbsu2003/cloud189-cli:v1 .</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"运行容器\"><a href=\"#运行容器\" class=\"headerlink\" title=\"运行容器\"></a>运行容器</h1><p>和以往我们运行的容器不同，这是一个交互式的容器，需要我们在命令行输入账号和密码、以及一系列的命令，所以这次安装需要用命令行来执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 运行容器</span></span><br><span class=\"line\">docker run -i -t -p 4000:80 --name=cloud189 -v /volume1/docker/cloud189:/cloud189/downloads wbsu2003/cloud189-cli:v1</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>其中<br>-i：允许对容器内的标准输入进行交互；<br>-t：在新容器内启动一个终端；<br>--name=cloud189：容器名称为cloud189；</p>\n</blockquote>\n<p>不需要先下载镜像，如果本地找不到会自动从 <code>dockerhub</code> 下载镜像</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210618115140.png\"></p>\n<p>安装完成后按提示依次输入用户名和密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210618115339.png\"></p>\n<p>验证通过后，会自动检测更新，有时候会出现错误，但只要出现 <code>全部文件 &gt;</code> ，就表示可以使用了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210618115525.png\"></p>\n<p>官方有个命令的汇总表格</p>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>help</td>\n<td>查看帮助文档</td>\n</tr>\n<tr>\n<td>login</td>\n<td>用户名+密码 登录/添加用户</td>\n</tr>\n<tr>\n<td>clogin</td>\n<td>cookie 登录/添加用户</td>\n</tr>\n<tr>\n<td>refresh</td>\n<td>刷新当前目录</td>\n</tr>\n<tr>\n<td>setpath</td>\n<td>修改下载路径(默认 ./downloads)</td>\n</tr>\n<tr>\n<td>update</td>\n<td>检测软件更新</td>\n</tr>\n<tr>\n<td>who/quota</td>\n<td>查看账户信息、空间大小</td>\n</tr>\n<tr>\n<td>clear</td>\n<td>清屏</td>\n</tr>\n<tr>\n<td>cdrec</td>\n<td>进入回收站</td>\n</tr>\n<tr>\n<td>[cdrec] ls</td>\n<td>显示回收站目录</td>\n</tr>\n<tr>\n<td>[cdrec] rec + <code>文件名</code></td>\n<td>恢复文件</td>\n</tr>\n<tr>\n<td>[cdrec] clean</td>\n<td>清空回收站</td>\n</tr>\n<tr>\n<td>[cdrec] cd ..</td>\n<td>退出回收站</td>\n</tr>\n<tr>\n<td>su + <code>[-l/用户名]</code></td>\n<td>列出用户/切换用户</td>\n</tr>\n<tr>\n<td>ls + <code>[-l] [文件夹]</code></td>\n<td>列出文件与目录</td>\n</tr>\n<tr>\n<td>cd + <code>文件夹名</code></td>\n<td>切换工作目录</td>\n</tr>\n<tr>\n<td>upload + <code>文件(夹)路径</code></td>\n<td>上传文件(夹)</td>\n</tr>\n<tr>\n<td>down + <code>文件名/分享链接</code></td>\n<td>下载文件/提取分享链接下载直链</td>\n</tr>\n<tr>\n<td>mkdir + <code>文件夹名</code></td>\n<td>创建文件夹</td>\n</tr>\n<tr>\n<td>rm + <code>文件/文件夹</code></td>\n<td>删除文件(夹)</td>\n</tr>\n<tr>\n<td>share + <code>文件/文件夹</code></td>\n<td>分享文件(夹)</td>\n</tr>\n<tr>\n<td>shared + <code>[2]</code></td>\n<td>已经分享文件(夹)信息</td>\n</tr>\n<tr>\n<td>jobs + <code>[-f] [任务id]</code></td>\n<td>查看后台上传下载任务</td>\n</tr>\n<tr>\n<td>rename + <code>文件(夹)名 [新名]</code></td>\n<td>重命名</td>\n</tr>\n<tr>\n<td>mv + <code>文件名</code></td>\n<td>移动文件</td>\n</tr>\n<tr>\n<td>sign + <code>[-a/--all]</code></td>\n<td>签到抽奖</td>\n</tr>\n<tr>\n<td>bye/exit</td>\n<td>退出</td>\n</tr>\n</tbody></table>\n<p>试试 <code>ll</code> </p>\n<blockquote>\n<p>ll= ls -l<code> 表示列出详细列表</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210618115841.png\"></p>\n<p>签个到，比手机端简单多了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210618120432.png\"></p>\n<p>换一个账号登录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210618131356.png\"></p>\n<p>切换账号</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210618133318.png\"></p>\n<p>更多的命令自己慢慢体验，详细的说明请看官方的 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0FydWVsaXVzL2Nsb3VkMTg5L3dpa2k=\">Wiki（https://github.com/Aruelius/cloud189/wiki）<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"进入容器\"><a href=\"#进入容器\" class=\"headerlink\" title=\"进入容器\"></a>进入容器</h1><p>如果退出了容器、或者重启了机器之后，怎么再进入容器呢？</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入容器</span></span><br><span class=\"line\">docker <span class=\"built_in\">exec</span> --user root -it cloud189 /bin/bash</span><br></pre></td></tr></table></figure>\n\n<p>另一种方法可以不用每次都开启 <code>SSH</code> 客户端，就是我们以前常用的 「终端机」</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210618140623.png\"></p>\n<p>然后执行 <code>./main.py</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210618130840.png\"></p>\n<p>在「终端机」上也是一样的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210618140737.png\"></p>\n<p>需要说明的是，在「终端机」可能出现下面👇这样的提示</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Fail to get terminal size, we got os.terminal_size(columns&#x3D;0, lines&#x3D;0), continue anyway? (y&#x2F;N)</span><br></pre></td></tr></table></figure>\n\n<p>方法一：直接输入 <code>y</code> 就可以继续</p>\n<p>方法二：停止容器，并在容器的环境变量中增加两个值</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>COLUMNS</code></td>\n<td align=\"center\"><code>640</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>LINES</code></td>\n<td align=\"center\"><code>480</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210618221714.png\" alt=\"数字\"></p>\n<p>启动容器进入「终端机」</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210618222041.png\"></p>\n<h1 id=\"退出容器\"><a href=\"#退出容器\" class=\"headerlink\" title=\"退出容器\"></a>退出容器</h1><p>使用完成后，通过下面👇的命令可以退出容器操作</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 退出容器</span></span><br><span class=\"line\"><span class=\"built_in\">exit</span> 或者 ctrl+D</span><br></pre></td></tr></table></figure>\n\n<p>如果是在「终端机」上运行就不要退出了，因为退出会导致容器停止。</p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>虽然没有图形界面，但好在命令不多。可惜不能像 <code>Rclone</code> 一样 <code>mount</code>，而且只能进入容器内操作，略显繁琐，期待作者后续的更新了。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Aruelius/cloud189: 天翼云盘 CLI Python<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0FydWVsaXVzL2Nsb3VkMTg5\">https://github.com/Aruelius/cloud189<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>tickstep/cloudpan189-go: 天翼云盘命令行客户端(CLI)，基于GO语言实现<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RpY2tzdGVwL2Nsb3VkcGFuMTg5LWdv\">https://github.com/tickstep/cloudpan189-go<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Aria2+天翼网盘——使用Aria2下载再自动上传到天翼网盘实现离线下载的功能 - 好鸭<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYW9kdWNrLmNvbS82OTguaHRtbA==\">https://haoduck.com/698.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","网盘","天翼云盘"]},{"title":"群晖上通过RcloneBrowser挂载云盘","url":"/2021/06/21/%E7%BE%A4%E6%99%96%E4%B8%8A%E9%80%9A%E8%BF%87RcloneBrowser%E6%8C%82%E8%BD%BD%E4%BA%91%E7%9B%98/","content":"<p><strong>什么是 Rclone ？</strong></p>\n<blockquote>\n<p>Rclone 是一个命令行程序，用于管理云存储上的文件。它是云供应商 Web 存储界面的功能丰富的替代品。支持超过 40 种云存储产品 ，包括 S3 对象存储、企业和消费者文件存储服务以及标准传输协议。支持常见的 Amazon Drive 、Google Drive 、OneDrive 、Dropbox 等云存储。</p>\n</blockquote>\n<p><strong>什么是 Rclone Browser ？</strong></p>\n<blockquote>\n<p>用于 Rclone 命令行工具的简单跨平台 GUI。支持 Windows、macOS 、GNU/Linux 和  BSD 家族。</p>\n</blockquote>\n<p><code>Rclone</code> 是一款的命令行工具，支持在不同对象存储、网盘间同步、上传、下载数据。所以如果你需要在不同的网盘之间迁移数据，<code>Rclone</code> 绝对是不二之选。</p>\n<p>之前老苏是在 <code>Windows</code> 上使用，但是命令总是比较难记的，所以写了很多批处理文件来实现不同的功能，后来用了 <code>Rclone Browser</code> 就把命令忘到了脑后，反正常用的几个功能  <code>Rclone Browser</code> 都已经具备了。</p>\n<p>自从老苏上回把监控从 <code>iSpy</code> 换成 <code>ZoneMinder</code> 之后，已经不再有 7*24 小时开机的 <code>Windows</code> 主机了，所以自然而然的想到是否可以在群晖上继续使用   <code>Rclone Browser</code> ，从而实现：</p>\n<ul>\n<li>目标1：WEB 方式对多个云盘进行统一管理，包括上传、下载、同步、备份等操作；</li>\n<li>目标2：Jellyfin、Emby、Plex、Airsonic等多媒体软件直接播放云盘中的电影和音乐；</li>\n</ul>\n<p>如果你只想实现目标1，可以参考第一部分的 <code>常规安装</code> 方式，比较简单少折腾，如果要同时实现目标1和2，建议直接跳到第二部分的 <code>命令行安装</code> 方式。</p>\n<blockquote>\n<ul>\n<li>这篇文章不是 <code>Rclone</code> 或者 <code>Rclone Browser</code> 的教程，所以如果您还不会使用这两者之一，建议您先百度一下。</li>\n<li>白嫖的网盘不要放重要数据，不要放重要数据，不要放重要数据。</li>\n</ul>\n</blockquote>\n<h1 id=\"常规安装\"><a href=\"#常规安装\" class=\"headerlink\" title=\"常规安装\"></a>常规安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>rclonebrowser</code> ，选择第一个 <code>romancin/rclonebrowser </code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210603231328.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>rclone</code>，然后在 <code>rclone</code> 文件夹中再创建两个新的子文件夹，分别命名为 <code>config</code> 和 <code>media</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210605190916.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/rclone/config</code></td>\n<td align=\"center\"><code>/config</code></td>\n<td align=\"center\">配置文件及日志存放目录</td>\n</tr>\n<tr>\n<td align=\"center\"><code>docker/rclone/media</code></td>\n<td align=\"center\"><code>/media</code></td>\n<td align=\"center\">数据存放目录</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210605191334.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>默认的端口被 <code>firefox</code> 占用了，所以要修改，其中前者为 Web 访问端口，后者为 VNC 端口（可选）。</p>\n<blockquote>\n<p>关于 firefox 可以看看老苏写的 『 <a href=\"https://laosu.ml/2020/11/01/%E7%BB%99%E7%BE%A4%E6%99%96%E5%AE%89%E8%A3%85firefox%E6%B5%8F%E8%A7%88%E5%99%A8\">给群晖安装firefox浏览器</a> 』</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">5801</td>\n<td align=\"center\">5800</td>\n</tr>\n<tr>\n<td align=\"center\">5901</td>\n<td align=\"center\">5900</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210605193057.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>TZ</code></td>\n<td align=\"center\">改为 <code>Asia/Shanghai</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>VNC_PASSWORD</code></td>\n<td align=\"center\">按需要设置</td>\n</tr>\n<tr>\n<td align=\"center\"><code>ENABLE_CJK_FONT</code></td>\n<td align=\"center\">设置为1，支持支持中、日、韩文</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210605192620.png\"></p>\n<blockquote>\n<p>如果不设置 <code>ENABLE_CJK_FONT = 1</code>，中文字会变成方框</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210605210605.png\"></p>\n<h1 id=\"命令行安装\"><a href=\"#命令行安装\" class=\"headerlink\" title=\"命令行安装\"></a>命令行安装</h1><p>根据网友反馈的 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3JvbWFuY2luL3JjbG9uZWJyb3dzZXItZG9ja2VyL2lzc3Vlcy8z\"># Synology cant Mount Drives #3 （https://github.com/romancin/rclonebrowser-docker/issues/3）<i class=\"fa fa-external-link-alt\"></i></span> 整理的安装命令</p>\n<h2 id=\"第一步、建目录\"><a href=\"#第一步、建目录\" class=\"headerlink\" title=\"第一步、建目录\"></a>第一步、建目录</h2><p>参考常规方式的卷设置，同样也是建 <code>config</code> 和 <code>media</code> 目录</p>\n<h2 id=\"第二步、共享挂载\"><a href=\"#第二步、共享挂载\" class=\"headerlink\" title=\"第二步、共享挂载\"></a>第二步、共享挂载</h2><p>因为老苏映射的目录在 <code>volume1</code> 上，如果你的目录是其他的卷上，记得修改</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 共享挂载</span></span><br><span class=\"line\">mount --make-shared /volume1</span><br></pre></td></tr></table></figure>\n\n<p>不然后面 <code>mount</code> 的时候可能会遇到下面👇这样的错误</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker: Error response from daemon: linux mounts: path /volume1/docker/rclone/media is mounted on /volume1 but it is not a shared mount.</span><br></pre></td></tr></table></figure>\n\n<p>这条命令在群晖重启后需要重新执行，所以我们可以把这句命令，通过 <code>任务计划</code> 加到开机脚本中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210617233810.png\"></p>\n<p>这是一个触发任务，事件是开机</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210617233845.png\"></p>\n<p>邮件发不发看个人需要，主要是运行脚本</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210617233951.png\"></p>\n<h2 id=\"第三步、启动容器\"><a href=\"#第三步、启动容器\" class=\"headerlink\" title=\"第三步、启动容器\"></a>第三步、启动容器</h2><p>在 <code>ssh</code> 客户端中执行下面👇的命令即可</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run -d --name=rclonebrowser \\</span><br><span class=\"line\">--cap-add SYS_ADMIN \\</span><br><span class=\"line\">--device /dev/fuse \\</span><br><span class=\"line\">--security-opt apparmor=unconfined \\</span><br><span class=\"line\">-p 5801:5800 \\</span><br><span class=\"line\">-p 5901:5900 \\</span><br><span class=\"line\">-v /volume1/docker/rclone/config:/config \\</span><br><span class=\"line\">-v /volume1/docker/rclone/media:/media:shared \\</span><br><span class=\"line\">-e GROUP_ID=0 \\</span><br><span class=\"line\">-e USER_ID=0 \\</span><br><span class=\"line\">-e TZ=Asia/Shanghai \\</span><br><span class=\"line\">-e VNC_PASSWORD=123456 \\</span><br><span class=\"line\">-e ENABLE_CJK_FONT=1 \\</span><br><span class=\"line\">romancin/rclonebrowser:latest</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>如果你已经图形化安装过，请先删除再执行，否则会有冲突；</p>\n</blockquote>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>不管你用上面哪种安装方式，在浏览器中输入 <code>http://群晖IP:5801</code> 应该就可以看到主界面，不过如果设置了 <code>ENABLE_CJK_FONT = 1</code>，因为要安装字体</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210609135803.png\"></p>\n<p>所以要等一会儿才行，这个取决于网速，有时候真的要很久很久，如果你发现容器并没有停止，但是又刷不出来主界面，十之八九就是卡在下载字体了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210605193355.png\"></p>\n<p>填入我们前面设置的 <code>VNC_PASSWORD</code></p>\n<h1 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h1><p>不要直接点 <code>Config</code> 设置，因为后面需要在浏览器中验证并获取 <code>access_token</code>，这在容器里是实现不了的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210605194241.png\"></p>\n<p>老苏用了个取巧的办法，直接将 <code>windows</code> 上的设置文件拷贝到了群晖里，然后直接刷新页面就可以了：</p>\n<ol>\n<li>下载 Rclone : <span class=\"exturl\" data-url=\"aHR0cHM6Ly9yY2xvbmUub3JnL2Rvd25sb2Fkcy8=\">https://rclone.org/downloads/<i class=\"fa fa-external-link-alt\"></i></span>；</li>\n<li>下载 Rclone Browser：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2thcGl0YWluc2t5L1JjbG9uZUJyb3dzZXIvcmVsZWFzZXMvdGFnLzEuOC4w\">https://github.com/kapitainsky/RcloneBrowser/releases/tag/1.8.0<i class=\"fa fa-external-link-alt\"></i></span>；</li>\n<li>在 <code>Windows</code> 上安装并设置好，使之能正常使用；</li>\n<li>在 <code>C:\\Users\\你的用户名\\.config\\rclone</code>文件夹下就可以找到配置文件 <code>rclone.conf</code> ；</li>\n<li>将配置文件 <code>rclone.conf</code> 上传到 <code>/docker/rclone/config/xdg/config/rclone</code> 中；</li>\n<li>刷新页面；</li>\n</ol>\n<p>其他平台理论上也是可以的，但是老苏没试过，所以没研究 <code>rclone.conf</code> 在不同平台的存放位置。</p>\n<h2 id=\"云盘挂载\"><a href=\"#云盘挂载\" class=\"headerlink\" title=\"云盘挂载\"></a>云盘挂载</h2><p>常规方式安装的不要去尝试 <code>mount</code>， 会返回下面👇这样的错误：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">2021/06/09 14:19:18 NOTICE: One drive root <span class=\"string\">&#x27;&#x27;</span>: --vfs-cache-mode writes or full is recommended <span class=\"keyword\">for</span> this remote as it can<span class=\"string\">&#x27;t stream</span></span><br><span class=\"line\"><span class=\"string\">2021/06/09 14:19:18 mount helper error: fusermount: fuse device not found, try &#x27;</span>modprobe fuse<span class=\"string\">&#x27; first</span></span><br><span class=\"line\"><span class=\"string\">2021/06/09 14:19:18 Fatal error: failed to mount FUSE fs: fusermount: exit status 1</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210609141959.png\"></p>\n<p>只有命令行安装的才能正常 <code>mount</code>，下图成功挂载了 5T 的 OD（One Drive）盘</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210610153125.png\"></p>\n<p>在 <code>ssh</code> 中用 <code>df-h</code> 命令能看到挂载信息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210617223705.png\"></p>\n<p>在使用上跟本地盘是一样的，看起来似乎非常不错，但是也不是那么完美，因为每次开机之后，老苏要一个盘一个盘去 <code>mount</code>，另外也遇到过挂载成功后看不到内容的情况，没找到原因。老苏懒得折腾（主要是因为不懂），一般都是直接删容器，再用第三步的启动容器命令，一般都会OK的。</p>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><p>下图中分别是同步和拷贝操作</p>\n<ul>\n<li>云盘A –&gt; sync –&gt; 云盘B</li>\n<li>云盘A –&gt; copy –&gt; 云盘C</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210609194208.png\"></p>\n<p>群晖主机的资源监控</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210609194242.png\"></p>\n<p><code>docker</code> 本身资源消耗</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210610154220.png\"></p>\n<p>看得出来资源占用还是很低的，接下来的玩法大家可以自由发挥了，但是不管怎么说，云盘还是有各种限制的，比如每天上传下载配额、单个文件大小、操作频次等等，要注意避免被禁止访问的风险。</p>\n<h2 id=\"其他问题\"><a href=\"#其他问题\" class=\"headerlink\" title=\"其他问题\"></a>其他问题</h2><ol>\n<li>如果下载显示 <code>permission denied</code> ，需要修改 <code>media</code> 目录的权限<br>比如使用 <code>chmod 777 media</code></li>\n<li>当你在做数据拷贝或者同步时，可能会在目录中留下残留文件，导致再次 <code>mount</code> 时，返回下面👇这样的错误</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">2021/06/18 14:13:54 Fatal error: Directory is not empty: /media/5tb If you want to mount it anyway use: --allow-non-empty option</span><br></pre></td></tr></table></figure>\n\n<p>可以修改参数，或者删除群晖目录中的残留文件(夹)</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210618142212.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>kapitainsky/RcloneBrowser: Simple cross platform GUI for rclone. Supports macOS, GNU/Linux, BSD family and Windows.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2thcGl0YWluc2t5L1JjbG9uZUJyb3dzZXI=\">https://github.com/kapitainsky/RcloneBrowser<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>romancin/rclonebrowser-docker: A repository for creating a docker container including RClone Browser with GUI interface.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3JvbWFuY2luL3JjbG9uZWJyb3dzZXItZG9ja2Vy\">https://github.com/romancin/rclonebrowser-docker<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>romancin/rclonebrowser Dockerfile<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9yL3JvbWFuY2luL3JjbG9uZWJyb3dzZXIvZG9ja2VyZmlsZQ==\">https://hub.docker.com/r/romancin/rclonebrowser/dockerfile<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>群晖 NAS 挂载 Google Drive 共享云端硬盘（团队盘） | 搁浅被注册了<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2hleWlsaW4uY29tLzIwMjAvMDQvZG9ja2VyLXJjbG9uZS1wcm94eQ==\">https://www.sheyilin.com/2020/04/docker-rclone-proxy<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>[Nas] 如何在 Synology Nas 中使用 docker 並建立 rclone 來掛載資料夾 ? | 從入門到放棄<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9leGZhc3QubWUvMjAyMC8wNy9uYXMtaG93LXRvLXVzZS1ydW5uaW5nLXRoZS1yY2xvbmUtb24tdGhlLWRvY2tlci1vbi10aGUtc3lub2xvZ3ktbmFzLXRvLW1vdW50LWZvbGRlci8=\">https://exfast.me/2020/07/nas-how-to-use-running-the-rclone-on-the-docker-on-the-synology-nas-to-mount-folder/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Windows平台下使用 Rclone 挂载 OneDrive 为本地硬盘 - 热夏 - 博客园<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbXlzdW1tZXJkYXkvcC8xMjY2MTI2My5odG1s\">https://www.cnblogs.com/mysummerday/p/12661263.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","挂载","Rclone"]},{"title":"通过WxPusher在群晖上实现微信推送","url":"/2021/06/18/%E9%80%9A%E8%BF%87WxPusher%E5%9C%A8%E7%BE%A4%E6%99%96%E4%B8%8A%E5%AE%9E%E7%8E%B0%E5%BE%AE%E4%BF%A1%E6%8E%A8%E9%80%81/","content":"<p><strong>什么是WxPusher？</strong></p>\n<blockquote>\n<p><code>WxPusher</code>  （微信推送服务）是一个使用微信公众号作为通道的，实时信息推送平台，你可以通过调用 API 的方式，把信息推送到微信上，无需安装额外的软件，即可做到信息实时通知。 你可以使用 <code>WxPusher</code> 来做服务器报警通知、抢课通知、抢票通知，信息更新提示等。</p>\n</blockquote>\n<p><code>WxPusher</code> 是免费的，不用安装软件，考虑到微信的使用频率，比老苏之前介绍的 <code>Alertover</code> 有更多的优势。</p>\n<blockquote>\n<p>关于 Alertover 可以参考：<a href=\"https://laosu.ml/2021/02/26/%E7%94%A8Alertover%E5%AE%9E%E7%8E%B0%E7%BE%A4%E6%99%96%E7%9A%84%E5%AE%9E%E6%97%B6%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81\">用Alertover实现群晖的实时消息推送</a></p>\n</blockquote>\n<p>在开始折腾之前，你可以先试试 demo 演示程序，体验下功能：<span class=\"exturl\" data-url=\"aHR0cDovL3d4cHVzaGVyLnpqaWVjb2RlLmNvbS9kZW1vLw==\">http://wxpusher.zjiecode.com/demo/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"快速接入\"><a href=\"#快速接入\" class=\"headerlink\" title=\"快速接入\"></a>快速接入</h1><h2 id=\"注册\"><a href=\"#注册\" class=\"headerlink\" title=\"注册\"></a>注册</h2><p>在浏览器中打开 <span class=\"exturl\" data-url=\"aHR0cDovL3d4cHVzaGVyLnpqaWVjb2RlLmNvbS9hZG1pbi8=\">http://wxpusher.zjiecode.com/admin/<i class=\"fa fa-external-link-alt\"></i></span> ，使用微信扫码登录，无需注册，新用户首次扫码自动注册。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210613114558.png\"></p>\n<p>会提示您完善联系方式</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210613114921.png\"></p>\n<h2 id=\"创建应用\"><a href=\"#创建应用\" class=\"headerlink\" title=\"创建应用\"></a>创建应用</h2><p>需要先创建一个应用</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210613114009.png\"></p>\n<p>只需要填前三项带星号的部分</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210613114325.png\"></p>\n<p>创建成功会显示 <code>APP_TOKEN</code>，把这长串内容记下来并保存好，因为就显示一次</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210613121552.png\"></p>\n<p>不过您也不要担心，万一忘记了可以选择重置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210613123120.png\"></p>\n<p>扫描生成的应用的二维码，就可以开启微信消息推送了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210613121443.png\"></p>\n<p>找到自己的 <code>UID</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210613123643.png\"></p>\n<p>除了网页端，微信公众号里也能找到 <code>UID</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210613123512.jpg\"></p>\n<h2 id=\"消息推送\"><a href=\"#消息推送\" class=\"headerlink\" title=\"消息推送\"></a>消息推送</h2><p>直接点 <code>发生消息</code> 来测试一下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210613125026.png\"></p>\n<p>填写 <code>消息内容</code>，其他可以留空</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210613130059.png\"></p>\n<p>发送成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210613130141.png\"></p>\n<p>手机上立刻就收到了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210613133809.png\"></p>\n<h1 id=\"群晖设置\"><a href=\"#群晖设置\" class=\"headerlink\" title=\"群晖设置\"></a>群晖设置</h1><p>和 <code>Alertover</code> 在群晖上的设置方法大同小异。</p>\n<h2 id=\"短信通知\"><a href=\"#短信通知\" class=\"headerlink\" title=\"短信通知\"></a>短信通知</h2><p><code>控制面板</code> –&gt; <code>通知设置</code> –&gt; <code>短信</code>，勾选 <code>启用短信通知</code> 之后，<code>新增短信服务提供商</code> 会高亮</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/22/1613972658263-1613972658273.png\" alt=\"title\"></p>\n<p>点击 <code>新增短信服务提供商</code> ，在 <code>测试网址</code> 中输入下面的示例</p>\n<blockquote>\n<p>老苏用的是 6.1.7 的黑裙，6.2.3 上多一个 HTTP 方法的选择，用默认的 GET 就可以</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 记得替换成您自己的 appToken 和 uid 值</span><br><span class=\"line\">http:&#x2F;&#x2F;wxpusher.zjiecode.com&#x2F;api&#x2F;send&#x2F;message&#x2F;?appToken&#x3D;你的appToken&amp;uid&#x3D;你的UID&amp;content&#x3D;Hello+World&amp;number&#x3D;null&amp;user&#x3D;user&amp;pwd&#x3D;pwd</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210613134933.png\"></p>\n<p>点 <code>下一步</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210613135022.png\"></p>\n<p>点 <code>寄送测试短信</code> 来验证设置是否正确</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210613134459.png\"></p>\n<p>马上手机上就能收到</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210613135157.jpg\"></p>\n<h2 id=\"事件通知\"><a href=\"#事件通知\" class=\"headerlink\" title=\"事件通知\"></a>事件通知</h2><p><code>控制面板</code> –&gt; <code>通知设置</code> –&gt; <code>高级设置</code>，直接勾选 <code>短信</code>，然后 <code>保存</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/22/1613984846784-1613984846793.png\" alt=\"title\"></p>\n<h1 id=\"其他应用示例\"><a href=\"#其他应用示例\" class=\"headerlink\" title=\"其他应用示例\"></a>其他应用示例</h1><h2 id=\"SSH登录通知\"><a href=\"#SSH登录通知\" class=\"headerlink\" title=\"SSH登录通知\"></a>SSH登录通知</h2><p>在 <code>/etc/ssh/</code> 目录下面创建一个 <code>sshrc</code> 的文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#获取登录者的用户名</span></span><br><span class=\"line\">user=<span class=\"variable\">$USER</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#获取登录者的IP地址</span></span><br><span class=\"line\">ip=<span class=\"variable\">$&#123;SSH_CLIENT%% *&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#获取登录的时间</span></span><br><span class=\"line\">time=$(date +%F%t%k:%M)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#服务器的IP地址</span></span><br><span class=\"line\">server=`ifconfig eth0|sed -n <span class=\"string\">&#x27;2p&#x27;</span>|awk -F <span class=\"string\">&quot;:&quot;</span> <span class=\"string\">&#x27;&#123;print $2&#125;&#x27;</span>|awk <span class=\"string\">&#x27;&#123;print $1&#125;&#x27;</span>`</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#发微信提醒，并记录下日志</span></span><br><span class=\"line\">curl -G <span class=\"string\">&quot;http://wxpusher.zjiecode.com/api/send/message/?appToken=你的appToken&amp;uid=你的UID&quot;</span> --data-urlencode <span class=\"string\">&quot;content=在<span class=\"variable\">$time</span>，用户<span class=\"variable\">$user</span>通过<span class=\"variable\">$ip</span>登录了服务器<span class=\"variable\">$server</span>&quot;</span> &gt; /etc/ssh/<span class=\"built_in\">log</span> 2&gt;/dev/null</span><br></pre></td></tr></table></figure>\n\n<p>然后通过 <code>chmod 777 sshrc</code> 给它执行权限</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210616223855.png\"></p>\n<p>在有人通过 <code>ssh</code> 远程登录这台服务器的时候，这段脚本就会被执行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210617114810.png\"></p>\n<p>但是仅限于 <code>SSH</code> 协议，如果你用 <code>telnet</code> 协议登录是不会推消息的，需要另外实现。</p>\n<h2 id=\"HomeAssistant\"><a href=\"#HomeAssistant\" class=\"headerlink\" title=\"HomeAssistant\"></a>HomeAssistant</h2><p>看这篇文章就够了 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYnMuaGFzc2JpYW4uY29tL3RocmVhZC04MDgwLTEtMS5odG1s\">https://bbs.hassbian.com/thread-8080-1-1.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>下载 7 楼的 <code>wxpusher.zip</code>，老苏已经顺利的搞定了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210618190906.jpg\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>wxpusher<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3d4cHVzaGVy\">https://github.com/wxpusher<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>WxPusher微信推送服务<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93eHB1c2hlci56amllY29kZS5jb20vZG9jcy8jLw==\">https://wxpusher.zjiecode.com/docs/#/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>wxpusher/wxpusher-docs: 微信消息实时推送服务[WxPusher]的服务说明文档，通过本文档，你可以了解如何使用WxPusher的服务。 文档预览地址：<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3d4cHVzaGVyL3d4cHVzaGVyLWRvY3M=\">https://github.com/wxpusher/wxpusher-docs<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>群晖系统开启微信推送服务 - GXNAS博客<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93cC5neG5hcy5jb20vMTA1MDguaHRtbA==\">https://wp.gxnas.com/10508.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>linux ssh远程登陆报警提醒_qq362228416的专栏-CSDN博客<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMzYyMjI4NDE2L2FydGljbGUvZGV0YWlscy81MzUyNzkxNg==\">https://blog.csdn.net/qq362228416/article/details/53527916<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Linux服务器用户登录邮件告警_深圳Java-Live的博客-CSDN博客<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMzMTY4NTc3L2FydGljbGUvZGV0YWlscy83OTU1MjU2Ng==\">https://blog.csdn.net/qq_33168577/article/details/79552566<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>【新提醒】wxpusher微信推送插件 - 『HomeAssistant』综合讨论区 - 『瀚思彼岸』» 智能家居技术论坛 - Powered by Discuz!<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYnMuaGFzc2JpYW4uY29tL3RocmVhZC04MDgwLTEtMS5odG1s\">https://bbs.hassbian.com/thread-8080-1-1.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","消息推送","微信"]},{"title":"在线表单收集系统Tduck（下篇）","url":"/2021/06/14/%E5%9C%A8%E7%BA%BF%E8%A1%A8%E5%8D%95%E6%94%B6%E9%9B%86%E7%B3%BB%E7%BB%9FTduck%EF%BC%88%E4%B8%8B%E7%AF%87%EF%BC%89/","content":"<p>上篇我们已经把环境折腾好了，接下来就是拉代码进行部署了</p>\n<h1 id=\"启动后端服务\"><a href=\"#启动后端服务\" class=\"headerlink\" title=\"启动后端服务\"></a>启动后端服务</h1><h2 id=\"下载代码\"><a href=\"#下载代码\" class=\"headerlink\" title=\"下载代码\"></a>下载代码</h2><p>在 <code>/home/software/</code> 目录下拉取代码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 拉取代码</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://gitee.com/TDuckApp/tduck-platform.git</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210502161014.png\"></p>\n<h2 id=\"导入数据\"><a href=\"#导入数据\" class=\"headerlink\" title=\"导入数据\"></a>导入数据</h2><p><code>sql</code> 文件在 <code>doc</code> 目录中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210502161622.png\"></p>\n<p>在这个目录下登录 mysql ，创建相应名称的数据库。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 登录 mysql</span></span><br><span class=\"line\">mysql -uroot -p</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建 tduck 库</span></span><br><span class=\"line\">CREATE DATABASE tduck;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 退出命令行</span></span><br><span class=\"line\">quit;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将sql文件导入数据库</span></span><br><span class=\"line\">mysql -u 用户名 -p 数据库名 &lt; 数据库名.sql</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 导入tduck.sql文件</span></span><br><span class=\"line\">mysql -u root -p tduck &lt; tduck.sql</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"修改配置\"><a href=\"#修改配置\" class=\"headerlink\" title=\"修改配置\"></a>修改配置</h2><p>配置文件在 <code>/tduck-api/src/main/resources/</code> 目录，其中<code>application.yml</code> 存放公共配置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210503153600.png\"></p>\n<p><code>active: dev</code> 就是将读取 <code>application-dev.yml</code> 本地开发环境变量，所以接下来我们要修改 <code>application-dev.yml</code></p>\n<p>具体的修改请参考官方的「<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vVER1Y2tBcHAvdGR1Y2stcGxhdGZvcm0vd2lraXMvJUU1JTkwJThFJUU3JUFCJUFGJUU5JUExJUI5JUU3JTlCJUFFJUU5JTg1JThEJUU3JUJEJUFF\">后端项目配置：（https://gitee.com/TDuckApp/tduck-platform/wikis/%E5%90%8E%E7%AB%AF%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE）<i class=\"fa fa-external-link-alt\"></i></span>」</p>\n<p>这里坑有点多，所以对修改了的 <code>mysql</code>、<code>redis</code> 、<code>微信公众号</code> 和 <code>邮件设置</code> 做个简单说明</p>\n<h3 id=\"MySQL\"><a href=\"#MySQL\" class=\"headerlink\" title=\"MySQL\"></a>MySQL</h3><p>一定不要用 <code>root</code> ，用我们新建的数据库账号 <code>tduck</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210509154816.png\"></p>\n<h3 id=\"Redis\"><a href=\"#Redis\" class=\"headerlink\" title=\"Redis\"></a>Redis</h3><p>如果前面设置了密码，记得填上，其他的默认就可以</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210509174508.png\"></p>\n<h3 id=\"微信公众号\"><a href=\"#微信公众号\" class=\"headerlink\" title=\"微信公众号\"></a>微信公众号</h3><p>和官方一样，申请的微信测试公众号：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL2RlYnVnL2NnaS1iaW4vc2FuZGJveD90PXNhbmRib3gvbG9naW4=\">https://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=sandbox/login<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>开始是用 frp 反向代理出去的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210509115227.png\"></p>\n<p>老苏的域名没有备案，所以是带端口的，结果提交后一直返回 <code>配置失败</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210509121059.png\"></p>\n<p>或者</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"attr\">&quot;errcode&quot;</span>:<span class=\"number\">-1</span>,<span class=\"attr\">&quot;errmsg&quot;</span>:<span class=\"string\">&quot;system error&quot;</span>&#125;</span><br></pre></td></tr></table></figure>\n\n<p>查了下官方的接入指南，似乎只能使用 80 或者 443 端口</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210509175202.png\"></p>\n<p>所以老苏想到了 <code>utools</code>，在 <a href=\"https://laosu.ml/2020/06/17/%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%9A%84%E5%B7%A5%E5%85%B7%E7%AE%B1uTools\">跨平台的工具箱uTools（https://laosu.ml/2020/06/17/%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%9A%84%E5%B7%A5%E5%85%B7%E7%AE%B1uTools）</a> 中老苏介绍过它的 <code>内网穿透</code> 插件，设置非常简单</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210509122744.png\"></p>\n<p>这次 <code>配置成功</code> 了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210509122904.png\"></p>\n<p>成功后的显示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/06/20210614173418.png\"></p>\n<p>将对应的参数 appId 等值写入到配置文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210509120349.png\"></p>\n<h3 id=\"邮件设置\"><a href=\"#邮件设置\" class=\"headerlink\" title=\"邮件设置\"></a>邮件设置</h3><ol>\n<li><code>username</code> 一定要写完整的邮箱；</li>\n<li>不要直接用邮箱密码，要用第三方邮件客户端的专用密码；</li>\n</ol>\n<p>老苏测试了 88 邮箱和 QQ 邮箱，都是可以的正常工作的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210509184520.png\"></p>\n<h2 id=\"启动后端服务-1\"><a href=\"#启动后端服务-1\" class=\"headerlink\" title=\"启动后端服务\"></a>启动后端服务</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入 tduck-platform 目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /home/software/tduck-platform/</span><br></pre></td></tr></table></figure>\n\n<p>在当前目录 <code>/home/software/tduck-platform/</code> 下执行下面的命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 清理项目建的临时文件，打包</span></span><br><span class=\"line\">mvn clean package -DskipTests</span><br></pre></td></tr></table></figure>\n\n<p>如果显示 <code>BUILD SUCCESS</code> 表示已经编译成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210502215529.png\"></p>\n<p>最后执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 运行</span></span><br><span class=\"line\">java -Dfile.encoding=UTF-8 -jar tduck-api/target/tduck-api.jar</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210502215927.png\"></p>\n<p>接下来就可以访问了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 看是否有输出</span></span><br><span class=\"line\">curl localhost:8999/tduck-api</span><br></pre></td></tr></table></figure>\n\n<p>在浏览器中访问 <code>http://虚拟机ip:8999/tduck-api</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210503141812.png\"></p>\n<h1 id=\"启动管理后台前端\"><a href=\"#启动管理后台前端\" class=\"headerlink\" title=\"启动管理后台前端\"></a>启动管理后台前端</h1><h2 id=\"下载代码-1\"><a href=\"#下载代码-1\" class=\"headerlink\" title=\"下载代码\"></a>下载代码</h2><p>在 <code>/home/software/</code> 目录下拉取代码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 拉取代码</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://gitee.com/TDuckApp/tduck-front.git</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210502220520.png\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 配置镜像加速</span></span><br><span class=\"line\">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210502224355.png\"></p>\n<h2 id=\"启动项目\"><a href=\"#启动项目\" class=\"headerlink\" title=\"启动项目\"></a>启动项目</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入tduck-front 目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> tduck-front</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装依赖</span></span><br><span class=\"line\">cnpm install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动项目</span></span><br><span class=\"line\">cnpm run serve</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210502224700.png\"></p>\n<p>接下来就可以访问了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 打印html文件</span></span><br><span class=\"line\">curl localhost:8888</span><br></pre></td></tr></table></figure>\n\n<p>当然最直观的还是在浏览器中访问 <code>http://虚拟机ip:8888</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210503141613.png\"></p>\n<h1 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h1><p>在 tduck-front 目录中运行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 开始构建</span></span><br><span class=\"line\">cnpm run build</span><br></pre></td></tr></table></figure>\n\n<p>构建打包成功之后，会在根目录生成 <code>dist</code> 文件夹，里面就是构建打包好的文件，通常是 *.js 、*.css、index.html 等静态文件。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210503151632.png\"></p>\n<p>通常情况下 <code>dist</code> 文件夹的静态文件发布到你的 <code>nginx</code> 或者静态服务器即可，其中的 <code>index.html</code> 是项目的入口页面。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>tduck-platform: Tduck-填鸭收集器是一款开源的表单在线收集系统，后台基于SpringBoot+MybatisPlus+MySql+Redis，前端基于Vue ElementUI开发，功能强大，界面美观。keywords：问卷/表单/信息收集<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vVER1Y2tBcHAvdGR1Y2stcGxhdGZvcm0=\">https://gitee.com/TDuckApp/tduck-platform<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>CentOS 7安装MySQL - SegmentFault 思否<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDAyMjg0MzI3Mw==\">https://segmentfault.com/a/1190000022843273<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>SpringBoot多环境配置详解(application-dev.yml、application-test.yml、application-prod.yml)_Wingkin的博客-CSDN博客<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dpbmdfa2luNjY2L2FydGljbGUvZGV0YWlscy8xMTE5OTI4MDA=\">https://blog.csdn.net/Wing_kin666/article/details/111992800<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["表格","CentOS","虚拟机","VMware"]},{"title":"在线表单收集系统Tduck（上篇）","url":"/2021/06/11/%E5%9C%A8%E7%BA%BF%E8%A1%A8%E5%8D%95%E6%94%B6%E9%9B%86%E7%B3%BB%E7%BB%9FTduck%EF%BC%88%E4%B8%8A%E7%AF%87%EF%BC%89/","content":"<p><strong>Tduck 是什么 ？</strong></p>\n<blockquote>\n<p>Tduck（填鸭）是基于 B/S 架构的一款开源的在线表单收集系统，为企业提供构建自己的信息反馈系统的综合解决方案，助力企业提高反馈收集客户服务效率。</p>\n</blockquote>\n<p>官方演示地址： <span class=\"exturl\" data-url=\"aHR0cHM6Ly90ZHVjay5zbWlsZXlpLnRvcC8=\">https://tduck.smileyi.top<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>演示账号/密码：可注册登录或使用测试账号 <code>test@tduck.com/12345678</code></p>\n<h1 id=\"环境安装\"><a href=\"#环境安装\" class=\"headerlink\" title=\"环境安装\"></a>环境安装</h1><h2 id=\"前期准备\"><a href=\"#前期准备\" class=\"headerlink\" title=\"前期准备\"></a>前期准备</h2><p>安装基于 VMware + CentOS 的方式，如果不了解怎么安装，可以自己度娘一下或者看看后面附的参考文档。</p>\n<blockquote>\n<p>选择的 <code>CentOS</code> 版本是 <code>CentOS-7-x86_64-Minimal-1708.iso</code></p>\n</blockquote>\n<p>因为是在虚拟机上运行，为避免安装完成后访问不到 web 服务，需关闭防火墙</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 关闭防火墙</span></span><br><span class=\"line\">sudo systemctl stop firewalld.service </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 关闭开机启动</span></span><br><span class=\"line\">sudo systemctl <span class=\"built_in\">disable</span> firewalld.service</span><br></pre></td></tr></table></figure>\n\n<p>后面所有用到的文件，老苏都放在了天翼云盘，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbG91ZC4xODkuY24vdC8yRWptZW1hbVEzWWI=\">https://cloud.189.cn/t/2EjmemamQ3Yb<i class=\"fa fa-external-link-alt\"></i></span>（访问码：sx9n）</p>\n<blockquote>\n<p>所有软件都上传到 <code>/home/software/</code> 目录</p>\n</blockquote>\n<h2 id=\"安装-MySQL\"><a href=\"#安装-MySQL\" class=\"headerlink\" title=\"安装 MySQL\"></a>安装 MySQL</h2><ol>\n<li>打开MySQL官网：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubXlzcWwuY29tL2Rvd25sb2Fkcy8=\">https://www.mysql.com/downloads/<i class=\"fa fa-external-link-alt\"></i></span>，选择<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXYubXlzcWwuY29tL2Rvd25sb2Fkcy8=\">MySQL Community (GPL) Downloads »<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210501113636.png\"></p>\n<ol start=\"2\">\n<li>选择<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXYubXlzcWwuY29tL2Rvd25sb2Fkcy9yZXBvL3l1bS8=\">MySQL Yum Repository<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210501113856.png\"></p>\n<ol start=\"3\">\n<li>选择 <code>Red Hat Enterprise Linux 7 / Oracle Linux 7 (Architecture Independent), RPM Package</code>，点击 <code>DownLoad</code></li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210501114101.png\"></p>\n<ol start=\"4\">\n<li>跳转到登录页面，点击下方  <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXYubXlzcWwuY29tL2dldC9teXNxbDgwLWNvbW11bml0eS1yZWxlYXNlLWVsNy0zLm5vYXJjaC5ycG0=\">No thanks, just start my download.<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210501114221.png\"></p>\n<blockquote>\n<p>用 <code>WinSCP + Putty</code> 组合登录到虚拟机</p>\n</blockquote>\n<ol start=\"5\">\n<li>将下载好的 rpm 文件上传到 CentOS 服务器上，并开始安装</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建目录</span></span><br><span class=\"line\">mkdir /home/software/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /home/software/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查询是否安装了mysql</span></span><br><span class=\"line\">rpm -qa |grep -i mysql</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查找mysql相关</span></span><br><span class=\"line\">find / -name mysql</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除相关目录</span></span><br><span class=\"line\">rm -rf </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除/etc/my.cnf</span></span><br><span class=\"line\">rm -rf /etc/my.cnf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除/var/log/mysqld.log</span></span><br><span class=\"line\">rm -rf /var/<span class=\"built_in\">log</span>/mysqld.log</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210503105458.png\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装 mysql 源</span></span><br><span class=\"line\">yum -y localinstall mysql80-community-release-el7-3.noarch.rpm</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210501115425.png\"></p>\n<ol start=\"6\">\n<li> 完毕后继续执行以下命令</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装 mysql 服务器</span></span><br><span class=\"line\">yum -y install mysql-community-server</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210501123215.png\"></p>\n<ol start=\"7\">\n<li>启动 mysql 服务</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 启动 MySQL 服务</span></span><br><span class=\"line\">systemctl start mysqld</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#  查看 MySQL 状态</span></span><br><span class=\"line\">systemctl status mysqld</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210503113010.png\"></p>\n<ol start=\"8\">\n<li>修改 mysql 的密码</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查询MySQL的临时密码</span></span><br><span class=\"line\">grep <span class=\"string\">&#x27;temporary password&#x27;</span> /var/<span class=\"built_in\">log</span>/mysqld.log</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 登录 mysql</span></span><br><span class=\"line\">mysql -uroot -p</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改密码</span></span><br><span class=\"line\">ALTER USER <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class=\"string\">&#x27;Laosu@123456&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 刷新权限</span></span><br><span class=\"line\">flush privileges;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210501174545.png\"></p>\n<blockquote>\n<p>注意：密码不能太简单，否则就会通不过。默认密码检查策略要求密码必须包含：大小写字母、数字和特殊符号，并且长度不能少于8位。</p>\n</blockquote>\n<ol start=\"9\">\n<li>创建新用户</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 创建新用户</span><br><span class=\"line\">create user &#39;你的用户名&#39;@&#39;%&#39; identified with mysql_native_password by &#39;你的密码&#39;;</span><br><span class=\"line\"></span><br><span class=\"line\"># 我的新用户</span><br><span class=\"line\">create user &#39;tduck&#39;@&#39;%&#39; identified with mysql_native_password by &#39;Tduck@123456&#39;;</span><br><span class=\"line\"></span><br><span class=\"line\"># 刷新权限</span><br><span class=\"line\">grant all on *.* to &#39;你的用户名&#39;@&#39;%&#39;;</span><br><span class=\"line\"></span><br><span class=\"line\"># 我的权限</span><br><span class=\"line\">grant all on *.* to &#39;tduck&#39;@&#39;%&#39;;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210501183634.png\"></p>\n<h2 id=\"安装-JDK\"><a href=\"#安装-JDK\" class=\"headerlink\" title=\"安装 JDK\"></a>安装 JDK</h2><ol>\n<li> 打开 oracle 官网：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3JhY2xlLmNvbS9qYXZhL3RlY2hub2xvZ2llcy9qYXZhc2UvamF2YXNlLWpkazgtZG93bmxvYWRzLmh0bWw=\">https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html<i class=\"fa fa-external-link-alt\"></i></span>，选择 <code>linux x64</code> 压缩版本</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210501200345.png\"></p>\n<p>勾选 <code>I reviewed and accept the Oracle Technology Network License Agreement for Oracle Java SE</code>，点  <code>Download jdk-8u291-linux-x64.tar.gz</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210501200615.png\"></p>\n<blockquote>\n<p>下载需要有账号，如果没有需要先注册；</p>\n</blockquote>\n<ol start=\"2\">\n<li>将下载好的压缩包上传到 CentOS 服务器上，并开始安装</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建安装目录</span></span><br><span class=\"line\">mkdir /usr/<span class=\"built_in\">local</span>/java/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将压缩包解压至安装目录</span></span><br><span class=\"line\">tar -zxvf jdk-8u291-linux-x64.tar.gz -C /usr/<span class=\"built_in\">local</span>/java/</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>修改环境变量</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 编辑环境文件</span></span><br><span class=\"line\">vim /etc/profile</span><br></pre></td></tr></table></figure>\n\n<p>在文件的末尾添加</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> JAVA_HOME=/usr/<span class=\"built_in\">local</span>/java/jdk1.8.0_291</span><br><span class=\"line\"><span class=\"built_in\">export</span> JRE_HOME=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/jre </span><br><span class=\"line\"><span class=\"built_in\">export</span> CLASSPATH=.:<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/lib:<span class=\"variable\">$&#123;JRE_HOME&#125;</span>/lib </span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/bin:<span class=\"variable\">$PATH</span></span><br></pre></td></tr></table></figure>\n\n<p>使环境变量生效</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 使环境变量生效</span></span><br><span class=\"line\"><span class=\"built_in\">source</span> /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 检测环境是否生效</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$PATH</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加软链接</span></span><br><span class=\"line\">ln -s /usr/<span class=\"built_in\">local</span>/java/jdk1.8.0_291/bin/java /usr/bin/java</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 检查 java 是否安装成功</span></span><br><span class=\"line\">java -version</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210501202054.png\"></p>\n<h2 id=\"安装-Maven\"><a href=\"#安装-Maven\" class=\"headerlink\" title=\"安装 Maven\"></a>安装 Maven</h2><ol>\n<li>打开 Maven 官网：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXZlbi5hcGFjaGUub3JnL2Rvd25sb2FkLmNnaQ==\">https://maven.apache.org/download.cgi<i class=\"fa fa-external-link-alt\"></i></span>，选择编译好的二进制压缩包</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210502182136.png\"></p>\n<ol start=\"2\">\n<li>将下载好的压缩包上传到 CentOS 服务器上，并开始安装</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 新建目录</span></span><br><span class=\"line\">mkdir /usr/<span class=\"built_in\">local</span>/maven</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解压</span></span><br><span class=\"line\">tar -xvf apache-maven-3.8.1-bin.tar.gz -C /usr/<span class=\"built_in\">local</span>/maven</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>设置环境变量</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 编辑环境文件</span></span><br><span class=\"line\">vim /etc/profile</span><br></pre></td></tr></table></figure>\n\n<p>在文件的末尾添加</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> M2_HOME=/usr/<span class=\"built_in\">local</span>/maven/apache-maven-3.8.1</span><br><span class=\"line\"><span class=\"built_in\">export</span> MAVEN_HOME=/usr/<span class=\"built_in\">local</span>/maven/apache-maven-3.8.1</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$&#123;M2_HOME&#125;</span>/bin:<span class=\"variable\">$&#123;PATH&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>使环境变量生效</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 使环境变量生效</span></span><br><span class=\"line\"><span class=\"built_in\">source</span> /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加软链接</span></span><br><span class=\"line\">ln -s /usr/<span class=\"built_in\">local</span>/maven/apache-maven-3.8.1 /usr/bin/maven</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 检测 maven 是否安装成功</span></span><br><span class=\"line\">mvn -version</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210502184539.png\"></p>\n<ol start=\"4\">\n<li>更换为阿里仓库</li>\n</ol>\n<p>修改maven根目录下的conf文件夹中的setting.xml文件，找到 &lt;mirrors&gt;，默认是这样的</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mirror</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>maven-default-http-blocker<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">mirrorOf</span>&gt;</span>external:http:*<span class=\"tag\">&lt;/<span class=\"name\">mirrorOf</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Pseudo repository to mirror external repositories initially using HTTP.<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://0.0.0.0/<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">blocked</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">blocked</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210502185830.png\"></p>\n<p>改为</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mirror</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>alimaven<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>aliyun maven<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">mirrorOf</span>&gt;</span>central<span class=\"tag\">&lt;/<span class=\"name\">mirrorOf</span>&gt;</span>        </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210502190357.png\"></p>\n<h2 id=\"安装-Nodejs\"><a href=\"#安装-Nodejs\" class=\"headerlink\" title=\"安装 Nodejs\"></a>安装 Nodejs</h2><ol>\n<li>打开 nodejs 官网：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub2RlanMub3JnL2VuL2Rvd25sb2FkLw==\">https://nodejs.org/en/download/<i class=\"fa fa-external-link-alt\"></i></span>，选择 <code>Linux x64</code> 版本</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210501214431.png\"></p>\n<ol start=\"2\">\n<li>将下载好的压缩包上传到 CentOS 服务器上，并开始安装</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210501220415.png\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 新建目录</span></span><br><span class=\"line\">mkdir /usr/<span class=\"built_in\">local</span>/nodejs</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解压</span></span><br><span class=\"line\">xz -d node-v14.16.1-linux-x64.tar.xz</span><br><span class=\"line\">tar -xvf node-v14.16.1-linux-x64.tar -C /usr/<span class=\"built_in\">local</span>/nodejs</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>修改环境变量</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 编辑环境文件</span></span><br><span class=\"line\">vim /etc/profile</span><br></pre></td></tr></table></figure>\n\n<p>在文件的末尾添加</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> NODE_HOME=/usr/<span class=\"built_in\">local</span>/nodejs/node-v14.16.1-linux-x64</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$NODE_HOME</span>/bin:<span class=\"variable\">$PATH</span></span><br></pre></td></tr></table></figure>\n\n<p>使环境变量生效</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 使环境变量生效</span></span><br><span class=\"line\"><span class=\"built_in\">source</span> /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 检测环境是否生效</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$PATH</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 检查nodejs是否安装成功</span></span><br><span class=\"line\">node -v</span><br><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210502131107.png\"></p>\n<h2 id=\"安装-Git\"><a href=\"#安装-Git\" class=\"headerlink\" title=\"安装 Git\"></a>安装 Git</h2><p>为了拉取代码，还需要安装 git</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 安装 git</span><br><span class=\"line\">yum -y install git</span><br><span class=\"line\"></span><br><span class=\"line\"># 验证</span><br><span class=\"line\">git --version</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210502155345.png\"></p>\n<p>这样安装出来的 git 版本是 v1.8.3.1</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210503130107.png\"></p>\n<p>而前端依赖要求的版本是 <code>Git &gt;=2.13.0.</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210503125923.png\"></p>\n<p>所以需要更换方式安装 git</p>\n<ol>\n<li>下载源代码：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9taXJyb3JzLmVkZ2Uua2VybmVsLm9yZy9wdWIvc29mdHdhcmUvc2NtL2dpdC8=\">https://mirrors.edge.kernel.org/pub/software/scm/git/<i class=\"fa fa-external-link-alt\"></i></span>，选择 <code>git-2.21.0.tar.gz</code> 版本</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210503130706.png\"></p>\n<ol start=\"2\">\n<li>将下载好的压缩包上传到 CentOS 服务器上，并开始安装</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 解压</span></span><br><span class=\"line\">tar -zxf git-2.21.0.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> git-2.21.0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装编译依赖</span></span><br><span class=\"line\">yum install -y curl-devel expat-devel gettext-devel openssl-devel zlib-devel gcc perl-ExtUtils-MakeMaker</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 检验相关依赖，设置安装路径</span></span><br><span class=\"line\">./configure --prefix=/usr/<span class=\"built_in\">local</span>/git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 编译安装</span></span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210503132411.png\"></p>\n<ol start=\"3\">\n<li>修改环境变量</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 删除已有的 git</span></span><br><span class=\"line\">yum remove git</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210503132701.png\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 配置环境变量</span></span><br><span class=\"line\">vim /etc/profile</span><br></pre></td></tr></table></figure>\n\n<p>在文件的末尾添加</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># GIT_HOME</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> GIT_HOME=/usr/<span class=\"built_in\">local</span>/git</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$GIT_HOME</span>/bin</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210503133052.png\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 刷新</span></span><br><span class=\"line\"><span class=\"built_in\">source</span> /etc/profile</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装-Redis\"><a href=\"#安装-Redis\" class=\"headerlink\" title=\"安装 Redis\"></a>安装 Redis</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 添加EPEL仓库</span></span><br><span class=\"line\">yum -y install epel-release</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 更新yum源</span></span><br><span class=\"line\">yum update</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装redis 数据库</span></span><br><span class=\"line\">yum -y install redis</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动 redis 服务</span></span><br><span class=\"line\">systemctl start redis</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改配置文件</span></span><br><span class=\"line\">vim /etc/redis.conf</span><br></pre></td></tr></table></figure>\n\n<p>首先，为了可以使 Redis 能被远程连接，需要注释这一行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">#bind 127.0.0.1</span><br></pre></td></tr></table></figure>\n\n<p>推荐给 Redis 设置密码，取消注释这一行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">#requirepass foobared</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>foobared 即当前密码</p>\n</blockquote>\n<p>完成修改后需要重启 Redis</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 重启</span></span><br><span class=\"line\">systemctl restart redis</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置开机启动redis服务器</span></span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> redis.service </span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>VMware 安装 Centos7 超详细过程 | 菜鸟教程<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS93M2Nub3RlL3Ztd2FyZS1pbnN0YWxsLWNlbnRvczcuaHRtbA==\">https://www.runoob.com/w3cnote/vmware-install-centos7.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>CentOS 7安装MySQL - SegmentFault 思否<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDAyMjg0MzI3Mw==\">https://segmentfault.com/a/1190000022843273<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>centos7安装redis - 知乎<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zNDUyNzI3MA==\">https://zhuanlan.zhihu.com/p/34527270<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>You need tcl 8.5 or newer in order to run the Redis test. - 王智愚 - 博客园<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vU2VjdXJpdHktRGFycmVuL3AvNDM4MTkzMi5odG1s\">https://www.cnblogs.com/Security-Darren/p/4381932.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>CentOS 7 安装 JAVA环境（JDK 1.8） - 晓晨Master - 博客园<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vc3R1bHpxL3AvOTI4Njg3OC5odG1s\">https://www.cnblogs.com/stulzq/p/9286878.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>如何在CentOS 7上安装Apache Maven<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubXlmcmVheC5jb20vaG93LXRvLWluc3RhbGwtYXBhY2hlLW1hdmVuLW9uLWNlbnRvcy03Lw==\">https://www.myfreax.com/how-to-install-apache-maven-on-centos-7/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>在CentOS 7上安装Node.js的4种方法（yum安装和源码安装） - 与f - 博客园<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vZnBzMnRhby9wLzk5NTYxMzkuaHRtbA==\">https://www.cnblogs.com/fps2tao/p/9956139.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>centos中Mysql数据库导入sql文件等基本操作_Jack_ZMW的博客-CSDN博客<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0phY2tfWk1XL2FydGljbGUvZGV0YWlscy83OTM2ODc5MQ==\">https://blog.csdn.net/Jack_ZMW/article/details/79368791<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>CentOS 7 安装配置git - 简书<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9lNmVjZDg2Mzk3ZmI=\">https://www.jianshu.com/p/e6ecd86397fb<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>（转）CentOS 安装最新版本 Git - 凡的世界 - 博客园<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vSW1wdWxzZS9hcnRpY2xlcy8xMTgwNTMyMi5odG1s\">https://www.cnblogs.com/Impulse/articles/11805322.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["表格","CentOS","虚拟机","VMware"]},{"title":"基于docker部署小说精品屋-plus","url":"/2021/06/07/%E5%9F%BA%E4%BA%8Edocker%E9%83%A8%E7%BD%B2%E5%B0%8F%E8%AF%B4%E7%B2%BE%E5%93%81%E5%B1%8B-plus/","content":"<p>小说精品屋是小说建站的开源解决方案，分为 <code>小说精品屋</code>、<code>小说精品屋-plus</code> 和 <code>小说精品屋-微服务版</code> 三个版本，今天老苏带大家要安装体验的是 <code>小说精品屋-plus</code> 版，如果你也喜欢看小说，千万别错过哦！</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"数据库\"><a href=\"#数据库\" class=\"headerlink\" title=\"数据库\"></a>数据库</h2><p>通过 <code>phpMyAdmin</code> 在 <code>MariaDB 5</code> 中新建库 <code>novel_plus</code>，并导入 <code>https://raw.githubusercontent.com/201206030/novel-plus/master/doc/sql/novel_plus.sql</code> 文件；</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210508172344.png\"></p>\n<h2 id=\"爬虫管理\"><a href=\"#爬虫管理\" class=\"headerlink\" title=\"爬虫管理\"></a>爬虫管理</h2><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>novel-crawl</code> ，选择第一个 <code>201206030/novel-crawl</code>，版本选择最新的 <code>3.5.1</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210508171332.png\"></p>\n<h3 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h3><p>找一个不冲突的端口就行，和以往不同的是需要自己添加端口</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">3040</td>\n<td align=\"center\">80</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210508214454.png\"></p>\n<h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>dburl</code></td>\n<td align=\"center\">默认为空，需填入数据库地址</td>\n</tr>\n<tr>\n<td align=\"center\"><code>username</code></td>\n<td align=\"center\">默认为空，需填入数据库登录名</td>\n</tr>\n<tr>\n<td align=\"center\"><code>password</code></td>\n<td align=\"center\">默认为空，需填入数据库登录密码</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p><code>dburl</code> 标准格式为 <code>jdbc:mysql://&lt;数据库ip&gt;:&lt;数据库端口号&gt;/&lt;数据库名&gt;?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai</code>，所以最终拼接出来是这样的一串字符串 <code>jdbc:mysql://192.168.0.199:3306/novel_plus?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210508173404.png\"></p>\n<h2 id=\"后台管理\"><a href=\"#后台管理\" class=\"headerlink\" title=\"后台管理\"></a>后台管理</h2><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>novel-admin</code> ，选择第一个 <code>201206030/novel-admin</code>，版本选择最新的 <code>3.1.0</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210508201257.png\"></p>\n<h3 id=\"端口-1\"><a href=\"#端口-1\" class=\"headerlink\" title=\"端口\"></a>端口</h3><p>找一个不冲突的端口就行，和以往不同的是需要自己添加端口</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">3041</td>\n<td align=\"center\">8081</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210508204813.png\"></p>\n<h3 id=\"环境-1\"><a href=\"#环境-1\" class=\"headerlink\" title=\"环境\"></a>环境</h3><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>dburl</code></td>\n<td align=\"center\">默认为空，需填入数据库地址</td>\n</tr>\n<tr>\n<td align=\"center\"><code>username</code></td>\n<td align=\"center\">默认为空，需填入数据库登录名</td>\n</tr>\n<tr>\n<td align=\"center\"><code>password</code></td>\n<td align=\"center\">默认为空，需填入数据库登录密码</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p><code>dburl</code> 标准格式为 <code>jdbc:mysql://&lt;数据库ip&gt;:&lt;数据库端口号&gt;/&lt;数据库名&gt;?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai</code>，所以最终拼接出来是这样的一串字符串 <code>jdbc:mysql://192.168.0.199:3306/novel_plus?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210508204948.png\"></p>\n<h2 id=\"前台门户\"><a href=\"#前台门户\" class=\"headerlink\" title=\"前台门户\"></a>前台门户</h2><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>novel-front</code> ，选择第一个 <code>201206030/novel-front</code>，版本选择最新的 <code>3.5.1</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210508174820.png\"></p>\n<h3 id=\"端口-2\"><a href=\"#端口-2\" class=\"headerlink\" title=\"端口\"></a>端口</h3><p>找一个不冲突的端口就行，和以往不同的是需要自己添加端口</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">3050</td>\n<td align=\"center\">8080</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210508175136.png\"></p>\n<h3 id=\"环境-2\"><a href=\"#环境-2\" class=\"headerlink\" title=\"环境\"></a>环境</h3><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>dburl</code></td>\n<td align=\"center\">默认为空，需填入数据库地址</td>\n</tr>\n<tr>\n<td align=\"center\"><code>username</code></td>\n<td align=\"center\">默认为空，需填入数据库登录名</td>\n</tr>\n<tr>\n<td align=\"center\"><code>password</code></td>\n<td align=\"center\">默认为空，需填入数据库登录密码</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p><code>dburl</code> 标准格式为 <code>jdbc:mysql://&lt;数据库ip&gt;:&lt;数据库端口号&gt;/&lt;数据库名&gt;?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai</code>，所以最终拼接出来是这样的一串字符串 <code>jdbc:mysql://192.168.0.199:3306/novel_plus?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210508175306.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><h2 id=\"爬虫管理-1\"><a href=\"#爬虫管理-1\" class=\"headerlink\" title=\"爬虫管理\"></a>爬虫管理</h2><p>在浏览器中输入 <code>http://群晖IP:3040</code>，就能看到后端的主界面了</p>\n<blockquote>\n<p>登录账号：admin，密码：admin</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210508180736.png\"></p>\n<p><code>爬虫源</code> 开启了 <code>笔趣阁</code> 爬虫 </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210508191834.png\"></p>\n<p>还支持 <code>单本采集</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210508192053.png\"></p>\n<h2 id=\"后台管理-1\"><a href=\"#后台管理-1\" class=\"headerlink\" title=\"后台管理\"></a>后台管理</h2><p>在浏览器中输入 <code>http://群晖IP:3041</code>，就能看到后端的主界面了</p>\n<blockquote>\n<p>登录账号：admin，密码：admin</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210508205427.png\"></p>\n<p>登录成功后的主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210508205618.png\"></p>\n<p>具备各种管理功能， <code>邀请码管理</code> 是前端注册作家必须用到的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210508210038.png\"></p>\n<p><code>邀请码</code> 是有 <code>有效时间</code> 的，即使没有被使用过也会失效</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210508210532.png\"></p>\n<h2 id=\"前台门户-1\"><a href=\"#前台门户-1\" class=\"headerlink\" title=\"前台门户\"></a>前台门户</h2><p>在浏览器中输入 <code>http://群晖IP:3050</code>，就能看到前端的主界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210508175437.png\"></p>\n<p>注册一个用户后登录 –&gt; <code>个人中心</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210509001255.png\"></p>\n<p><code>全部作品</code> 中已经开始有数据了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210508211133.png\"></p>\n<p><code>排行榜</code> 中也已经有数据</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210508211316.png\"></p>\n<p><code>充值</code> 中，支付宝有时候能成功跳转</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210508194110.png\"></p>\n<p>有时候会显示钓鱼网站</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210508193942.png\"></p>\n<blockquote>\n<p>不过就算能用，也是给作者付款，如果建站的话需要修改 <code>application-alipay.yml</code> 后重新打 jar 包</p>\n</blockquote>\n<p>微信支付还没开通</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210508211431.png\"></p>\n<p>第一次进 <code>作家专区</code> 需要设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210508194442.png\"></p>\n<p>邀请码是刚才在后台管理中创建的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210508210858.png\"></p>\n<p>注册成功就可以开始 <code>创建作品</code> 了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210508211638.png\"></p>\n<p>先填写一些基本介绍</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210508211801.png\"></p>\n<h1 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h1><ol>\n<li> 内存消耗有点高；</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210508214631.png\"></p>\n<ol start=\"2\">\n<li> 在开始爬虫前，要预留足够的空间；</li>\n<li> 如果要修改配置，比如支付宝账户，需要自己打 jar 包，然后替换掉镜像中 <code>root</code> 目录中的 jar 包；</li>\n</ol>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>201206030/novel-plus: 小说精品屋-plus是一个多端（PC、WAP）阅读、功能完善的原创文学CMS系统，由前台门户系统、作家后台管理系统、平台后台管理系统、爬虫管理系统等多个子系统构成，支持多模版、会员充值、订阅模式、新闻发布和实时统计报表等功能，新书自动入库，老书自动更新。<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tLzIwMTIwNjAzMC9ub3ZlbC1wbHVz\">https://github.com/201206030/novel-plus<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>基于docker部署小说精品屋-plus | 航行学园<br>地址：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy52b3ljbi5jb20vYXJ0aWNsZS9qaXl1ZG9ja2VyYnVzaHV4aWFvc2h1b2ppbmdwaW53dS1wbHVz\">http://www.voycn.com/article/jiyudockerbushuxiaoshuojingpinwu-plus<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>小说精品屋-plus V3.5.0安装及低版本升级教程 - 不编程就会死的个人空间 - OSCHINA - 中文开源技术交流社区<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9teS5vc2NoaW5hLm5ldC9qYXZhMm5iL2Jsb2cvNDkxNDY4OA==\">https://my.oschina.net/java2nb/blog/4914688<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>宝塔面板docker部署小说精品屋-plus - 大鸟博客<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZGFuaWFvLm9yZy85MTk5Lmh0bWw=\">https://www.daniao.org/9199.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Spring Boot打Jar包部署_Ron.Zheng-CSDN博客_springboot打jar包<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3p5aGx3enkvYXJ0aWNsZS9kZXRhaWxzLzc5OTEyMjc5\">https://blog.csdn.net/zyhlwzy/article/details/79912279<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","小说"]},{"title":"一款简单纯粹的图床ImgURL","url":"/2021/06/04/%E4%B8%80%E6%AC%BE%E7%AE%80%E5%8D%95%E7%BA%AF%E7%B2%B9%E7%9A%84%E5%9B%BE%E5%BA%8AImgURL/","content":"<p><strong>什么是 ImgURL ？</strong></p>\n<blockquote>\n<p>ImgURL 是一款开源的图片管理系统（简称图床），使用 PHP + SQLite3 开发，用户可以自行部署，也可使用 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWd1cmwub3JnLw==\">https://imgurl.org/<i class=\"fa fa-external-link-alt\"></i></span> 提供的在线服务。</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>imgurl</code> ，选择第四个 <code>wbsu2003/imgurl</code>，版本选择 <code>latest</code>。</p>\n<blockquote>\n<p>这个镜像基于官方 Dockerfile 构建，所以理论上和第一个 <code>zqiannnn/imgurl</code> 是一样的，只是官方的存在报错 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hlbGxveHovaW1ndXJsL2lzc3Vlcy80Mg==\">https://github.com/helloxz/imgurl/issues/42<i class=\"fa fa-external-link-alt\"></i></span>，而且老苏这个构建的时间更新鲜。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210505094745.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>imgurl</code>，然后在 <code>imgurl</code> 文件夹中再创建一个新的子文件夹命名为 <code>imgs</code>。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/imgurl/imgs</code></td>\n<td align=\"center\"><code>/var/www/html/imgs</code></td>\n<td align=\"center\">图片文件夹</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210521165719.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>默认的端口 <code>80</code> 不能用，所以换成了 <code>3580</code>，不冲突就行</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">3580</td>\n<td align=\"center\">80</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210505095610.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:3580</code>，就能看到设置界面了，如果出现目录可写权限未通过</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210505101655.png\"></p>\n<p>可以尝试给目录修改权限，老苏觉得命令行更简单一些</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在 imgurl 目录中执行修改权限操作</span></span><br><span class=\"line\">chmod 777 imgs</span><br><span class=\"line\">chmod 777 data</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210505102547.png\"></p>\n<p>也可以在群晖里给目录的 <code>Everyone</code> 增加写入权限</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210505102910.png\"></p>\n<p>再返回浏览器刷新页面应该就好了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210505103014.png\"></p>\n<p>下一步设置域名、账号、密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210505103128.png\"></p>\n<p>设置完成</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210505103246.png\"></p>\n<p><code>登录后台</code>，因为是中文的，所以还是很容易使用的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210521173741.png\"></p>\n<h2 id=\"上传限制\"><a href=\"#上传限制\" class=\"headerlink\" title=\"上传限制\"></a>上传限制</h2><p>可以根据需要启用或者关闭游客上传</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210521174319.png\"></p>\n<blockquote>\n<ol>\n<li> 默认情况下单张图片不得超过 5 M ，游客每天限制上传 10 张图片;</li>\n<li>上传数量如果为 0 则不允许游客上传;</li>\n<li>上传大小最大允许为 10 M</li>\n</ol>\n</blockquote>\n<h2 id=\"图片压缩\"><a href=\"#图片压缩\" class=\"headerlink\" title=\"图片压缩\"></a>图片压缩</h2><p>ImgURL需要使用 <span class=\"exturl\" data-url=\"aHR0cHM6Ly90aW55cG5nLmNvbS8=\">TinyPNG（https://tinypng.com）<i class=\"fa fa-external-link-alt\"></i></span> 提供的 API 来压缩图片，所以如果要启用压缩功能需要先去 TinyPNG 注册账号</p>\n<p>找到菜单栏的 <code>DEVELOPER API</code>，输入你的名字和邮箱</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210521174817.png\"></p>\n<p>打开邮箱，找到邮件，点 <code>Visit your dashboard</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210521175113.png\"></p>\n<p>在新开的网页窗口，能看到你的 API Key</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210521175303.png\"></p>\n<p>因为需要两个 key ，所以需要再 <code>Add API Key</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210521175634.png\"></p>\n<p>填完 Key 之后，记得勾选 <code>启用压缩</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210521175905.png\"></p>\n<p>以后再登陆 ，需要用注册的邮箱，获得 <code>token</code> 进入 <code>dashboard</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210521174628.png\"></p>\n<p>未启用压缩，图片的压缩按钮是蓝色的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210521180709.png\"></p>\n<p>启用压缩后，图片的压缩按钮是白色的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210521181033.png\"></p>\n<h2 id=\"图片鉴黄\"><a href=\"#图片鉴黄\" class=\"headerlink\" title=\"图片鉴黄\"></a>图片鉴黄</h2><p>ImgURL 使用 Moderate Content 提供的 API 来进行图片鉴黄，因此您需要先在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubW9kZXJhdGVjb250ZW50LmNvbS8=\">https://www.moderatecontent.com/<i class=\"fa fa-external-link-alt\"></i></span> 申请API key</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210521212708.png\"></p>\n<p>用邮箱注册</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210521212805.png\"></p>\n<p>提交后直接能看到 API Key</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210521213020.png\"></p>\n<p>同时也会收到一封邮件，提供了密码和链接</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210521213803.png\"></p>\n<p>打开 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbGllbnQubW9kZXJhdGVjb250ZW50LmNvbS8=\">https://client.moderatecontent.com/<i class=\"fa fa-external-link-alt\"></i></span> ，输入账号和密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210521213921.png\"></p>\n<p>每个有1w次的限额</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210521214301.png\"></p>\n<p>将 API Key 填入并启用</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210521214522.png\"></p>\n<p>API 识别无法做到 100% 准确，如果是违规图片，可以在后台可疑图片查看到，图片会被标记为可疑图片等待管理员审核，您可以在【图片管理】 - 可疑图片进行查看，如果存在误判，可点击下图中的按钮取消。</p>\n<blockquote>\n<p>没找到合适的图片，盗用了一张官方的图来说明一下效果</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210521215414.png\"></p>\n<p>每次上传之后，限额都会有变化，如果做公共图床应该是不够用的，个人图床的话就用不上了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210521223227.png\"></p>\n<p> 最后上一张图演示下上传效果</p>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210521180458.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>ImgURL免费图床<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWd1cmwub3JnLw==\">https://imgurl.org/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>helloxz/imgurl: ImgURL是一个简单、纯粹的图床程序，让个人图床多一个选择。<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hlbGxveHovaW1ndXJs\">https://github.com/helloxz/imgurl<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>管理维护 · 语雀<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueXVxdWUuY29tL2hlbGxvei9pbWd1cmwtcHJvL21haW50ZW5hbmNl\">https://www.yuque.com/helloz/imgurl-pro/maintenance<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","图片"]},{"title":"bitwarden_rs已更名为vaultwarden","url":"/2021/05/31/bitwarden_rs%E5%B7%B2%E6%9B%B4%E5%90%8D%E4%B8%BAvaultwarden/","content":"<p>周末本来想升级一下 <code>Bitwarden</code>，因为其发布了可阅后即焚的「安全分享密码」功能 <code>Bitwarden Send</code>，可是老苏发现 <code>bitwardenrs/server</code> 镜像在 Docker Registry 中已被弃用了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210530151213.png\"></p>\n<p>原来 <code>Bitwarden_RS</code> 这个第三方的 <code>Bitwarden</code> 服务端已更名成了 <code>Vaultwarden</code>，毕竟 <code>Bitwarden_RS</code> 不是官方的产品，而且 <code>Bitwarden</code> 是有注册商标的，所以改名也在情理之中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210530151909.png\"></p>\n<p>虽然改名了但是安装方法还是一样的：</p>\n<ol>\n<li> 下载 <code>vaultwarden/server</code> 镜像；</li>\n<li> 停止您当前的 <code>bitwardenrs/server</code> 容器，然后将其删除；</li>\n</ol>\n<blockquote>\n<p>请先做好备份工作，避免意外情况的出现</p>\n</blockquote>\n<ol start=\"3\">\n<li> 使用 <code>vaultwarden/server</code> 镜像创建一个具有相同设置的新容器，这样可以避免客户端重新设置；</li>\n</ol>\n<blockquote>\n<p>相关文档：<br>『 <a href=\"https://laosu.ml/2020/07/18/%E7%94%A8bitwarden%E8%87%AA%E5%BB%BA%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F\">用Bitwarden自建密码管理系统</a> 』<br>『 <a href=\"https://laosu.ml/2021/02/05/%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BDBitwarden%E6%95%B0%E6%8D%AE%E5%BA%93\">自动备份Bitwarden数据库</a> 』</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>Vaultwarden</code> ，选择第二个 <code>vaultwarden/server</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210530154218.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>卷指向 <code>bitwardenrs/server</code> 之前使用的 <code>docker/bitwarden</code> 目录即可</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/bitwarden</code></td>\n<td align=\"center\"><code>/data/</code></td>\n<td align=\"center\">数据库目录</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210530171032.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>直接用了 <code>bitwardenrs/server</code> 之前使用的端口设置</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">3012</td>\n<td align=\"center\">3012</td>\n</tr>\n<tr>\n<td align=\"center\">8880</td>\n<td align=\"center\">80</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210530170927.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>WEB_VAULT_ENABLED</code></td>\n<td align=\"center\">是否开启 Web 客户端，设置为<code>true</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>SIGNUPS_ALLOWED</code></td>\n<td align=\"center\">是否开放用户注册，设置为<code>false</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>WEBSOCKET_ENABLED</code></td>\n<td align=\"center\">是否开启WebSocket，设置为<code>true</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>LOG_FILE</code></td>\n<td align=\"center\">日志保存文件路径，设置为<code>/data/bitwarden.log</code></td>\n</tr>\n</tbody></table>\n<blockquote>\n<p><code>SIGNUPS_ALLOWED</code> 字段，如果是第一次安装，因为你必须先注册才能存储数据，所以暂且先打开；搭建好注册后再改成 <code>false</code>，如果和老苏一样只是升级，直接设为 <code>false</code> 即可。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210530170823.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:8880</code>，就能看到主界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210530171333.png\"></p>\n<p>新版本下面会有 <code>Power by Vaultwarden</code> 字样，而老版本是没有的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/12/1594566250628-1594566250631.png\" alt=\"title\"></p>\n<h1 id=\"Bitwarden-Send\"><a href=\"#Bitwarden-Send\" class=\"headerlink\" title=\"Bitwarden Send\"></a>Bitwarden Send</h1><p>目前 <code>Bitwarden Send</code> 已上线所有 <code>Bitwarden</code> 客户端</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210530174042.png\"></p>\n<p>包括 <code>Chrome</code> 插件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210530174218.png\"></p>\n<p>先创建一个 <code>Send</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210530175005.png\"></p>\n<p>每一个 <code>Send</code> 都可以设置：</p>\n<ul>\n<li>访问时隐藏文本（点击可见）</li>\n<li>删除日期</li>\n<li>过期时间</li>\n<li>最大访问次数</li>\n<li>访问密码</li>\n<li>笔记（私密备注，仅自己可见）</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210530190003.png\"></p>\n<p>复制链接，然后发给对方</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210530175052.png\"></p>\n<p>对方收到链接在浏览器中打开，就能看到发过去的内容了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210530175150.png\"></p>\n<p>这样就实现了私密分享，当然也有好多的阅后即焚工具能实现同样的功能，比如我们之前介绍过的 <code>PrivateBin</code></p>\n<blockquote>\n<p>相关文档：『 <a href=\"https://laosu.ml/2020/11/30/%E5%8D%8F%E5%90%8C%E5%B7%A5%E4%BD%9C%E4%B9%8B%E4%BB%A3%E7%A0%81%E5%88%86%E4%BA%ABPrivateBin\">协同工作之代码分享PrivateBin</a> 』</p>\n</blockquote>\n<p>不过如果只是分享个密码，当然还是 <code>Bitwarden Send</code> 更方便了。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Synology: bitwardenrs/server Deprecated – Replaced with vaultwarden/server – Marius Hosting<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXJpdXNob3N0aW5nLmNvbS9zeW5vbG9neS1iaXR3YXJkZW5ycy1zZXJ2ZXItZGVwcmVjYXRlZC1yZXBsYWNlZC13aXRoLXZhdWx0d2FyZGVuLXNlcnZlci8=\">https://mariushosting.com/synology-bitwardenrs-server-deprecated-replaced-with-vaultwarden-server/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Bitwarden Send - 开源密码管理器 Bitwarden 发布可阅后即焚的「安全分享密码」功能 - 小众软件<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYXBwaW5uLmNvbS9iaXR3YXJkZW4tc2VuZC8=\">https://www.appinn.com/bitwarden-send/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","密码"]},{"title":"Web版视频监控软件ZoneMinder","url":"/2021/05/28/Web%E7%89%88%E8%A7%86%E9%A2%91%E7%9B%91%E6%8E%A7%E8%BD%AF%E4%BB%B6ZoneMinder/","content":"<p><strong>什么是 ZoneMinder ？</strong></p>\n<blockquote>\n<p>ZoneMinder 是为 Linux 开发的免费、开放源代码的视频监控系统，支持 IP 、USB 和模拟摄像机。可以使用 web 界面监控重要场所。当异常事件发生时，你就可以收到 e-mail 或短信通知。</p>\n</blockquote>\n<p><strong>什么是 RTSP 协议 ？</strong></p>\n<blockquote>\n<p>RTSP（Real Time Streaming Protocol），实时流传输协议，是 TCP/IP 协议体系中的一个应用层协议，RTSP 在体系结构上位于 RTP 和 RTCP 之上，它使用 TCP 或 UDP 完成数据传输。该协议定义了一对多应用程序如何有效地通过 IP 网络传送多媒体数据。</p>\n</blockquote>\n<p>之前，老苏一直用 <code>iSpy</code> 来当监控主机， 不过 <code>iSpy</code> 只能运行在 <code>Windows</code> 平台，这样不得不多开一台主机，在全世界都在提倡节能减排的时候，我们也应该有所行动。</p>\n<p>这次我们要安装的 <code>ZoneMinder</code> 是基于 <code>Web</code> 的，完全可以安装在群晖中，这样就可以节省出一台主机的电量了。</p>\n<blockquote>\n<p>关于 <code>iSpy</code> 可以看看老苏之前写的 『 <a href=\"https://laosu.ml/2020/07/10/%E7%94%A8%E6%97%A7%E7%94%B5%E8%84%91%E5%81%9A%E7%9B%91%E6%8E%A7%E4%B8%BB%E6%9C%BA\">用旧电脑做监控主机</a> 』</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"数据库\"><a href=\"#数据库\" class=\"headerlink\" title=\"数据库\"></a>数据库</h2><p>通过 <code>phpMyAdmin</code> 在 <code>MariaDB 5</code> 中新建用户 <code>zm</code>，创建同名的库 <code>zm</code> 并授予所有权限。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210523133957.png\"></p>\n<h2 id=\"安装镜像\"><a href=\"#安装镜像\" class=\"headerlink\" title=\"安装镜像\"></a>安装镜像</h2><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>zoneminder</code> ，选择第一个 <code>quantumobject/docker-zoneminder</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210523125027.png\"></p>\n<h3 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h3><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>zoneminder</code>，再建一个子目录 <code>config</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/zoneminder/config</code></td>\n<td align=\"center\"><code>/config</code></td>\n<td align=\"center\">存放设置</td>\n</tr>\n<tr>\n<td align=\"center\"><code>docker/zoneminder/zm</code></td>\n<td align=\"center\"><code>/var/cache/zoneminder</code></td>\n<td align=\"center\">存放截图、事件等</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210525212904.png\" alt=\"2个目录\"></p>\n<h3 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h3><p>Web 用了端口 <code>3380</code> ，Event Server 从 <code>9000</code> 改为了 <code>9030</code>，</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">3380</td>\n<td align=\"center\">80</td>\n</tr>\n<tr>\n<td align=\"center\">9030</td>\n<td align=\"center\">9000</td>\n</tr>\n<tr>\n<td align=\"center\">6802</td>\n<td align=\"center\">6802</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210523134241.png\"></p>\n<h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>ZM_DB_HOST</code></td>\n<td align=\"center\">数据库地址，默认值为 <code>db</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>ZM_DB_NAME</code></td>\n<td align=\"center\">库名，默认值为 <code>zm</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>ZM_DB_USER</code></td>\n<td align=\"center\">数据库用户名，默认值为 <code>zmuser</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>ZM_DB_PASS</code></td>\n<td align=\"center\">数据库密码，默认值为 <code>zmpass</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>ZM_DB_PORT</code></td>\n<td align=\"center\">数据库端口，默认值为 <code>3306</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>TZ</code></td>\n<td align=\"center\">时区，默认值为 <code>America/New_York</code></td>\n</tr>\n</tbody></table>\n<ul>\n<li><code>ZM_DB_HOST</code> ：设为主机的 IP，老苏的群晖主机内网地址是 192.168.0.199，你要根据自己的 IP 修改</li>\n<li><code>ZM_DB_NAME</code> ：直接用默认值 <code>zm</code></li>\n<li><code>ZM_DB_USER</code> ：用户名为 <code>zm</code></li>\n<li><code>ZM_DB_PASS</code> ：数据库密码要按自己的填写</li>\n<li><code>ZM_DB_PORT</code> ：如果你同时安装了 <code>MariaDB 5</code> 和 <code>MariaDB 10</code>，一般前者是 3306，后者是 3307</li>\n<li><code>TZ</code> 要改为 <code>Asia/Shanghai</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210523134634.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:3380/zm</code>，就能看到隐私条款</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210523142139.png\"></p>\n<p>拉到最下面，左侧选择 <code>Accept</code>，右侧点 <code>APPLY</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210523142301.png\"></p>\n<p>接下来就在主界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210523142512.png\"></p>\n<h2 id=\"设置中文\"><a href=\"#设置中文\" class=\"headerlink\" title=\"设置中文\"></a>设置中文</h2><p>菜单 <code>Options</code> –&gt; <code>System</code> –&gt; <code>LANG_DEFAULT</code>，从 <code>en_gb</code> 改为 <code>cn_zh</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210523142754.png\"></p>\n<p>菜单有些已经是中文了，看得出来汉化不完全</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210523142956.png\"></p>\n<h2 id=\"添加摄像头\"><a href=\"#添加摄像头\" class=\"headerlink\" title=\"添加摄像头\"></a>添加摄像头</h2><p><code>控制台</code> –&gt; <code>新建监视器</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210523174710.png\"></p>\n<p>在弹出页面先设置 <code>信号源</code></p>\n<blockquote>\n<p>老苏有一个巨峰摄像头，之前玩 <code>HomeAssistant</code> 的时候已经研究过 RTSP 的地址，其中：</p>\n<ul>\n<li>ip：为设备IP；</li>\n<li>port：端口号默认为554，若为默认可不填写；</li>\n<li>channel：通道；</li>\n<li>stream：码流类型  0=主码流 1=子码流；</li>\n</ul>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"># RTSP 地址</span><br><span class=\"line\">rtsp:<span class=\"comment\">//ip:port/user=用户名&amp;password=密码&amp;channel=1&amp;stream=0.sdp?real_stream</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>小技巧：要确认 RTSP 地址是否有效，可以将地址在 VLC、PotPlayer、IINA 等播放器中打开，如果能正确显示图像，就说明地址是 OK 的。</p>\n</blockquote>\n<ul>\n<li>信号源路径：<code>rtsp://192.168.0.81:554/user=admin&amp;password=&amp;channel=1&amp;stream=0.sdp?real_stream</code></li>\n<li>远程方法：用了默认的 <code>TCP</code></li>\n<li>捕获分辨率：按实际的填写就可以</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210523174529.png\"></p>\n<p>保存后，再设置 <code>一般</code></p>\n<ul>\n<li>名称：随意，让自己容易识别就好了。不过只能使用数字、字母、破折号和下划线，中文就别想了。老苏起了个 <code>jufeng_rtsp</code>，这个名字后面集成到 <code>HomeAssistant</code> 会用到；</li>\n<li>Server：选 <code>Auto</code> 就可以；</li>\n<li>信号源类型：选了 <code>FFmpeg</code>；</li>\n<li>功能：选了 <code>监视</code>；</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210523180425.png\"></p>\n<p>保存之后，如果没问题就是绿色的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210523182651.png\"></p>\n<p>如果存在错误，是红色的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210523182757.png\"></p>\n<p>直接点 <code>名称</code>，可以看图像预览，而点后面的 <code>信号源</code> 中的 IP，会进入编辑状态</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210523182936.png\"></p>\n<p>和老苏之前介绍的 <code>iSpy</code> 一样，摄像头还有非常多的设置，比如存储、时间戳等一大堆的配置选项，这个就看你的需求了。</p>\n<h2 id=\"接入-HomeAssistant\"><a href=\"#接入-HomeAssistant\" class=\"headerlink\" title=\"接入 HomeAssistant\"></a>接入 HomeAssistant</h2><blockquote>\n<p>关于 <code>HomeAssistant</code> 可以看看老苏之前写的 『 <a href=\"https://laosu.ml/2020/05/24/%E7%BE%A4%E6%99%96%E4%B8%8A%E7%94%A8docker%E5%AE%89%E8%A3%85homeassistant\">群晖上用docker安装homeassistant</a> 』</p>\n</blockquote>\n<h3 id=\"Camera\"><a href=\"#Camera\" class=\"headerlink\" title=\"Camera\"></a>Camera</h3><p>编辑 <code>configuration.yaml</code> ，加入下面这段代码</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">zoneminder:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">host:</span> <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.199</span><span class=\"string\">:3380</span></span><br><span class=\"line\">      <span class=\"attr\">path:</span> <span class=\"string\">/zm/</span></span><br><span class=\"line\">      <span class=\"attr\">path_zms:</span> <span class=\"string\">/zm/cgi-bin/nph-zms</span></span><br><span class=\"line\">      <span class=\"attr\">ssl:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">      <span class=\"attr\">verify_ssl:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">      <span class=\"attr\">username:</span> <span class=\"string\">zm</span></span><br><span class=\"line\">      <span class=\"attr\">password:</span> <span class=\"number\">123456</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">camera:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">platform:</span> <span class=\"string\">zoneminder</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>第一块红框就是 <code>zoneminder</code> 相关的部分</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210523194510.png\"></p>\n<blockquote>\n<p>第二块红框是 直连巨峰摄像头的部分</p>\n</blockquote>\n<blockquote>\n<p>第三块红框是 <code>iSpy</code> 相关的部分</p>\n</blockquote>\n<h3 id=\"Sensor\"><a href=\"#Sensor\" class=\"headerlink\" title=\"Sensor\"></a>Sensor</h3><p>在 <code>configuration.yaml</code> 中加入下面这段代码</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">sensor:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">platform:</span> <span class=\"string\">zoneminder</span></span><br><span class=\"line\">    <span class=\"attr\">include_archived:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Switch\"><a href=\"#Switch\" class=\"headerlink\" title=\"Switch\"></a>Switch</h3><p>在 <code>configuration.yaml</code> 中加入下面这段代码</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">switch:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">platform:</span> <span class=\"string\">zoneminder</span></span><br><span class=\"line\">    <span class=\"attr\">command_on:</span> <span class=\"string\">Modect</span></span><br><span class=\"line\">    <span class=\"attr\">command_off:</span> <span class=\"string\">Monitor</span></span><br></pre></td></tr></table></figure>\n\n<p>保存后重启 <code>HomeAssistant</code> 服务</p>\n<p>添加卡片，选择 <code>图片概览</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210523212541.png\"></p>\n<p>按下图设置</p>\n<blockquote>\n<p>标题随便改，原则还是自己容易识别，这是里可以用中文的<br>相机实体：下拉选 <code>camera.jufeng_rtsp</code><br>相机视图：选 <code>live</code><br>实体： <code>sensor.jufeng_rtsp_status</code><br>实体：<code>sensor.jufeng_rtsp_events</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210523213131.png\"></p>\n<p>保存之后就能看到实时预览的图像了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210523213743.png\"></p>\n<h1 id=\"建议\"><a href=\"#建议\" class=\"headerlink\" title=\"建议\"></a>建议</h1><h2 id=\"功能建议\"><a href=\"#功能建议\" class=\"headerlink\" title=\"功能建议\"></a>功能建议</h2><p>之所以通过 <code>ZoneMinder</code> 接入，是和 <code>iSpy</code> 一样，要用到监控软件的移动侦测等功能，如果只是查看图像，完全可以直接接入 <code>HomeAssistant</code>。所以我建议将功能改为 <code>移动侦测</code>，这样当检测到物体移动时会产生事件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210525194021.png\"></p>\n<p>点事件上的数字，会跳转到详情</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210525211620.png\"></p>\n<p>在 <code>HomeAssistant</code> 中也会收到事件通知，结合自动化脚本，可以产生报警、录像等；</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210525194151.png\"></p>\n<h2 id=\"性能建议\"><a href=\"#性能建议\" class=\"headerlink\" title=\"性能建议\"></a>性能建议</h2><p>镜像包有点大，约2G</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210524092938.png\"></p>\n<p>而资源占用方面还好</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210524093022.png\"></p>\n<p>虽然只有一路，但是会导致  <code>/dev/shm</code> 在 80% 左右，老苏猜测可能是通过 <code>ffmpeg</code> 做了转码（将 <code>rtsp</code> 转为了 <code>rtmp</code>）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210525194516.png\"></p>\n<p>这么高的情况下，如果你接入第二路大概率是会失败的，所以比较好的办法是通过命令行来启动容器，因为命令行可以通过设置 <code>--shm-size=4096m</code> 来提高磁盘 I/O 性能，这个值一般最大为内存的一半。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run -d --shm-size=2048m \\</span><br><span class=\"line\">    -v /volume1/docker/zoneminder/config:/config \\</span><br><span class=\"line\">\t-v /volume1/docker/zoneminder/zm:/var/cache/zoneminder \\</span><br><span class=\"line\">\t-e TZ=Asia/Shanghai \\</span><br><span class=\"line\">\t-e ZM_DB_HOST=192.168.0.199 \\</span><br><span class=\"line\">\t-e ZM_DB_NAME=zm \\</span><br><span class=\"line\">\t-e ZM_DB_USER=zm \\</span><br><span class=\"line\">\t-e ZM_DB_PASS=123456 \\</span><br><span class=\"line\">\t-e ZM_DB_PORT=3306 \\</span><br><span class=\"line\">\t--name quantumobject_docker-zoneminder1 \\</span><br><span class=\"line\">\t-p 3380:80 \\</span><br><span class=\"line\">\tquantumobject/docker-zoneminder:latest</span><br></pre></td></tr></table></figure>\n\n<p> <code>/dev/shm</code> 现在在 1% 左右</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210525214230.png\"></p>\n<h2 id=\"接入乐橙-A2X\"><a href=\"#接入乐橙-A2X\" class=\"headerlink\" title=\"接入乐橙 A2X\"></a>接入乐橙 A2X</h2><p>又找同事借了一个乐橙 A2X，网上查到乐橙摄像头的 RTSP 地址是</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"># RTSP 地址</span><br><span class=\"line\">rtsp:<span class=\"comment\">//username:password@ip:port/cam/realmonitor?channel=1&amp;subtype=0</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>username：用户名，默认为admin；</li>\n<li>password：密码，如果你没有改过密码，那就是摄像机底部的安全码；</li>\n<li>ip：为设备IP；</li>\n<li>port：端口号默认为554，若为默认可不填写。</li>\n<li>channel：通道号，起始为1。例如通道2，则为channel=2。</li>\n<li>subtype：码流类型，主码流为0（即subtype=0），辅码流为1（即subtype=1）；</li>\n</ul>\n<p>最后的填写的信号源路径：</p>\n<p><code>rtsp://admin:L22E6229@192.168.0.182:554/cam/realmonitor?channel=1&amp;subtype=0</code></p>\n<p>取的主流，所以分辨率设为了 <code>1080P</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210525215219.png\"></p>\n<p> <code>/dev/shm</code> 上升到了 9% 左右</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210525215059.png\"></p>\n<p>资源占用比 1 路时上升很多，毕竟乐橙是 1080P 画质的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210525222748.png\"></p>\n<p><code>HomeAssistant</code> 中不用再设置，只要添加卡片就可以了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210525223141.png\"></p>\n<p>最后 Mark 一下版本：</p>\n<ul>\n<li>ZoneMinder 的版本是  v1.34.23</li>\n<li>HomeAssistant 的版本是 2021.5.4</li>\n<li>MariaDB 的版本是 5.5.59</li>\n</ul>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>ZoneMinder - Home<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuem9uZW1pbmRlci5jb20v\">https://www.zoneminder.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>ZoneMinder/zoneminder: ZoneMinder is a free, open source Closed-circuit television software application developed for Linux which supports IP, USB and Analog cameras.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1pvbmVNaW5kZXIvem9uZW1pbmRlcg==\">https://github.com/ZoneMinder/zoneminder<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>ZoneMinder/zmdockerfiles: Dockerfiles for the ZoneMinder project build system and for running ZoneMinder<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1pvbmVNaW5kZXIvem1kb2NrZXJmaWxlcw==\">https://github.com/ZoneMinder/zmdockerfiles<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>常见网络摄像机的端口及RTSP地址 - 天一生水<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbmd5dS5vcmcvcG9ydC1hbmQtcnRzcC1hZGRyZXNzLW9mLXNldmVyYWwtaXBjYW1zLw==\">https://www.jiangyu.org/port-and-rtsp-address-of-several-ipcams/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","监控","rtsp"]},{"title":"要不要私有化部署为知笔记？","url":"/2021/05/24/%E8%A6%81%E4%B8%8D%E8%A6%81%E7%A7%81%E6%9C%89%E5%8C%96%E9%83%A8%E7%BD%B2%E4%B8%BA%E7%9F%A5%E7%AC%94%E8%AE%B0%EF%BC%9F/","content":"<p><code>为知笔记</code> 已经用了近8年，下半年 VIP 就要到期了，正在纠结是不是继续付费。</p>\n<blockquote>\n<p>其实 <code>为知笔记</code> 又买又送的，没花多少钱，反而是之前用的 <code>印象笔记</code> 花了不少美刀。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/30/1593516073900-1593516073906.png\"></p>\n<p>因为 <code>为知笔记</code> 在 2 年前推出了私有化部署方案，显然建立属于自己独享的私有云笔记服务，会更安全，也更隐私；</p>\n<p>但是私有化部署也存在一些限制，比如用户数，这个对老苏来说不是个事儿；再比如收藏功能，包括邮件转发收藏、微信收藏、网页剪藏等，这就有点麻烦，毕竟这是我用的最多也最顺手的功能。</p>\n<p>有没有变通的办法呢？那就只能试了才知道。</p>\n<blockquote>\n<p>不卖关子，先说结论，除了网页剪藏外，微信收藏和邮件转发收藏都实现不了；</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>官方的文章： <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cud2l6LmNuL3poLWNuL2ludHJvZHVjdGlvbi1kb2NrZXItbmFz\">如何在群辉 NAS 上部署为知笔记（https://www.wiz.cn/zh-cn/introduction-docker-nas）<i class=\"fa fa-external-link-alt\"></i></span> 中有详细的说明，这里就略过了。</p>\n<blockquote>\n<p>但是需要注意的是，这个镜像比较吃内存，按官方要求需要内存大于 4G，我的小黑裙还可以勉力一战。</p>\n</blockquote>\n<p>和文档中差别的是我安装了 <code>wiznote/wizserver-amd64</code>，因为这个版本改进了搜索性能，速度更快，安装方法还是一样的。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210325145010.png\"></p>\n<p>环境变量中启用了搜索功能，刚安装完成时的资源消耗就有点高</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210325150333.png\"></p>\n<p>基本上稳定在 700M 左右，不知道数据多了之后会如何？</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210325175040.png\"></p>\n<p>安装完成后的 <code>data</code> 目录中多了很多文件夹和文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210325150604.png\"></p>\n<h1 id=\"网页收藏\"><a href=\"#网页收藏\" class=\"headerlink\" title=\"网页收藏\"></a>网页收藏</h1><h2 id=\"反向代理\"><a href=\"#反向代理\" class=\"headerlink\" title=\"反向代理\"></a>反向代理</h2><p>首先要设置反向代理，生成服务器的外网访问地址</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210325151736.png\"></p>\n<h2 id=\"Web-Clipper-插件\"><a href=\"#Web-Clipper-插件\" class=\"headerlink\" title=\"Web Clipper 插件\"></a>Web Clipper 插件</h2><p>支持 Notion、GitHub、OneNote、为知笔记等各种笔记，也可以将网页转成 <code>Markdown</code> 格式直接下载到本地，这是个开源的插件。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/29/1598712361844-1598712361846.png\" alt=\"title\"></p>\n<p>下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaHJvbWUuZ29vZ2xlLmNvbS93ZWJzdG9yZS9kZXRhaWwvd2ViLWNsaXBwZXIvbWhmYm9maW9rbXBwZ2RsaWFrbWluYmdkZ2NtYmhiYWM/dXRtX3NvdXJjZT1jaHJvbWUtbnRwLWljb24=\">https://chrome.google.com/webstore/detail/web-clipper/mhfbofiokmppgdliakminbgdgcmbhbac?utm_source=chrome-ntp-icon<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>设置绑定</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210325152931.png\"></p>\n<p>剪藏网页</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210325153412.png\"></p>\n<p>支持预览</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210325153517.png\"></p>\n<p>保存内容</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210325153621.png\"></p>\n<p>支持直接跳转查看</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210325153731.png\"></p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>完美解决网页剪藏问题</p>\n<h1 id=\"邮件收藏\"><a href=\"#邮件收藏\" class=\"headerlink\" title=\"邮件收藏\"></a>邮件收藏</h1><p>需要其内置邮件服务，这个显然不具备。</p>\n<h2 id=\"小结-1\"><a href=\"#小结-1\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>无法实现</p>\n<h1 id=\"微信收藏\"><a href=\"#微信收藏\" class=\"headerlink\" title=\"微信收藏\"></a>微信收藏</h1><p>之前写过『 <a href=\"https://laosu.ml/2020/06/30/%E5%A6%82%E4%BD%95%E6%94%B6%E8%97%8F%E5%BE%AE%E4%BF%A1%E5%86%85%E5%AE%B9%E5%88%B0%E4%B8%BA%E7%9F%A5%E7%AC%94%E8%AE%B0/\">如何收藏微信内容到为知笔记</a> 』</p>\n<p>文中的方法一通过在浏览器打开，将页面发送给为知笔记客户端，从而实现页面的保存，有希望可以实现微信收藏</p>\n<ul>\n<li> 安装为知笔记客户端</li>\n<li> 选择 <code>登录到企业私有服务器</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210325171416.jpg\"></p>\n<ul>\n<li> 比登录官方要多填一个服务器地址</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210325171659.png\"></p>\n<ul>\n<li> 登录成功后能看到前面剪藏的网页</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210325171829.png\"></p>\n<ul>\n<li> 打开文章–&gt; <code>在浏览器打开</code> –&gt; 分享 –&gt; <code>保存到为知笔记</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210325172259.png\"></p>\n<ul>\n<li>提示 <code>请在账号设置中添加 MyWiz 邮箱后再使用系统分享</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210325172406.png\"></p>\n<ul>\n<li> 设置邮箱</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210325172626.png\"></p>\n<ul>\n<li> 提示 <code>请先设置该账号的收藏服务，再添加 MyWiz 邮箱</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210325172720.png\"></p>\n<p>说明微信收藏也依赖于内置邮件服务。</p>\n<h2 id=\"小结-2\"><a href=\"#小结-2\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>无法实现</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>所以说私有化部署，只能是自己写写笔记，想要收藏就得另外花钱了。</p>\n<ul>\n<li>从收藏效果看不如 <code>Wallabag</code> ，<code>Wallabag</code> 不仅支持网页收藏，也支持手机上收藏微信公众号的文章</li>\n</ul>\n<blockquote>\n<p>关于 <code>Wallabag</code>，可以看看老苏之前写的『  <a href=\"https://laosu.ml/2020/09/13/%E7%94%A8Wallabag%E6%90%AD%E5%BB%BA%E7%A8%8D%E5%90%8E%E9%98%85%E8%AF%BB/\">用Wallabag搭建稍后阅读</a> 』</p>\n</blockquote>\n<ul>\n<li>仅仅记个笔记，资源消耗有点大，不如老苏现在 <code>Obsidian</code> + <code> Syncthing</code> 的方案</li>\n</ul>\n<blockquote>\n<p> 关于 <code>Syncthing</code>，可以看看老苏之前写的『 <a href=\"https://laosu.ml/2020/09/04/Syncthing%E6%96%87%E4%BB%B6%E5%A4%B9%E5%90%8C%E6%AD%A5%E7%A5%9E%E5%99%A8/\">Syncthing文件夹同步神器</a> 』</p>\n</blockquote>\n<p>因此私有化部署 <code>为知笔记</code> 个人觉得没啥必要，可选择的还是比较多的，<code>Note Station</code> 不香吗？至于是不是要续费，到时候再说吧。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>为知笔记 | 为知笔记服务端docker镜像使用说明<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cud2l6LmNuL3poLWNuL2RvY2tlcg==\">https://www.wiz.cn/zh-cn/docker<i class=\"fa fa-external-link-alt\"></i></span> </p>\n<p>为知笔记 | 如何在群辉 NAS 上部署为知笔记<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cud2l6LmNuL3poLWNuL2ludHJvZHVjdGlvbi1kb2NrZXItbmFz\">https://www.wiz.cn/zh-cn/introduction-docker-nas<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>为知笔记 | Docker 服务端私有部署 - 收藏服务设置说明<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cud2l6LmNuL3poLWNuL2RvY2tlci1jb2xsZWN0b3Itc2VydmljZQ==\">https://www.wiz.cn/zh-cn/docker-collector-service<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>为知笔记docker私有化部署 - 简书<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8zNzY2NzUyMzk5ZGE=\">https://www.jianshu.com/p/3766752399da<i class=\"fa fa-external-link-alt\"></i></span> </p>\n<p>利用群晖Nas打造为知笔记docker版私人服务器值得吗？_NAS存储_什么值得买<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2FtbTV4OHF6Lw==\">https://post.smzdm.com/p/amm5x8qz/<i class=\"fa fa-external-link-alt\"></i></span> </p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","笔记"]},{"title":"去中心化开源音乐服务器Funkwhale","url":"/2021/05/21/%E5%8E%BB%E4%B8%AD%E5%BF%83%E5%8C%96%E5%BC%80%E6%BA%90%E9%9F%B3%E4%B9%90%E6%9C%8D%E5%8A%A1%E5%99%A8Funkwhale/","content":"<p><strong>什么是 Funkwhale ？</strong></p>\n<blockquote>\n<p>Funkwhale 是一款开源的音乐社交平台，让音乐爱好者在一个分散的、开放的网络中收听和分享音乐和音频。可以上传个人音乐库到自己的实例服务器，与朋友和家人分享。所有实例可以通过标准、免费、开源的技术连通。网络不依赖于任何公司或实体。</p>\n</blockquote>\n<p><strong>什么是 ActivityPub ？</strong></p>\n<blockquote>\n<p>ActivityPub 是一个去中心社交网络（decentralized social networking）的交互协议，允许软件项目通过添加 ActivityPub 支持，实现拥有完全不同代码库的应用程序之间的可互操作社交网络。</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>funkwhale</code> ，选择第一个 <code>funkwhale/all-in-one</code>，版本选择 <code>latest</code>。</p>\n<blockquote>\n<p>这是个多合一的镜像，包含了 <code>Postgres</code>，<code>Redis</code>，<code>Nginx</code> 以及所有需要的文件和配置。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210508094647.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>funkwhale</code>，然后在 <code>funkwhale</code> 文件夹中再创建两个新的子文件夹，分别命名为 <code>data</code> 和 <code>music</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210508101025.png\"></p>\n<p><code>/data</code> 目录是数据持久化的关键，需修改目录的权限，否则很可能因为权限问题导致容器停止运行。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在 funkwhale 目录中执行</span></span><br><span class=\"line\">chmod 777 data</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210508113551.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/funkwhale/data</code></td>\n<td align=\"center\"><code>/data</code></td>\n<td align=\"center\">数据目录</td>\n</tr>\n<tr>\n<td align=\"center\"><code>docker/funkwhale/music</code></td>\n<td align=\"center\"><code>/music</code></td>\n<td align=\"center\">音乐目录</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>如果不需要数据持久化，可以不挂载 <code>/data</code> 目录<br>如果不打算从网页上传音乐文件，<code>/music</code> 目录可以设为只读；</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210508101946.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>找一个不冲突的端口就行</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">3030</td>\n<td align=\"center\">80</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210508102037.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>PUID</code></td>\n<td align=\"center\">可选项，默认设为 <code>1000</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>PGID</code></td>\n<td align=\"center\">可选项，默认设为 <code>1000</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>NESTED_PROXY</code></td>\n<td align=\"center\">容器在反向代理后面设为1，否则为0</td>\n</tr>\n<tr>\n<td align=\"center\"><code>FUNKWHALE_HOSTNAME</code></td>\n<td align=\"center\"><code>Funkwhale</code> 实例的主机域名，默认值为 <code>yourdomain.funkwhale</code></td>\n</tr>\n</tbody></table>\n<p>其中前三项为新增，第四项为修改，要修改为你自己的域名，如果域名带端口，把端口也一并带上，其他的都用的默认值；</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210508102907.png\"></p>\n<blockquote>\n<p>熟悉的都知道老苏用了 <code>frp</code> 来做内网穿透，测试发现在这种模式下， <code>NESTED_PROXY</code> 设不设，或者设为0或者1，似乎并没有任何影响。</p>\n</blockquote>\n<p>相对应的反向代理设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210508102437.png\"></p>\n<h1 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h1><h2 id=\"创建超级用户\"><a href=\"#创建超级用户\" class=\"headerlink\" title=\"创建超级用户\"></a>创建超级用户</h2><blockquote>\n<p>超级用户（SuperUser）在老苏看来应该就是管理员吧</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 其中 funkwhale-all-in-one1 为容器名称</span></span><br><span class=\"line\">docker <span class=\"built_in\">exec</span> -it funkwhale-all-in-one1 manage createsuperuser</span><br></pre></td></tr></table></figure>\n\n<p>注意事项：</p>\n<ol>\n<li>容器必须在运行状态才能执行上面的命令；</li>\n<li>密码至少8个字符，不能都是数字，当然也不能太通用了；</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210508120012.png\"></p>\n<h2 id=\"开放用户注册\"><a href=\"#开放用户注册\" class=\"headerlink\" title=\"开放用户注册\"></a>开放用户注册</h2><p>在浏览器中输入 <code>http://群晖IP:3030</code>，就能看到主界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210508131512.png\"></p>\n<p>用刚才注册的超级用户登录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210508133133.png\"></p>\n<p>登录成功后的主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210508141014.png\"></p>\n<p>在 <code>管理</code> –&gt; <code>设置</code> –&gt; <code>注册者</code> 中，可以开启用户注册，默认是没有开启的，只能由管理员邀请才行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210508141759.png\"></p>\n<h2 id=\"启用-Subsonic-API\"><a href=\"#启用-Subsonic-API\" class=\"headerlink\" title=\"启用 Subsonic API\"></a>启用 Subsonic API</h2><p>在 <code>管理</code> –&gt; <code>设置</code> –&gt; <code>Subsonic</code> 中，默认 <code>Enabled Subsonic API</code> 是启用的，但就安全性而言，<code>Subsonic</code> 协议并不理想，所以如果你并不打算使用客户端，可以关闭这个选项</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210508145952.png\"></p>\n<p>只是启用还不行，还需要进一步的设置。在 <code>管理员</code> –&gt; <code>设置</code> –&gt; <code>Subsonic API 密码</code> 中，为支持 <code>Subsonic API</code> 的音乐播放器设置单独的密码，只要点 <code>请求密码</code> 就可以了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210508142705.png\"></p>\n<p>解锁 <code>Subsonic</code> 之后，官方提供的能和 <code>Funkwhale</code> 配套使用的客户端：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9mdW5rd2hhbGUuYXVkaW8vYXBwcy8=\">https://funkwhale.audio/apps/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>老苏用的是 <code>android</code> 客户端 <code>Subsonic Music Streamer</code> 并没有在上面的列表中，但还是可以正常使用</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210508150750.png\"></p>\n<p>所以老苏推荐你看看 <code>Subsonic Apps</code> 列表：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zdWJzb25pYy5vcmcvcGFnZXMvYXBwcy5qc3A=\">http://www.subsonic.org/pages/apps.jsp<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>这里比官方推荐的 <code>app</code> 更丰富，应该能找到适合你的</p>\n<h2 id=\"导入音乐\"><a href=\"#导入音乐\" class=\"headerlink\" title=\"导入音乐\"></a>导入音乐</h2><p>找到 <code>在库中上传第三方内容</code> –&gt; <code>开始吧</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210508152952.png\"></p>\n<p>填入相关说明后，<code>创建库</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210508153154.png\"></p>\n<p>这个时候就拥有了你自己的音乐库了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210508153510.png\"></p>\n<p>转到 <code>上传</code> 页面 –&gt; <code>导入</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210508154606.png\"></p>\n<p>即可将 <code>/music</code> 目录中的音乐文件导入到你的音乐库中</p>\n<blockquote>\n<p>老苏只拷了3首歌，还是上次研究 <code>音乐解锁unlock-music</code> 留在硬盘里的</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/0520210521191524.png\"></p>\n<p>这个时候能看到库的详情了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210508154733.png\"></p>\n<h1 id=\"听歌\"><a href=\"#听歌\" class=\"headerlink\" title=\"听歌\"></a>听歌</h1><p>回到网站首页，可以看到 <code>最近添加</code> 中已经有了刚才加的 3 首歌</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210508155159.png\"></p>\n<p>可以直接播放，也可以添加到播放列表</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210508155347.png\"></p>\n<p>建了一个播放列表</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210508160912.png\"></p>\n<p>手机 app <code>Subsonic</code> 上的效果</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210508161050.png\"></p>\n<h1 id=\"发布实例\"><a href=\"#发布实例\" class=\"headerlink\" title=\"发布实例\"></a>发布实例</h1><p> 如果你想把 <code>Funkwhale</code> 服务器变成一个公共实例，首先要完善服务器的信息</p>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210508170407.png\"></p>\n<p> 接下来到 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9uZXR3b3JrLmZ1bmt3aGFsZS5hdWRpby8=\">https://network.funkwhale.audio/<i class=\"fa fa-external-link-alt\"></i></span>  添加或者删除你的实例</p>\n<p> 之后可以在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9uZXR3b3JrLmZ1bmt3aGFsZS5hdWRpby9kYXNoYm9hcmRzL2Qvb3ZlcnZpZXcvZnVua3doYWxlLW5ldHdvcmstb3ZlcnZpZXc/b3JnSWQ9MSZyZWZyZXNoPTJo\">https://network.funkwhale.audio/dashboards/d/overview/funkwhale-network-overview?orgId=1&amp;refresh=2h<i class=\"fa fa-external-link-alt\"></i></span> 找到实例的详情</p>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210508170707.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>GitHub - ellisist/funkwhale: Forked from <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlLmVsaW90YmVycmlvdC5jb20vZnVua3doYWxlL2Z1bmt3aGFsZQ==\">https://code.eliotberriot.com/funkwhale/funkwhale<i class=\"fa fa-external-link-alt\"></i></span><br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2VsbGlzaXN0L2Z1bmt3aGFsZQ==\">https://github.com/ellisist/funkwhale<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>GitHub - michaelmob/docker-funkwhale: All-in-one funkwhale docker image.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21pY2hhZWxtb2IvZG9ja2VyLWZ1bmt3aGFsZQ==\">https://github.com/michaelmob/docker-funkwhale<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Docker installation — funkwhale 1.1.1 documentation<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmZ1bmt3aGFsZS5hdWRpby9pbnN0YWxsYXRpb24vZG9ja2VyLmh0bWw=\">https://docs.funkwhale.audio/installation/docker.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>威联通(NAS)搭建个人音乐中心 - 简书<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9jMzMwNTcyMTVjMTU=\">https://www.jianshu.com/p/c33057215c15<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","多媒体","音乐"]},{"title":"Ampache音乐流媒体服务器","url":"/2021/05/17/Ampache%E9%9F%B3%E4%B9%90%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8/","content":"<p><strong>什么是 Ampache ?</strong></p>\n<blockquote>\n<p>Ampache 是一个基于网络的音频/视频流应用程序和文件管理器。它最初是为了利用 Apache 的 Mod_mp3 而编写的，后来增加了流式传输方法，可以支持你从任何支持 Internet 的设备访问自己的视频和音乐。</p>\n</blockquote>\n<p><strong>什么是 DAAP 协议 ?</strong></p>\n<blockquote>\n<p>DAAP（Digital Audio Access Protocol） 代表数字音频访问协议，是 Apple 设计的专有技术。 它作为一种通过网络共享音乐的方法被整合到 iTunes 中。</p>\n</blockquote>\n<p><strong>什么是 UPnP ?</strong></p>\n<blockquote>\n<p>通用即插即用（英语：Universal Plug and Play，简称 UPnP）是由“通用即插即用论坛”  （UPnP™ Forum）推广的一套网络协议。 该协议的目标是使家庭网络（数据共享、通信和娱乐）和公司网络中的各种设备能够相互无缝连接，并简化相关网络的实现。</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>ampache</code> ，选择第一个 <code>ampache/ampache</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210505171036.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>ampache</code>。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>/docker/ampache</code></td>\n<td align=\"center\"><code>/media</code></td>\n<td align=\"center\">音乐文件</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>如果不打算从网页上传，可以勾选 <code>只读</code> 属性</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210506104145.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不能冲突</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n<th align=\"center\">类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">3780</td>\n<td align=\"center\">80</td>\n<td align=\"center\">TCP</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210506104353.png\"></p>\n<h1 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h1><p>在浏览器中输入 <code>http://群晖IP:3780</code>，就能看到主界面了，如果看不到的话稍等一会儿，这时查看容器的日志会看到在安装 <code>MySQL</code></p>\n<blockquote>\n<p>Ampache 有不带 MySQL 的镜像版本，不过老苏还是建议用带内置数据库的版本比较省事。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210506104559.png\"></p>\n<blockquote>\n<p>从上图可以看到，root 用户密码为空，所以不要填密码，但是 root 用户只能本地连接， admin 用户是有密码的，密码为 <code>sdLgiKo3Twv0</code>，这是个临时密码，建议尽快修改</p>\n</blockquote>\n<p>第一次需要进行设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210505190607.png\"></p>\n<h2 id=\"语言设置\"><a href=\"#语言设置\" class=\"headerlink\" title=\"语言设置\"></a>语言设置</h2><p>软件支持简体中文</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210505190701.png\"></p>\n<h2 id=\"环境检测\"><a href=\"#环境检测\" class=\"headerlink\" title=\"环境检测\"></a>环境检测</h2><p>系统要求的检测，主要是必需的 PHP 扩展</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210505191019.png\"></p>\n<h2 id=\"数据库配置\"><a href=\"#数据库配置\" class=\"headerlink\" title=\"数据库配置\"></a>数据库配置</h2><p>创建数据库，保持默认值，直接点 <code>插入数据库</code></p>\n<blockquote>\n<p>直接默认的就可以，端口可以不填，密码保持为空即可；</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210506110137.png\"></p>\n<h2 id=\"生成配置文件\"><a href=\"#生成配置文件\" class=\"headerlink\" title=\"生成配置文件\"></a>生成配置文件</h2><blockquote>\n<ol>\n<li> web 路径：保留默认值为空；</li>\n<li>数据库名称：保留默认值为 <code>ampache</code>；</li>\n<li>MySQL主机名：保留默认值为 <code>localhost</code> </li>\n<li>MySQL端口：保留默认值为空；</li>\n<li>MySQL用户名：默认值为 <code>root</code> ，但因为 <code>root</code> 没有密码，所以改为 <code>admin</code> ；</li>\n<li> MySQL 密码必须要填对应 <code>admin</code> 的密码，<code>admin</code> 的密码可以在容器的日志中找到；</li>\n<li> Installation Type 用默认的；</li>\n<li>  Allow Transcoding 选择了 ffmpeg；</li>\n<li> 播放器全部勾选了；</li>\n</ol>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210506110707.png\"></p>\n<h2 id=\"配置管理员\"><a href=\"#配置管理员\" class=\"headerlink\" title=\"配置管理员\"></a>配置管理员</h2><p>创建管理员账号</p>\n<blockquote>\n<p>前面的 <code>admin</code> 是数据库管理员，这里的 <code>admin</code> 是网页的管理员，不要混淆了；</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210506111347.png\"></p>\n<p>完成后就需要登录了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210505203935.png\"></p>\n<p>主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210505204201.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><h2 id=\"创建目录\"><a href=\"#创建目录\" class=\"headerlink\" title=\"创建目录\"></a>创建目录</h2><p>在 <code>ampache</code> 中新建了一个 <code>MP3</code> 目录，上传了几个 <code>mp3</code> 文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210505214237.png\"></p>\n<p>点左侧管理员图标 –&gt; 添加目录</p>\n<blockquote>\n<ol>\n<li>目录类型选 <code>local</code> 之后，最下面会需要填写 <code>路径</code></li>\n<li>前面卷设置的时候已经将 <code>/docker/ampache</code> 映射为了 <code>/media</code>，所以路径写 <code>/media/MP3</code></li>\n</ol>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210505213854.png\"></p>\n<p>点 <code>添加目录</code> 之后，左上角会显示扫描进程</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210506111928.png\"></p>\n<h2 id=\"扫描目录\"><a href=\"#扫描目录\" class=\"headerlink\" title=\"扫描目录\"></a>扫描目录</h2><p>点左侧管理员图标 –&gt; 显示目录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210505214625.png\"></p>\n<p>点 <code>走你</code> 开始扫描</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210505214759.png\"></p>\n<p>扫描介绍后返回主页</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210505214901.png\"></p>\n<h2 id=\"音乐播放\"><a href=\"#音乐播放\" class=\"headerlink\" title=\"音乐播放\"></a>音乐播放</h2><p>接下来就可以直接播放了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210506112357.png\"></p>\n<p><code>Ampache</code> 除了网页上播放，还可以下载 <code>m3u</code> 播放列表，而且还有 android 客户端 <code>Power Ampache</code>，不过客户端看起来似乎几年都没更新了。</p>\n<h3 id=\"subsonic-客户端\"><a href=\"#subsonic-客户端\" class=\"headerlink\" title=\"subsonic 客户端\"></a>subsonic 客户端</h3><p>还记得我们前面生成配置文件的时候，播放器勾选了 <code>subsonic</code> 吗？这意味着您可以使用支持 <code>subsonic</code> 的客户端来播放 <code>Ampache</code> 里的音乐了。</p>\n<p><code>Subsonic Apps</code> 列表：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zdWJzb25pYy5vcmcvcGFnZXMvYXBwcy5qc3A=\">http://www.subsonic.org/pages/apps.jsp<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>总归应该能找到适合你的 app ！</p>\n<h3 id=\"iTunes-Server\"><a href=\"#iTunes-Server\" class=\"headerlink\" title=\"iTunes Server\"></a>iTunes Server</h3><p>因为还勾选了 DAAP 协议，所以 Ampache 又相当于一台 <code> iTunes Server</code>，理论上可以配合  <code>iTunes</code> 使用，不过我没有试过；</p>\n<h3 id=\"UPnP\"><a href=\"#UPnP\" class=\"headerlink\" title=\"UPnP\"></a>UPnP</h3><p>这个在『 <a href=\"https://laosu.ml/2021/05/14/UPnP%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8Gerbera/\">UPnP媒体服务器Gerbera</a> 』中已有介绍。</p>\n<h3 id=\"WebDAV\"><a href=\"#WebDAV\" class=\"headerlink\" title=\"WebDAV\"></a>WebDAV</h3><p>WebDAV 的地址是：<code>http://群晖IP:3780/webdav/index.php</code>，以 <code>ExpanDrive</code> 为例</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210506144106.png\"></p>\n<blockquote>\n<p>如果担心误删文件，可以勾选 <code>Read Only</code>；</p>\n</blockquote>\n<p>连接成功后就可以在 <code>访达</code> 里看到目录和文件了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210506142213.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Ampache - Music Streaming Server<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hbXBhY2hlLm9yZy8=\">https://ampache.org/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>ampache/ampache: A web based audio/video streaming application and file manager allowing you to access your music &amp; videos from anywhere, using almost any internet enabled device.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtcGFjaGUvYW1wYWNoZQ==\">https://github.com/ampache/ampache<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>ampache/ampache-docker: Ampache docker package<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtcGFjaGUvYW1wYWNoZS1kb2NrZXI=\">https://github.com/ampache/ampache-docker<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Ampache 私人云音乐搭建和使用 - BFDZ<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmZkei5pbmsvMjAxOS8wMS8xMy8xMjEv\">https://www.bfdz.ink/2019/01/13/121/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","多媒体","音乐"]},{"title":"【突发】vercel不能访问的解决办法","url":"/2021/05/14/%E3%80%90%E7%AA%81%E5%8F%91%E3%80%91vercel%E4%B8%8D%E8%83%BD%E8%AE%BF%E9%97%AE%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/","content":"<p>晚上（2021.05.14）例行更新的时候突然发现老苏的博客打不开，搜了一下 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudjJleC5jb20vdC83NzY5ODk=\">V2EX<i class=\"fa fa-external-link-alt\"></i></span> 也有人提到这个问题</p>\n<p>访问 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudmVyY2VsLXN0YXR1cy5jb20v\">https://www.vercel-status.com/<i class=\"fa fa-external-link-alt\"></i></span> 检查后发现确实在国内访问出现了问题</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210514220305.png\"></p>\n<p>翻译成中文</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210514221535.png\"></p>\n<p>按要求修改了 A 记录和 CNAME</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"center\">修改前</th>\n<th align=\"center\">修改后</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">A 记录</td>\n<td align=\"center\">76.76.21.21</td>\n<td align=\"center\">76.223.126.88</td>\n</tr>\n<tr>\n<td align=\"center\">CNAME</td>\n<td align=\"center\">cname.vercel-dns.com</td>\n<td align=\"center\">cname-china.vercel-dns.com</td>\n</tr>\n</tbody></table>\n<p>修改完成后已经可以访问了，相关方法也在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudjJleC5jb20vdC83NzY5ODk=\">V2EX<i class=\"fa fa-external-link-alt\"></i></span> 做了回复。</p>\n<p>到 <span class=\"exturl\" data-url=\"aHR0cDovL3Rvb2wuY2hpbmF6LmNvbS9zcGVlZHRlc3Qv\">http://tool.chinaz.com/speedtest/<i class=\"fa fa-external-link-alt\"></i></span> 测试了一下速度</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210514222804.png\"></p>\n<p>看起来效果并不是太好，只能等 vercel 官方的进一步更新了。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Vercel Status<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudmVyY2VsLXN0YXR1cy5jb20v\">https://www.vercel-status.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["hexo","博客","blog"]},{"title":"UPnP媒体服务器Gerbera","url":"/2021/05/14/UPnP%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8Gerbera/","content":"<p><strong>什么是 Gerbera ？</strong></p>\n<blockquote>\n<p>Gerbera 是一款功能丰富且功能强大的 UPnP 媒体服务器，允许用户通过家庭网络传输数字媒体（视频，图像，音频等），并支持不同类型的 UPnP 兼容设备，包括智能电视，机顶盒，Playstation ，Android 和 iOS 手机以及平板电脑等。</p>\n</blockquote>\n<p><strong>什么是 DLNA ？</strong></p>\n<blockquote>\n<p>DLNA（DIGITAL LIVING NETWORK ALLIANCE，数字生活网络联盟) 其前身是 DHWG （Digital Home Working Group，数字家庭工作组），成立于2003年6月24 日，是由索尼、英特尔、微软等发起成立的一个非营利性的、合作性质的商业组织。DLNA 旨在解决个人 PC ，消费电器，移动设备在内的无线网络和有线网络的互联互通，使得数字媒体和内容服务的无限制的共享和增长成为可能。 DLNA 并不是创造技术，而是形成一种解决的方案，一种大家可以遵守的规范。所以，其选择的各种技术和协议都是当前所应用很广泛的技术和协议。而 UPnP 就是其中一个主要的协议。</p>\n</blockquote>\n<p><strong>什么是 UPnP ？</strong></p>\n<blockquote>\n<p>通用即插即用（英语：Universal Plug and Play，简称 UPnP ）是由“通用即插即用论坛”  （UPnP™ Forum）推广的一套网络协议。 该协议的目标是使家庭网络（数据共享、通信和娱乐）和公司网络中的各种设备能够相互无缝连接，并简化相关网络的实现。</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>gerbera</code> ，选择第一个 <code>gerbera/gerbera</code>，版本选择 <code>latest</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/03/11/1615467477614-1615467477647.png\" alt=\"title\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，将其命名为 <code>gerbera</code> ，当然也可以指向一个多媒体文件存放的目录。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/gerbera</code></td>\n<td align=\"center\"><code>/content</code></td>\n<td align=\"center\">多媒体文件存放目录</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>建议将 <code>/content</code> 设置为只读</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/03/11/1615468409502-1615468409526.png\" alt=\"title\"></p>\n<h2 id=\"网络-amp-端口\"><a href=\"#网络-amp-端口\" class=\"headerlink\" title=\"网络 &amp; 端口\"></a>网络 &amp; 端口</h2><p>默认情况下，端口 49494/tcp（HTTP）和 1900/udp（SSDP组播）是公开的</p>\n<p>UPnP 依赖于使客户端和服务器能够通过 IP 组播进行通信。默认的 <code>docker bridge</code> 网络设置不支持多播。实现此目的的最简单方法是 <code>使用与Docker Host相同的网络</code> 。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/03/11/1615468666025-1615468666028.png\" alt=\"title\"> </p>\n<p>不需要再设置端口</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/03/11/1615468696916-1615468696918.png\" alt=\"title\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:49494</code>，就能看到主界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/03/11/1615469002182-1615469002184.png\" alt=\"title\"></p>\n<p>点 <code>Database</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/03/12/1615517662093-1615517662146.png\" alt=\"title\"></p>\n<p><code>File System</code> 则是另一种展示方式</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/03/13/1615630678663-1615630678665.png\" alt=\"title\"></p>\n<p><code>Clients</code> 可以看到客户端连接的情况</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/03/12/1615517883507-1615517883520.png\" alt=\"title\"></p>\n<p><code>Config</code> 设置的显示分为3种模式，分别是 <code>Minimal</code>、<code>Standard</code>、<code>Expert</code></p>\n<ul>\n<li>Minimal</li>\n</ul>\n<p>一些最基础的设置项</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/03/12/1615518802720-1615518802729.png\" alt=\"title\"></p>\n<ul>\n<li>Standard</li>\n</ul>\n<p>相比 <code>Minimal</code> 模式，<code>Standard</code> 模式多了 <code>Storage</code>、<code>UI</code> 和 <code>Scripting</code> 设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/03/12/1615518842908-1615518842917.png\" alt=\"title\"></p>\n<ul>\n<li>Expert</li>\n</ul>\n<p>相比 <code>Standard</code> 模式，<code>Expert</code> 模式又多了 <code>Transcoding</code> 和 <code>Client Detection</code> 设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/03/12/1615518967150-1615518967159.png\" alt=\"title\"></p>\n<h2 id=\"可能会遇到的异常\"><a href=\"#可能会遇到的异常\" class=\"headerlink\" title=\"可能会遇到的异常\"></a>可能会遇到的异常</h2><p>很奇怪在某些情况下，在 <code>Google Chrome</code> 浏览器中会一直显示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/03/11/1615469502689-1615469502692.png\" alt=\"title\"></p>\n<p>或者 </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/03/13/1615611184800-1615611184832.png\" alt=\"title\"></p>\n<p>但是同一台机器上换成 <code>Microsoft Edge</code> 就完全正常了，或者换成另一台机器上 <code>Google Chrome</code> 浏览器也是正常的。</p>\n<p>好在 Web 并不是重点，我没有改变任何设置，唯一可能用得上的应该是转码，将媒体转换成设备支持的格式，但我并没尝试，有兴趣的可以自己试试。</p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><h2 id=\"Windows-平台\"><a href=\"#Windows-平台\" class=\"headerlink\" title=\"Windows 平台\"></a>Windows 平台</h2><p>除了系统的资源管理器外，还可以在 <code>Microsoft Store</code> 中搜索 <code>dlna browser</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/03/13/1615631737964-1615631737968.png\" alt=\"title\"></p>\n<p>这是个免费的应用，下图中上面那个就是刚安装的 <code>Gerbera</code> 服务器，下面那个 <code>OTCloud</code> 熟悉的朋友应该一眼就知道这货是 <code>玩客云</code>。</p>\n<p>支持和 <code>Web</code> 上一样逐级展开</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/03/13/1615632164512-1615632164514.png\" alt=\"title\"></p>\n<p>内置播放器，支持直接播放</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/03/13/1615632363871-1615632363875.png\" alt=\"title\"></p>\n<h2 id=\"Android-平台\"><a href=\"#Android-平台\" class=\"headerlink\" title=\"Android 平台\"></a>Android 平台</h2><p>Android 平台上支持 UPnP/DLNA 的 APP 还是很多的，简单推荐几个，至于哪个适合您，只能根据您的需求进行验证了。</p>\n<h3 id=\"BubbleUPnP\"><a href=\"#BubbleUPnP\" class=\"headerlink\" title=\"BubbleUPnP\"></a>BubbleUPnP</h3><p>BubbleUPnP 是用的比较多的一款 Android APP，即是客户端也是 UPnP 流媒体服务器，当它启动后，你可以在 <code>DLNA Browser</code> 发现多了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/03/14/1615702023385-1615702023387.png\" alt=\"title\"></p>\n<p>在 BubbleUPnP 中 找到 <code>Library</code>，可以扫描到局域网中的 UPnP 服务器</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/03/14/1615701560547-1615701560582.png\" alt=\"title\"></p>\n<h3 id=\"nPlayer\"><a href=\"#nPlayer\" class=\"headerlink\" title=\"nPlayer\"></a>nPlayer</h3><p>在网络中选择 <code>UPnP/DLNA</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/03/14/1615702894714-1615702894718.png\" alt=\"title\"></p>\n<h3 id=\"威动影音\"><a href=\"#威动影音\" class=\"headerlink\" title=\"威动影音\"></a>威动影音</h3><p>国人开发的，支持内置播放器</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/03/14/1615702590818-1615702590820.png\" alt=\"title\"></p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>其实支持 <code>UPnP/DLNA</code> 的服务端还是很多的，包括我们常用的 Plex、Emby、Jellyfin ，我看了下我用的 Jellyfin ，里面有 DLNA 的设置界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210317103111.png\"></p>\n<p>所以个人觉得没必要单独装一个 UPnP 服务。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>gerbera/gerbera: UPnP Media Server for 2021<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dlcmJlcmEvZ2VyYmVyYQ==\">https://github.com/gerbera/gerbera<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Gerbera - A free media server. Stream your media to devices on your home network.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9nZXJiZXJhLmlvLw==\">https://gerbera.io/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","多媒体"]},{"title":"支持在线可视化编辑的Hexon","url":"/2021/05/10/%E6%94%AF%E6%8C%81%E5%9C%A8%E7%BA%BF%E5%8F%AF%E8%A7%86%E5%8C%96%E7%BC%96%E8%BE%91%E7%9A%84Hexon/","content":"<p><strong>什么是 Hexon ？</strong></p>\n<blockquote>\n<p><code>Hexon</code> 是一款在线 <code>hexo</code> 博客编辑器，在 0.6 版本之前叫 <code>winwin-hexo-editor</code>。</p>\n</blockquote>\n<p>因为对 <code>hexo-admin</code> 的界面不满意，老苏又开始了新的搜索，最终找了 <code>Hexon</code> ，先上一张图感受下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210422093136.png\"></p>\n<blockquote>\n<p>官网地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93aW53aW5fMjAxMS5naXRlZS5pby93aW53aW4taGV4by1lZGl0b3Iv\">https://winwin_2011.gitee.io/winwin-hexo-editor/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<p>以老苏有限的审美能力，觉得比 <code>hexo-admin</code> 好看多了，功能排布也更合理，尤其难得的是 <code>winwin-hexo-editor</code> 还有配套的移动客户端。</p>\n<blockquote>\n<p>切记！！！ <code>winwin-hexo-editor</code> 只是 <code>hexo</code> 博客的编辑器，所以在部署前需确保 <code>hexo</code> 博客可用。如果您还不知道怎么部署，请参考老苏的上一篇文章『 <a href=\"https://laosu.ml/2021/05/07/%E5%9C%A8%E7%BE%A4%E6%99%96%E4%B8%8A%E5%A4%8D%E5%88%BB%E5%85%AC%E7%BD%91%E7%9A%84Hexo/\">在群晖上复刻公网的Hexo</a> 』</p>\n</blockquote>\n<h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><p>没有找到 <code>Hexon</code> 或者 <code>winwin-hexo-editor</code> 的镜像，所以这次我们准备自己来构建。</p>\n<p>如果你觉得自己构建麻烦，可以直接跳到方式二，下载老苏已经构建好的镜像。</p>\n<h2 id=\"方式一\"><a href=\"#方式一\" class=\"headerlink\" title=\"方式一\"></a>方式一</h2><blockquote>\n<p>注意：这次构建的是 <code>winwin-hexo-editor</code>，而不是 <code>Hexon</code></p>\n</blockquote>\n<h3 id=\"编写-Dockerfile\"><a href=\"#编写-Dockerfile\" class=\"headerlink\" title=\"编写 Dockerfile\"></a>编写 Dockerfile</h3><p>在群晖的 <code>docker</code> 目录中新建 <code>hexo-editor</code>  目录，然后 <code>SSH</code> 客户端登录到群晖 ，执行下面的命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入 hexo-editor 目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> hexo-editor/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建空的 Dockerfile 文件</span></span><br><span class=\"line\">touch Dockerfile</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 编辑 Dockerfile 文件</span></span><br><span class=\"line\">vi Dockerfile</span><br></pre></td></tr></table></figure>\n\n<p>在 <code>Dockerfile</code> 中写入下面的内容并保存</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> node:<span class=\"number\">13</span>-slim</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">MAINTAINER</span> laosu &lt;https://laosu.ml&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将服务器端口设为环境变量</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> HEXO_EDIT_PORT=<span class=\"number\">5777</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装依赖</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> \\</span></span><br><span class=\"line\"><span class=\"bash\">apt-get update &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"bash\">apt-get install git -y &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"bash\">npm install -g hexo-cli</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置workdir,指向 hexo 的目录</span></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /myblog</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 公开服务器端口</span></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> $&#123;HEXO_EDIT_PORT&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 构建基础服务器和配置（如果不存在），然后启动</span></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"bash\"> \\</span></span><br><span class=\"line\"><span class=\"bash\">  <span class=\"keyword\">if</span> [ <span class=\"string\">&quot;<span class=\"subst\">$(ls -A /myblog/hexo-editor)</span>&quot;</span> ]; <span class=\"keyword\">then</span> \\</span></span><br><span class=\"line\"><span class=\"bash\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;***** hexo-editor程序目录存在并且有内容, 跳过 *****&quot;</span> &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"bash\">    <span class=\"built_in\">cd</span> hexo-editor/ ; \\</span></span><br><span class=\"line\"><span class=\"bash\">  <span class=\"keyword\">else</span> \\</span></span><br><span class=\"line\"><span class=\"bash\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;***** hexo-editor程序目录不存在或为空, 下载安装hexo editor *****&quot;</span> &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"bash\">\tgit <span class=\"built_in\">clone</span> https://github.com/YuJianghao/winwin-hexo-editor hexo-editor &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"bash\">    npm install inquirer &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"bash\">    <span class=\"built_in\">cd</span> hexo-editor/ &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"bash\">    <span class=\"comment\"># sed &quot;s/5777/$&#123;HEXO_EDIT_PORT&#125;/g&quot; config.default.js &amp;&amp; \\</span></span></span><br><span class=\"line\"><span class=\"bash\">\t<span class=\"built_in\">echo</span> -e <span class=\"string\">&quot;\\n&quot;</span> | node install.js; \\</span></span><br><span class=\"line\"><span class=\"bash\">  <span class=\"keyword\">fi</span>; \\</span></span><br><span class=\"line\"><span class=\"bash\">  npm run start; \\</span></span><br></pre></td></tr></table></figure>\n\n<p>当然更简单的办法可以用你喜欢的编辑器保存为 <code>Dockerfile</code> 文件，再把  <code>Dockerfile</code> 文件上传到 <code>hexo-editor</code>  目录。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210422131648.png\"></p>\n<h3 id=\"构建镜像\"><a href=\"#构建镜像\" class=\"headerlink\" title=\"构建镜像\"></a>构建镜像</h3><p>在 <code>hexo-editor</code>  目录执行生成镜像的操作</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 注意后面的小点</span></span><br><span class=\"line\">docker build -t wbsu2003/docker-hexo-editor:v1 .</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210421164431.png\"></p>\n<p>完成后，在镜像中会找到</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210421164730.png\"></p>\n<h3 id=\"创建容器\"><a href=\"#创建容器\" class=\"headerlink\" title=\"创建容器\"></a>创建容器</h3><blockquote>\n<p>其中 <code>/volume1/docker/hexo/blog</code> 是已经安装好的 <code>hexo</code> 的根目录，不了解的看看上一篇『 <a href=\"https://laosu.ml/2021/05/07/%E5%9C%A8%E7%BE%A4%E6%99%96%E4%B8%8A%E5%A4%8D%E5%88%BB%E5%85%AC%E7%BD%91%E7%9A%84Hexo/\">在群晖上复刻公网的Hexo</a> 』</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建容器</span></span><br><span class=\"line\">docker create --name=wbsu2003-docker-hexo-editor \\</span><br><span class=\"line\">-e HEXO_EDIT_PORT=5888 \\</span><br><span class=\"line\">-v /volume1/docker/hexo/blog:/myblog \\</span><br><span class=\"line\">-p 5888:5777 \\</span><br><span class=\"line\">wbsu2003/docker-hexo-editor:v1</span><br></pre></td></tr></table></figure>\n\n<p>创建完成后，可以在容器中看到</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210422132557.png\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 启动容器</span></span><br><span class=\"line\">docker start wbsu2003-docker-hexo-editor</span><br></pre></td></tr></table></figure>\n\n<p>因为有下载代码的动作，所以会耗费一些时间来完成，可能跟网络情况相关</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210421170252.png\"></p>\n<p>要等日志中出现上图的提示才能开始访问。</p>\n<blockquote>\n<p>如果遇到这样的错误，需要删除 <code>myblog/hexo-editor</code> 目录，也就是 <code>/volume1/docker/hexo/blog/hexo-editor</code> 目录，再重新执行 <code>docker start</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210414111246.png\"></p>\n<h2 id=\"方式二\"><a href=\"#方式二\" class=\"headerlink\" title=\"方式二\"></a>方式二</h2><p>在注册表中搜索 <code>wbsu2003</code> ，选择第二个 <code>wbsu2003/docker-hexo-editor</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/2021/0520210509234438.png\"></p>\n<h3 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h3><table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/hexo/blog</code></td>\n<td align=\"center\"><code>/myblog</code></td>\n<td align=\"center\">指向 hexo 安装的目录</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210510102435.png\"></p>\n<h3 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h3><table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>5888</code></td>\n<td align=\"center\"><code>5777</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210510102518.png\"></p>\n<h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>HEXO_EDIT_PORT</code></td>\n<td align=\"center\"><code>5888</code></td>\n</tr>\n</tbody></table>\n<p>默认值为 <code>5777</code>，请根据前面的 <code>本地端口</code> 填写；</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/05/20210510102630.png\"></p>\n<p>注意事项和错误处理可以参考方式一启动容器之后的部分，这里就不重复了。</p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><h2 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h2><p>在浏览器中输入 <code>http://群晖IP:5888</code> 就能看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210414153849.png\"></p>\n<p>第一次运行还需要设置，比如用户和密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210414154212.png\"></p>\n<p><code>hexo</code> 的路径，也就是 <code>_config.yml</code> 文件所在路径，也就是上一级目录，所以这里应该填入 <code>../</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210414154409.png\"></p>\n<p>设置 <code>JWT_SECRET</code> 和 <code>APIKEY_SECRET</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210414154615.png\"></p>\n<p>设置成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210414154711.png\"></p>\n<h2 id=\"登录\"><a href=\"#登录\" class=\"headerlink\" title=\"登录\"></a>登录</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210421171241.png\"></p>\n<p>登录成功后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210421171357.png\"></p>\n<p>直接点击文章开始预览</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210421171454.png\"></p>\n<p>选择文章–&gt; <code>编辑</code> 或者 <code>往右拖</code> 进入编辑状态</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210421175957.png\"></p>\n<h1 id=\"移动端\"><a href=\"#移动端\" class=\"headerlink\" title=\"移动端\"></a>移动端</h1><p>因为<code>Android</code> 端在<code>Google Play</code> 下载不了，可以在这里下载： <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dldGhleG9uL3dpbndpbi1oZXhvLWVkaXRvci1tb2JpbGUvcmVsZWFzZXM=\">https://github.com/gethexon/winwin-hexo-editor-mobile/releases<i class=\"fa fa-external-link-alt\"></i></span> </p>\n<p>可以手动输入方式登录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210427160149.png\"></p>\n<p>也可以扫描二维码方式登录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210427160232.png\"></p>\n<blockquote>\n<p>网页端 <code>设备授权</code> –&gt; <code>+</code> 号，会有用于移动设备的二维码</p>\n</blockquote>\n<p>扫码登录后，Web 页面上会看到授权的设备</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210422113654.png\"></p>\n<p>登录成功后还是空空的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210427160543.png\"></p>\n<p>左侧的菜单</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210427160626.png\"></p>\n<p>点右下角的 “+” 号新建文档</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210427160716.png\"></p>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><p>如果不需要在 <code>winwin-hexo-editor</code> 中 <code>部署</code>、<code>同步到GIT</code>、<code>从GIT同步</code>，这个章节可以略过。</p>\n<blockquote>\n<p>如果你已经在 <code>Hexo-admin</code> 中配置了 <code>Deploy</code>，建议这里就不要配置了，免得相互干扰，反正老苏只用了编辑功能。</p>\n</blockquote>\n<ol>\n<li>进入容器</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker <span class=\"built_in\">exec</span> --user root -it wbsu2003-docker-hexo-editor /bin/bash</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>常用命令</li>\n</ol>\n<blockquote>\n<p>假设你将hexo博客源码部署在了<code>myblog</code>目录，相应的，hexo配置文件应该在<code>myblog/_config.yml</code>。</p>\n</blockquote>\n<p>以下命令需要在 <code>myblog/</code> 目录里执行</p>\n<ul>\n<li>  <code>hexo generate</code>：生成hexo博客</li>\n<li>  <code>hexo deploy</code>: 生成hexo博客并部署</li>\n<li>  <code>git add . -all &amp;&amp; git commit -m &#39;server updates&#39;</code>: 将博客更改添加进 git</li>\n<li>  <code>git pull</code>: 从远端拉取博客内容</li>\n<li>  <code>git push</code>: 将本地博客内容推送到远端</li>\n</ul>\n<ol start=\"3\">\n<li> 更新</li>\n</ol>\n<p>以下命令需要在 <code>myblog/hexo-editor/</code> 目录里执行</p>\n<ul>\n<li><code>node update.js</code> 更新后你需要手动重启服务</li>\n</ul>\n<ol start=\"4\">\n<li>其他</li>\n</ol>\n<p>以下命令需要在 <code>myblog/</code> 目录里执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 停止</span></span><br><span class=\"line\">npm run stop</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启</span></span><br><span class=\"line\">npm run restart</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 开发</span></span><br><span class=\"line\">npm run dev</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>gethexon/hexon: Let’s hexo online.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dldGhleG9uL2hleG9u\">https://github.com/gethexon/hexon<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>YuJianghao/winwin-hexo-editor: An online hexo blog editor.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1l1SmlhbmdoYW8vd2lud2luLWhleG8tZWRpdG9yLw==\">https://github.com/YuJianghao/winwin-hexo-editor/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>winwin-hexo-editor: 在线hexo博客编辑器<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vd2lud2luXzIwMTEvd2lud2luLWhleG8tZWRpdG9y\">https://gitee.com/winwin_2011/winwin-hexo-editor<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>gethexon/winwin-hexo-editor-mobile: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1l1SmlhbmdoYW8vd2lud2luLWhleG8tZWRpdG9y\">https://github.com/YuJianghao/winwin-hexo-editor<i class=\"fa fa-external-link-alt\"></i></span><br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dldGhleG9uL3dpbndpbi1oZXhvLWVkaXRvci1tb2JpbGU=\">https://github.com/gethexon/winwin-hexo-editor-mobile<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>快速上手 | winwin-hexo-editor<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly95dWppYW5naGFvLmdpdGh1Yi5pby93aW53aW4taGV4by1lZGl0b3IvZ3VpZGUuaHRtbA==\">https://yujianghao.github.io/winwin-hexo-editor/guide.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","Blog","Hexo"]},{"title":"在群晖上复刻公网的Hexo","url":"/2021/05/07/%E5%9C%A8%E7%BE%A4%E6%99%96%E4%B8%8A%E5%A4%8D%E5%88%BB%E5%85%AC%E7%BD%91%E7%9A%84Hexo/","content":"<p>之前为了寻找一个稳定、可靠的服务器，已经折腾过很多次 <code>Hexo</code></p>\n<blockquote>\n<p><a href=\"https://laosu.ml/2020/04/29/%E5%9C%A8GitHub%E4%B8%8A%E6%90%AD%E5%BB%BABlog\">在GitHub上搭建Blog</a><br><a href=\"https://laosu.ml/2020/05/06/%E5%9C%A8Netlify%E4%B8%8A%E9%83%A8%E7%BD%B2Hexo\">在Netlify上部署Hexo</a><br><a href=\"https://laosu.ml/2020/05/12/%E5%9C%A8Coding%E4%B8%8A%E9%83%A8%E7%BD%B2Hexo%E5%B9%B6%E5%AE%9E%E7%8E%B0%E5%92%8CGithub%E5%8F%8C%E7%BA%BF%E8%AE%BF%E9%97%AE\">在Coding上部署Hexo并实现和Github双线访问</a><br><a href=\"https://laosu.ml/2021/01/22/%E5%9C%A8Gitee%E4%B8%8A%E6%90%AD%E5%BB%BAHexo%20Blog\">在Gitee上搭建Hexo Blog</a><br><a href=\"https://laosu.ml/2021/01/29/Vercel%E4%B8%8A%E9%83%A8%E7%BD%B2Hexo\">Vercel上部署Hexo</a></p>\n</blockquote>\n<p>而这次老苏是想在群晖上实现统一的编辑、预览、发布，这样做的好处是显而易见的，不再拘泥于某台机器才能发布，遇到节假日可以愉快的出去玩耍而不用担心放读者鸽子，经过仔细对比最终选择了内置 <code>Hexo-admin</code> 的镜像。</p>\n<blockquote>\n<p>当然还有别的玩法，通过 Github Action 自动发布到 Github Page 仓库。也就是说每当你写完博客直接提交到源仓库即可自动触发构建。这个留待以后再研究。</p>\n</blockquote>\n<p><strong>什么是 hexo-admin ?</strong></p>\n<blockquote>\n<p>hexo-admin 是一个 Hexo 博客引擎的管理用户界面插件，能实现在线管理 hexo 博客。</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>hexo</code> ，选择第三个 <code>spurin/hexo</code>，只发布过一个版本，所以双击直接下载了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210420110342.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>hexo</code>，然后在 <code>hexo</code> 文件夹中再创建 一个新的子文件夹 <code>blog</code>。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/hexo/blog</code></td>\n<td align=\"center\"><code>/app</code></td>\n<td align=\"center\">存放设置</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210420111438.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不冲突就行</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">4000</td>\n<td align=\"center\">4000</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210420111503.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">GIT_USER</td>\n<td align=\"center\">修改为您自己的 Github 用户</td>\n</tr>\n<tr>\n<td align=\"center\">GIT_EMAIL</td>\n<td align=\"center\">修改为您自己的 Github 邮箱</td>\n</tr>\n<tr>\n<td align=\"center\">HEXO_SERVER_PORT</td>\n<td align=\"center\">如果前面没改端口，这里就不用改</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>用自己的 <code>github</code> 账号是为了后续向 <code>github</code> 发布，会根据你提交的用户和邮箱生成 <code>SSH key</code>，如果只是在群晖上编辑和预览，可以随意。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210420111748.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:4000</code>，开始并不能看到主界面，在日志中会显示在通过 <code>git</code> 拉取代码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210420112730.png\"></p>\n<p><code>github</code> 在国内的访问并不稳定，所以存在失败的可能性</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210420112958.png\"></p>\n<p>如果出现这种情况，请删空 <code>blog</code> 下的文件和目录，重新启动容器即可，注意观察日志</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210420113534.png\"></p>\n<p>正常完成后的目录是这样的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210420113852.png\"></p>\n<p>当你看到日志中出现 <code>Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</code> 时</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210420114029.png\"></p>\n<p>就可以在浏览器中输入 <code>http://群晖IP:4000</code> 看到主界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210420114201.png\"></p>\n<p>而在浏览器中输入 <code>http://群晖IP:4000/admin</code> 即可看到 <code>hexo-admin</code> 的后台管理界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210420114409.png\"></p>\n<h1 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h1><h2 id=\"安全设置\"><a href=\"#安全设置\" class=\"headerlink\" title=\"安全设置\"></a>安全设置</h2><p>如果你是要把 <code>hexo-admin</code> 映射到公网使用，一定要设置密码，否则就变成谁都可以编辑了。这需要在 <code>_config.yml</code> 文件中添加以下参数</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">admin:</span> </span><br><span class=\"line\">  <span class=\"attr\">username:</span> <span class=\"string\">用户名</span> </span><br><span class=\"line\">  <span class=\"attr\">password_hash:</span> <span class=\"string\">md5密码</span> </span><br><span class=\"line\">  <span class=\"attr\">secret:</span> <span class=\"string\">用于加密cookie的密码</span></span><br></pre></td></tr></table></figure>\n\n<p>打开 <code>hexo-admin</code> 界面，点击导航的 <code>settings</code> 选项，点击 <code>Setup authentification here</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210420131430.png\"></p>\n<p>依次输入 <code>Username</code>、<code>Password</code> 和 <code>Secret</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210420131537.png\"></p>\n<p>往下拉，找到生成的代码，复制到 <code>_config.yml</code> 文件中，然后重启 <code>hexo</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210420131952.png\"></p>\n<p>再打开 <code>hexo-admin</code> 就需要登录了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210420133413.png\"></p>\n<h2 id=\"升级-hexo\"><a href=\"#升级-hexo\" class=\"headerlink\" title=\"升级 hexo\"></a>升级 hexo</h2><blockquote>\n<p>升级不是必须的，只是为了保持和我的台式机上的版本一致，方便直接导入配置文件</p>\n</blockquote>\n<h3 id=\"升级-npm\"><a href=\"#升级-npm\" class=\"headerlink\" title=\"升级 npm\"></a>升级 npm</h3><blockquote>\n<p>假设容器名为 <code>spurin-hexo1</code></p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入容器</span></span><br><span class=\"line\">docker <span class=\"built_in\">exec</span> --user root -it spurin-hexo1 /bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 检查 npm 版本</span></span><br><span class=\"line\">npm version</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210420140452.png\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 升级 npm</span></span><br><span class=\"line\">npm install -g npm</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 再次检查 npm 版本</span></span><br><span class=\"line\">npm version</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210420140651.png\"></p>\n<p>可以看到 <code>npm</code> 已经从 <code>6.14.4</code> 升级到了 <code>7.10.0</code></p>\n<h3 id=\"升级-hexo-cli\"><a href=\"#升级-hexo-cli\" class=\"headerlink\" title=\"升级 hexo-cli\"></a>升级 hexo-cli</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看当前版本，判断是否需要升级</span></span><br><span class=\"line\">hexo version</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210420141126.png\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 全局升级hexo-cli  </span></span><br><span class=\"line\">npm i hexo-cli -g</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 再次查看版本，看hexo-cli是否升级成功  </span></span><br><span class=\"line\">hexo version  </span><br><span class=\"line\">```  </span><br><span class=\"line\"></span><br><span class=\"line\">![](https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210420141424.png)</span><br><span class=\"line\"></span><br><span class=\"line\">可以看到 `hexo-cli` 已经从 `3.1.0` 升级到了 `4.2.0`</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### 安装 npm-check</span></span><br><span class=\"line\"></span><br><span class=\"line\">```bash   </span><br><span class=\"line\"><span class=\"comment\"># 安装npm-check，若已安装可以跳过  </span></span><br><span class=\"line\">npm install -g npm-check</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 检查系统插件是否需要升级  </span></span><br><span class=\"line\">npm-check  </span><br><span class=\"line\">```  </span><br><span class=\"line\"></span><br><span class=\"line\">![](https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210420142115.png)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### 安装 npm-upgrade</span></span><br><span class=\"line\"></span><br><span class=\"line\">```bash</span><br><span class=\"line\"><span class=\"comment\"># 安装npm-upgrade，若已安装可以跳过  </span></span><br><span class=\"line\">npm install -g npm-upgrade  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 更新 package.json  </span></span><br><span class=\"line\">npm-upgrade</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210420145158.png\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 更新全局插件  </span></span><br><span class=\"line\">npm update -g  </span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210420145620.png\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 更新系统插件  </span></span><br><span class=\"line\">npm update --save  </span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210420145723.png\"></p>\n<h1 id=\"复刻\"><a href=\"#复刻\" class=\"headerlink\" title=\"复刻\"></a>复刻</h1><p>需要根据实际需要安装相应的主题和依赖的插件；</p>\n<h2 id=\"主题\"><a href=\"#主题\" class=\"headerlink\" title=\"主题\"></a>主题</h2><p>默认用的主题是 <code>landscape</code> ，而我公网上用的是 <code>Next</code>，所以需要另外安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装主题  </span></span><br><span class=\"line\">npm install hexo-theme-next</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210420151428.png\"></p>\n<ol>\n<li>  将 <code>_config.yml</code>  中的 <code>theme</code> 改为 <code>next</code></li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210421094659.png\"></p>\n<ol start=\"2\">\n<li>  将 <code>_config.next.yml</code> 放到 <code>_config.yml</code> 同目录</li>\n<li>  将自定义模板拷贝到 <code>source</code> 目录</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210421095009.png\"></p>\n<ol start=\"4\">\n<li> 重启容器后刷新页面，是不是已经跟公网上的一样了</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210421095203.png\"></p>\n<h2 id=\"插件\"><a href=\"#插件\" class=\"headerlink\" title=\"插件\"></a>插件</h2><p>我用的插件应该不算多</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 百度推送插件</span></span><br><span class=\"line\">npm install hexo-baidu-url-submit --save</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># hexo-generator-index2 插件</span></span><br><span class=\"line\">npm install hexo-generator-index2 --save</span><br><span class=\"line\">npm uninstall hexo-generator-index --save</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># symbols_count_time 插件</span></span><br><span class=\"line\">npm install hexo-symbols-count-time --save</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># hexo-blog-encrypt 插件</span></span><br><span class=\"line\">npm install hexo-blog-encrypt --save</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># hexo-deployer-git 插件</span></span><br><span class=\"line\">npm install hexo-deployer-git –save</span><br></pre></td></tr></table></figure>\n\n<p>正常启动后的日志</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210420160806.png\"></p>\n<h2 id=\"导入文档\"><a href=\"#导入文档\" class=\"headerlink\" title=\"导入文档\"></a>导入文档</h2><p>导入 <code>_posts</code> 目录，其他包括一些左侧的菜单栏，按需要导入，比如 <code>about</code>、<code>categories</code> 等</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210421113639.png\"></p>\n<p>刷新页面，前端页面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210421113748.png\"></p>\n<p>管理页面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210421113839.png\"></p>\n<h1 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h1><h2 id=\"验证-ssh-key\"><a href=\"#验证-ssh-key\" class=\"headerlink\" title=\"验证 ssh key\"></a>验证 ssh key</h2><blockquote>\n<p>验证前需在平台已添加 <code>SSH 公钥</code>，如果你是按照我前面相同的卷设置， <code>id_rsa.pub</code> 密钥在 <code>/docker/hexo/blog/.ssh</code> 目录中</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker <span class=\"built_in\">exec</span> --user root -it spurin-hexo1 /bin/bash</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 验证 github </span></span><br><span class=\"line\">ssh -T git@github.com</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 gitee.com 写入 known_hosts</span></span><br><span class=\"line\">ssh-keyscan gitee.com &gt;&gt; ~/.ssh/known_hosts 2&gt;/dev/null</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 验证 gitee</span></span><br><span class=\"line\">ssh -T git@gitee.com</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 e.coding.net 写入 known_hosts</span></span><br><span class=\"line\">ssh-keyscan e.coding.net &gt;&gt; ~/.ssh/known_hosts 2&gt;/dev/null</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 验证 Coding</span></span><br><span class=\"line\">ssh -T git@e.coding.net</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 复制</span></span><br><span class=\"line\">cp -r ~/.ssh /app</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210421132118.png\"></p>\n<h2 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 生成 </span></span><br><span class=\"line\">docker <span class=\"built_in\">exec</span> -it spurin-hexo1 hexo generate</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 发布</span></span><br><span class=\"line\">docker <span class=\"built_in\">exec</span> -it spurin-hexo1 hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>上面的命令需要开启 <code>ssh</code> 客户端，所以更好的办法是利用 <code>hexo-admin</code> 的 <code>Deploy</code> 功能来完成向 <code>github</code> 提交发布的工作，但是在设置前执行会返回错误。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210421135738.png\"></p>\n<ol>\n<li> 在 hexo 的根目录下新建 <code>hexo-pubish.sh</code> 文件</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在 blog 目录下执行</span></span><br><span class=\"line\">touch hexo-pubish.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打开脚本文件</span></span><br><span class=\"line\">vi hexo-pubish.sh</span><br></pre></td></tr></table></figure>\n\n<p>写入下面的内容</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/usr/bin/env sh  </span></span><br><span class=\"line\">hexo clean  </span><br><span class=\"line\">hexo g  </span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li> 修改 <code>_config.yml</code> 文件</li>\n</ol>\n<p>增加下面的内容</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deployCommand:</span> <span class=\"string\">&#x27;./hexo-pubish.sh&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210421135342.png\"></p>\n<ol start=\"3\">\n<li> 修改 <code>hexo-publish.sh</code> 权限</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 添加执行权限</span></span><br><span class=\"line\">chmod +x hexo-pubish.sh</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>重启容器后再执行 <code>Deploy</code></li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210421143200.png\"></p>\n<p>和台式机上 <code>git bash</code> 的输出是一致的。</p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>从流程上来说，<code>写作--&gt;预览--&gt;发布</code> 基本上是一气呵成，非常完美，但是还是有些小遗憾， 那就是 <code>hexo-admin</code> 的界面不太美观。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>spurin/docker-hexo: Docker container for running hexo with hexo admin 🐋<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NwdXJpbi9kb2NrZXItaGV4bw==\">https://github.com/spurin/docker-hexo<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>ssly/hexo-admin: 一个在线管理hexo博客的工具<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NzbHkvaGV4by1hZG1pbg==\">https://github.com/ssly/hexo-admin<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>GitHub+Hexo 搭建个人网站详细教程 - 知乎<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8yNjYyNTI0OQ==\">https://zhuanlan.zhihu.com/p/26625249<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","Blog","Hexo"]},{"title":"Web资源文件管理器KodExplorer","url":"/2021/05/03/Web%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%99%A8KodExplorer/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>在还没有接触 NAS 的时候，一直使用一台旧电脑来完成现在 NAS 承担的功能，比如用 <code>Plex</code> 做媒体服务器，用 <code>TwonkyMedia server</code> 或者 <code>FreeMi UPnP Media Server</code> 做 UPnP 服务器，用 <code>Daemon Sync</code> 做手机照片同步服务器，用 <code>Seafile</code> 做网盘等等，而 <code>KodExplorer</code> 则满足了我基于 Web 方式远程管理 Windows 主机的需求。</p>\n<p><strong>什么是 KodExplorer？</strong></p>\n<blockquote>\n<p>KodExplorer 是一款快捷高效的私有云和在线文档管理系统，为个人网站、企业私有云部署、网络存储、在线文档管理、在线办公等提供安全可控，简便易用、可高度定制的私有云产品。采用 windows 风格界面、操作习惯，无需适应即可快速上手，支持几百种常用文件格式的在线预览，可扩展易定制。</p>\n</blockquote>\n<p><strong>什么是KodBox？</strong></p>\n<blockquote>\n<p>KodBox 是在 KodExplorer 基础上进行了系统重构的全新产品。 为满足系统更强性能、更安全、更多特性的拓展需求，Kodbox 对底层架构、存储方式、权限机制等进行了重构，同时继承并升级了 KodExplorer 优秀前端体验。</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 <code>Docker</code> 方式安装。</p>\n<p>在注册表中搜索 <code>kodexplorer</code> ，选择第二个 <code>baiyuetribe/kodexplorer</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210315172029.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>kod</code>。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/kod/</code></td>\n<td align=\"center\"><code>/code</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210315172607.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">7480</td>\n<td align=\"center\">80</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210315172647.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:7480</code>，就能看到主界面了，第一次需要设置 admin 的密码，显然 <code>KodExplorer</code> 是支持多用户管理的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210315173223.png\"></p>\n<p>设置完成后需要登录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210315173428.png\"></p>\n<p>默认界面很像 Windows 的资源管理器</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210315173548.png\"></p>\n<p>除了文件管理外，还可以上传下载</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210317111035.png\"></p>\n<p>还可以通过安装插件扩展各种文件打开方式，从而实现在线预览，支持的格式相当的多，比如视频</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210317111254.png\"></p>\n<p>播放效果相当流畅</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210317111454.png\"></p>\n<p>当你返回桌面后，会发现很像 Web 版的 windows 系统，尤其是在选择了合适的主题之后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210315173658.png\"></p>\n<p><code>KodExplorer</code> 解决了文件在线存储与管理、共享和跨平台访问、在线办公影音娱乐等一系列问题，使得远程可以拥有本地操作一样方便、快捷、安全的体验。</p>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><p>除了 <code>Docker</code> 方式，群晖上还可以从套件中心安装</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210317141251.png\"></p>\n<p>只不过还需要安装依赖的套件： <code>WebStation</code> 套件 + <code>Apache2.2</code> 套件 + <code>PHP7.0</code> 套件，这是 <code>KodExplorer</code> 官方推荐的组合，相对 <code>Docker</code> 安装方式略显复杂。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>kalcaddle/KodExplorer: A web based file manager,web IDE / browser based code editor<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2thbGNhZGRsZS9Lb2RFeHBsb3Jlci8=\">https://github.com/kalcaddle/KodExplorer/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>可道云-私有云存储&amp;协同办公平台_企业网盘_企业云盘_网盘_云盘<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9rb2RjbG91ZC5jb20v\">https://kodcloud.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>KodBox与KodExplorer有什么不同？ - 可道云社区<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYnMua29kY2xvdWQuY29tL2QvNDQ2\">https://bbs.kodcloud.com/d/446<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>群晖NAS | 安装KodExplorer文件管理器（域名绑定+外网访问） | 喵斯基部落<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubW9ld2FoLmNvbS9hcmNoaXZlcy8xMzM0Lmh0bWw=\">https://www.moewah.com/archives/1334.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","网盘"]},{"title":"电脑上跨平台的电子书阅读器Koodo Reader","url":"/2021/04/30/%E7%94%B5%E8%84%91%E4%B8%8A%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%9A%84%E7%94%B5%E5%AD%90%E4%B9%A6%E9%98%85%E8%AF%BB%E5%99%A8Koodo%20Reader/","content":"<p><strong>什么是 Koodo Reader ？</strong></p>\n<blockquote>\n<p> <code>Koodo Reader</code> 是跨平台的电子书阅读器，平台支持<code>Windows</code>，<code>macOS</code>，<code>Linux</code> 和网页版，格式支持 <code>epub</code>，<code>pdf</code>，<code>mobi</code>，<code>azw3</code> 和 <code>txt</code>，支持数据导入导出和网盘同步。</p>\n</blockquote>\n<p>Mac 上能看 <code>txt</code> 小说的阅读器不多，老苏最早用过 <code>超牛txt小说阅读器</code>，后来是 <code>x-Reader</code> ，当然支持 <code>epub</code> 和 <code>pdf</code>的阅读器还是很多的。</p>\n<h1 id=\"安装一\"><a href=\"#安装一\" class=\"headerlink\" title=\"安装一\"></a>安装一</h1><p>因为没有现成的最新版的镜像，所以需要从源代码开始构建。如果你不想自己构建，可以跳转到第二部分，因为老苏已经构建好了，你可以直接下载使用。</p>\n<h2 id=\"1-安装-git\"><a href=\"#1-安装-git\" class=\"headerlink\" title=\"1.   安装 git\"></a>1.   安装 git</h2><ul>\n<li> <code>套件中心</code> → <code>设置</code> –&gt; <code>套件来源</code> –&gt; <code>新增</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210411131200.png\"></p>\n<blockquote>\n<p>名称：随意，位置：<code>http://packages.synocommunity.com/</code></p>\n</blockquote>\n<ul>\n<li> <code>套件中心</code> –&gt; <code>社群</code>，找到并安装套件 <code>Git</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210411131711.png\"></p>\n<h2 id=\"2-下载代码\"><a href=\"#2-下载代码\" class=\"headerlink\" title=\"2.  下载代码\"></a>2.  下载代码</h2><blockquote>\n<p>用 SSH 客户端连到群晖，在 <code>docker</code> 目录中执行下面的命令</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入 docker 目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /volume1/docker</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Clone 代码库到 docker/koodo-reader 目录</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> --recurse-submodules https://gitee.com/troyeguo/koodo-reader.git koodo-reader </span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>我用的是国内源，应该比用 <code>github</code> 会快一些吧</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210427092058.png\"></p>\n<h2 id=\"3-修改-docker-compose-yaml\"><a href=\"#3-修改-docker-compose-yaml\" class=\"headerlink\" title=\"3.  修改 docker-compose.yaml\"></a>3.  修改 docker-compose.yaml</h2><p>编辑 <code>docker-compose.yaml</code> 文件，老苏只是修改了群晖的本地端口为 <code>3480</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">&quot;3&quot;</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">  <span class=\"attr\">koodo:</span></span><br><span class=\"line\">    <span class=\"attr\">build:</span> <span class=\"string\">.</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&quot;3480:80&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-开始构建\"><a href=\"#4-开始构建\" class=\"headerlink\" title=\"4. 开始构建\"></a>4. 开始构建</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入 koodo-reader 目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> koodo-reader</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 运行</span></span><br><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210427152923.png\"></p>\n<h2 id=\"5-释放空间\"><a href=\"#5-释放空间\" class=\"headerlink\" title=\"5.  释放空间\"></a>5.  释放空间</h2><p>在镜像构建过程中，下载了两个基础镜像，<code>nginx:stable</code> 和<code>node:lts-stretch</code>，加起来差不多有 <code>1G</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210427095334.png\"></p>\n<p>最终生成了镜像 <code>koodo-reader_koodo:latest</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210427095612.png\"></p>\n<p>建议删除用于中间过程的基础镜像，这样可以节省空间。有一种更简单的方法</p>\n<blockquote>\n<p>需要注意的是，这个操作有一定的危险！</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 清理未被使用的镜像</span></span><br><span class=\"line\">docker image prune</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"安装二\"><a href=\"#安装二\" class=\"headerlink\" title=\"安装二\"></a>安装二</h1><p>如果你觉得自己构建麻烦，也可以在注册表中搜索 <code>koodo-reader</code> ，选择第二个 <code>wbsu2003/koodo-reader</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210430165732.png\"></p>\n<p>也可以直接用命令行拉取镜像</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 拉取镜像</span></span><br><span class=\"line\">docker pull wbsu2003/koodo-reader:latest</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210427173530.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:3480</code>，就能看到主界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210427094945.png\"></p>\n<h2 id=\"导入书籍\"><a href=\"#导入书籍\" class=\"headerlink\" title=\"导入书籍\"></a>导入书籍</h2><p><code>Koodo Reader</code> 支持阅读 <code>epub</code> , <code>pdf</code>, <code>mobi</code>, <code>azw3</code> 和 <code>txt</code> 格式的图书，我随便下载了几本 <code>epub</code> 格式的小说，选择 <code>从本地导入</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210427101055.png\"></p>\n<p>支持拖拽操作</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210427141111.png\"></p>\n<p>随便打开一本</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210427101251.png\"></p>\n<h2 id=\"备份恢复\"><a href=\"#备份恢复\" class=\"headerlink\" title=\"备份恢复\"></a>备份恢复</h2><p>这是实现跨设备阅读的基础，目前支持 <code>Dropbox</code> 和 <code>WebDav</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210427103555.png\"></p>\n<p>在群晖上使用显然 <code>WebDav</code> 才是我们必选，可惜网页上并不支持，所以网页上唯一的选择只能是 <code>Dropbox</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210427105638.png\"></p>\n<p>点 <code>复制链接</code>，在浏览器中打开新标签页</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210427105827.png\"></p>\n<p>授权 <code>运行</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210427110123.png\"></p>\n<p>授权成功后需要 <code>复制凭证</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210427110203.png\"></p>\n<p>将获取的凭证字符串复制到文本框完成绑定</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210427110246.png\"></p>\n<p>之后就可以上传下载阅读记录了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210427110724.png\"></p>\n<h1 id=\"其他客户端\"><a href=\"#其他客户端\" class=\"headerlink\" title=\"其他客户端\"></a>其他客户端</h1><p>因为是基于 <code>Electron</code> 开发的，所以在用户体验上是完全一致的，所不同的是客户端功能会略多一点，比如说备份支持 <code>WebDav</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210427112013.png\"></p>\n<p>支持 <code>同步</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210427112147.png\"></p>\n<p>通过 <code>备份和恢复</code>，很容易就实现了不同客户端书籍的同步。</p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>个人感觉从应用场景来说，如果能实现 PC 和 移动端的同步才是最关键的，可是当我们在移动端访问 Web 时，却显示不支持，不能不说这是很大的遗憾。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/2021/04/20210427135752.png\"></p>\n<p>不过作为 PC 的阅读器， 不论颜值还是功能，都是非常不错的👍👍👍</p>\n<h1 id=\"附录\"><a href=\"#附录\" class=\"headerlink\" title=\"附录\"></a>附录</h1><p>将构建好的镜像上传到 <code>dockerhub</code> 的一些操作</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 登录</span></span><br><span class=\"line\">docker login</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改镜像 repository</span></span><br><span class=\"line\">docker tag koodo-reader_koodo wbsu2003/koodo-reader:v1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 上传镜像</span></span><br><span class=\"line\">docker push wbsu2003/koodo-reader:v1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改镜像 repository</span></span><br><span class=\"line\">docker tag koodo-reader_koodo wbsu2003/koodo-reader</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 上传镜像</span></span><br><span class=\"line\">docker push wbsu2003/koodo-reader:latest</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210427215226.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>troyeguo/koodo-reader: 📚 A modern ebook manager and reader for epub, pdf, mobi, azw3 and txt, supporting Windows, macOS, Linux and Web. (跨平台的电子书阅读器，支持 epub, pdf, mobi, azw3 和 txt 格式)<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Ryb3llZ3VvL2tvb2RvLXJlYWRlcg==\">https://github.com/troyeguo/koodo-reader<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>koodo-reader: 📚 跨平台的电子书阅读器，平台支持Windows，macOS，Linux 和网页版，格式支持 epub，pdf，mobi，azw3 和 txt，支持数据导入导出和网盘同步。基于 React、Redux、TypeScript、Electron、i18n<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vdHJveWVndW8va29vZG8tcmVhZGVy\">https://gitee.com/troyeguo/koodo-reader<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Koodo Reader<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9rb29kby45NjA5NjAueHl6LyM=\">https://koodo.960960.xyz/#<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Docker - 将制作好的镜像上传到Docker Hub仓库（附操作步骤）<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaGFuZ2dlLmNvbS9ibG9nL2NhY2hlL2RldGFpbF8yNDA5Lmh0bWw=\">https://www.hangge.com/blog/cache/detail_2409.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","Electron"]},{"title":"彻底解决群晖Docker终端机socket已关闭问题","url":"/2021/04/26/%E5%BD%BB%E5%BA%95%E8%A7%A3%E5%86%B3%E7%BE%A4%E6%99%96Docker%E7%BB%88%E7%AB%AF%E6%9C%BAsocket%E5%B7%B2%E5%85%B3%E9%97%AD%E9%97%AE%E9%A2%98/","content":"<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210323191355.png\"></p>\n<p>这个界面大家应该不陌生吧，当你打开 Docker 容器的 <code>终端机</code> 时，提示<code>socket已停止</code> 的错误，而且要命的是，所有容器都不能使用 <code>终端机</code> 了，如果你在网上搜索解决方案，基本上就 3 种：</p>\n<ul>\n<li>  第一种简单粗暴，直接换浏览器，我也试成功过，比如 <code>Google Chrome</code> 出问题了，换成 <code>Microsoft Edge</code> 就 OK 了；如果是 MacOS，换成 <code>Safari</code> 也一样能解决；</li>\n<li>  第二种利用反向代理实现 <code>WebSocket</code> 通讯； </li>\n<li>  第三种是利用第三方工具；</li>\n</ul>\n<p>其实这几种方法都是正确的，只是网上语焉不详，并没有对场景进行详细的描述，导致了大家没有找到适合的方法，所以认为这些方法都是扯淡。</p>\n<p>其实遇到 <code>socket已停止</code> 的错误分两种情况：</p>\n<ul>\n<li>  一种是本地（局域网）模式下出现这种错误</li>\n<li>  另一种是远程（互联网）模式下出现这种错误</li>\n</ul>\n<p>其他属于上面两种情况的组合，比如远程、本地都出现这种报错，又或者一端出现了另一端正常</p>\n<h1 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h1><h2 id=\"反向代理法\"><a href=\"#反向代理法\" class=\"headerlink\" title=\"反向代理法\"></a>反向代理法</h2><h3 id=\"DSM-6-2-1-以下\"><a href=\"#DSM-6-2-1-以下\" class=\"headerlink\" title=\"DSM 6.2.1 以下\"></a>DSM 6.2.1 以下</h3><blockquote>\n<p>方案特点：可以解决从外网访问群晖时出现的 <code>socket已停止</code> 的错误，但是对于局域网发生的  <code>socket已停止</code>  错误无能为力。</p>\n</blockquote>\n<p>这个版本的群晖自带的 nginx 不支持 websocket ，Synology DSM 6 反向代理的配置修复程序项目地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL29yb2JhcmRldC9kc20tcmV2ZXJzZS1wcm94eS13ZWJzb2NrZXQ=\">https://github.com/orobardet/dsm-reverse-proxy-websocket<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/02/1596357088477-1596357088478.png\" alt=\"title\"></p>\n<p><code>WinSCP</code> 连接群晖后打开 <code>/usr/syno/share/nginx/Portal.mustache</code></p>\n<blockquote>\n<p>切记，修改前先备份，先备份，先备份，重要的事情总是要说三遍，备份是一种好习惯</p>\n</blockquote>\n<p>在 <code>location</code> 部分中添加以下内容:</p>\n<figure class=\"highlight py\"><table><tr><td class=\"code\"><pre><span class=\"line\">proxy_set_headerUpgrade   $http_upgrade;</span><br><span class=\"line\">proxy_set_headerConnection   <span class=\"string\">&quot;upgrade&quot;</span>;</span><br><span class=\"line\">proxy_read_timeout  <span class=\"number\">86400</span>;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/02/1596357482146-1596357482150.png\" alt=\"title\"></p>\n<p>重启 httpd</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo synoservicecfg --restart nginx</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"DSM-6-2-1-及以上\"><a href=\"#DSM-6-2-1-及以上\" class=\"headerlink\" title=\"DSM 6.2.1 及以上\"></a>DSM 6.2.1 及以上</h3><blockquote>\n<p>方案特点：不仅可以解决从外网访问群晖时出现的 <code>socket已停止</code> 的错误，对于局域网发生的  <code>socket已停止</code>  错误可能同样生效。</p>\n</blockquote>\n<p>从 DSM 6.2.1 开始，不再需要修改 <code>Portal.mustache</code> 文件，如果按照上面的方法，反而可能导致错误 。</p>\n<p>可以参考这篇文章 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zbmlwcGV0aW5mby5uZXQvbW9iaWxlL21lZGlhLzMwOTA=\">Synology Docker 終端機出現 Socket 已關閉（https://snippetinfo.net/mobile/media/3090）<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>这个方法我自己没试过，但是我的一个朋友告诉我亲测有效，下图是他微信上发我的图。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210324091947.png\"></p>\n<h2 id=\"第三方工具法\"><a href=\"#第三方工具法\" class=\"headerlink\" title=\"第三方工具法\"></a>第三方工具法</h2><blockquote>\n<p>方案特点：这个方案不受网络的限制。但是需要安装 <code>Portainer</code> ，除非你本身就在用这个软件管理 docker，不然还要多学习一款软件的使用，不如群晖自带的 Docker 方便。</p>\n</blockquote>\n<p>利用 <code>Portainer</code> 的 <code>Exec Console</code> 功能</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210323213127.png\"></p>\n<p>完全不受浏览器的影响，即便 <code>Google Chrome</code> 已经出了 <code>socket已停止</code> 的错误，透过 <code>Portainer</code> 也完全可以正常使用</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210323213445.png\"></p>\n<h2 id=\"终极大法\"><a href=\"#终极大法\" class=\"headerlink\" title=\"终极大法\"></a>终极大法</h2><blockquote>\n<p>方案特点：彻底解决 <code>socket已停止</code> 问题，不受网络的限制，不需要安装第三方软件，不需要设置反向代理。</p>\n</blockquote>\n<p>更换浏览器是一种治标不治本的方法，我先描述下我遇到的现象：</p>\n<ul>\n<li>在 Windows 台式机上，<code>Google Chrome</code> 出了 <code>socket已停止</code>  错误，换成 <code>Microsoft Edge</code>却是正常的；</li>\n<li>在 MacOS 笔记本上，<code>Google Chrome</code> 和 <code>Safari</code> 均正常；</li>\n</ul>\n<p>上面的现象说明，群晖本身并没有问题，因为如果是群晖的问题，应该所有的浏览器都不行才对，所以问题一定是出在浏览器本身。</p>\n<p>下面是以 <code>Google Chrome</code> 为例，详细描述了解决的过程，如果你只想知道结果，那就往下拉到最后吧。</p>\n<ol>\n<li><p> 首先想到的是<code>清除浏览数据</code>。但是操作完成后故障依旧；</p>\n</li>\n<li><p> 接着 <code>重置权限</code>。点击地址栏前的 <code>不安全</code> –&gt; <code>网站设置</code></p>\n</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210323220537.png\"></p>\n<p>先 <code>清除数据</code> ，再 <code>重置权限</code>，故障依旧；</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210323220905.png\"></p>\n<ol start=\"3\">\n<li> 清除 <code>LocalStorage</code>。<code>Google Chrome</code> 浏览器中用快捷键 <code>Ctrl + Shift + I</code> 打开 <code>开发者工具</code>，找到  <code>Application</code></li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210323222241.png\"></p>\n<p>在 <code>Storage</code> 中包含了 <code>Local Storage</code> 、<code>Session Storage</code> 和 <code>Cookies</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210323222354.png\"></p>\n<p>挨个清理，先清 <code>Local Storage</code>，选中 <code>http://192.168.0.199:5000/</code> 右键 <code>Clear</code>，故障依旧；</p>\n<p>接着清 <code>Session Storage</code>，方法跟上一步一样，故障还是依旧；</p>\n<p>最后清 <code>Cookies</code> ，方法跟上一步一样，清完后需要重新登录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210323223305.png\"></p>\n<p>终于恢复正常了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210323223518.png\"></p>\n<p>比较遗憾的是没有确定到具体的键值。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>HomeAssistant设置https访问后的问题 | 老苏的blog<br>地址：<a href=\"https://laosu.ml/2020/08/09/HomeAssistant%E8%AE%BE%E7%BD%AEhttps%E8%AE%BF%E9%97%AE%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/\">https://laosu.ml/2020/08/09/HomeAssistant%E8%AE%BE%E7%BD%AEhttps%E8%AE%BF%E9%97%AE%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/</a></p>\n<p>Synology Docker 終端機出現 Socket 已關閉 | 老洪的 IT 學習系統<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zbmlwcGV0aW5mby5uZXQvbW9iaWxlL21lZGlhLzMwOTA=\">https://snippetinfo.net/mobile/media/3090<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","socket"]},{"title":"解锁加密音乐的神器unlock-music","url":"/2021/04/23/%E8%A7%A3%E9%94%81%E5%8A%A0%E5%AF%86%E9%9F%B3%E4%B9%90%E7%9A%84%E7%A5%9E%E5%99%A8unlock-music/","content":"<p><strong>什么是 unlock-music ？</strong></p>\n<blockquote>\n<p><code>Unlock Music</code> 是一款基于 <code>WEB</code> 的应用，你只需通过 <code>Google Chrome</code> 、 <code>Mozilla Firefox</code> 或 <code>Edge Chromium</code> 等现代浏览器访问即可使用，能够帮助你将已购的加密音乐文件解密还原转换成 <code>.mp3</code>、<code>.flac</code>、<code>.ogg</code> 等标准音乐格式，目前支持网易云音乐、 QQ 音乐、Moo 音乐、虾米音乐、酷我音乐、酷狗音乐等的部分格式。</p>\n</blockquote>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210419090638.png\"></p>\n<center>【数据来自：Fastdata极数-2020年中国在线音乐行业报告】</center>\n\n<p>音乐版权以及各大音乐软件平台之间的激烈竞争，使得各家平台都对音乐文件做了加密处理，这些音乐即便下载到本地后，你也无法用其它播放器进行播放。</p>\n<p>根据调查报告看，国内在线音乐付费用户已经超过 7000 万，可即便你是 VIP 花钱购买了音乐，也只能下载到 .qmc0、.ncm 这样的加密格式文件。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210419090536.png\"></p>\n<p>想要在其他播放器软件、家庭影院/车载音响上播放还是不行的。而且今天能听的歌，明天可能就变灰了，所以想办法把喜爱的音乐转换成 .mp3、.flac 等通用格式保存、收藏在自己手上才靠谱……</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210419091758.png\"></p>\n<p>音乐解锁 (Unlock Music)  是一款免费开源的解锁加密音乐工具，无需下载安装，因为它是一款基于 <code>WEB</code> 的网页版程序；使用了 <code>PWA</code> 技术，就算没有网络也是能使用的。</p>\n<p>可以去官网直接使用 ：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9peDY0LmdpdGh1Yi5pby91bmxvY2stbXVzaWMv\">https://ix64.github.io/unlock-music/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>当然咱们也可以自建，用 <code>docker</code> 方式是最简单不过的了。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>unlock-music</code> ，选择第一个 <code>ix64/unlock-music</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210419092631.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>默认的端口 <code>80</code> 不能用，所以换成了 <code>3180</code>，不冲突就行</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">3180</td>\n<td align=\"center\">80</td>\n</tr>\n</tbody></table>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:3180</code>，就能看到主界面了，和官网完全一样</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210419104900.png\"></p>\n<p>找了几个 <code>.ncm</code> 直接拖进去</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210419104825.png\"></p>\n<p>可以一首一首下，也可以批量下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210419105450.png\"></p>\n<p>使用还是非常简单和方便的，目前  <code>unlock-music</code> 支持的格式：</p>\n<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> QQ音乐 (.qmc0/.qmc2/.qmc3/.qmcflac/.qmcogg/.tkm)<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 写入封面图片</li>\n</ul>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> Moo音乐格式 (.bkcmp3/.bkcflac)</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> QQ音乐Tm格式 (.tm0/.tm2/.tm3/.tm6)</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> QQ音乐新格式 (实验性支持)<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> .mflac</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> .mgg</li>\n</ul>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 网易云音乐格式 (.ncm)<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 补全ncm的ID3/FlacMeta信息</li>\n</ul>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 虾米音乐格式 (.xm) (测试阶段)</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 酷我音乐格式 (.kwm) (测试阶段)</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 酷狗音乐格式 (.kgm) (CLI版本)</li>\n</ul>\n<h1 id=\"其他使用方法\"><a href=\"#其他使用方法\" class=\"headerlink\" title=\"其他使用方法\"></a>其他使用方法</h1><p>官方提供的下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2l4NjQvdW5sb2NrLW11c2ljL3JlbGVhc2Vz\">https://github.com/ix64/unlock-music/releases<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210419110145.png\"></p>\n<ul>\n<li>  <code>extension</code> 版本，是浏览器的扩展 (Chrome &amp; Firefox)</li>\n<li>  <code>legacy</code> 版本，能通过file协议访问，也就是可以本地运行</li>\n<li>  <code>modern</code> 版本，只能通过http/https协议访问</li>\n</ul>\n<p>所以如果你不想搭建 <code>WEB</code> 服务，可以直接下载 <code>legacy</code> 版本，解压后直接双击 <code>index.html</code> 也是可以的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210419110818.png\"></p>\n<p>不过官方还是建议在线部署，这样才能启用 <code>Web Worker</code> 从而获得更好性能，<code>MacOS</code> 上可以用自带的 <code>Apache</code>，而 <code>Windows</code> 上可以试试 <code>IIS</code>。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>ix64/unlock-music: Unlock encrypted music file in browser. 在浏览器中解锁加密的音乐文件。<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2l4NjQvdW5sb2NrLW11c2lj\">https://github.com/ix64/unlock-music<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>音乐解锁<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly91bmxvY2stbXVzaWMtaXgubmV0bGlmeS5hcHAv\">https://unlock-music-ix.netlify.app/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","工具","音乐"]},{"title":"CloudTalk服务端编译流水账（下篇）","url":"/2021/04/19/CloudTalk%E6%9C%8D%E5%8A%A1%E7%AB%AF%E7%BC%96%E8%AF%91%E6%B5%81%E6%B0%B4%E8%B4%A6%EF%BC%88%E4%B8%8B%E7%AF%87%EF%BC%89/","content":"<h1 id=\"部署篇\"><a href=\"#部署篇\" class=\"headerlink\" title=\"部署篇\"></a>部署篇</h1><h2 id=\"gitee新版本\"><a href=\"#gitee新版本\" class=\"headerlink\" title=\"gitee新版本\"></a>gitee新版本</h2><p>将  <code>cloudtalk-server-3.0.1.tar.gz</code> 解压</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入上一层目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ..</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解压编译生成的文件</span></span><br><span class=\"line\">tar -xf cloudtalk-server-3.0.1.tar.gz</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210404170201.png\"></p>\n<h2 id=\"老版本\"><a href=\"#老版本\" class=\"headerlink\" title=\"老版本\"></a>老版本</h2><p>将 <code>im-server-2.0.3.tar.gz</code> 解压</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入上一层目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ..</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解压编译生成的文件</span></span><br><span class=\"line\">tar -xf im-server-2.0.3.tar.gz</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"运行-sync-lib-for-zip-sh\"><a href=\"#运行-sync-lib-for-zip-sh\" class=\"headerlink\" title=\"运行 sync_lib_for_zip.sh\"></a>运行 sync_lib_for_zip.sh</h2><p>进入 <code>cloudtalk-server-3.0.1/</code>  或者 <code>im-server-2.0.3</code> 目录，运行 <code>sync_lib_for_zip.sh</code>，他的作用是将 lib 分发到每个服务端目录里面。该脚本只需运行一次</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> cloudtalk-server-3.0.1/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 分发lib</span></span><br><span class=\"line\">./sync_lib_for_zip.sh</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210404170305.png\"></p>\n<h2 id=\"导入-sql-文件\"><a href=\"#导入-sql-文件\" class=\"headerlink\" title=\"导入 sql 文件\"></a>导入 sql 文件</h2><h3 id=\"方式1\"><a href=\"#方式1\" class=\"headerlink\" title=\"方式1\"></a>方式1</h3><p>在 BT 面板中，<code>数据库</code> –&gt; <code>添加数据库</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210404170757.png\"></p>\n<p>从 <code>从本地上传</code> 源代码目录 <code>cloudtalk/database</code> 目录中的 <code>newim.sql</code> 文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210404171128.png\"></p>\n<p><code>开始上传</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210404182917.png\"></p>\n<p>再 <code>导入</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210404171308.png\"></p>\n<p>成功后会提示 <code>数据库导入成功</code></p>\n<h3 id=\"方式2\"><a href=\"#方式2\" class=\"headerlink\" title=\"方式2\"></a>方式2</h3><p>也可以在在 <code>phpMyAdmin</code> 中新建</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210401215213.png\"></p>\n<p>新建数据库 <code>newim</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210401220445.png\"></p>\n<p>选择 <code>导入</code>，上传 <code>database</code> 目录下的 <code>newim.sql</code> 文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210401220527.png\"></p>\n<p>导入成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210401220626.png\"></p>\n<h2 id=\"获取数据库-root-密码\"><a href=\"#获取数据库-root-密码\" class=\"headerlink\" title=\"获取数据库 root 密码\"></a>获取数据库 root 密码</h2><p><code>从服务器获取</code>后能同步到 <code>newim</code> 库</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210401223903.png\"></p>\n<p>点 <code>root密码</code>，会弹出密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210401224104.png\"></p>\n<p>也可以用 <code>newim</code> 的用户和它的密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210406045749.png\"></p>\n<h2 id=\"编辑-conf-文件\"><a href=\"#编辑-conf-文件\" class=\"headerlink\" title=\"编辑 conf 文件\"></a>编辑 conf 文件</h2><p> 在启动服务之前，需要先配置 <code>config</code> 文件</p>\n<ul>\n<li><code>ct_msg_server</code> 的配置文件 <code>ct_msgserver.conf</code></li>\n</ul>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210401211303.png\"></p>\n<ol>\n<li>因为打算在内网测试，所以 <code>IpAddr1</code> 和  <code>IpAddr1</code>  填的是局域网 IP</li>\n<li>取消了 <code>RouterServerIP2</code> 和 <code>RouterServerPort2</code> 的注释，也就是删除了前面的 <code>#</code> 号</li>\n</ol>\n<ul>\n<li><code>ct_route_serve</code>  的配置文件  <code>ct_routeserve.conf</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210401211723.png\"></p>\n<p>将 <code>ListenMsgPort=8200</code> 改为了 <code>ListenMsgPort=8200;8201</code></p>\n<ul>\n<li><code>ct_http_msg_server</code> 的配置文件 <code>ct_httpmsgserver.conf</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210401211951.png\"></p>\n<p> 修改了 <code>RouteServerPort2</code>，从 <code>8200</code> 改为了 <code>8201</code></p>\n<ul>\n<li><code>ct_file_server</code> 的配置文件 <code>ct_fileserver.conf</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210401212142.png\"></p>\n<p>没做任何改动</p>\n<ul>\n<li><code>ct_push_server</code> 的配置文件 <code>ct_pushserver.conf</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210401212409.png\"></p>\n<p>没做任何改动</p>\n<ul>\n<li><code>ct_msfs</code>  的配置文件 <code>ct_msfs</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210401212621.png\"></p>\n<p>没做任何改动</p>\n<ul>\n<li><code>ct_db_proxy_server</code> 的配置文件 <code>ct_dbproxyserver.conf</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210401212941.png\"></p>\n<p>这个文件主要是操作数据库和缓存，修改了 </p>\n<ul>\n<li><code>ThreadNum</code> ，从 <code>48</code> 改为了 <code>2</code>，按注释为 CPU 核的 2 倍；</li>\n<li><code>teamtalk_master_password</code>，从 <code>123456</code> 改为了前面获取到的 <code>root</code> 或者 <code>newim</code> 的密码；</li>\n<li><code>teamtalk_slave_password</code>，从 <code>123456</code> 改为了前面获取到的 <code>root</code> 或者 <code>newim</code> 的密码；</li>\n</ul>\n<blockquote>\n<p>数据库用户建议不要使用 <code>root</code>，用 <code>newim</code> 就行 ；</p>\n</blockquote>\n<h2 id=\"运行-restart-sh\"><a href=\"#运行-restart-sh\" class=\"headerlink\" title=\"运行 restart.sh\"></a>运行 restart.sh</h2><p><code>restart.sh</code> 是运行脚本，是运行服务端的。总共有：<br> ct_db_proxy_server|ct_msg_server|ct_route_server|ct_http_msg_server|ct_file_server|ct_push_server|ct_msfs  7 个服务端。 </p>\n<p>接下来依次启动 7 个服务 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 最先启动 ct_db_proxy_server</span></span><br><span class=\"line\">./restart.sh ct_db_proxy_server</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210401222406.png\"></p>\n<blockquote>\n<p>老版没有 <code>ct_</code> 前缀，例如：新版为 <code>ct_db_proxy_server</code> ，而老版本是 <code>db_proxy_server</code></p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 最先启动 db_proxy_server</span></span><br><span class=\"line\">./restart.sh db_proxy_server</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><code>ct_db_proxy_server</code> 是启动数据库操作的服务端，运行完后，到  <code>ct_db_proxy_server</code> 目录下面的 Log 目录下面看日志，看有没有启动成功。如果没有报错信息，应该就可以</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210404183926.png\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 启动 ct_route_server</span></span><br><span class=\"line\">./restart.sh ct_route_server</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210401222902.png\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 启动 ct_file_server</span></span><br><span class=\"line\">./restart.sh ct_file_server</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210401223004.png\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 启动 ct_msfs</span></span><br><span class=\"line\">./restart.sh ct_msfs</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210401223118.png\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 启动 ct_push_server</span></span><br><span class=\"line\">./restart.sh ct_push_server</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210401223215.png\"></p>\n<blockquote>\n<p>日志里显示错误，不影响在内网的运行</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210404184614.png\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 启动 ct_msg_server</span></span><br><span class=\"line\">./restart.sh ct_msg_server</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210401222659.png\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 启动 ct_http_msg_server</span></span><br><span class=\"line\">./restart.sh ct_http_msg_server</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210401223334.png\"></p>\n<h1 id=\"编译篇（API篇）\"><a href=\"#编译篇（API篇）\" class=\"headerlink\" title=\"编译篇（API篇）\"></a>编译篇（API篇）</h1><h2 id=\"修改-application-properties\"><a href=\"#修改-application-properties\" class=\"headerlink\" title=\"修改 application.properties\"></a>修改 application.properties</h2><p>修改 <code>cloudtalk/business-api/src/main/resources</code> 目录下的 <code>application.properties</code> 文件，其中</p>\n<ul>\n<li><code>spring.datasource.password</code> 从 <code>123</code> 改为用户 <code>newim</code>的密码；</li>\n<li><code>cloudtalk.files.msfsprior</code> 从 <code>http://imapi.b56.cn:9701/</code> 改为了 <code>http://192.168.0.114:8700/</code></li>\n<li><code>cloudtalk.files.msfspriorbackup</code> 从 <code>http://imapi.b56.cn:9701/</code> 改为了 <code>http://192.168.0.114:8701/</code></li>\n<li><code>cloudtalk.api.url</code> 从 <code>http://im.b56.cn:9400/api/sendmsg</code> 改为了 <code>http://192.168.0.114:8400/api/sendmsg</code></li>\n</ul>\n<blockquote>\n<p>微信支付暂时用不上，所以 <code>cloudtalk.weixin.notifyUrl</code> 改不改无所谓；</p>\n</blockquote>\n<blockquote>\n<p><code>application-qa.properties</code> 和 <code>application-local.properties</code> 等只有老版本中才有，因为官方文档中描述  <code>HttpMsgServerPort 是 http_msg_server 的 websocket 服务监听端口</code> ，所以将 <code>HttpMsgServerPort</code> 全部从 <code>9900</code> 改为 <code>8400</code>；</p>\n</blockquote>\n<h2 id=\"编译-Java-API\"><a href=\"#编译-Java-API\" class=\"headerlink\" title=\"编译 Java API\"></a>编译 Java API</h2><p>在 <code>business-api</code> 目录执行下面的命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入到 business-api 目录</span></span><br><span class=\"line\">mvn install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果还没有安装 maven ，则执行</span></span><br><span class=\"line\">yum -y install maven</span><br></pre></td></tr></table></figure>\n\n<p>要等一会儿才能完成，编译成功后会看到 <code>BUILD SUCCESS</code> 提示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210404191636.png\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入到 target/distribution 目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> target/distribution/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 增加执行权限</span></span><br><span class=\"line\">chmod +x startup.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 当前目录下执行</span></span><br><span class=\"line\">./startup.sh</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210406055616.png\"></p>\n<p>同目录下会生成 <code>im.log</code> 文件</p>\n<h1 id=\"运行篇\"><a href=\"#运行篇\" class=\"headerlink\" title=\"运行篇\"></a>运行篇</h1><h2 id=\"web-访问\"><a href=\"#web-访问\" class=\"headerlink\" title=\"web 访问\"></a>web 访问</h2><p>在浏览器中输入<code>http://虚拟机IP:8080</code> 会显示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210407114948.png\"></p>\n<p>也不知道是否正常，论坛有人问过，作者说开发了新的管理后台，但还不知道怎么弄</p>\n<h2 id=\"Android-客户端\"><a href=\"#Android-客户端\" class=\"headerlink\" title=\"Android 客户端\"></a>Android 客户端</h2><p>官网源代码编译的版本支持更换服务器地址，还是很方便的</p>\n<blockquote>\n<p>只要修改<code>/cloudtalk/android/app/src/main/java/com/zhangwuji/im/UrlConstant.java</code> 中的 <code>ACCESS_MSG_ADDRESS</code> 即可</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210407120543.png\"></p>\n<p>先注册 2 个用户，然后就可以互相聊天了。</p>\n<h2 id=\"网页-demo\"><a href=\"#网页-demo\" class=\"headerlink\" title=\"网页 demo\"></a>网页 demo</h2><blockquote>\n<p>网页 demo 在 gitee 上并没有</p>\n</blockquote>\n<p>只要修改 <code>demo.js</code> 中的地址为自己的 IP 即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210408091316.png\"></p>\n<p>登录成功后，可以发消息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210408091815.png\"></p>\n<p>对端收到后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210408091853.png\"></p>\n<h1 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h1><h2 id=\"一键卸载BT\"><a href=\"#一键卸载BT\" class=\"headerlink\" title=\"一键卸载BT\"></a>一键卸载BT</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 切换到 root 用户</span></span><br><span class=\"line\">su root</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 一键卸载BT</span></span><br><span class=\"line\">sh bt-uninstall.sh</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210403150217.png\"></p>\n<p>卸载成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210403150344.png\"></p>\n<h2 id=\"服务的端口\"><a href=\"#服务的端口\" class=\"headerlink\" title=\"服务的端口\"></a>服务的端口</h2><p>以下端口根据 <code>conf</code> 文件进行整理</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">服务</th>\n<th align=\"center\">端口</th>\n<th align=\"center\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">msg_server</td>\n<td align=\"center\">8000</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">http_msg_server</td>\n<td align=\"center\">8400</td>\n<td align=\"center\">http端口</td>\n</tr>\n<tr>\n<td align=\"center\">http_msg_server</td>\n<td align=\"center\">9326</td>\n<td align=\"center\">websocket端口</td>\n</tr>\n<tr>\n<td align=\"center\">db_proxy_server</td>\n<td align=\"center\">10600</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">route_serve</td>\n<td align=\"center\">8200，8201</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">push_server</td>\n<td align=\"center\">8500</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">file_server</td>\n<td align=\"center\">8600，8601</td>\n<td align=\"center\">8600 为 Client；8601 为MsgServer</td>\n</tr>\n<tr>\n<td align=\"center\">msfs</td>\n<td align=\"center\">8700</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">mysql</td>\n<td align=\"center\">3306</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">redis</td>\n<td align=\"center\">6379</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">api</td>\n<td align=\"center\">8400,9326</td>\n<td align=\"center\">同 http_msg_server 端口</td>\n</tr>\n<tr>\n<td align=\"center\">msfsprior</td>\n<td align=\"center\">8700</td>\n<td align=\"center\">同 file_server 端口</td>\n</tr>\n</tbody></table>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>可能是作者考虑要转商业化，因此客户端的代码只提供了 <code>Android</code> 的源代码，从编译出来的 <code>app</code> 看，和官方提供的 <code>demo</code> 存在较大的差异；</p>\n<p>群里提供的 <code>iOS</code> 源代码日期上看还是 <code>2019</code> 年的；</p>\n<p><code>Web</code> 版本是基于 <code>LayIM</code>  开发的，而  <code>LayIM</code> 并不是开源产品，所以需要先购买  <code>LayIM</code> 的授权；</p>\n<p>虽然看到有人问，但是 <code>Windows</code> 和 <code>Mac</code> 的版本目前没见过；</p>\n<p>所以如果你确定 <code>CloudTalk</code> 符合你的需求，建议联系作者做定制开发吧。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>cloudtalk: 源代码<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vcHdzbnMvY2xvdWR0YWxr\">https://gitee.com/pwsns/cloudtalk<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>【新提醒】CloudTalk服务端源码编译方法（简版） - 技术文档 - CloudTalk支持计划 - Powered by Discuz!<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iNTYuY24vdGhyZWFkLTYtMS0xLmh0bWw=\">https://b56.cn/thread-6-1-1.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["CentOS","虚拟机","VMware","IM","即时通讯"]},{"title":"CloudTalk服务端编译流水账（上篇）","url":"/2021/04/16/CloudTalk%E6%9C%8D%E5%8A%A1%E7%AB%AF%E7%BC%96%E8%AF%91%E6%B5%81%E6%B0%B4%E8%B4%A6%EF%BC%88%E4%B8%8A%E7%AF%87%EF%BC%89/","content":"<p><strong>什么是 CloudTalk ？</strong></p>\n<blockquote>\n<p>CloudTalk 是专注于企业云布署的即时通讯系统，基于 teamtalk 开源项目二次开发，群集布置效果优化，业务模块与底层分离，能快速与自已现有系统对接。支持音、视频通话，支持 andoird 、ios、 mac 、 windows 、h5/小程序， Http API 是全网唯一支持全平台布署的互联网即时通讯系统。</p>\n</blockquote>\n<p>系统架构图</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210401102817.png\"></p>\n<p>官方提供的数据：</p>\n<blockquote>\n<p>基于 CloudTalk 的单台服务器聊天室支持10W+ 用户在线（4核8G 服务器配置），理论单台100W以上空闲连接数，20W活动用户量 （4核16G配置）</p>\n</blockquote>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><ol>\n<li>编译的只是服务端，客户端只验证了 <code>Android</code>，其他的客户端我也没有；</li>\n<li>本文只是官方「CloudTalk服务端源码编译方法（简版）」的补充，记录了自己编译的过程，属于非官方的操作；</li>\n</ol>\n<p>如果需咨询，或者需要源代码什么的，请去加 <code>CloudTalk</code> 的官方 QQ 群；</p>\n<blockquote>\n<p>申明：本人只是 CloudTalk 的用户，和官方无任何关系；是否愿意付费加群，取决于您个人的需要，与本文作者无关；</p>\n</blockquote>\n<h1 id=\"安装篇\"><a href=\"#安装篇\" class=\"headerlink\" title=\"安装篇\"></a>安装篇</h1><h2 id=\"安装-VMware\"><a href=\"#安装-VMware\" class=\"headerlink\" title=\"安装 VMware\"></a>安装 VMware</h2><p>虚拟机的安装很简单，如果你还不了解虚拟机，可以看看之前的文章： <a href=\"https://laosu.ml/2021/01/18/VMware%E5%AE%89%E8%A3%85MacOS%20Big%20Sur%E7%B3%BB%E7%BB%9F/\">VMware安装MacOS Big Sur系统</a></p>\n<blockquote>\n<p>注意：</p>\n<ol>\n<li> 当然这一步不是必须的，部署的话建议直接在物理机上安装 <code>CentOS</code>；</li>\n<li> 如果你用的 <code>MacOS</code>，也可以用 <code>Parallels Desktop</code> 来运行虚拟机；</li>\n</ol>\n</blockquote>\n<h2 id=\"安装-CentOS\"><a href=\"#安装-CentOS\" class=\"headerlink\" title=\"安装 CentOS\"></a>安装 CentOS</h2><h3 id=\"版本的选择\"><a href=\"#版本的选择\" class=\"headerlink\" title=\"版本的选择\"></a>版本的选择</h3><p>这里踩的坑有点多，花了很多时间安装、测试，总共使用了 4 个版本的镜像，</p>\n<ul>\n<li><code>CentOS-7-x86_64-DVD-1708.iso</code></li>\n<li><code>CentOS-7-x86_64-Minimal-1708.iso</code></li>\n<li><code>CentOS-8.3.2011-x86_64-dvd1.iso</code></li>\n<li><code>CentOS-8.3.2011-x86_64-minimal.iso</code></li>\n</ul>\n<p>虽然还有很多没弄明白，但是可以把确定性的先说一下，起码可以避免后面的人走重复的弯路。</p>\n<ol>\n<li> 按照官方要求的 <code>需要 CentOS 7.0 以上版本。推荐使用纯净的新系统进行安装。</code>，理论上这 4 个镜像都应该满足，但是实际上使用 <code>CentOS 8</code> 在编译的时候会出现</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210403174841.png\"></p>\n<p>【结论】：只能选择大于 <code>7</code> 但是又小于 <code>8</code> 的 <code>CentOS</code> 版本；</p>\n<ol start=\"2\">\n<li> 只要 <code>CentOS</code> 安装图像界面，一装完宝塔面板，重启后图形界面就会无限崩溃</li>\n</ol>\n<blockquote>\n<p>经反复测试，CentOS 7 安装宝塔，图像界面就会崩溃，论坛也有人反馈了同样的问题：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYnQuY24vYmJzL3RocmVhZC01Njk5MS0xLTEuaHRtbA==\">【待反馈】centos 7 安装完宝塔之后重启之后图形界面崩溃）（https://www.bt.cn/bbs/thread-56991-1-1.html）<i class=\"fa fa-external-link-alt\"></i></span> </p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210401225459.png\"></p>\n<p>【结论】：只是编译无所谓，但是如果要运行，不建议 <code>CentOS</code> 安装带 <code>GUI</code> ；</p>\n<ol start=\"3\">\n<li>不要图省事，将文件丢到 <code>/root/</code> 目录编译，每次编译到最后，都会出现 <code>make ct_http_msg_server failed</code> </li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210403205053.png\"></p>\n<p>【结论】：可能是权限问题吧，在安装 <code>CentOS</code> 的时候，除了设定 <code>root</code> 的密码外，还创建了一个用户 <code>swb</code>，我把要编译的代码丢在了 <code>/home/用户名/</code> 目录，也就是 <code>/home/swb/</code>，能够正常编译。</p>\n<h3 id=\"下载-CentOS\"><a href=\"#下载-CentOS\" class=\"headerlink\" title=\"下载 CentOS\"></a>下载 CentOS</h3><p>下载地址 ：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY2VudG9zLm9yZy9kb3dubG9hZC8=\">https://www.centos.org/download/<i class=\"fa fa-external-link-alt\"></i></span>)</p>\n<blockquote>\n<p>我最终使用的版本是 <code>CentOS-7-x86_64-Minimal-1708.iso</code>，除了 <code>VMware</code> 外，还在 <code>Parallels Desktop</code> 中验证过，都顺利通过编译。</p>\n</blockquote>\n<h3 id=\"安装-CentOS-1\"><a href=\"#安装-CentOS-1\" class=\"headerlink\" title=\"安装 CentOS\"></a>安装 CentOS</h3><p>虚拟机中 CentOS 7 的安装，可以参考这篇文章：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS93M2Nub3RlL3Ztd2FyZS1pbnN0YWxsLWNlbnRvczcuaHRtbA==\">VMware 安装 Centos7 超详细过程（https://www.runoob.com/w3cnote/vmware-install-centos7.html）<i class=\"fa fa-external-link-alt\"></i></span>，写的非常详细；</p>\n<blockquote>\n<p>不管是用 <code>VMware</code> 还是 <code>Parallels Desktop</code> ，记得把网络设置成桥接模式，这样后面客户端的调试会比较方便；</p>\n</blockquote>\n<p>实体机安装其实和虚拟机中差不多，只是前面的引导方式不一样，<code>iso</code> 文件可以刻录到光驱里面，也可以做成 U 盘引导盘。具体参考这篇文章： <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDAyMDEwNTQwMQ==\">制作U盘启动盘，CentOS系统安装（https://segmentfault.com/a/1190000020105401）<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"安装宝塔面板\"><a href=\"#安装宝塔面板\" class=\"headerlink\" title=\"安装宝塔面板\"></a>安装宝塔面板</h2><p>宝塔运维平台介绍：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYnQuY24v\">https://www.bt.cn<i class=\"fa fa-external-link-alt\"></i></span></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 如果不是用管理员登录的，要切换为管理员才有权限安装宝塔</span></span><br><span class=\"line\">su root</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装宝塔面板</span></span><br><span class=\"line\">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210331215114.png\"></p>\n<blockquote>\n<p>部分图是在 <code>GUI</code> 模式下的终端里截取的，懒得再换;</p>\n</blockquote>\n<p>如果你用 SSH 客户端</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210403181823.png\"></p>\n<p>安装完成会有提示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210401193534.png\"></p>\n<blockquote>\n<p>账号、密码一定要保存好，保存好，保存好~</p>\n</blockquote>\n<p>VM内的</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">外网面板地址: http://xxx.xxx.xxx.xxx:8888/7c0c531a</span><br><span class=\"line\">内网面板地址: http://192.168.0.114:8888/7c0c531a</span><br><span class=\"line\">username: ofu927vk</span><br><span class=\"line\">password: 6d7910e2</span><br></pre></td></tr></table></figure>\n\n<p>PD内的</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">外网面板地址: http://xxx.xxx.xxx.xxx:8888/490b1953</span><br><span class=\"line\">内网面板地址: http://192.168.197.198:8888/490b1953</span><br><span class=\"line\">username: aa2ftrzs</span><br><span class=\"line\">password: 1465c6a6</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>这是我的，你要记住的是你自己的~</p>\n</blockquote>\n<h3 id=\"安装支持环境\"><a href=\"#安装支持环境\" class=\"headerlink\" title=\"安装支持环境\"></a>安装支持环境</h3><p>浏览器中打开宝塔的内网地址</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210331223125.png\"></p>\n<p>输入账号密码，协议拉到底部后勾选同意</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210331223307.png\"></p>\n<h4 id=\"安装-LNMP\"><a href=\"#安装-LNMP\" class=\"headerlink\" title=\"安装 LNMP\"></a>安装 LNMP</h4><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210331224358.png\"></p>\n<p>安装成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210331225124.png\" alt=\"LNMP\"></p>\n<h4 id=\"安装-redis\"><a href=\"#安装-redis\" class=\"headerlink\" title=\"安装 redis\"></a>安装 redis</h4><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210331225741.png\"></p>\n<p>版本是6.2的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210331225850.png\"></p>\n<h4 id=\"安装-java\"><a href=\"#安装-java\" class=\"headerlink\" title=\"安装 java\"></a>安装 java</h4><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210331230230.png\"></p>\n<p>选了 <code>Java项目一键部署</code></p>\n<h2 id=\"安装-protobuf\"><a href=\"#安装-protobuf\" class=\"headerlink\" title=\"安装 protobuf\"></a>安装 protobuf</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在 SSH 界面安装，据说一键脚本里已经内置，不安装也可以</span></span><br><span class=\"line\">yum -y install protobuf</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装-hiredis\"><a href=\"#安装-hiredis\" class=\"headerlink\" title=\"安装 hiredis\"></a>安装 hiredis</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在 SSH 界面安装，下图是终端界面</span></span><br><span class=\"line\">yum -y install hiredis</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210331230935.png\"></p>\n<h2 id=\"安装-mysql-client\"><a href=\"#安装-mysql-client\" class=\"headerlink\" title=\"安装 mysql_client\"></a>安装 mysql_client</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在 SSH 界面安装，下图是终端界面</span></span><br><span class=\"line\">yum -y install mysql</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210331231222.png\"></p>\n<h2 id=\"安装-log4cxx\"><a href=\"#安装-log4cxx\" class=\"headerlink\" title=\"安装 log4cxx\"></a>安装 log4cxx</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在 SSH 界面安装，下图是终端界面</span></span><br><span class=\"line\">yum -y install log4cxx</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210331231457.png\"></p>\n<h1 id=\"编译篇（服务端）\"><a href=\"#编译篇（服务端）\" class=\"headerlink\" title=\"编译篇（服务端）\"></a>编译篇（服务端）</h1><h2 id=\"下载源代码\"><a href=\"#下载源代码\" class=\"headerlink\" title=\"下载源代码\"></a>下载源代码</h2><p>代码下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vcHdzbnMvY2xvdWR0YWxr\">https://gitee.com/pwsns/cloudtalk<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210331232205.png\"></p>\n<p><code>winscp</code> 连接到 <code>CentOS</code>，将下载的 <code>pwsns-cloudtalk-master.zip</code> 后上传到服务器</p>\n<blockquote>\n<p>在安装 <code>CentOS</code> 的时候，除了 <code>root</code> 外还建了一个用户 <code>swb</code>，所以把文件上传到 <code>/home/swb/</code> 目录</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210404163910.png\"></p>\n<h2 id=\"编译服务\"><a href=\"#编译服务\" class=\"headerlink\" title=\"编译服务\"></a>编译服务</h2><p>文件解压</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /home/swb/</span><br><span class=\"line\"></span><br><span class=\"line\">unzip pwsns-cloudtalk-master.zip</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210404164011.png\"></p>\n<p>进入  <code>cloudtalk/server/src/</code> 目录，在当前目录执行</p>\n<h3 id=\"gitee-新版本\"><a href=\"#gitee-新版本\" class=\"headerlink\" title=\"gitee 新版本\"></a>gitee 新版本</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入 install.sh 所在目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> cloudtalk/server/src/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果是在 windows 上解压后再上传的，一定要加上执行权限</span></span><br><span class=\"line\">chmod +x c_build.sh</span><br><span class=\"line\">chmod +x install.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 执行 install.sh</span></span><br><span class=\"line\">./install.sh</span><br></pre></td></tr></table></figure>\n\n<p>编译的时间有点长，编译完成后会在 <code>cloudtalk/server</code> 目录中生成  <code>cloudtalk-server-3.0.1.tar.gz</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210404165824.png\"></p>\n<h3 id=\"老版本\"><a href=\"#老版本\" class=\"headerlink\" title=\"老版本\"></a>老版本</h3><blockquote>\n<p>所谓老版本是在网上找到的一个 <code>2.0.3</code> 版本的，可以忽略；</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入 install.sh 所在目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> cloudtalk/server/src/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 依次执行脚本</span></span><br><span class=\"line\">./make_protobuf.sh</span><br><span class=\"line\">./make_log4cxx.sh</span><br><span class=\"line\">./make_hiredis.sh</span><br><span class=\"line\">./make_mariadb.sh</span><br><span class=\"line\">./build.sh version 2.0.3</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>执行 <code>./make_mariadb.sh</code> 可能会有错误，可以不管；</p>\n</blockquote>\n<p>编译的时间有点长，编译完成后会在 <code>cloudtalk/server</code> 目录中生成  <code>im-server-2.0.3.tar.gz</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210406044953.png\"></p>\n<p>未完待续，下周一的内容包含 <code>JAVA</code> 端的编译及项目部署设置。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>cloudtalk: 源代码<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vcHdzbnMvY2xvdWR0YWxr\">https://gitee.com/pwsns/cloudtalk<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>【新提醒】CloudTalk服务端源码编译方法（简版） - 技术文档 - CloudTalk支持计划 - Powered by Discuz!<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iNTYuY24vdGhyZWFkLTYtMS0xLmh0bWw=\">https://b56.cn/thread-6-1-1.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>VMware 安装 Centos7 超详细过程 | 菜鸟教程<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS93M2Nub3RlL3Ztd2FyZS1pbnN0YWxsLWNlbnRvczcuaHRtbA==\">https://www.runoob.com/w3cnote/vmware-install-centos7.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["CentOS","虚拟机","VMware","IM","即时通讯"]},{"title":"仿微信的在线聊天软件DuckChat","url":"/2021/04/12/%E4%BB%BF%E5%BE%AE%E4%BF%A1%E7%9A%84%E5%9C%A8%E7%BA%BF%E8%81%8A%E5%A4%A9%E8%BD%AF%E4%BB%B6DuckChat/","content":"<p><strong>什么是 DuckChat ？</strong></p>\n<blockquote>\n<p>DuckChat 是一款安全的私有聊天软件，基于 PHP 环境，可运行在 Docker 、linux 、Windows 、MacOS 等各种平台上，它帮助我们简化企业办公、客服系统、互联网创业，提供了完善的 IM 相关功能，并提供 Android/iOS/Web 多客户端。</p>\n</blockquote>\n<p>DuckChat 的前身是 Akaxin ，作者由于某些原因，从 Java 切到了 PHP （+Golang ），推出了升级换代的 DuckChat 。但又不知道什么原因， DuckChat 这个项目2年前就已经停止了更新，不确定是闭源了还是停止开发了，但是从官网已关闭来看，应该是停止开发的概率更大一些。</p>\n<blockquote>\n<p>这篇文档是应朋友要求而折腾的，他在找一款开源的即时聊天的工具，要求各端齐全，符合中国人的使用习惯。如果你有合适的，请给我留言</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"前期准备\"><a href=\"#前期准备\" class=\"headerlink\" title=\"前期准备\"></a>前期准备</h2><ol>\n<li><p>  在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>duckchat</code>。</p>\n</li>\n<li><p> 在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vYWxvbmU4OC9kdWNrY2hhdA==\">https://gitee.com/alone88/duckchat<i class=\"fa fa-external-link-alt\"></i></span> 下载源代码。</p>\n</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210324104302.png\"></p>\n<blockquote>\n<p>注意：gitee 需要登录才能下载。</p>\n</blockquote>\n<ol start=\"3\">\n<li> 将下载的 zip 解压到 <code>duckchat</code> 目录</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210324105141.png\"></p>\n<h2 id=\"开始安装\"><a href=\"#开始安装\" class=\"headerlink\" title=\"开始安装\"></a>开始安装</h2><p>用 SSH 客户端连到群晖。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入 duckchat 目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /volume1/docker/duckchat</span><br></pre></td></tr></table></figure>\n\n<p>因为默认的 <code>http</code> 端口使用了 80 ，所以要指定端口来启动服务</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo sh duckchat.sh -http=11180</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210324105935.png\"></p>\n<p>启动成功后，可以在 Docker 中看到状态</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210324110212.png\"></p>\n<p>安装设置完成后，<code>duckchat</code> 目录中多了一个 <code>duckchat_private</code> 目录，存储了数据库和日志文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210324111357.png\"></p>\n<h1 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h1><p>在浏览器中输入 <code>http://群晖IP:11180</code>，就可以看到登录界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210324121041.png\"></p>\n<p>填写 <code>邀请码</code>，默认是用的 <code>SQLite</code> 做数据库</p>\n<blockquote>\n<p>注意：邀请码一定要填，后面用户注册需要用到，不填是注册不了的。</p>\n</blockquote>\n<p>当然用 <code>MySQL</code> 做数据库也没问题</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">内容</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">地址</td>\n<td align=\"center\"><code>127.0.0.1</code></td>\n</tr>\n<tr>\n<td align=\"center\">端口</td>\n<td align=\"center\"><code>3306</code></td>\n</tr>\n<tr>\n<td align=\"center\">数据库</td>\n<td align=\"center\"><code>duckchat</code></td>\n</tr>\n<tr>\n<td align=\"center\">用户名</td>\n<td align=\"center\"><code>root</code></td>\n</tr>\n<tr>\n<td align=\"center\">密码</td>\n<td align=\"center\"><code>duckchat@akaxin</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210324121210.png\"></p>\n<blockquote>\n<p>注意：此 MySQL 无法从宿主机直接访问，必须在 Docker 内部访问。</p>\n</blockquote>\n<p>然后 <code>初始化数据</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210324110551.png\"></p>\n<p>注册一个用户</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210324110916.png\"></p>\n<p><code>下一步</code>，输入前面设置的<code>邀请码</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210324121630.png\"></p>\n<p><code>注册并登陆</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210324121755.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><h2 id=\"Web-端\"><a href=\"#Web-端\" class=\"headerlink\" title=\"Web 端\"></a>Web 端</h2><p><code>DuckChat</code> 天然支持 <code>Web</code> 网页，这种方式免去了安装客户端的烦恼，做到了即开即用，在浏览器中输入 <code>http://群晖IP:11180</code> 即可。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210324125655.png\"></p>\n<h2 id=\"Android-端\"><a href=\"#Android-端\" class=\"headerlink\" title=\"Android 端\"></a>Android 端</h2><p>因为官网已经关闭，所以原来的下载地址已经失效了，不过用度娘还是能找到的，我下的版本是 <code>v1.1.0</code></p>\n<p>从启动界面看，<code>DuckChat</code>  给自己定位是社交浏览器，而不仅仅是个聊天工具</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210324135055.png\"></p>\n<p>在 <code>Web</code> 端没有找到生成二维码的地方，所以需要我们手动输入服务器的地址</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210324135256.png\"></p>\n<blockquote>\n<p>注意：官网已关闭，所以 <code>试用站点</code> 是连不上的；</p>\n</blockquote>\n<p>连接服务器成功后，需要登录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210324135530.png\"></p>\n<p>登录成功后，主页会显示错误，原因还是官网已经关闭导致的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210324135638.png\"></p>\n<p><code>通讯录</code> 界面，能看到好友和群组</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210324135724.png\"></p>\n<p><code>我</code> 界面，能看到版本信息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210324135823.png\"></p>\n<h2 id=\"iOS-端\"><a href=\"#iOS-端\" class=\"headerlink\" title=\"iOS 端\"></a>iOS 端</h2><p>没有 iOS 设备，所以没试，按官方的说法可以在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9pdHVuZXMuYXBwbGUuY29tL2NuL2FwcC9kdWNrY2hhdC9pZDE0MzQxNTM1MTI/bD1lbiZtdD04\">AppStore官方下载<i class=\"fa fa-external-link-alt\"></i></span>，只是这么久没人维护，不知道是否已经被下架了？</p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>没有找到手机客户端 APP 的源代码，所以最多只能当个网页聊天系统来用。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>duckchat: 一个安全的私有IM聊天软件<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vYWxvbmU4OC9kdWNrY2hhdA==\">https://gitee.com/alone88/duckchat<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>duckchat/gaga<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2R1Y2tjaGF0L2dhZ2E=\">https://github.com/duckchat/gaga<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>DuckChat使用指引 - DuckChat Using Guide<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly95ZXNoYW84ODguZ2l0ZWUuaW8vZHVja2NoYXRndWlkZS8=\">https://yeshao888.gitee.io/duckchatguide/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>免费分享：一款DuckChat聊天系统 PHP仿微信在线聊天源码-老6源码<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubDYwNS5jb20vNDY1Ny5odG1s\">https://www.l605.com/4657.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>开源项目：采用 PHP 编写的聊天软件，简直就是一个完整的迷你版微信 | Laravel China 社区<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybmt1LmNvbS9hcnRpY2xlcy8xNzcxNA==\">https://learnku.com/articles/17714<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>duckchat app下载-duckchat下载v1.1.0 安卓版-绿色资源网<br>地址：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5kb3duY2MuY29tL3NvZnQvMzY2Mjg0Lmh0bWw=\">http://www.downcc.com/soft/366284.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","IM","即时通讯"]},{"title":"开源的群晖助手APP","url":"/2021/04/09/%E5%BC%80%E6%BA%90%E7%9A%84%E7%BE%A4%E6%99%96%E5%8A%A9%E6%89%8BAPP/","content":"<blockquote>\n<p>申明：本文大部分图来自官方文档，少量为自己手机上截取。</p>\n</blockquote>\n<p>群晖的 WEB 端管理做的很棒，但是手机版却没有一款很好用的管理软件。在我的手机中几乎安装了群晖的全家桶，包括 <code>群晖管家</code>、<code>DS file</code>、<code>DS video</code>、<code>DS photo</code>、<code>DS audio</code>、<code>Drive</code>、<code>Moments</code>等等，基本上是一个功能一个 APP，用起来特别不方便。其实不光是我，<code>群晖助手</code> 的作者也一样，所以这位开发达人花时间开发了这么一款集常用功能于一身的管理软件，目标是让你卸载掉所有群晖官方 APP。</p>\n<p>因为 <code>NAS</code> 上存储的是个人隐私或重要资料，所以作者为了让大家放心使用，将这款功能强大的 APP 给开源了，开源地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vY2hhbGxlbmdlclYvZHNtX2hlbHBlcg==\">https://gitee.com/challengerV/dsm_helper<i class=\"fa fa-external-link-alt\"></i></span>，你完全可以自己下载编译。</p>\n<p>如果你和我一样只是使用，可以在这个页面下载到最新的 <code>Android</code> 版本：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vY2hhbGxlbmdlclYvZHNtX2hlbHBlci9yZWxlYXNlcy8=\">https://gitee.com/challengerV/dsm_helper/releases/<i class=\"fa fa-external-link-alt\"></i></span>，而 <code>iOS</code> 版本暂未上架苹果商店，只能通过 <code>Test Flight</code> 下载安装，具体流程则需要加官方的群看群公告。</p>\n<p>软件支持自动升级，非常省心，目前更新很频繁。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210408095341.png\"></p>\n<h1 id=\"界面\"><a href=\"#界面\" class=\"headerlink\" title=\"界面\"></a>界面</h1><p>现在什么都看颜值，软件也不例外，<code>群晖助手</code> 采用了新拟态设计风格，看起来非常清新和精致</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210407175719.png\"></p>\n<p>支持主题颜色的更换</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210408111008.png\"></p>\n<p>默认是亮色的，暗色下拟态效果就不明显了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210408095152.png\"></p>\n<h1 id=\"功能\"><a href=\"#功能\" class=\"headerlink\" title=\"功能\"></a>功能</h1><p>主界面【控制台】主要显示群晖右侧的 <code>小工具</code> 的信息，支持系统状况、存储、资源监控、目前连接用户、计划任务、最新日志、缓存状态，查看系统消息，查看套件信息。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210407175719.png\"></p>\n<p>【文件】查看的是 <code>File Station</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210408102416.png\"></p>\n<p>支持查看文件/文件夹详情、下载文件、压缩/解压、共享文件/文件夹、创建文件请求、重命名、收藏、删除、新建文件夹、管理共享链接、搜索文件、查看收藏文件等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210408104657.png\"></p>\n<p>【下载】查看从 <code>文件</code> 下载的内容</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210408104827.png\"></p>\n<p>【设置】操作群晖关机、重启、开启/关闭SSH、设置APP主题颜色（亮色/暗色/跟随系统）、终端、相册备份（未完成）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210408105009.png\"></p>\n<h1 id=\"菜单\"><a href=\"#菜单\" class=\"headerlink\" title=\"菜单\"></a>菜单</h1><h2 id=\"主菜单\"><a href=\"#主菜单\" class=\"headerlink\" title=\"主菜单\"></a>主菜单</h2><p>左上角的主菜单</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210408111612.png\"></p>\n<p>目前支持 【控制面板】、【套件中心】、【资源监控】、【Virtual Machine Manager】、【Docker】等</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210408112435.png\"></p>\n<p>【控制面板】支持设置共享文件夹、用户账户（仅查看）、用户群组（仅查看）、信息中心（常规、网络、存储）、任务计划（运行、查看运行记录）  </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210408112740.png\"></p>\n<p>【套件中心】查看全部套件、社群套件、已安装套件，启用/停用套件，安装/卸载套件  </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210408112820.png\"></p>\n<p>【资源监控】性能（CPU、内存、网络、磁盘、存储空间性能情况），任务管理器（服务、进程）  </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210408112847.png\"></p>\n<p>【Virtual Machine Manager】查看主机、虚拟机、存储情况，支持启动/关闭虚拟机  </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210408112909.png\"></p>\n<p>【Docker】查看Docker容器运行情况，支持启动/停止容器</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210408112931.png\"></p>\n<h2 id=\"小工具菜单\"><a href=\"#小工具菜单\" class=\"headerlink\" title=\"小工具菜单\"></a>小工具菜单</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210408113539.png\"></p>\n<p>可以设置显示的内容</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210408113653.png\"></p>\n<h2 id=\"消息菜单\"><a href=\"#消息菜单\" class=\"headerlink\" title=\"消息菜单\"></a>消息菜单</h2><p>当有新消息时，图标上会有红点</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210408114208.png\"></p>\n<h2 id=\"用户切换\"><a href=\"#用户切换\" class=\"headerlink\" title=\"用户切换\"></a>用户切换</h2><p> 这是我用的比较多的功能</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210408114416.png\"></p>\n<p>因为同一台群晖有 3 个地址</p>\n<ul>\n<li>局域网IP</li>\n<li><code>frp</code> 内网穿透后的域名</li>\n<li><code>tailscale vpn</code> 的 IP</li>\n</ul>\n<blockquote>\n<p>还不了解 <code>tailscale</code> 的，可以看看 <a href=\"https://laosu.ml/2020/11/04/%E5%A4%96%E7%BD%91%E8%AE%BF%E9%97%AE%E7%BE%A4%E6%99%96%E7%9A%84%E6%96%B0%E6%96%B9%E6%A1%88Tailscale\">外网访问群晖的新方案Tailscale</a></p>\n</blockquote>\n<p>在外网没有开启 <code>tailscale</code> 的情况下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210408115321.png\"></p>\n<p>开启了 <code>tailscale</code> 的情况下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210408115503.png\"></p>\n<p>有没有发现，APP 会自动检测账号的可用性，这个设计实在是太贴心了。</p>\n<p>如果你有什么需求和建议，赶紧去向作者反馈吧。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>群晖助手: 源代码<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vY2hhbGxlbmdlclYvZHNtX2hlbHBlcg==\">https://gitee.com/challengerV/dsm_helper<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>【群晖助手】功能强大的群晖管理软件，秒杀官方APP | OPENOS-服务器论坛-VPS-黑群晖-NAS-网络存储<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3Blbm9zLm9yZy90aHJlYWRzL2FwcC4zMDUyLw==\">https://www.openos.org/threads/app.3052/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","工具","app"]},{"title":"轻量级相册程序lychee","url":"/2021/04/05/%E8%BD%BB%E9%87%8F%E7%BA%A7%E7%9B%B8%E5%86%8C%E7%A8%8B%E5%BA%8Flychee/","content":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>Lychee 是一个免费的美观且易于使用的照片管理系统，可以在您的服务器或网站空间上运行。安装仅需几秒钟。支持上传，管理和共享照片，因为支持中文，所以使用起来比较简单，在国内 NAS 用户中很受欢迎。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>依然还是在群晖上以 Docker 方式安装。这次有 2 个镜像可供选择，一个是 <code>80x86/lychee</code>，国内中文的教程基本上都是用的这个，可惜已经很久没更新了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/11/1613023477758-1613023477760.png\" alt=\"title\"></p>\n<p>这个版本安装出来的版本信息还是 <code>4.0.0</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/11/1613023599223-1613023599224.png\" alt=\"title\"></p>\n<p>另一个选择是官方的 <code>lycheeorg/lychee</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/11/1613023712979-1613023712981.png\" alt=\"title\"></p>\n<p>这个版本安装出来的版本信息是最新的 <code>4.2.1</code></p>\n<blockquote>\n<p>本文完成于2021年2月10日，目前的最新版本已经是 <code>4.2.2</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/11/1613023654284-1613023654287.png\" alt=\"title\"></p>\n<p>我之前也是安装的 <code>80x86/lychee</code>，一开始之所以选这个版本，是因为这个版本支持 <code>SQLite</code>，这个符合我们对轻量级的要求。但实际上我研究了一下官方的<br> <code>lycheeorg/lychee</code> 版本，可以选择 <code>SQLite</code> 或者 <code>MySQL</code>。</p>\n<p><strong>所以我个人建议，如果你是新安装的话，还是安装官方的最新版本比较好。</strong></p>\n<h2 id=\"80x86-版\"><a href=\"#80x86-版\" class=\"headerlink\" title=\"80x86 版\"></a>80x86 版</h2><p>在 docker 注册表中搜索 <code>lychee</code> ，选择第三个 <code>80x86/lychee</code>，版本 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210210193344.png\"></p>\n<h3 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h3><table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">/docker/lychee/photo</td>\n<td align=\"center\">/uploads</td>\n</tr>\n<tr>\n<td align=\"center\">/docker/lychee/conf</td>\n<td align=\"center\">/conf</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/11/1613029901805-1613029901807.png\" alt=\"title\"></p>\n<h3 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h3><p>默认端口 <code>80</code> 是不能用的</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">3800</td>\n<td align=\"center\">80</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210210193607.png\"></p>\n<h2 id=\"官方版\"><a href=\"#官方版\" class=\"headerlink\" title=\"官方版\"></a>官方版</h2><p>在 docker 注册表中搜索 <code>lychee</code> ，选择第四个 <code>lycheeorg/lychee</code>，版本 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/11/1613019080101-1613019080104.png\" alt=\"title\"></p>\n<h3 id=\"卷-1\"><a href=\"#卷-1\" class=\"headerlink\" title=\"卷\"></a>卷</h3><table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">/docker/lychee/photo</td>\n<td align=\"center\">/uploads</td>\n</tr>\n<tr>\n<td align=\"center\">/docker/lychee/conf</td>\n<td align=\"center\">/conf</td>\n</tr>\n<tr>\n<td align=\"center\">/docker/lychee/sym</td>\n<td align=\"center\">/sym</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/11/1613029867107-1613029867108.png\" alt=\"title\"></p>\n<h3 id=\"端口-1\"><a href=\"#端口-1\" class=\"headerlink\" title=\"端口\"></a>端口</h3><p>默认端口 <code>80</code> 是不能用的</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">3800</td>\n<td align=\"center\">80</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>如果你和我一样先安装了 <code>80x86/lychee</code> 来做对比，建议你把本地端口和我一样改成 <code>3900</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210210193607.png\"></p>\n<h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><p>如果你和我一样选择用 <code>SQLite</code>，环境可以不用管，如果你要用 <code>MySQL</code>，可以参考官方的说明 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9yZWdpc3RyeS5odWIuZG9ja2VyLmNvbS9yL2x5Y2hlZW9yZy9seWNoZWUvI3J1bi13aXRoLWRvY2tlcg==\">Run with Docker 章节 (https://registry.hub.docker.com/r/lycheeorg/lychee/)<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:3800</code>，就可以看到相册的页面了，第一次需要注册用户</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/10/1612958293411-1612958293449.png\" alt=\"title\"></p>\n<p>填写用户名和密码，然后点 <code>Create Login</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/10/1612958343686-1612958343689.png\" alt=\"title\"></p>\n<p>点主界面左上角的齿轮，可以进入设置界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/10/1612958414347-1612958414348.png\" alt=\"title\"></p>\n<p>设置为 <code>简体中文</code>，然后点 <code>Change Language</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/10/1612958518463-1612958518465.png\" alt=\"title\"></p>\n<p>不需要重启和刷新，但是很明显的并不彻底</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/10/1612959095213-1612959095214.png\" alt=\"title\"></p>\n<p>点主界面右上角的加号，会弹出菜单，你会发现 <code>lychee</code> 支持多种导入方式</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/10/1612959192534-1612959192536.png\" alt=\"title\"></p>\n<p><code>新建相册</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/10/1612961804064-1612961804065.png\" alt=\"title\"></p>\n<p>点主界面右上角的加号，<code>上传相片</code>，会显示文件列表</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/10/1612962187240-1612962187242.png\" alt=\"title\"></p>\n<p>上传成功后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/10/1612962239254-1612962239255.png\" alt=\"title\"></p>\n<p>回到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/10/1612962305409-1612962305412.png\" alt=\"title\"></p>\n<p>可以将相册 <code>设为公开</code>，这样别人可以不用登录就能看到，这个适合用来做图床，当然也可以设置密码保护</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/10/1612962334277-1612962334278.png\" alt=\"title\"></p>\n<p>如果没有公开相册，在没有登录的情况下就真的什么都没有，所以安全性还是有保障的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/11/1613007233985-1613007234018.png\" alt=\"title\"></p>\n<p>支持 <code>EXIF</code> 和 <code>IPTC</code> 元数据，没有存储限制，没有压缩，这一点比较适合摄影师</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/10/1612962612355-1612962612360.png\" alt=\"title\"></p>\n<p>更多 <code>lychee</code> 相册的设置和使用方法，可以找找网上的教程！</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Lychee — Self-hosted photo-management done right<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9seWNoZWVvcmcuZ2l0aHViLmlvLw==\">https://lycheeorg.github.io/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>LycheeOrg/Lychee: 源代码<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0x5Y2hlZU9yZy9MeWNoZWU=\">https://github.com/LycheeOrg/Lychee<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>使用群晖Docker功能 三分钟安装轻量的相册程序 lychee 荔枝相册_存储设备_什么值得买<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2FwemUwcGw3Lw==\">https://post.smzdm.com/p/apze0pl7/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>威联通Docker教程 篇七：三分钟安装荒野无灯大佬的荔枝相册，分享美照，NAS里的轻量级相册镜像！_NAS存储_什么值得买<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2F6NTAycDM1Lw==\">https://post.smzdm.com/p/az502p35/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","相册"]},{"title":"在线协同表格SeaTable（设置篇）","url":"/2021/04/02/%E5%9C%A8%E7%BA%BF%E5%8D%8F%E5%90%8C%E8%A1%A8%E6%A0%BCSeaTable%EF%BC%88%E8%AE%BE%E7%BD%AE%E7%AF%87%EF%BC%89/","content":"<h1 id=\"目录说明\"><a href=\"#目录说明\" class=\"headerlink\" title=\"目录说明\"></a>目录说明</h1><p><code>/docker/seatable</code> 是主目录，其中的几个主要目录说明如下：</p>\n<ul>\n<li>  /mysql：这是 MySQL 数据的卷目录。</li>\n<li>  /seatable：这是 SeaTable 服务器配置和数据的目录。</li>\n<li>  /seatable/logs：这是 SeaTable 日志的目录。</li>\n<li>  /seatable/conf：这是 SeaTable 设置文件的存放目录。</li>\n<li>  /nginx-logs：这是 Nginx 日志的目录。</li>\n<li>  /ssl：这是 SSL 证书的目录。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210323172206.png\"></p>\n<h1 id=\"高级设置\"><a href=\"#高级设置\" class=\"headerlink\" title=\"高级设置\"></a>高级设置</h1><p>所有配置文件都在 <code>/seatable/conf/</code> 下。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210323163140.png\"></p>\n<p>这些参数修改保存后，您需要重新启动 <code>SeaTable</code> 服务才能生效。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker <span class=\"built_in\">exec</span> -d seatable /shared/seatable/scripts/seatable.sh restart</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"用户注册\"><a href=\"#用户注册\" class=\"headerlink\" title=\"用户注册\"></a>用户注册</h2><p>除了在用户管理中通过管理员导入和添加用户外，<code>SeaTable</code> 是支持用户自己注册的</p>\n<p>在 <code>/docker/seatable/seatable/conf</code> 目录中，打开 <code>dtable_web_settings.py</code> 文件，添加下面这段</p>\n<figure class=\"highlight py\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 启用或禁用web注册。默认值为“False”。</span></span><br><span class=\"line\">ENABLE_SIGNUP = <span class=\"literal\">True</span></span><br></pre></td></tr></table></figure>\n\n<p>修改完成后您需要重新启动 <code>SeaTable</code>，以便更改生效。</p>\n<p>对比之前的登录界面，多了 <code>忘记密码</code> 和 <code>注册</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210323162049.png\"></p>\n<p>关于用户管理更详细的设置说明，请看官方文档的描述。地址在: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnNlYXRhYmxlLmNuL3B1Ymxpc2hlZC9zZWF0YWJsZS1tYW51YWwvY29uZmlnL2R0YWJsZV93ZWJfc2V0dGluZ3MubWQ=\">https://docs.seatable.cn/published/seatable-manual/config/dtable_web_settings.md<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"邮件通知\"><a href=\"#邮件通知\" class=\"headerlink\" title=\"邮件通知\"></a>邮件通知</h2><p>有些操作 <code>SeaTable</code>  会发送邮件通知，比如用户重置了密码等，要实现该功能，同样还是修改 <code>dtable_web_settings.py</code> 文件，通过添加以下行，来启用电子邮件发送。</p>\n<figure class=\"highlight py\"><table><tr><td class=\"code\"><pre><span class=\"line\">EMAIL_USE_TLS = <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># smpt server</span></span><br><span class=\"line\">EMAIL_HOST = <span class=\"string\">&#x27;smtp.example.com&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># username and domain</span></span><br><span class=\"line\">EMAIL_HOST_USER = <span class=\"string\">&#x27;username@example.com&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># password</span></span><br><span class=\"line\">EMAIL_HOST_PASSWORD = <span class=\"string\">&#x27;password&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_PORT = <span class=\"number\">25</span></span><br><span class=\"line\">DEFAULT_FROM_EMAIL = EMAIL_HOST_USER</span><br><span class=\"line\">SERVER_EMAIL = EMAIL_HOST_USER</span><br></pre></td></tr></table></figure>\n\n<p>关于邮件发送的更详细的设置说明，请看官方文档的描述。地址在: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnNlYXRhYmxlLmNuL3B1Ymxpc2hlZC9zZWF0YWJsZS1tYW51YWwvY29uZmlnL3NlbmRpbmdfZW1haWwubWQ=\">https://docs.seatable.cn/published/seatable-manual/config/sending_email.md<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"启用模板\"><a href=\"#启用模板\" class=\"headerlink\" title=\"启用模板\"></a>启用模板</h2><p>新建群组 <code>Template</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210328111117.png\"></p>\n<p>从 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbG91ZC5zZWF0YWJsZS5jbi9kdGFibGUvZXh0ZXJuYWwtbGlua3MvYzI1MDM5ZTQ4MWU1NDNlNGEyZTgvP3RpZD1vRDRjJnZpZD0wMDAw\">https://cloud.seatable.cn/dtable/external-links/c25039e481e543e4a2e8/?tid=oD4c&amp;vid=0000<i class=\"fa fa-external-link-alt\"></i></span> 右上角导出 <code>templates-and-plugins.dtable</code>，如果扩展名为 <code>zip</code>，重命名一下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210328110827.png\"></p>\n<p><code>添加表格</code> –&gt; <code>从文件导入</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210328110404.png\"></p>\n<p>在表格的下拉菜单 <code>高级</code>-&gt; <code>API Token</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210328110606.png\"></p>\n<p>生成 <code>API Token</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210328105711.png\"></p>\n<p>在 <code>dtable_web_settings.py</code> 中加入以下配置：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">TEMPLATE_BASE_API_TOKEN = <span class=\"string\">&#x27;e43d6afc32db92e35f9b37f8052f9028c4ec0a5b&#x27;</span>  </span><br><span class=\"line\">TEMPLATE_TABLE_NAME = <span class=\"string\">&#x27;templates&#x27;</span></span><br><span class=\"line\">ENABLE_CREATE_BASE_FROM_TEMPLATE = <span class=\"literal\">True</span></span><br><span class=\"line\">SHOW_TEMPLATES_LINK = <span class=\"literal\">True</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210328105822.png\"></p>\n<p>从 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXJrZXQuc2VhdGFibGUuY24v\">https://market.seatable.cn/<i class=\"fa fa-external-link-alt\"></i></span> 下载你需要的模板，比如 <code>软件项目管理</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210328111430.png\"></p>\n<p>进入，选 <code>查看</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210328111551.png\"></p>\n<p>同样也是从右上角 <code>导出</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210328111801.png\"></p>\n<blockquote>\n<p>如果下载的格式为 <code>zip</code>，手动改为 <code>dtable</code></p>\n</blockquote>\n<p><code>添加表格</code> –&gt; <code>从文件导入</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210328112138.png\"></p>\n<p>导入成功后就能看到了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210328112236.png\"></p>\n<p><code>共享</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210328112343.png\"></p>\n<p><code>生成外链</code>，然后复制外链</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210328112807.png\"></p>\n<p>打开 <code>templates-and-plugins</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210328112942.png\"></p>\n<p>找到 <code>软件项目管理</code>，将刚才的复制的外链替换原来的链接地址</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210328113354.png\"></p>\n<p>接下来重复上述步骤可以添加其他的模板。</p>\n<blockquote>\n<p>对于用不上的模板，直接删了吧</p>\n</blockquote>\n<p>接下来通过 <code>添加表格</code> –&gt; <code>从模板创建</code> 来验证一下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210328113621.png\"></p>\n<p>找到 <code>软件项目管理</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210328113744.png\"></p>\n<blockquote>\n<p>之所以这么丑，是因为 <code>templates-and-plugins</code> 表中的 <code>card_images</code> 和 <code>card_images</code> 没有上传图片</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210328113920.png\"></p>\n<p>选择 <code>使用模板</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210328114141.png\"></p>\n<p>创建成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210328114252.png\"></p>\n<p>打开看看</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210328114344.png\"></p>\n<h2 id=\"插件安装\"><a href=\"#插件安装\" class=\"headerlink\" title=\"插件安装\"></a>插件安装</h2><p><code>SeaTable</code> 官方插件市场已经支持 4 款插件，插件的下载地址： <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXJrZXQuc2VhdGFibGUuY24vcGx1Z2lucy8=\">https://market.seatable.cn/plugins/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210323165409.png\"></p>\n<p>先从插件市场下载，然后去后台 <code>上传插件</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210323165607.png\"></p>\n<p>上传成功后就能看到了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210323165731.png\"></p>\n<p>把官网的几个插件都添加上去了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210328120601.png\"></p>\n<p>随便打开一个文档，<code>添加插件</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210328120737.png\"></p>\n<p>可以 <code>放置到工具栏</code>，这样用起来会方便一些</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210328121704.png\"></p>\n<blockquote>\n<p>每个表格文件都需要单独设置插件</p>\n</blockquote>\n<h3 id=\"地图插件\"><a href=\"#地图插件\" class=\"headerlink\" title=\"地图插件\"></a>地图插件</h3><p>地图插件是不能用的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210328122013.png\"></p>\n<p>估计有2个原因：</p>\n<ol>\n<li> 公用账号的配额不够</li>\n<li> 国内用不了 Google Maps</li>\n</ol>\n<p>在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb3J1bS5zZWF0YWJsZS5pby90L2hvdy10by1pbnN0YWxsLXBsdWdpbnMtb24tc2VsZi1ob3N0ZWQvMTUw\">https://forum.seatable.io/t/how-to-install-plugins-on-self-hosted/150<i class=\"fa fa-external-link-alt\"></i></span> 中，有人说 <code>The map plugin requires a google map account, which can’t be used in self-hosted version.</code></p>\n<p>查阅了一下开发文档 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NlYXRhYmxlL3NlYXRhYmxlLXBsdWdpbi1tYXA=\">https://github.com/seatable/seatable-plugin-map<i class=\"fa fa-external-link-alt\"></i></span>，需要先去 Google Maps 申请授权的开发密钥，修改配置后再编译上传。有开发基础的可以自己下代码试试。</p>\n<h2 id=\"用户手册\"><a href=\"#用户手册\" class=\"headerlink\" title=\"用户手册\"></a>用户手册</h2><p>默认左侧的 <code>使用手册</code> 打开是个空页面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210328123526.png\"></p>\n<p>修改 <code>dtable_web_settings.py</code> 文件，新增</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 帮助链接</span></span><br><span class=\"line\">HELP_LINK = <span class=\"string\">&#x27;https://docs.seatable.cn/published/seatable-user-manual/home.md&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 视频教程链接</span></span><br><span class=\"line\">VIDEO_TUTORIALS_LINK = <span class=\"string\">&#x27;https://www.zhihu.com/org/seatable/zvideos&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210328123808.png\"></p>\n<p>重新启动 <code>SeaTable</code> 服务后，刷新页面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210328123909.png\"></p>\n<h2 id=\"和-Seafile-集成\"><a href=\"#和-Seafile-集成\" class=\"headerlink\" title=\"和 Seafile 集成\"></a>和 Seafile 集成</h2><p>对接 <code>Seafile</code> 后，用户可以在文件列类型中选择 <code>Seafile</code> 中的文件，也可以把文件转存到 <code>Seafile</code> 中。</p>\n<p>以前用过 <code>Seafile</code> 的 Windows 版，改用群晖后还没装过，所以也没办法测试，不过好在官方有详细的说明，地址在：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnNlYXRhYmxlLmNuL3B1Ymxpc2hlZC9zZWF0YWJsZS1tYW51YWwvY29uZmlnL2ludGVncmF0ZS13aXRoLXNlYWZpbGUubWQ=\">https://docs.seatable.cn/published/seatable-manual/config/integrate-with-seafile.md<i class=\"fa fa-external-link-alt\"></i></span></p>\n<blockquote>\n<p>建议将 <code>Seafile</code> 和 <code>seatable</code> 在两个不同的机器上部署，因为 <code>seatable</code> 有内置的  <code>Seafile</code> ，为了避免出现冲突，分开比较好。</p>\n</blockquote>\n<h2 id=\"版本升级\"><a href=\"#版本升级\" class=\"headerlink\" title=\"版本升级\"></a>版本升级</h2><p>因为我们安装的已经是最新版，所以暂时不需要升级。</p>\n<p>官方有详细的说明，地址在：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnNlYXRhYmxlLmNuL3B1Ymxpc2hlZC9zZWF0YWJsZS1tYW51YWwvdXBncmFkZS91cGdyYWRlX21hbnVhbC1jZS5tZA==\">https://docs.seatable.cn/published/seatable-manual/upgrade/upgrade_manual-ce.md<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"遗留问题\"><a href=\"#遗留问题\" class=\"headerlink\" title=\"遗留问题\"></a>遗留问题</h1><h2 id=\"部署-Https-失败\"><a href=\"#部署-Https-失败\" class=\"headerlink\" title=\"部署 Https 失败\"></a>部署 Https 失败</h2><p>通过群晖的反向代理 + frp + 泛域名证书来实现</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210323171738.png\"></p>\n<p>但是这种方法只能看到登录界面，登录成功后有错误显示</p>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210324085531.png\"></p>\n<p>在  <code>dtable_web_settings.py</code> 文件最后加上一行</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">DEBUG = <span class=\"literal\">True</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210327115623.png\"></p>\n<p>保存后需要重启 <code>SeaTable</code> 服务，然后刷新页面，依然存在错误</p>\n<blockquote>\n<ol>\n<li>尝试过将 <code>dtable_web_settings.py</code> 中的 <code>http://192.168.0.199:10680</code> 替换成 <code>http://tailscale 的 IP:16080</code>，成功~</li>\n<li>尝试过将 <code>dtable_web_settings.py</code> 中的 <code>http://192.168.0.199:10680</code> 替换成 <code>https://域名</code>，失败~</li>\n</ol>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210329102127.png\"></p>\n<p>暂时没想到怎么处理，先这样吧，直接用 <code>Tailscale 的 IP:16080</code> 也能远程访问，有公网 IP 的就没这么麻烦了。</p>\n<p>如果您正好解决了这个问题，请留言，不胜感激。</p>\n<h1 id=\"常见问题\"><a href=\"#常见问题\" class=\"headerlink\" title=\"常见问题\"></a>常见问题</h1><p><strong>如果由于某种原因安装失败，如何从干净状态重新开始？</strong></p>\n<ul>\n<li>停止容器</li>\n<li>删除目录 <code>/mysql</code> 里的内容</li>\n<li>删除 <code>/seatable</code> 目录</li>\n<li>删除 <code>/nginx-logs</code> 目录</li>\n<li>删除 <code>/ssl</code> 目录</li>\n<li>然后重新开始即可。</li>\n</ul>\n<p>更多问题见:</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbG91ZC5zZWF0YWJsZS5jbi9kdGFibGUvZXh0ZXJuYWwtbGlua3MvM2U2ZGM4ZTI1OWJlNDI3ZWJlZTMvP3RpZD1seGN0JnZpZD0wMDAw\">https://cloud.seatable.cn/dtable/external-links/3e6dc8e259be427ebee3/?tid=lxct&amp;vid=0000<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>这个 FAQ 本身就是基于 <code>SeaTable</code> 实现的。另外也可以多关注一下官方论坛：</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYnMuc2VhdGFibGUuY24v\">官方论坛（中文）（https://bbs.seatable.cn）<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb3J1bS5zZWF0YWJsZS5pby8=\">官方论坛（英文）（https://forum.seatable.io）<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p> SeaTable 使用手册<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnNlYXRhYmxlLmNuL3B1Ymxpc2hlZC9zZWF0YWJsZS11c2VyLW1hbnVhbC9ob21lLm1k\">https://docs.seatable.cn/published/seatable-user-manual/home.md<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>使用 Docker 部署 SeaTable 开发者版<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnNlYXRhYmxlLmNuL3B1Ymxpc2hlZC9zZWF0YWJsZS1tYW51YWwvZG9ja2VyL3NlYXRhYmxlLWNlL0RlcGxveSUyMFNlYVRhYmxlJTIwd2l0aCUyMERvY2tlci5tZA==\">https://docs.seatable.cn/published/seatable-manual/docker/seatable-ce/Deploy%20SeaTable%20with%20Docker.md<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>seatable/seatable-plugin-template: This is an example to show how to write your own plugins<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NlYXRhYmxlL3NlYXRhYmxlLXBsdWdpbi10ZW1wbGF0ZQ==\">https://github.com/seatable/seatable-plugin-template<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>seatable/seatable-plugin-map: Map plugin for SeaTable<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NlYXRhYmxlL3NlYXRhYmxlLXBsdWdpbi1tYXA=\">https://github.com/seatable/seatable-plugin-map<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","表格"]},{"title":"在线协同表格SeaTable（安装篇）","url":"/2021/03/29/%E5%9C%A8%E7%BA%BF%E5%8D%8F%E5%90%8C%E8%A1%A8%E6%A0%BCSeaTable%EF%BC%88%E5%AE%89%E8%A3%85%E7%AF%87%EF%BC%89/","content":"<p><strong>什么是 SeaTable ？</strong></p>\n<blockquote>\n<p>SeaTable 是一款新一代的在线协同表格。它支持“文件”、“图片”、“单选项”、“多选项”、“协作人”等丰富的数据类型。它帮助你方便的记录和管理各种零散的信息，并按照你的所需进行扩展，实现数据处理的自动化和业务流程的自动化。</p>\n</blockquote>\n<p>SeaTable 最初由 Seafile 团队 （<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hhaXdlbi9zZWFmaWxl\">https://github.com/haiwen/seafile<i class=\"fa fa-external-link-alt\"></i></span>） 构建，准备将在线协作表格功能添加到 Seafile ，后来成为了一个单独的项目，暂时尚未开源，但是按官方说法，源代码将在以后上传到 GitHub。</p>\n<p>SeaTable 由以下组件组成</p>\n<ul>\n<li>  dtable-web：用于管理表的网站。</li>\n<li>  dtable-server：存储表并提供协作功能。</li>\n<li>  dtable-events：后台任务，例如电子邮件发送等。</li>\n<li>  seaf-server：存储附件（文件和图像）</li>\n</ul>\n<p>下图显示了不同组件如何协同工作：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210322093908.png\"></p>\n<ul>\n<li>  MariaDB，Memcache 和 Redis 在各自的 Docker 容器中运行。</li>\n<li>  Redis 用于将消息从 dtable-web / dtable-server 发送到 dtable-events</li>\n<li>  所有组件都使用 Memcache 来存储缓存，并使用 MariaDB 来存储永久信息。</li>\n<li>  基础数据保存在 dtable-server 中，并定期保存到文件/对象存储中以进行持久存储。</li>\n<li>  附件保存在文件/对象存储中</li>\n</ul>\n<p>SeaTable 有三个版本</p>\n<ul>\n<li>  开发人员版：适用于希望将 SeaTable 用作数据库并大量使用 API 和脚本的用户。开发人员版对存储，行号和 API 调用没有限制，但最多可以支持 dtable-server 的 200 个并发连接。</li>\n<li>  云版本：适用于希望将 SeaTable 用作协作工具的用户。它对存储，行数和 API 调用有限制。</li>\n<li>  企业版：对存储，行数和 API 调用几乎没有限制，并具有高级权限和用户管理功能。它适用于大型团队以两种方式使用 SeaTable 。用户可以在云中使用它，也可以自行托管。</li>\n</ul>\n<p>SeaTable 官方文档要求 4 核和 8GB RAM，这个要求对我的小 NUC 来说有点挑战，但是还是值得一试的。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"前期准备\"><a href=\"#前期准备\" class=\"headerlink\" title=\"前期准备\"></a>前期准备</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>seatable</code>，然后在 <code>seatable</code> 文件夹中再创建一个新的子文件夹命名为 <code>mysql</code> 。</p>\n<p>在 <code>mysql</code>文件夹上右键–&gt;<code>属性</code>，获取文件的 <code>所在位置</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210323093214.png\"></p>\n<blockquote>\n<p>MySQL 数据的卷目录将用到这个路径</p>\n</blockquote>\n<p>在 <code>seatable</code>文件夹上右键–&gt;<code>属性</code>，获取文件的 <code>所在位置</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210323093558.png\"></p>\n<blockquote>\n<p>SeaTable 数据的卷目录将用到这个路径</p>\n</blockquote>\n<h2 id=\"下载和修改-docker-compose-yml\"><a href=\"#下载和修改-docker-compose-yml\" class=\"headerlink\" title=\"下载和修改 docker-compose.yml\"></a>下载和修改 docker-compose.yml</h2><p>下载 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnNlYXRhYmxlLmNuL2QvMmFmNWM0YmNiOGUxNGYxYjg1ZjcvZmlsZXMvP3A9L2RvY2tlci9zZWF0YWJsZS1jZS9kb2NrZXItY29tcG9zZS55bWwmZGw9MQ==\">docker-compose.yml <i class=\"fa fa-external-link-alt\"></i></span> 文件到 <code>seatable</code> 目录，下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnNlYXRhYmxlLmNuL2QvMmFmNWM0YmNiOGUxNGYxYjg1ZjcvZmlsZXMvP3A9L2RvY2tlci9zZWF0YWJsZS1jZS9kb2NrZXItY29tcG9zZS55bWwmZGw9MQ==\">https://docs.seatable.cn/d/2af5c4bcb8e14f1b85f7/files/?p=/docker/seatable-ce/docker-compose.yml&amp;dl=1<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>然后根据您的环境修改文件， 需要修改以下字段:</p>\n<ul>\n<li>  MySQL 的 root 的密码（MYSQL_ROOT_PASSWORD 和 DB_ROOT_PASSWD）【示例中设为了 <code>aW53Tza</code>，请根据您的需要设置，但是注意密码中不要有 <code>%</code> 号】</li>\n<li>  MySQL 数据的卷目录 (volume）【示例中设为了 <code>/volume1/docker/seatable/mysql</code>，这是前面建好的目录】</li>\n<li>  SeaTable 的镜像标签【示例中设为了 <code>latest</code>，目前最新的版本是 <code>1.8.0</code>】</li>\n<li>  SeaTable 数据的卷目录（volume)【示例中设为了 <code>volume1/docker/seatable</code>，这是前面建好的目录】</li>\n<li>  主机名（SEATABLE_SERVER_HOSTNAME），域名或者你的服务器的外部 IP【示例中设为了 <code>192.168.0.199</code>，这是我群晖的局域网 IP，请根据您的 IP 进行修改】</li>\n<li>  时区（可选）【示例中设为了 <code>Asia/Shanghai</code>】</li>\n</ul>\n<p>下面是我修改过的样例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">&#x27;2.0&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">  <span class=\"attr\">db:</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">mariadb:10.5</span></span><br><span class=\"line\">    <span class=\"attr\">container_name:</span> <span class=\"string\">seatable-mysql</span></span><br><span class=\"line\">    <span class=\"attr\">environment:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">MYSQL_ROOT_PASSWORD=aW53Tza</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">MYSQL_LOG_CONSOLE=true</span></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">/volume1/docker/seatable/mysql:/var/lib/mysql</span></span><br><span class=\"line\">    <span class=\"attr\">networks:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">seatable-net</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">memcached:</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">memcached:1.5.6</span></span><br><span class=\"line\">    <span class=\"attr\">container_name:</span> <span class=\"string\">seatable-memcached</span></span><br><span class=\"line\">    <span class=\"attr\">entrypoint:</span> <span class=\"string\">memcached</span> <span class=\"string\">-m</span> <span class=\"number\">256</span></span><br><span class=\"line\">    <span class=\"attr\">networks:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">seatable-net</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">redis:</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">redis:5.0.7</span></span><br><span class=\"line\">    <span class=\"attr\">container_name:</span> <span class=\"string\">seatable-redis</span></span><br><span class=\"line\">    <span class=\"attr\">networks:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">seatable-net</span></span><br><span class=\"line\">          </span><br><span class=\"line\">  <span class=\"attr\">seatable:</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">seatable/seatable:latest</span></span><br><span class=\"line\">    <span class=\"attr\">container_name:</span> <span class=\"string\">seatable</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&quot;16080:80&quot;</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&quot;16443:443&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">/volume1/docker/seatable:/shared</span></span><br><span class=\"line\">    <span class=\"attr\">environment:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">DB_HOST=db</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">DB_ROOT_PASSWD=aW53Tza</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">SEATABLE_SERVER_LETSENCRYPT=False</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">SEATABLE_SERVER_HOSTNAME=192.168.0.199</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">TIME_ZONE=Asia/Shanghai</span></span><br><span class=\"line\">    <span class=\"attr\">depends_on:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">db</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">memcached</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">redis</span></span><br><span class=\"line\">    <span class=\"attr\">networks:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">seatable-net</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">networks:</span></span><br><span class=\"line\">  <span class=\"attr\">seatable-net:</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"初始化数据库\"><a href=\"#初始化数据库\" class=\"headerlink\" title=\"初始化数据库\"></a>初始化数据库</h2><p>用 SSH 客户端连到群晖。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入 seatable 目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /volume1/docker/seatable</span><br></pre></td></tr></table></figure>\n\n<p>然后使用以下命令初始化数据库</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker-compose up</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>注意：您应该在 <code>docker-compose.yml</code> 文件所在的目录中运行上述命令。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210323102429.png\"></p>\n<p>稍等片刻，下载镜像的时间取决于您的网络，我的网络不太好，过程中总是出现</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">ERROR: net/http: TLS handshake timeout</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210323113236.png\"></p>\n<p>如果报错，您可以再继续执行</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker-compose up</span><br></pre></td></tr></table></figure>\n\n<p>对于已经下载完成的镜像，并不会重复下载，所以您可以当成是支持断点续传的。</p>\n<p>当您在输出日志中看到 <code>This is a idle script (infinite loop) to keep container running</code> 时，数据库已初始化成功。</p>\n<blockquote>\n<p>日志在 <code>Docker</code> –&gt; <code>容器</code> –&gt; <code>SeaTable</code> –&gt; <code>详情</code> –&gt; <code>日志</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210323114953.png\"></p>\n<p>然后按键盘的 <code>Ctrl + C</code> 来结束初始化命令。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210323115039.png\"></p>\n<h2 id=\"启动-Docker-容器\"><a href=\"#启动-Docker-容器\" class=\"headerlink\" title=\"启动 Docker 容器\"></a>启动 Docker 容器</h2><p>使用以下命令启动 SeaTable 容器</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210323115337.png\"></p>\n<p>在 Docker 中你能看到 4 个相关的容器已经启动了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210323121031.png\"></p>\n<h2 id=\"启动-SeaTable-服务\"><a href=\"#启动-SeaTable-服务\" class=\"headerlink\" title=\"启动 SeaTable 服务\"></a>启动 SeaTable 服务</h2><p>现在，您可以启动 SeaTable 服务并创建管理员账号</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 启动 SeaTable 服务</span></span><br><span class=\"line\">docker <span class=\"built_in\">exec</span> -d seatable /shared/seatable/scripts/seatable.sh start</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建一个管理员帐户</span></span><br><span class=\"line\">docker <span class=\"built_in\">exec</span> -it seatable /shared/seatable/scripts/seatable.sh superuser</span><br></pre></td></tr></table></figure>\n\n<p>注意:</p>\n<blockquote>\n<p>第一个命令使用 -d 参数表示要在后台运行的服务;<br>第二个命令使用 -it 参数表示它是一个交互式命令;</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210323152041.png\" alt=\"涂抹邮箱\"></p>\n<p>接下来，您可以通过浏览器访问 <code>SeaTable</code> 网页了。</p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:16080</code>，就可以看到登录界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210323152224.png\"></p>\n<p>用上一步创建的 <code>superuser</code> 的邮箱和密码登录，登录成功就可以看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210323152354.png\"></p>\n<h2 id=\"设置中文\"><a href=\"#设置中文\" class=\"headerlink\" title=\"设置中文\"></a>设置中文</h2><p>右上角 <code>Avatar</code> –&gt; <code>Setting</code> –&gt; <code>Language Setting</code>  从下拉框中选择 <code>简体中文</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210323152924.png\"></p>\n<p>会自动刷新为中文界面</p>\n<h2 id=\"系统管理\"><a href=\"#系统管理\" class=\"headerlink\" title=\"系统管理\"></a>系统管理</h2><p>右上角 <code>Avatar</code> –&gt; <code>进入系统管理</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210323153345.png\"></p>\n<p>在这里可以对用户进行管理，添加插件等操作</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210323153657.png\"></p>\n<h1 id=\"表单编辑问题\"><a href=\"#表单编辑问题\" class=\"headerlink\" title=\"表单编辑问题\"></a>表单编辑问题</h1><p>什么都正常，包括导入excel</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210324090707.png\"></p>\n<p>虽然在导入时有时候会显示服务器忙</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210324085335.png\"></p>\n<p>但是只要编辑就开始转圈，开始还我以为是我机器不行呢，直到朋友 <code>Eduna</code> 告诉我，他也一直在转圈，而我知道他的机器应该是没有性能瓶颈的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210324085156.png\"></p>\n<p>打开浏览器的调试模式，发现 <code>dtable-server</code> 的链接没有带端口</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210327000831.png\"></p>\n<blockquote>\n<p>后来发现论坛里有人反馈了同样的问题： <span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYnMuc2VhdGFibGUuY24vdC90b3BpYy80MTY=\">https://bbs.seatable.cn/t/topic/416<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<p>这需要修改 <code>dtable_web_settings.py</code> 文件中的 <code>DTABLE_SERVER_URL</code>、<code>DTABLE_SOCKET_URL</code>、<code>DTABLE_WEB_SERVICE_URL</code>、<code>FILE_SERVER_ROOT</code>，加上端口 <code>16080</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210327112915.png\"></p>\n<p><code>ccnet.conf</code> 文件中的 <code>SERVICE_URL</code> 也需要加上端口 <code>16080</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210328133519.png\"></p>\n<blockquote>\n<p>这两个文件在 <code>/docker/seatable/seatable/conf</code> 目录中</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210328133717.png\"></p>\n<p>保存后需要重启 <code>SeaTable</code> 服务</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker <span class=\"built_in\">exec</span> -d seatable /shared/seatable/scripts/seatable.sh restart</span><br></pre></td></tr></table></figure>\n\n<p>然后就可以编辑了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210327113555.png\"></p>\n<p>周五将发布『在线协同表格SeaTable（设置篇）』，讲讲怎么导入和使用模板，敬请期待~</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>seatable/seatable: SeaTable: easy like a spreadsheet, powerful like a database<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NlYXRhYmxlL3NlYXRhYmxl\">https://github.com/seatable/seatable<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>jimzucker/upwork-seatable: Seatable Docker Deployment<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ppbXp1Y2tlci91cHdvcmstc2VhdGFibGU=\">https://github.com/jimzucker/upwork-seatable<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>SeaTable - 新一代在线协同表格和信息管理系统<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWF0YWJsZS5jbi8=\">https://seatable.cn/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p> SeaTable 使用手册<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnNlYXRhYmxlLmNuL3B1Ymxpc2hlZC9zZWF0YWJsZS11c2VyLW1hbnVhbC9ob21lLm1k\">https://docs.seatable.cn/published/seatable-user-manual/home.md<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>使用 Docker 部署 SeaTable 开发者版<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnNlYXRhYmxlLmNuL3B1Ymxpc2hlZC9zZWF0YWJsZS1tYW51YWwvZG9ja2VyL3NlYXRhYmxlLWNlL0RlcGxveSUyMFNlYVRhYmxlJTIwd2l0aCUyMERvY2tlci5tZA==\">https://docs.seatable.cn/published/seatable-manual/docker/seatable-ce/Deploy%20SeaTable%20with%20Docker.md<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","表格"]},{"title":"用Comics-Reader收藏阅读小人书","url":"/2021/03/26/%E7%94%A8Comics-Reader%E6%94%B6%E8%97%8F%E9%98%85%E8%AF%BB%E5%B0%8F%E4%BA%BA%E4%B9%A6/","content":"<p><strong>什么是连环画？</strong></p>\n<blockquote>\n<p>连环画，又称连环图画 、连环图、小人书、小书、公仔书等。连环画是一种古老的中国传统艺术，在宋朝印刷术普及后最终成型。以连续的图画叙述故事、刻画人物，这一形式题材广泛，内容多样，是老少皆宜的一种通俗读物。【百度百科】</p>\n</blockquote>\n<p>小人书（连环画、漫画书）是我最美好的童年记忆，父亲给我买过很多本，印象中有满满一抽屉，可惜几次搬家之后就找不到了。随着时间的推移，小人书已经从大众读物变成了收藏品，现在只能看看电子版过过瘾了。</p>\n<p>网上零零星星收集过一些，一直也没空整理，主要是没找到一个比较好的管理方法，<code>calibre</code> 虽然是很好的电子书管理软件，但是用来管理小人书总觉得差点意思，而各种看漫画的 <code>APP</code> 又需要把小人书拷贝来拷贝去才能在设备上阅读，觉得特别麻烦，直到发现了 <code>Comics-Reader</code>。</p>\n<p>这是个基于 <code>Node.js</code> 的开源项目，最重要的是作者还一直在更新中，软件特色就是简单</p>\n<ul>\n<li>只需要我们像资源管理器一样管理小人书就行</li>\n<li>支持大多数漫画格式：CBZ / CBR / ZIP / RAR，PDF，图片</li>\n<li>支持简单的用户认证</li>\n<li>内置搜索功能</li>\n</ul>\n<p>让我们开启折腾之旅~</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>comic</code> ，选择第四个 <code>onigoetz/comicsreader</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/16/1613448089936-1613448089973.png\" alt=\"title\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>comics</code>。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">/docker/comics</td>\n<td align=\"center\">/comics</td>\n<td align=\"center\">漫画文件存放目录</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/16/1613449953174-1613449953177.png\" alt=\"title\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不能冲突，我没用默认的，找了个空闲的端口 <code>8282</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n<th align=\"center\">类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">8282</td>\n<td align=\"center\">8080</td>\n<td align=\"center\">TCP</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/16/1613473123477-1613473123478.png\" alt=\"title\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">COMICS_BASE</td>\n<td align=\"center\">必填项，设为 <code>comics</code></td>\n</tr>\n<tr>\n<td align=\"center\">COMICS_SERVER_PORT</td>\n<td align=\"center\">可选项，根据前面的端口设置</td>\n</tr>\n<tr>\n<td align=\"center\">COMICS_AUTH_TYPE</td>\n<td align=\"center\">可选项，建议用 <code>db</code></td>\n</tr>\n</tbody></table>\n<blockquote>\n<ol>\n<li>如果前面改了端口，<code>COMICS_SERVER_PORT</code> 参数必须填，否则就会出现下图的情况 </li>\n</ol>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/16/1613469516679-1613469516733.png\" alt=\"title\"></p>\n<blockquote>\n<ol start=\"2\">\n<li> 如果你不打算映射到公网， <code>COMICS_AUTH_TYPE </code> 就别设了，给自己找麻烦</li>\n</ol>\n<p>– 当设为 <code>db</code> 时，会使用 <code>SQLite</code> 来管理用户<br>– 当设为 <code>basic</code> 时，会使用 <code>Nginx/Apache</code> 的认证，好像只认证用户名 <code>anonymous</code>，只是粗略看了下代码，未验证。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/16/1613472965063-1613472965065.png\" alt=\"title\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:8282</code>，就能看到主界面了，因为没有添加小人书，所以界面是空白的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/16/1613452413036-1613452413037.png\" alt=\"title\"></p>\n<p>如果你前面环境变量设置了 <code>COMICS_AUTH_TYPE = db</code>，会先看到登录界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/16/1613471468676-1613471468678.png\" alt=\"title\"></p>\n<h2 id=\"新增用户\"><a href=\"#新增用户\" class=\"headerlink\" title=\"新增用户\"></a>新增用户</h2><p>如果设置了认证，首先需要添加用户。直接启动容器，右键进入「详情」</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/16/1613473776638-1613473776640.png\" alt=\"title\"></p>\n<p>「终端机」 =&gt; 「新增」 =&gt; 「通过命令启动」=&gt; 「请输入一个命令」=&gt; 「sh」</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/16/1613473996479-1613473996480.png\" alt=\"title\"></p>\n<p>运行下面的命令：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">node comics createUser</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/16/1613471724716-1613471724718.png\" alt=\"title\"></p>\n<h2 id=\"修改密码\"><a href=\"#修改密码\" class=\"headerlink\" title=\"修改密码\"></a>修改密码</h2><figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">node comics changePassword</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/16/1613474142494-1613474142497.png\" alt=\"title\"></p>\n<h2 id=\"添加小人书\"><a href=\"#添加小人书\" class=\"headerlink\" title=\"添加小人书\"></a>添加小人书</h2><p>先拷贝了几本到 <code>docker/comics</code> 目录，需要停止服务再启动服务，才会开始扫描新增的小人书</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/16/1613463026996-1613463026999.png\" alt=\"title\"></p>\n<p>刷新页面，不会立刻看到，从日志看后台在处理数据库</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/16/1613462991223-1613462991229.png\" alt=\"title\"></p>\n<p>时间取决于文档的多少</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/16/1613482002229-1613482002233.png\" alt=\"title\"></p>\n<p>看得出来，在 <code>comics</code> 目录中多出了一个 <code>cache</code> 目录，因为把文档转成了图片，小图用来预览，大图用来查看</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/16/1613463330746-1613463330748.png\" alt=\"title\"></p>\n<p>进入一本图书，已经全部是图片了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/16/1613463536948-1613463536953.png\" alt=\"title\"></p>\n<p>打开一本，发现在PC上满屏图片并没有放大，难怪作者说不适用于台式机</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/16/1613463843467-1613463843470.png\" alt=\"title\"></p>\n<h2 id=\"在手机上观看\"><a href=\"#在手机上观看\" class=\"headerlink\" title=\"在手机上观看\"></a>在手机上观看</h2><p>在手机上浏览器上打开</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/16/1613463983802-1613463983807.png\" alt=\"title\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/16/1613464016805-1613464016813.png\" alt=\"title\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/16/1613464036323-1613464036332.png\" alt=\"title\"></p>\n<p>点全屏按钮，会自动横屏，效果比PC上的好</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/16/1613464063557-1613464063566.png\" alt=\"title\"></p>\n<p>文字还是略小（虽然可以缩放），毕竟手机屏幕小，感觉应该还是用平板更合适</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/16/1613465025465-1613465025474.png\" alt=\"title\"></p>\n<p>有时间的话，可以慢慢边看边整理了~~</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>GitHub - onigoetz/Comics-Reader: Read your comic book scans on tablet !<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL29uaWdvZXR6L0NvbWljcy1SZWFkZXI=\">https://github.com/onigoetz/Comics-Reader<i class=\"fa fa-external-link-alt\"></i></span> </p>\n<p>onigoetz/comicsreader<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9yZWdpc3RyeS5odWIuZG9ja2VyLmNvbS9yL29uaWdvZXR6L2NvbWljc3JlYWRlci8=\">https://registry.hub.docker.com/r/onigoetz/comicsreader/<i class=\"fa fa-external-link-alt\"></i></span> </p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","calibre，小人书"]},{"title":"Deskreen能让手机变成电脑的辅助屏","url":"/2021/03/22/Deskreen%E8%83%BD%E8%AE%A9%E6%89%8B%E6%9C%BA%E5%8F%98%E6%88%90%E7%94%B5%E8%84%91%E7%9A%84%E8%BE%85%E5%8A%A9%E5%B1%8F/","content":"<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210320155638.png\"><br><em>（题图来自官网）</em></p>\n<p><strong>什么是 Deskreen ？</strong></p>\n<blockquote>\n<ul>\n<li> Deskreen 是一个 <code>electron.js</code> 应用程序，通过 <code>WebRTC</code> 将您的桌面实时流传输到任何设备上的 Web 浏览器。</li>\n<li> Deskreen 是一款桌面应用程序，可以通过 WiFi 将任何带有网络浏览器的设备变成电脑的辅助屏幕。</li>\n<li> Deskreen 可用于将整个计算机显示镜像到任何具有 Web 浏览器的设备屏幕上。您还可以限制 Deskreen 只选择一个要共享的应用程序窗口视图，这对于演示非常有用。</li>\n<li> Deskreen 的最大特点是可以使用任何设备作为辅助屏幕。</li>\n<li> Deskreen 是开源的，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3BhdmxvYnUvZGVza3JlZW4=\">源代码地址（https://github.com/pavlobu/deskreen）<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n</blockquote>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>Deskreen 作为一款桌面应用程序，支持  Windows, Linux, MacOS 系统，对存储、内存和 CPU 的要求都不高</p>\n<ul>\n<li><p><strong>CPU (Windows)：</strong> 任何现代双核 CPU、较弱的 CPU 在 Windows 上的当前版本都可能出现性能问题。我们将来会把它修好的。</p>\n</li>\n<li><p><strong>CPU (MacOS)：</strong> 任何现代 CPU</p>\n</li>\n<li><p><strong>CPU (Linux)：</strong> 任何现代 CPU，甚至支持单核 ARM，例如 Raspberry Pi</p>\n</li>\n</ul>\n<h1 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h1><p>为了研究 Deskreen 的用法，准备拿 Windows 10 台式机和 Android 手机做测试。虽然台式机已经比较老旧了，但性能肯定能满足要求。</p>\n<h2 id=\"连接\"><a href=\"#连接\" class=\"headerlink\" title=\"连接\"></a>连接</h2><p>根据平台在<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXNrcmVlbi5jb20vbGFuZy16aF9DTg==\">官方（https://deskreen.com/）<i class=\"fa fa-external-link-alt\"></i></span>下载  Deskreen 客户端，并安装</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210320163431.png\"></p>\n<blockquote>\n<p>我下了 windows 版，现在的版本是 <code>1.0.11</code></p>\n</blockquote>\n<p>接下来要运行 Deskreen ，选择 <code>简体中文</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210320163741.png\"></p>\n<p>然后用平板电脑或手机扫描二维码 (QR)，或手动在网页浏览器地址栏中键入二维码 (QR) 下面的蓝色地址。这将在您的平板电脑上打开一个带有连接状态的页面。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210320164242.png\"></p>\n<p>如果您的相机无法识别小的二维码 (QR)，请单击二维码 (QR) 将其放大</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210320172734.png\"></p>\n<p>如果你没有相机扫描二维码 (QR)，点击二维码 (QR) 下面的蓝色按钮将地址复制到剪贴板上。然后，您可以共享复制的地址并将其粘贴到 Web 浏览器地址栏以打开 Deskreen 查看器。您也可以在任何设备的浏览器地址栏中手动键入蓝色按钮的地址，以打开 Deskreen 查看器。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210320172854.png\"></p>\n<p>但是返回的结果是 <code>网页无法访问</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210320172500.jpg\"></p>\n<p>换了 Microsoft Edge 浏览器，结果是一样的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210320174200.jpg\"></p>\n<p>怀疑是 windows 防火墙导致的，为了验证先关闭了防火墙</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210320183940.png\"></p>\n<p>当然要想彻底解决，还是要在 <code>允许其他应用</code> 中把 Deskreen 添加到 <code>允许的应用</code> 列表中，同时勾选 <code>专用</code> 和 <code>公用</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210320183816.png\"></p>\n<p>再次刷新 Microsoft Edge 浏览器，可以看到界面了</p>\n<blockquote>\n<p>小米手机自带的浏览器还是不行，我的 MIUI 版本是 11 的</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210320184750.jpg\"></p>\n<p>需要电脑端点 <code>允许</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210320184848.png\"></p>\n<h2 id=\"选择\"><a href=\"#选择\" class=\"headerlink\" title=\"选择\"></a>选择</h2><p>接下来需要电脑端选择共享 <code>整个屏幕</code> 还是 <code>应用程序窗口</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210320184922.png\"></p>\n<p>如果选择共享 <code>应用程序窗口</code>，您可以在下图中选择要共享的应用程序窗口。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210320190218.png\"></p>\n<p>如果选择共享 <code>整个屏幕</code>，您可以选择共享整个屏幕。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210320190302.png\"></p>\n<p>我共享了 <code>PotPlayer</code> 正在播放的视频，</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210320190415.png\"></p>\n<h2 id=\"确认\"><a href=\"#确认\" class=\"headerlink\" title=\"确认\"></a>确认</h2><p>还需要 <code>确认</code>，桌面端的设置就完成了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210320190441.png\"></p>\n<p>毕竟是局域网，图像非常流畅，手机端几乎看不出延迟</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210320185526.jpg\"></p>\n<p>结合软件的 <code>全屏</code> 功能和手机自带的 <code>旋转</code> 功能，视频可以在手机上横屏观看。</p>\n<h1 id=\"高级用法\"><a href=\"#高级用法\" class=\"headerlink\" title=\"高级用法\"></a>高级用法</h1><p>如果只是我们前面介绍的用法，最多也就是<code>复制屏</code>的用法，而如果要变成<code>扩展屏</code>，按官方的说法需要用到 <code>虚拟显示适配器</code> 。</p>\n<p>所谓 <code>虚拟显示适配器</code> 实际上就是欺骗主机，让主机以为存在第二个显示器，这玩意儿可以是硬件，也可以是软件。</p>\n<h2 id=\"硬件方案\"><a href=\"#硬件方案\" class=\"headerlink\" title=\"硬件方案\"></a>硬件方案</h2><p>某宝上有很多种不同的叫法，比如：</p>\n<ul>\n<li>锁屏宝</li>\n<li>虚拟显示器</li>\n<li>显卡欺骗器</li>\n<li>EDID 仿真器</li>\n<li>EDID 模拟器</li>\n<li>假负载</li>\n</ul>\n<p>接口支持 VGA 、HDMI 、DP 、DVI 、Type-C 等，分辨率一般是 1080P 和 4K，价格从几块到几十块，可以根据自己的需要选择。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210320195243.png\"></p>\n<h2 id=\"软件方案\"><a href=\"#软件方案\" class=\"headerlink\" title=\"软件方案\"></a>软件方案</h2><p>这个方案简单而免费，可以在您的系统上创建一个<code>软件</code>监视器，但是这个解决方案仅适用于 Windows 10。</p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><ul>\n<li>  下载虚拟显示驱动程序 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW15dW5pLmNvbS9kb3dubG9hZHMvdXNibW1pZGQuemlw\">https://www.amyuni.com/downloads/usbmmidd.zip<i class=\"fa fa-external-link-alt\"></i></span>  或者 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3dic3UyMDAzL2dpdG5vdGUtaW1hZ2VzQG1hc3Rlci9waWNnby8yMDIxMDMyMDIwNDIwNS56aXA=\">usbmmidd.zip<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>  将zip文件解压缩到一个空文件夹，例如 <code>C:\\temp\\usbmmidd</code></li>\n<li>  以管理员身份打开命令提示符窗口（除非您以 <code>以管理员身份运行</code>，否则无法将设备添加到系统中）</li>\n<li>运行下面的命令<ul>\n<li>   <code>cd C:\\temp\\usbmmidd</code>（或您选择的任何目标文件夹）</li>\n<li>   <code>deviceinstaller64 install usbmmidd.inf usbmmidd</code></li>\n<li>   如果显示 <code>Drivers installed successfully.</code>，就执行下一条命令</li>\n<li>  <code>deviceinstaller64 enableidd 1</code></li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<ul>\n<li>如果您使用的是32位系统，请用 <code>deviceinstaller</code> 替换  <code>deviceinstaller64</code></li>\n<li>更简单的办法，请右键单击 <code>usbmmidd.bat</code> 并 <code>以管理员身份运行</code>。</li>\n</ul>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210320205918.png\"></p>\n<p>系统中原本 2 个显示器现在变成了 3 个，该高清监视器固定为 1920x1080 像素</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210320210251.png\"></p>\n<p>选择共享 <code>整个屏幕</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210320210506.png\"></p>\n<p>选择 <code>Screen 3</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210320210600.png\"></p>\n<p>确认</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210320211022.jpg\"></p>\n<p>当点 <code>标识</code> 时，手机被识别为 3 号屏</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/picgo/20210320211213.jpg\"></p>\n<p>这可是真正的扩展屏哦</p>\n<h3 id=\"停用\"><a href=\"#停用\" class=\"headerlink\" title=\"停用\"></a>停用</h3><p>要停用虚拟监视器，请运行以下命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">deviceinstaller64 enableidd 0</span><br></pre></td></tr></table></figure>\n\n<p>重新启用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">deviceinstaller64 enableidd 1</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"卸载\"><a href=\"#卸载\" class=\"headerlink\" title=\"卸载\"></a>卸载</h3><p>要从系统中完全删除驱动程序，可以通过设备管理器卸载 <code>USB Mobile Monitor Virtual Display</code>，或运行以下命令：  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">deviceinstaller64 stop usbmmidd  </span><br><span class=\"line\">deviceinstaller64 remove usbmmid</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"其他平台\"><a href=\"#其他平台\" class=\"headerlink\" title=\"其他平台\"></a>其他平台</h3><p>除了 Windows 10，其他平台也有类似的驱动，但我没去验证，有兴趣的自己可以研究</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ljZWRtYW4vRVdQcm94eUZyYW1lYnVmZmVy\">osx的虚拟显卡驱动程序（https://github.com/icedman/EWProxyFramebuffer）<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Jpa2hvZmZiYXVlci9tYWNvcy12aXJ0dWFsLWRpc3BsYXk=\">Macos 虚拟显示器（https://github.com/rikhoffbauer/macos-virtual-display）<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2RpYW5hcml5YW50by92aXJ0dWFsLWRpc3BsYXktbGludXg=\">Linux 虚拟显示器（https://github.com/dianariyanto/virtual-display-linux）<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Deskreen 官网<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXNrcmVlbi5jb20vbGFuZy16aF9DTg==\">https://deskreen.com<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>pavlobu/deskreen: 源代码<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3BhdmxvYnUvZGVza3JlZW4=\">https://github.com/pavlobu/deskreen<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Activating a Secondary Display on Windows 10 when no Monitor is Connected - Amyuni Technologies<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW15dW5pLmNvbS9mb3J1bS92aWV3dG9waWMucGhwP3Q9MzAzMA==\">https://www.amyuni.com/forum/viewtopic.php?t=3030<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["工具","WebRTC","虚拟显示器"]},{"title":"MagicMirror²的安装和设置","url":"/2021/03/19/MagicMirror%C2%B2%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E8%AE%BE%E7%BD%AE/","content":"<p><strong>什么是 MagicMirror² ？</strong></p>\n<blockquote>\n<p>MagicMirror² 是一个开源的，模块化的智能镜子系统，社区贡献者们开发了多种多样的第三方模块可以让你的镜子上面显示各种各样的信息，理论上可以作为智能家居的助理。</p>\n</blockquote>\n<p>从网上的教程看，用树莓派作为载体的比较多，有兴趣的可以自己装一台玩玩，我们这里只是体验下 <code>MagicMirror²</code> 的安装和基本设置。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>docker-magicmirror</code> ，选择第一个 <code>bastilimbach/docker-magicmirror </code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/27/1614416403992-1614416403994.png\" alt=\"title\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>magicmirror</code>，然后在 <code>magicmirror</code> 文件夹中再创建三个新的子文件夹，分别命名为 <code>config</code> 、<code>modules</code> 和 <code>css</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/27/1614412545640-1614412545642.png\" alt=\"title\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/magicmirror/config</code></td>\n<td align=\"center\"><code>/opt/magic_mirror/config</code></td>\n<td align=\"center\">如果文件夹为空，则容器将创建一个默认配置，该配置可以根据您的喜好进行调整</td>\n</tr>\n<tr>\n<td align=\"center\"><code>docker/magicmirror/modules</code></td>\n<td align=\"center\"><code>/opt/magic_mirror/modules</code></td>\n<td align=\"center\">挂载此文件夹以将您自己的自定义模块添加到docker容器中。如果文件夹为空，则容器会将默认模块从MagicMirror²存储库复制到卷中。</td>\n</tr>\n<tr>\n<td align=\"center\"><code>docker/magicmirror/css</code></td>\n<td align=\"center\"><code>/opt/magic_mirror/css/custom.css</code></td>\n<td align=\"center\">挂载此文件以将您自己的自定义css添加到docker容器中。需要在运行容器之前，先创建文件。否则，Docker将创建一个custom.css文件夹</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/27/1614414523670-1614414523680.png\" alt=\"title\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>默认的端口要修改</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">8085</td>\n<td align=\"center\">8080</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/27/1614414720177-1614414720178.png\" alt=\"title\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">TZ</td>\n<td align=\"center\">设置为 <code>Asia/Shanghai</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/27/1614418095501-1614418095503.png\" alt=\"title\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:8085</code>，就能看到主界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/27/1614418416693-1614418416696.png\" alt=\"title\"></p>\n<h1 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h1><p>在 <code>docker/magicmirror/config</code> 目录你可以找到 <code>config.js</code>，通过修改这个文件，你可以设置日历假期、RSS源、以及天气等等；</p>\n<h2 id=\"设置为中文\"><a href=\"#设置为中文\" class=\"headerlink\" title=\"设置为中文\"></a>设置为中文</h2><p>打开 <code>config.js</code> 文件，将 <code>language</code> 属性从 <code>en</code> 改为 <code>zh-cn</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/27/1614421387316-1614421387320.png\" alt=\"title\"></p>\n<p>重新刷新主界面，即可将显示语言改为中文。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/27/1614420834850-1614420834852.png\" alt=\"title\"></p>\n<p>看起来并没有完全显示中文，因为跟日历、RSS源也有关系，可能需要单独设置</p>\n<h2 id=\"中国法定节假日\"><a href=\"#中国法定节假日\" class=\"headerlink\" title=\"中国法定节假日\"></a>中国法定节假日</h2><p>首先找到 <code>calendar</code> 模块</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/27/1614423352359-1614423352363.png\" alt=\"title\"></p>\n<p>我在网上找到两个订阅源</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">webcal:&#x2F;&#x2F;p22-calendars.icloud.com&#x2F;published&#x2F;2&#x2F;RL1JwQQtKFudYOiicAG_adz9DdrozFeZzv5Uyrs4s3gyWobdzL1NZFH-ZHAsTfuAevtnzdqVdYmcRO_Y_dWtxeIdmzUA1TNkAt5RuotJmsg</span><br></pre></td></tr></table></figure>\n\n<p>显示效果</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/27/1614423745627-1614423745631.png\" alt=\"title\"></p>\n<p>另一个订阅地址</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">webcal:&#x2F;&#x2F;p10-calendars.icloud.com&#x2F;published&#x2F;2&#x2F;MTI3Njk0MTQxNzEyNzY5NFRvxM53AOH-Px17vHeUETlZdUggoyEt2KnFiIqHg40FkRXfcQJjYoa2dULRarI9z4UlbHxK-kLOohfiRVSSP7Q</span><br></pre></td></tr></table></figure>\n\n<p>显示效果</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/27/1614423866317-1614423866319.png\" alt=\"title\"></p>\n<p>两个没有本质区别，看个人喜好了，我选了后面一个</p>\n<blockquote>\n<p>注意：因为 <code>header</code> 后面改成了中文，所以修改后的 <code>config.js</code> 文件编码格式必须是 <code>UTF-8</code>，否则页面上会乱码</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/27/1614424044005-1614424044007.png\" alt=\"title\"></p>\n<h2 id=\"天气预报\"><a href=\"#天气预报\" class=\"headerlink\" title=\"天气预报\"></a>天气预报</h2><ol>\n<li>在 <code>https://home.openweathermap.org/</code> 注册账号</li>\n<li>获取 <code>API key</code></li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/27/1614428389336-1614428389338.png\" alt=\"title\"></p>\n<ol start=\"3\">\n<li>校验邮箱</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/28/1614478862139-1614478862169.png\" alt=\"title\"></p>\n<ol start=\"4\">\n<li>校验成功后会收到一封邮件，里面带了 <code>API Key</code></li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/28/1614479009793-1614479009796.png\" alt=\"title\"></p>\n<ol start=\"5\">\n<li>下载 <code>http://bulk.openweathermap.org/sample/city.list.json.gz</code> 文件，在解压出来的 <code>city.list.json</code> 中搜索你的城市，比如 <code>shanghai</code></li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/27/1614426730656-1614426730661.png\" alt=\"title\"></p>\n<p>显示效果</p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2021/02/27/1614428861601-1614428861607.png\" alt=\"title\"></p>\n<p>试了下 <code>yangpu</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/27/1614427096625-1614427096628.png\" alt=\"title\"></p>\n<p>显示效果</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/27/1614428693233-1614428693236.png\" alt=\"title\"></p>\n<p>修改 <code>location</code> 改不改无所谓，<code>locationID</code> 要用到上面的 <code>id</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/27/1614429007273-1614429007274.png\" alt=\"title\"></p>\n<h2 id=\"RSS-源\"><a href=\"#RSS-源\" class=\"headerlink\" title=\"RSS 源\"></a>RSS 源</h2><p>默认内置的新闻源是 <code>New York Times</code>，虽然也有中文版，但是需要科学上网才能访问，随便找了个中新网的即时新闻</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;www.chinanews.com&#x2F;rss&#x2F;scroll-news.xml</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/27/1614431652807-1614431652808.png\" alt=\"title\"></p>\n<h2 id=\"Compliments\"><a href=\"#Compliments\" class=\"headerlink\" title=\"Compliments\"></a>Compliments</h2><p>修改 <code>compliments.js</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210227223936.png\"></p>\n<p>找了些鸡汤文来测试效果</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210227230016.png\"></p>\n<h1 id=\"整体效果\"><a href=\"#整体效果\" class=\"headerlink\" title=\"整体效果\"></a>整体效果</h1><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210227225802.png\"></p>\n<p>手机上的效果</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210227232334.jpg\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>MichMich/MagicMirror: 源代码<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL01pY2hNaWNoL01hZ2ljTWlycm9y\">https://github.com/MichMich/MagicMirror<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>MagicMirror² 官网<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYWdpY21pcnJvci5idWlsZGVycy8=\">https://magicmirror.builders/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Introduction | MagicMirror² Documentation<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1hZ2ljbWlycm9yLmJ1aWxkZXJzL21vZHVsZXMvaW50cm9kdWN0aW9uLmh0bWw=\">https://docs.magicmirror.builders/modules/introduction.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>docker / magicmirror · GitLab<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRsYWIuY29tL2toYXNzZWwvbWFnaWNtaXJyb3I=\">https://gitlab.com/khassel/magicmirror<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>bastilimbach/docker-magicmirror<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9yZWdpc3RyeS5odWIuZG9ja2VyLmNvbS9yL2Jhc3RpbGltYmFjaC9kb2NrZXItbWFnaWNtaXJyb3Iv\">https://registry.hub.docker.com/r/bastilimbach/docker-magicmirror/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>我也來做 MagicMirror (二) 基本用法 | Mister Ngan<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWlzdGVybmdhbi5jb20vNTcwNS9qdXN0LWFub3RoZXItbWFnaWNtaXJyb3ItMi8=\">https://www.misterngan.com/5705/just-another-magicmirror-2/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","智能家居"]},{"title":"搭建AdGuard Home去除广告","url":"/2021/03/16/%E6%90%AD%E5%BB%BAAdGuard%20Home%E5%8E%BB%E9%99%A4%E5%B9%BF%E5%91%8A/","content":"<p><strong>什么是 AdGuard Home ？</strong></p>\n<blockquote>\n<p>AdGuard Home 是类似于 Pi-Hole 的 DNS 广告拦截器，包含开源和共享软件产品，可保护 Microsoft Windows ，Linux，OS X，Android 和 iOS 用户免受有害广告，弹出窗口，横幅以及跟踪，淫秽内容，恶意软件和网络钓鱼的侵害。</p>\n</blockquote>\n<p>相关文章</p>\n<blockquote>\n<p><a href=\"https://laosu.ml/2021/01/04/%E5%BC%80%E6%BA%90%E5%B9%BF%E5%91%8A%E6%8B%A6%E6%88%AA%E5%99%A8Pi-hole/\">开源广告拦截器Pi-hole</a></p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在 docker 注册表中搜索 <code>adguard</code> ，选择第一个 <code>adguard/adguardhome</code>，版本 <code>latest</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201129143208.png\"></p>\n<h2 id=\"高级\"><a href=\"#高级\" class=\"headerlink\" title=\"高级\"></a>高级</h2><p>勾选 <code>启用自动重新启动</code> 和 <code>创建桌面快捷方式</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612852785907-1612852785908.png\" alt=\"title\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>adguard</code>。然后在 <code>adguard</code> 文件夹中创建两个新文件夹：将一个命名为 <code>config</code>，将另一个命名为 <code>data</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612852521773-1612852521774.png\" alt=\"title\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">/docker/adguard/config</td>\n<td align=\"center\">/opt/adguardhome/conf</td>\n</tr>\n<tr>\n<td align=\"center\">/docker/adguard/data</td>\n<td align=\"center\">/opt/adguardhome/work</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612852143238-1612852143241.png\" alt=\"title\"></p>\n<h2 id=\"网络\"><a href=\"#网络\" class=\"headerlink\" title=\"网络\"></a>网络</h2><p>勾选 <code>使用与 Docker Host 相同的网络</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612852240881-1612852240883.png\" alt=\"title\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不用设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612852659394-1612852659398.png\" alt=\"title\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">TZ</td>\n<td align=\"center\">Asia/shanghai</td>\n</tr>\n</tbody></table>\n<p>添加了 <code>TZ</code>，值为 <code>Asia/shanghai</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201129145254.png\"></p>\n<h1 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h1><p>直接点击桌面的快捷方式</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612853215504-1612853215506.png\" alt=\"title\"></p>\n<p>选择 <code>日志</code>，可以看到默认的端口</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612853565487-1612853565488.png\" alt=\"title\"></p>\n<p>在浏览器中输入 <code>http://群晖IP:3000</code>，就能看到设置界面了。</p>\n<blockquote>\n<p>第一次运行需要进行相应的配置</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201129145655.png\"></p>\n<p>网页管理界面默认是 <code>80</code> ，因为设置完成后，<code>3000</code> 端口就不用了，所以把网页管理界面的侦听接口改成了 <code>3000</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612853785710-1612853785711.png\" alt=\"title\"></p>\n<p>用户名和密码不能为空，不然不能下一步</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201129153141.png\"></p>\n<p>可以切换不同的平台，来了解不同平台下的设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201129161649.png\"></p>\n<p>设置完成</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201129150232.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>直接 <code>打开仪表盘</code> ，会显示登录界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612853972771-1612853972773.png\" alt=\"title\"></p>\n<p>登录成功后的主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612854061265-1612854061267.png\" alt=\"title\"></p>\n<h2 id=\"添加自定义过滤器\"><a href=\"#添加自定义过滤器\" class=\"headerlink\" title=\"添加自定义过滤器\"></a>添加自定义过滤器</h2><p>在介绍 <code>Pi-hole</code> 时提过有个开源项目 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3ByaXZhY3ktcHJvdGVjdGlvbi10b29scy9hbnRpLUFE\">anti-AD：(https://github.com/privacy-protection-tools/anti-AD)<i class=\"fa fa-external-link-alt\"></i></span>，在这里也能找到适用于 <code>AdGuardHome</code> 的规则</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612854799402-1612854799404.png\" alt=\"title\"></p>\n<p><code>过滤器</code> –&gt; <code>DNS封锁清单</code> –&gt; <code>添加阻止列表</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612854692517-1612854692519.png\" alt=\"title\"></p>\n<p>选择 <code>添加一个自定义列表</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612854743401-1612854743403.png\" alt=\"title\"></p>\n<p>填入名称和刚才复制的 <code>URL</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612854512604-1612854512608.png\" alt=\"title\"></p>\n<p>点 <code>保存</code> 之后可以关闭了，会有一个加载的过程</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612854865831-1612854865833.png\" alt=\"title\"></p>\n<p>加载完成之后，就可以看到多了一条已启用的过滤器，导入了 <code>36070</code> 条规则</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612854554066-1612854554067.png\" alt=\"title\"></p>\n<h2 id=\"设置-DNS\"><a href=\"#设置-DNS\" class=\"headerlink\" title=\"设置 DNS\"></a>设置 DNS</h2><p>和 <code>Pi-hole</code> 用法差不多，也可以在路由器上或者单个设备上设置，具体用法可以在 <code>设置指导</code> 中找到</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612856177747-1612856177749.png\" alt=\"title\"></p>\n<p> 以 <code>Windows</code> 台式机为例</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612859250072-1612859250075.png\" alt=\"title\"></p>\n<p>用了没多久，就已经有拦截 20% 多</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612859347592-1612859347594.png\" alt=\"title\"></p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>官方有个和 <code>Pi-hole</code> 的对比表，但这不是我关心的重点</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612859575147-1612859575148.png\" alt=\"title\"></p>\n<p>在这之前我用过 <code>Windows</code> 版和机顶盒上的 <code>Android</code> 版，而且效果都还可以，所以从使用者的角度出发，个人认为 <code>AdGuard Home</code> 更适合国内用户，毕竟支持中文，设置也更简单一些。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>AdguardTeam/AdGuardHome: Network-wide ads &amp; trackers blocking DNS server<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0FkZ3VhcmRUZWFtL0FkR3VhcmRIb21lI2NvbXBhcmlzb24tcGktaG9sZQ==\">https://github.com/AdguardTeam/AdGuardHome#comparison-pi-hole<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>How to Install AdGuard on Your Synology NAS – Marius Hosting<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXJpdXNob3N0aW5nLmNvbS9ob3ctdG8taW5zdGFsbC1hZGd1YXJkLW9uLXlvdXItc3lub2xvZ3ktbmFzLw==\">https://mariushosting.com/how-to-install-adguard-on-your-synology-nas/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>How to Install AdGuard Home on a Synology NAS! - WunderTech<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cud3VuZGVydGVjaC5uZXQvaG93LXRvLWluc3RhbGwtYWRndWFyZC1ob21lLW9uLWEtc3lub2xvZ3ktbmFzLw==\">https://www.wundertech.net/how-to-install-adguard-home-on-a-synology-nas/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Synology Docker 架設 AdGuard Home DNS 伺服器 │ 坂本 Sakamoto.blog - 探究科技未知領域<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2FrYW1vdG8uYmxvZy9zeW5vbG9neS1hZGd1YXJkLWhvbWUtZG5zLw==\">https://www.sakamoto.blog/synology-adguard-home-dns/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>TechLife 篇十：广告拜拜！ADGuard Home设置教程，还你无广告清爽的Wifi_路由器_什么值得买<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2FtbWtlN3FwLw==\">https://post.smzdm.com/p/ammke7qp/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>群晖NAS高级服务 - docker 部署 AdGuard Home 拦截广告防 DNS 劫持_群晖教程_创梦网络博客<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9mYW1pbHkuY29uZG1vbi5jb206ODQ0My93ZWJsb2cvP2lkPTE4ODU=\">https://family.condmon.com:8443/weblog/?id=1885<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","dns"]},{"title":"如何获取PUID和PGID","url":"/2021/03/12/%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96PUID%E5%92%8CPGID/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>最近用了一些 <code>LinuxServer.io</code> 社区维护的 Docker 镜像，这个社区是由一群来自世界各地的志同道合的爱好者组成的，主要目标是通过简洁明了的文档提供易于使用且精简的 Docker 镜像。他们已经在网络上构建和维护了大量的 Docker 镜像，下图只是其中的一小部分</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/03/02/1614666119271-1614666119281.png\" alt=\"title\"></p>\n<p>这些 Docker 镜像的质量相当高，并且有一个特点就是在环境变量中使用了 <code>PUID</code> 和 <code>PGID</code> 变量，按照官方的说法，<code>虽然 Docker 目前已经支持了 --user 参数。但我们的镜像目前还不兼容，所以我们还是建议继续使用 PUID 和 PGID。</code></p>\n<h1 id=\"为什么要用\"><a href=\"#为什么要用\" class=\"headerlink\" title=\"为什么要用\"></a>为什么要用</h1><ol>\n<li><p>因为 Docker 需要系统中管理网络、文件系统、进程的权限，所以通常是以 root 的身份在运行。这意味着，容器内的用户默认也是以 root 用户运行。这种高权限的访问，并不是日常使用中所推荐的，除非你对 linux 运维有着深入的理解。</p>\n</li>\n<li><p>另一个问题就是对容器映射出来的文件的管理。如果进程是以 root 身份运行，那么它所创建的文件的所有者都是 root 用户，这有可能会导致你没有权限去修改这些文件（如果你是以非 root 身份登陆服务器。）</p>\n</li>\n</ol>\n<p>基于上述原因，在 NAS 的日常使用中，有时候会遇到无法删除文件，无法进入某个文件夹，这些都是权限不足导致的。权限不出错的最好办法当然是确保用户一致。确保主机上的任何卷目录均由您指定的同一用户拥有，这可以通过指定用户 <code>PUID</code> 和组 <code>PGID</code> 来规避此问题。</p>\n<p>所以在 <code>LinuxServer.io</code> 的镜像说明中，一般都用了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">-e PUID&#x3D;1000 -e PGID&#x3D;1000</span><br></pre></td></tr></table></figure>\n\n<p>或者 </p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">environment:</span><br><span class=\"line\">  - PUID=1000</span><br><span class=\"line\">  - PGID=1000</span><br></pre></td></tr></table></figure>\n\n<p>当然你也可以使用自己的 <code>id</code></p>\n<h1 id=\"查找-PUID-和-PGID\"><a href=\"#查找-PUID-和-PGID\" class=\"headerlink\" title=\"查找 PUID 和 PGID\"></a>查找 PUID 和 PGID</h1><p>先找到群晖里有哪些用户</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/03/02/1614672584719-1614672584760.png\" alt=\"title\"></p>\n<h2 id=\"通过-SSH\"><a href=\"#通过-SSH\" class=\"headerlink\" title=\"通过 SSH\"></a>通过 SSH</h2><p>通过 <code>putty</code> 或者 <code>xshell</code> 客户端，用 SSH 协议连接到群晖，通过下面的命令来查询你当前用户的 id。其中 <code>uid</code> 和 <code>gid</code> 分别对应 <code>PUID</code> 和 <code>PGID</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">id $user</span><br></pre></td></tr></table></figure>\n\n<p>以用户 <code>docker</code> 为例</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">id docker</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/03/02/1614672923123-1614672923127.png\" alt=\"title\"></p>\n<p>所以用户 <code>docker</code> 的 <code>PUID=1030</code>，<code>PGID=100</code></p>\n<h2 id=\"通过任务计划\"><a href=\"#通过任务计划\" class=\"headerlink\" title=\"通过任务计划\"></a>通过任务计划</h2><p>如果你觉得用 SSH 还是有点复杂，那么还有一种更简单的办法，可以不需要借助第三方的客户端</p>\n<p>在 <code>控制面板</code> 中进入 <code>任务计划</code>，新建 <code>用户定义的脚本</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/29/1611907317629-1611907317636.png\" alt=\"title\"></p>\n<ul>\n<li><code>常规</code> 中设定任务名称，用户账号用默认的 <code>root</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/03/02/1614674417121-1614674417124.png\" alt=\"title\"></p>\n<ul>\n<li>选择 <code>在以下日期运行</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/03/02/1614674524680-1614674524684.png\" alt=\"title\"></p>\n<ul>\n<li><code>任务设置</code> 中设置了邮件地址，这样可以获得运行的状态，命令中填入了脚本的地址，还是以用户 <code>docker</code> 为例</li>\n</ul>\n<blockquote>\n<p>注意：id 是小写字母</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/03/02/1614674664581-1614674664589.png\" alt=\"title\"></p>\n<p>选中脚本右键 <code>运行</code> 来做测试</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/03/02/1614674789791-1614674789798.png\" alt=\"title\"></p>\n<p>如果一切正常，很快就会收到一封这样的邮件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/03/02/1614674979250-1614674979258.png\" alt=\"title\"></p>\n<p>可以看到这种方式获得的结果和之前通过 SSH 获得的结果是完全一致的。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>什么是PUID和PGID · LinuxServer | 中文<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW51eHNlcnZlci53YXRlcmNhbG14LmNvbS9nZW5lcmFsL3VuZGVyc3RhbmRpbmctcHVpZC1hbmQtcGdpZC5odG1s\">https://linuxserver.watercalmx.com/general/understanding-puid-and-pgid.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Understanding PUID and PGID - LinuxServer.io<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmxpbnV4c2VydmVyLmlvL2dlbmVyYWwvdW5kZXJzdGFuZGluZy1wdWlkLWFuZC1wZ2lk\">https://docs.linuxserver.io/general/understanding-puid-and-pgid<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>fleet<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9mbGVldC5saW51eHNlcnZlci5pby8=\">https://fleet.linuxserver.io/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>畅快玩转NAS 篇一：Linux权限简单讲解_服务软件_什么值得买<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2E5OXYyNTAwLw==\">https://post.smzdm.com/p/a99v2500/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["linux","用户","权限"]},{"title":"电影管理工具Radarr","url":"/2021/03/08/%E7%94%B5%E5%BD%B1%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7Radarr/","content":"<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/03/08/1615202906578-1615202906619.png\" alt=\"title\"></p>\n<p><strong>什么是Radarr？</strong></p>\n<blockquote>\n<p>Radarr 是 Sonarr 的分支，去掉了剧集功能，添加了电影下载功能，可以监控多个 RSS 源，配合 BT 下载客户端自动下载，也可以手动搜索。</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>radarr</code> ，选择第一个 <code>linuxserver/radarr</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612863576406-1612863576415.png\" alt=\"title\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>radarr</code>，然后在 <code>radarr</code> 文件夹中再创建一个新的子文件夹命名为 <code>config</code> 。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/radarr/config</code></td>\n<td align=\"center\"><code>/config</code></td>\n<td align=\"center\">数据库和radarr设置</td>\n</tr>\n<tr>\n<td align=\"center\"><code>path/to/tvseries</code></td>\n<td align=\"center\"><code>/movies</code></td>\n<td align=\"center\">电影库的位置</td>\n</tr>\n<tr>\n<td align=\"center\"><code>path/to/downloadclient-downloads</code></td>\n<td align=\"center\"><code>/downloads</code></td>\n<td align=\"center\">下载管理器下载目录的位置，我指向了 <code>qBittorrent</code> 的下载目录</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612869038993-1612869038995.png\" alt=\"title\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>直接用了默认的端口 7878 </p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">7878</td>\n<td align=\"center\">7878</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612869180039-1612869180044.png\" alt=\"title\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">TZ</td>\n<td align=\"center\">设置为 <code>Asia/Shanghai</code></td>\n</tr>\n<tr>\n<td align=\"center\">PGID</td>\n<td align=\"center\"><code>&lt;gid&gt;</code> 设为了 <code>1000</code></td>\n</tr>\n<tr>\n<td align=\"center\">PUID</td>\n<td align=\"center\"><code>&lt;uid&gt;</code> 设为了 <code>1000</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612869289981-1612869289982.png\" alt=\"title\"></p>\n<h1 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h1><p>在浏览器中输入 <code>http://群晖IP:7878</code>，就能看到主界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612869388502-1612869388504.png\" alt=\"title\"></p>\n<h2 id=\"设置语言\"><a href=\"#设置语言\" class=\"headerlink\" title=\"设置语言\"></a>设置语言</h2><p><code>Setting</code> –&gt; <code>UI</code> –&gt; <code>Language</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612871824858-1612871824860.png\" alt=\"title\"></p>\n<p>点 <code>Save Changes</code> 保存后，刷新一下页面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612872013693-1612872013695.png\" alt=\"title\"></p>\n<h2 id=\"设置下载客户端\"><a href=\"#设置下载客户端\" class=\"headerlink\" title=\"设置下载客户端\"></a>设置下载客户端</h2><p><code>设置</code> –&gt; <code>下载客户端</code> –&gt; <code>＋</code> –&gt; <code>qBittorent</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612872683500-1612872683502.png\" alt=\"title\"></p>\n<p>选择 <code>qBittorrent</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612872920179-1612872920182.png\" alt=\"title\"></p>\n<p>填完之后，点 <code>测试</code>，如果正常，测试按钮会变成绿色的勾</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612873022165-1612873022168.png\" alt=\"title\"></p>\n<p>如果失败，测试按钮会变成红色的感叹号</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612873122803-1612873122805.png\" alt=\"title\"></p>\n<p><code>保存</code> 之后就可以了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612873199067-1612873199070.png\" alt=\"title\"></p>\n<h2 id=\"添加搜刮器\"><a href=\"#添加搜刮器\" class=\"headerlink\" title=\"添加搜刮器\"></a>添加搜刮器</h2><p><code>设置</code> –&gt; <code>搜刮器</code> –&gt; <code>＋</code> –&gt; <code>Torznab</code> –&gt; `Custom``</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612873537841-1612873537843.png\" alt=\"title\"></p>\n<p>在 <code>Jackett</code> 界面，点击 <code>Copy Torznab Feed</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/08/1612754102048-1612754102050.png\" alt=\"title\"></p>\n<p>粘贴到 <code>URL</code>，<code>API Key</code> 在 <code>Jackett</code> 界面右上角</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612873675550-1612873675552.png\" alt=\"title\"></p>\n<p>测试一下，如果没问题就 <code>保存</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612873868314-1612873868316.png\" alt=\"title\"></p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><p><code>电影</code> –&gt; <code>添加新电影</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612874542580-1612874542582.png\" alt=\"title\"></p>\n<p>可以直接支持查询 <code>电影名称</code>，<code>tmdb</code> 和 <code>imdb</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612874643800-1612874643803.png\" alt=\"title\"></p>\n<p>搜索 <code>姜子牙</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612874873840-1612874873841.png\" alt=\"title\"></p>\n<p><code>添加电影</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612874941621-1612874941623.png\" alt=\"title\"></p>\n<p>和 <code>Sonarr</code> 一样，不会对过去已播出的电影自动下载</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612875095943-1612875095947.png\" alt=\"title\"></p>\n<p>可以手动下载</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612875189557-1612875189561.png\" alt=\"title\"></p>\n<p>切换到 <code>qBittorrent</code> 就可以看到刚加入下载的文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612875148397-1612875148400.png\" alt=\"title\"></p>\n<p>除了自己搜索订阅外，在 <code>发现</code> 中还会有主动的推送</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612876285169-1612876285172.png\" alt=\"title\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Radarr/Radarr: A fork of Sonarr to work with movies à la Couchpotato.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1JhZGFyci9SYWRhcnI=\">https://github.com/Radarr/Radarr<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>利用radarr/sonarr+jackett搭建自动化家庭影院 | Magical MiluMilu<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLm1pbHUuY2YvMjAyMC8wMi8yMi9saS15b25nLXJhZGFyci1zb25hcnItamFja2V0dC1kYS1qaWFuLXppLWRvbmctaHVhLWppYS10aW5nLXlpbmcteXVhbi8=\">https://blog.milu.cf/2020/02/22/li-yong-radarr-sonarr-jackett-da-jian-zi-dong-hua-jia-ting-ying-yuan/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>高阶教程-追剧全流程自动化 - 知乎<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xMTgxNjI2NTc=\">https://zhuanlan.zhihu.com/p/118162657<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","多媒体","BitTorrent","Usenet"]},{"title":"美剧管理工具Sonarr","url":"/2021/03/05/%E7%BE%8E%E5%89%A7%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7Sonarr/","content":"<p><strong>什么是 Sonarr ？</strong></p>\n<blockquote>\n<p>Sonarr（以前是 NZBdrone ）是面向 Usenet 和 Bittorrent 用户的 PVR（Personal Video Recorder），是一款电视连续剧下载和管理工具，可以监视多个 RSS feed ，帮助你自动跟踪你所订阅的剧集，只要设置好关联的下载工具，就可以在剧集更新之后自动下载，排序和重命名。它也可以配置为在质量更高的格式可用时自动升级已经下载文件的质量。</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>sonarr</code> ，选择第一个 <code>linuxserver/sonarr</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/06/1612587436604-1612587436611.png\" alt=\"title\"></p>\n<p><code>latest</code> 是稳定版，目前还是 sonarr 2，如果你要尝鲜 sonarr 3，可以根据你的硬件平台选择版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/08/1612749028889-1612749028890.png\" alt=\"title\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>sonarr</code>，然后在 <code>sonarr</code> 文件夹中再创建一个新的子文件夹命名为 <code>config</code> 。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/sonarr/config</code></td>\n<td align=\"center\"><code>/config</code></td>\n<td align=\"center\">数据库和sonarr设置</td>\n</tr>\n<tr>\n<td align=\"center\"><code>path/to/tvseries</code></td>\n<td align=\"center\"><code>/tv</code></td>\n<td align=\"center\">TV库的位置</td>\n</tr>\n<tr>\n<td align=\"center\"><code>path/to/downloadclient-downloads</code></td>\n<td align=\"center\"><code>/downloads</code></td>\n<td align=\"center\">下载管理器下载目录的位置，我指向了 <code>qBittorrent</code> 的下载目录</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/08/1612748062376-1612748062414.png\" alt=\"title\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>默认的端口 8989 被 <code>qBittorrent</code> 占用了，所以要修改</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">8988</td>\n<td align=\"center\">8989</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/06/1612591075783-1612591075787.png\" alt=\"title\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">TZ</td>\n<td align=\"center\">设置为 <code>Asia/Shanghai</code></td>\n</tr>\n<tr>\n<td align=\"center\">PGID</td>\n<td align=\"center\"><code>&lt;gid&gt;</code> 设为了 <code>1000</code></td>\n</tr>\n<tr>\n<td align=\"center\">PUID</td>\n<td align=\"center\"><code>&lt;uid&gt;</code> 设为了 <code>1000</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/08/1612748350707-1612748350710.png\" alt=\"title\"></p>\n<h1 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h1><p>在浏览器中输入 <code>http://群晖IP:8988</code>，就能看到主界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/06/1612591418601-1612591418610.png\" alt=\"title\"></p>\n<h2 id=\"设置下载工具\"><a href=\"#设置下载工具\" class=\"headerlink\" title=\"设置下载工具\"></a>设置下载工具</h2><p>点击 <code>Settings</code> –&gt; <code>Download Clients</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/08/1612750351975-1612750351976.png\" alt=\"title\"></p>\n<p>点加号添加下载工具</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/08/1612750444760-1612750444763.png\" alt=\"title\"></p>\n<p>选择 <code>qBittorrent</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/08/1612750997278-1612750997279.png\" alt=\"title\"></p>\n<p>点击 <code>Test</code>，如果右下角看到下图，表示设置无误</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/08/1612751108430-1612751108431.png\" alt=\"title\"></p>\n<p>点 <code>Save</code> 保存</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/08/1612751218437-1612751218438.png\" alt=\"title\"></p>\n<h2 id=\"设置索引器\"><a href=\"#设置索引器\" class=\"headerlink\" title=\"设置索引器\"></a>设置索引器</h2><p>点击 Settings –&gt; Indexers，选择 <code>Torznab</code> –&gt; <code>Custom</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/08/1612753960665-1612753960667.png\" alt=\"title\"></p>\n<p>在 <code>Jackett</code> 界面，点击 <code>Copy Torznab Feed</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/08/1612754102048-1612754102050.png\" alt=\"title\"></p>\n<p>粘贴到 <code>URL</code>，<code>API Key</code> 在 <code>Jackett</code> 界面右上角</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/08/1612754664902-1612754664908.png\" alt=\"title\"></p>\n<blockquote>\n<ol>\n<li><code>Categories</code> 和 <code>Anime Categories</code> 不能空，否则会报错 <code> Either &#39;Categories&#39; or &#39;Anime Categories&#39; must be provided</code></li>\n<li>如果需要多个，需要用英文逗号分开。</li>\n</ol>\n</blockquote>\n<p><code>Categories</code> 和 <code>Anime Categories</code> 可以在 <code>Jackett</code> 中获取。点击 <code>Jackett</code> 中 <code>Indexer</code> 右边扳手标志，弹出界面的下部能看到各种分类。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/08/1612755215082-1612755215084.png\" alt=\"title\"></p>\n<p>点 <code>Test</code> 测试一下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/08/1612755695174-1612755695175.png\" alt=\"title\"></p>\n<p>如果没问题就可以点 <code>Save</code> 保存了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/08/1612755824371-1612755824374.png\" alt=\"title\"></p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><p>添加新的剧集，<code>Series</code> –&gt; <code>Add Series</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/08/1612756725217-1612756725219.png\" alt=\"title\"></p>\n<p>比如 <code>旺达幻视</code>，如果中文搜不到，建议用英文 <code>WandaVision</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/08/1612756938136-1612756938138.png\" alt=\"title\"></p>\n<p>设置好保存 <code>路径</code>、下载分辨率等之后，点加号</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/08/1612765936516-1612765936518.png\" alt=\"title\"></p>\n<p>右下角有提示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/08/1612766004853-1612766004855.png\" alt=\"title\"></p>\n<p>进入剧集</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/08/1612757195371-1612757195374.png\" alt=\"title\"></p>\n<p>将来有新剧集出现时，<code>Sonarr</code> 会通过 RSS 自动下载，但不会对过去已播出的剧集自动下载，所以想下载已播出的剧集，需要点击章节最右边的人员标志，手动搜索</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/08/1612766773730-1612766773732.png\" alt=\"title\"></p>\n<p>搜索结果中，点最后面的下载标志，可以 <code>Add to download queue</code> 加入到下载队列中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/08/1612766864181-1612766864183.png\" alt=\"title\"></p>\n<p>切换到 <code>qBittorrent</code> 可以看到刚加入下载的文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/08/1612767105419-1612767105423.png\" alt=\"title\"></p>\n<p>同时该章节的状态会改变，从 <code>Episode missing from disk</code> 变为 <code>Episode is downloading</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/08/1612769817701-1612769817703.png\" alt=\"title\"></p>\n<h1 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h1><p>剧集中看不到图片，从日志看因为下载失败</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">[Info] MediaCoverService: Downloading Banner for [362392][WandaVision] https:&#x2F;&#x2F;artworks.thetvdb.com&#x2F;banners&#x2F;series&#x2F;362392&#x2F;banners&#x2F;601d56019aeab.jpg </span><br><span class=\"line\">[Warn] HttpClient: Failed to get response from: https:&#x2F;&#x2F;artworks.thetvdb.com&#x2F;banners&#x2F;series&#x2F;362392&#x2F;banners&#x2F;601d56019aeab.jpg The operation has timed out. </span><br></pre></td></tr></table></figure>\n\n<p>如果您支持科学上网，最终的效果看起来应该是这样的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612861548900-1612861548903.png\" alt=\"title\"></p>\n<p>进入剧集</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612861604328-1612861604341.png\" alt=\"title\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Sonarr - Dive in<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zb25hcnIudHYvI2hvbWU=\">https://sonarr.tv/#home<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>GitHub - Sonarr/Sonarr: Smart PVR for newsgroup and bittorrent users.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1NvbmFyci9Tb25hcnI=\">https://github.com/Sonarr/Sonarr<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Sonarr in Docker on a Synology NAS – Dr_Frankenstein’s Tech Stuff<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kcmZyYW5rZW5zdGVpbi5jby51ay8yMDIwLzA4LzE2L3NldHRpbmctdXAtc29uYXJyLWluLWRvY2tlci1vbi1hLXN5bm9sb2d5LW5hcy8=\">https://drfrankenstein.co.uk/2020/08/16/setting-up-sonarr-in-docker-on-a-synology-nas/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>高阶教程-追剧全流程自动化_NAS存储_什么值得买<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2EzZ3ZwbjI3Lw==\">https://post.smzdm.com/p/a3gvpn27/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Jackett Sonarr Radarr 介绍_软件应用_什么值得买<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2E3OHp4b3JkLw==\">https://post.smzdm.com/p/a78zxord/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Sonarr Installation (Docker) | How to Setup Sonarr on a Synology.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zYXNxdWF0dGVycy5jb20vc29uYXJyLWRvY2tlci8=\">https://sasquatters.com/sonarr-docker/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Sonarr Configuration | How to Configure Automated TV Show Downloading.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zYXNxdWF0dGVycy5jb20vc29uYXJyLWNvbmZpZ3VyYXRpb24v\">https://sasquatters.com/sonarr-configuration/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>美劇管理工具: Docker Sonarr – GuGuComputing<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ndWd1Y29tcHV0aW5nLndvcmRwcmVzcy5jb20vMjAxOC8xMS8wNS8lRTclQkUlOEUlRTUlOEElODclRTclQUUlQTElRTclOTAlODYlRTUlQjclQTUlRTUlODUlQjctZG9ja2VyLXNvbmFyci8=\">https://gugucomputing.wordpress.com/2018/11/05/%E7%BE%8E%E5%8A%87%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7-docker-sonarr/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>搭建家庭 NAS 服务器有什么好方案？ - 知乎<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzIxMzU5MDQ5L2Fuc3dlci81ODg1NzkwODg=\">https://www.zhihu.com/question/21359049/answer/588579088<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>sonarr+jackett实现自动下载动漫新番（更新rss订阅补丁） - 斐讯无线路由器以及其它斐迅网络设备 - 恩山无线论坛 - Powered by Discuz!<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucmlnaHQuY29tLmNuL2ZvcnVtL3RocmVhZC0zMTczMzA0LTEtMS5odG1s\">https://www.right.com.cn/forum/thread-3173304-1-1.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","多媒体","BitTorrent","Usenet"]},{"title":"NAS上用docker-speedtest-analyser自动测速","url":"/2021/03/01/NAS%E4%B8%8A%E7%94%A8docker-speedtest-analyser%E8%87%AA%E5%8A%A8%E6%B5%8B%E9%80%9F/","content":"<p>之前我们折腾过 <a href=\"https://laosu.ml/2020/10/27/%E8%87%AA%E5%BB%BASpeedtest%E7%BD%91%E7%BB%9C%E6%B5%8B%E9%80%9F%E6%9C%8D%E5%8A%A1%E5%99%A8/\">《自建Speedtest网络测速服务器》</a>，主要用来测试从外网访问 <code>NAS</code> 的速度，而今天要折腾的 <code>Docker Speedtest analyser</code> 是 <code>github</code> 上的一个开源项目，安装在 <code>NAS</code> 上，每隔一段时间自动运行一次测速 ，并把一天中速度测试结果以折线图形式显示在 <code>Web</code> 界面中，这样就可以获取到 <code>NAS</code> 上网的真实速度了。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>roest</code> ，选择第一个 <code>roest/docker-speedtest-analyser</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/08/1612791015936-1612791015961.png\" alt=\"title\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>dsa</code> 。</p>\n<blockquote>\n<p>测试数据保存为 <code>.csv</code> 格式，存储为 <code>/var/www/html/data/result.csv</code></p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/dsa</code></td>\n<td align=\"center\"><code>/var/www/html/data/</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/02/09/1612837121381-1612837121441.png\" alt=\"title\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不能冲突，请根据您自己的情况设置。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">8143</td>\n<td align=\"center\">443</td>\n</tr>\n<tr>\n<td align=\"center\">8181</td>\n<td align=\"center\">80</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612837931958-1612837931961.png\" alt=\"title\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><p>官方给了两个参数</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">CRONJOB_ITERATION</td>\n<td align=\"center\">两次速度测试之间的时间（以分钟为单位），默认值为 <code>60</code></td>\n</tr>\n<tr>\n<td align=\"center\">SPEEDTEST_PARAMS</td>\n<td align=\"center\">为cli命令附加额外的参数。</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>SPEEDTEST_PARAMS 具体的参数可以看 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NpdmVsL3NwZWVkdGVzdC1jbGkjdXNhZ2U=\">说明文档(https://github.com/sivel/speedtest-cli#usage)<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612838631622-1612838631625.png\" alt=\"title\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:8181</code>，就能看到主界面了，不过第一次因为没有数据，显得空空的。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612838792039-1612838792041.png\" alt=\"title\"></p>\n<p>点击右上角的 <code>start manual speedtest</code> 按钮</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/02/09/1612838953045-1612838953049.png\" alt=\"title\"></p>\n<p>测速结束后，坐标轴上会有第一次测速的结果</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612839051698-1612839051702.png\" alt=\"title\"></p>\n<p>再测一次，数据非常接近</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612839305516-1612839305518.png\" alt=\"title\"></p>\n<p>我的套餐签约带宽：下行200M  上行30M，从数据看跑满带宽了，这和我们在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc3BlZWR0ZXN0Lm5ldC8=\">speedtest.net<i class=\"fa fa-external-link-alt\"></i></span> 上的测试结果是基本一致的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612848745289-1612848745291.png\" alt=\"title\"></p>\n<p>当累积了足够的测试结果时，很容易看出网络在一天中是否有大的波动</p>\n<blockquote>\n<p>为了尽快产生数据，我临时把时间间隔改成了1分钟，请忽略坐标上的时间间隔；</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/09/1612847294097-1612847294099.png\" alt=\"title\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>roest01/docker-speedtest-analyser: Automated docker speedtest analyser tool with included web interface to monitor your internet speed connection over time. Setup at home on your NAS (Synology, QNAP tested) and the container runs hourly speedtests. The speedtest results are displayed in an webinterface as line graph(s) over the day.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3JvZXN0MDEvZG9ja2VyLXNwZWVkdGVzdC1hbmFseXNlcg==\">https://github.com/roest01/docker-speedtest-analyser<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>定期檢測對外網速: Docker Speedtest analyser – GuGuComputing<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ndWd1Y29tcHV0aW5nLndvcmRwcmVzcy5jb20vMjAxOC8xMS8wNi8lZTUlYWUlOWElZTYlOWMlOWYlZTYlYWElYTIlZTYlYjglYWMlZTUlYjAlOGQlZTUlYTQlOTYlZTclYjYlYjIlZTklODAlOWYtZG9ja2VyLXNwZWVkdGVzdC1hbmFseXNlci8=\">https://gugucomputing.wordpress.com/2018/11/06/%e5%ae%9a%e6%9c%9f%e6%aa%a2%e6%b8%ac%e5%b0%8d%e5%a4%96%e7%b6%b2%e9%80%9f-docker-speedtest-analyser/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","测速"]},{"title":"用Alertover实现群晖的实时消息推送","url":"/2021/02/26/%E7%94%A8Alertover%E5%AE%9E%E7%8E%B0%E7%BE%A4%E6%99%96%E7%9A%84%E5%AE%9E%E6%97%B6%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/","content":"<p>元宵节快乐~！</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/26/1614337563995-1614337563997.png\" alt=\"title\"></p>\n<p>我们发送接收信息的渠道大多是 Email，短信。特别是服务报警这一块，短信虽好，但是太贵。而 <code>Alertover</code> 很好的解决了这个问题。</p>\n<p><strong>什么是Alertover ？</strong></p>\n<blockquote>\n<p>Alertover 是一个高效免费的团队消息中心，可以用来作为中小型创业团队或者公司的消息中心，随时随地，分级别、分组接收来自服务器预警，运营管理后台消息，提高技术团队，运营团队的消息响应速度。</p>\n</blockquote>\n<p>优点：</p>\n<ul>\n<li>当然是免费！</li>\n<li>具有简单好用的API，可快速完成接入；</li>\n<li>全平台支持，具有PC、Android、iOS客户端，也支持浏览器扩展插件；</li>\n<li>支持多发送源，消息分级，声音提示；</li>\n</ul>\n<p>官网(<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWxlcnRvdmVyLmNvbS9wYWdlcy9hcGk=\">https://www.alertover.com/pages/api<i class=\"fa fa-external-link-alt\"></i></span>) 有详细的使用说明和代码样例。接入很方便的，我之前把它作为了 <code>HomeAssistant</code> 的消息组件，用来每天推送一次天气预报。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/21/1613913602599-1613913602650.png\" alt=\"title\"></p>\n<p>而群晖原本只设置了 <code>邮件通知</code>，本身也挺好用的，只是实时性比较差</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/22/1613958164327-1613958164365.png\" alt=\"title\"></p>\n<p>对于一些严重的错误，比如<code>磁盘输入/输出错误</code>、<code>USB 硬盘故障</code>等等，如果我们想第一时间知道，可行的解决方案就是将 <code>Alertover</code> 封装成短信服务。</p>\n<h1 id=\"注册-Alertover\"><a href=\"#注册-Alertover\" class=\"headerlink\" title=\"注册 Alertover\"></a>注册 Alertover</h1><p>首先当然是要在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWxlcnRvdmVyLmNvbS9hdXRoL3JlZ2lzdGVy\">https://www.alertover.com/auth/register<i class=\"fa fa-external-link-alt\"></i></span> 注册账号，并登录后台管理你的相关ID。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/22/1613961224355-1613961224363.png\" alt=\"title\"></p>\n<p><code>Alertover</code> 以组织为单位管理成员、发送源、和接收组。我用于 <code>HomeAssistant</code> 当时建的组织就叫 <code>ha</code>，因为通知的对象没有变化，所以没有再新建组织，只是添加了发送源 <code>synology</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/22/1613970233089-1613970233091.png\" alt=\"title\"></p>\n<p>添加成功后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/22/1613970333604-1613970333613.png\" alt=\"title\"></p>\n<h1 id=\"添加-PHP-代码\"><a href=\"#添加-PHP-代码\" class=\"headerlink\" title=\"添加 PHP 代码\"></a>添加 PHP 代码</h1><blockquote>\n<p>关于群晖上搭建 <code>WEB</code> 网站，在<a href=\"https://laosu.ml/2020/05/02/%E5%AE%B6%E5%BA%AD%E5%A4%9A%E5%AA%92%E4%BD%93%E4%B8%AD%E5%BF%83%EF%BC%885%EF%BC%89%EF%BC%9A%E6%9F%A5%E8%AF%A2%E7%AF%87/\">家庭多媒体中心（5）：查询篇</a> 中有简单的介绍，这里不再赘述。</p>\n</blockquote>\n<p>之所以选 PHP ，是因为群晖上配置简单，而且 <code>Alertover</code> 提供了示例代码 ，下面是参考了 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vc3R5eGl0L2UzNGQ0YzZmOGNiMjNkNTVmNWFmI2ZpbGUtc3lub2xvZ3ktcHVzaG92ZXItcGhw\">synology-pushover.php<i class=\"fa fa-external-link-alt\"></i></span> 修改后的代码。这段代码我放在了 github 上，你可以在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dic3UyMDAzL3N5bm9sb2d5L2Jsb2IvbWFpbi9zeW5vbG9neS1hbGVydG92ZXIucGhw\">https://github.com/wbsu2003/synology/blob/main/synology-alertover.php<i class=\"fa fa-external-link-alt\"></i></span> 找到。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">/************************************/</span></span><br><span class=\"line\"><span class=\"comment\">/********** CONFING START ***********/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Only allow request made by localhost?</span></span><br><span class=\"line\"><span class=\"comment\">// Set this to false if this script is not running on your synology webserver (less secure)</span></span><br><span class=\"line\"><span class=\"variable\">$localOnly</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/********** CONFING END *************/</span></span><br><span class=\"line\"><span class=\"comment\">/************************************/</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> time();</span><br><span class=\"line\"><span class=\"comment\">// Validate httpHost and/or remote addr?</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$localOnly</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable\">$_SERVER</span>[<span class=\"string\">&#x27;HTTP_HOST&#x27;</span>] != <span class=\"string\">&#x27;localhost&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Not locahost</span></span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;Not locahost&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Set variables</span></span><br><span class=\"line\"><span class=\"variable\">$options</span> = <span class=\"keyword\">array</span>(</span><br><span class=\"line\">  <span class=\"string\">&#x27;source&#x27;</span> =&gt; <span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;source&#x27;</span>]) ? <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;source&#x27;</span>] : <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"string\">&#x27;receiver&#x27;</span> =&gt; <span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;receiver&#x27;</span>]) ? <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;receiver&#x27;</span>] : <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"string\">&#x27;content&#x27;</span> =&gt; <span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;content&#x27;</span>]) ? <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;content&#x27;</span>] : <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"string\">&#x27;title&#x27;</span> =&gt; <span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;title&#x27;</span>]) ? <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;title&#x27;</span>] : <span class=\"literal\">false</span></span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"comment\">// Remove empty values</span></span><br><span class=\"line\"><span class=\"variable\">$options</span> = array_filter(<span class=\"variable\">$options</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Quit if not exactly 4 get values were found</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (count(<span class=\"variable\">$options</span>) != <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;invalid options&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">die</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Do Alertovover curl</span></span><br><span class=\"line\">curl_setopt_array(<span class=\"variable\">$ch</span> = curl_init(), <span class=\"keyword\">array</span>(</span><br><span class=\"line\">  CURLOPT_URL =&gt; <span class=\"string\">&quot;https://api.alertover.com/v1/alert&quot;</span>,</span><br><span class=\"line\">  CURLOPT_POSTFIELDS =&gt; <span class=\"variable\">$options</span>,</span><br><span class=\"line\">  CURLOPT_SAFE_UPLOAD =&gt; <span class=\"literal\">true</span>,</span><br><span class=\"line\">));</span><br><span class=\"line\">curl_exec(<span class=\"variable\">$ch</span>);</span><br><span class=\"line\">curl_close(<span class=\"variable\">$ch</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>上述代码添加到 <code>Web</code> 服务器的根目录。确保文件名是 <code>synology-alertover.php</code>。</p>\n<h1 id=\"配置短信通知\"><a href=\"#配置短信通知\" class=\"headerlink\" title=\"配置短信通知\"></a>配置短信通知</h1><p><code>控制面板</code> –&gt; <code>通知设置</code> –&gt; <code>短信</code>，勾选 <code>启用短信通知</code> 之后，<code>新增短信服务提供商</code> 会高亮</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/22/1613972658263-1613972658273.png\" alt=\"title\"></p>\n<p>点击 <code>新增短信服务提供商</code> ，在 <code>测试网址</code> 中输入下面的示例</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;localhost&#x2F;synology-alertover.php?user&#x3D;username&amp;pwd&#x3D;password&amp;to&#x3D;123456&amp;source&#x3D;发送源ID&amp;receiver&#x3D;接收组ID&amp;title&#x3D;synology&amp;content&#x3D;Hello+World</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>其中<br>user = <code>username</code> –&gt; 映射为 <code>用户账号</code> –&gt; 该参数无用，凑数用的，可以随便填，建议不动；<br>pwd = <code>password</code> –&gt; 映射为 <code>密码</code> –&gt; 该参数无用，凑数用的，可以随便填，建议不动；<br>to = <code>123456</code> –&gt; 映射为 <code>电话号码</code> –&gt; 该参数无用，凑数用的，可以随便填，建议不动；<br>source = <code>发送源ID</code> –&gt; 映射为 <code>其他参数</code> –&gt; 该参数需填入 <code>发送源ID</code>，这是一串以 <code>s-</code> 开头的字符串；<br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/23/1614044593670-1614044593678.png\" alt=\"title\"><br>receiver = <code>用户接受ID</code> 或者 <code>接收组ID</code> –&gt; 映射为 <code>其他参数</code> –&gt; 该参数需填入 <code>用户接受ID</code> 或者 <code>接收组ID</code>，<code>用户接受ID</code>是以 <code>u-</code> 开头的字符串；而 <code>接收组ID</code> 是以 <code>g-</code> 开头的字符串；<br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/23/1614044658223-1614044658226.png\" alt=\"title\"><br>title = <code>标题</code> –&gt; 映射为 <code>其他参数</code> –&gt; 该参数需填入，我固定为了 <code>synology</code>，建议不动；<br>content = <code>消息内容</code> –&gt; 映射为 <code>短信内容</code> –&gt; 该参数需填入，映射后会根据事件变化；</p>\n</blockquote>\n<p>所以上面示例内容，除了 <code>source</code> 和 <code>receiver</code> 要根据自己注册的修改外，其他的可以不动，照抄就行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/23/1614044828459-1614044828463.png\" alt=\"title\"></p>\n<p>下一步中按下图设置即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/23/1614045247078-1614045247085.png\" alt=\"title\"></p>\n<p>这样我们就创建好了一个自定义的短信提供商，并且指向了本地 Web 服务器上的Alertover 脚本</p>\n<p>之所以设置这么多没用的参数，是因为群晖本身的格式需要，所以主界面的 <code>用户账号</code>、<code>密码</code>、<code>电话号码</code> 都可以随便填</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/23/1614045453066-1614045453074.png\" alt=\"title\"></p>\n<p>点 <code>寄送测试短信</code>，如果一切顺利，您很快会在 <code>Alertover</code> 设备上收到了一条通知。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/22/1614007341559-1614007341603.png\" alt=\"title\"></p>\n<p>如果你仔细看会发现内容并不是我们在 <code>content</code> 中填的 <code>Hello World</code>，这就是需要映射的原因</p>\n<h2 id=\"代码调试\"><a href=\"#代码调试\" class=\"headerlink\" title=\"代码调试\"></a>代码调试</h2><p>为了安全性，代码是不能在非 <code>localhost</code> 模式下运行的，也就是不能用域名、IP方式运行，所以如果你要调试，可以将 <code>$localOnly</code> 改为 <code>false</code>，之后就可以在浏览器中运行了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$localOnly &#x3D; false;</span><br></pre></td></tr></table></figure>\n\n<p>在浏览器中输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;群晖IP&#x2F;synology-alertover.php?user&#x3D;username&amp;pwd&#x3D;password&amp;to&#x3D;123456&amp;source&#x3D;发送源ID&amp;receiver&#x3D;接收组ID&amp;title&#x3D;synology&amp;content&#x3D;Hello+World</span><br></pre></td></tr></table></figure>\n\n<p>如果返回</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123; &quot;code&quot;: 0, &quot;msg&quot;: &quot;ok&quot; &#125;</span><br></pre></td></tr></table></figure>\n\n<p>就说明没问题了，如果返回</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">invalid options</span><br></pre></td></tr></table></figure>\n\n<p>那请你检查问号 <code>?</code> 后的参数，如果返回</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">Fatal error: Call to undefined function curl_setopt_array() in /volume1/web/synology-alertover.php on line 41</span><br></pre></td></tr></table></figure>\n\n<p>就是下一个问题要说的，需要包含 <code>curl</code> 扩展</p>\n<h2 id=\"可能存在的问题\"><a href=\"#可能存在的问题\" class=\"headerlink\" title=\"可能存在的问题\"></a>可能存在的问题</h2><p>如果设置无误，但是却一直收不到消息，检查下 <code>Web station</code> 的 <code>高级设置</code> –&gt; <code>扩展名</code> 中是否包含了 <code>curl</code> 扩展</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/22/1613983424128-1613983424136.png\" alt=\"title\"></p>\n<h1 id=\"设置事件通知\"><a href=\"#设置事件通知\" class=\"headerlink\" title=\"设置事件通知\"></a>设置事件通知</h1><p><code>控制面板</code> –&gt; <code>通知设置</code> –&gt; <code>高级设置</code>，你会发现短信有很多事件是不发送的。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/22/1613983668613-1613983668621.png\" alt=\"title\"></p>\n<p>直接勾选 <code>短信</code>，然后 <code>保存</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/22/1613984846784-1613984846793.png\" alt=\"title\"></p>\n<p>接下来你就可以实时的收到各种消息推送了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/23/1614059351423-1614059351444.png\" alt=\"title\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Alertover<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWxlcnRvdmVyLmNvbS8=\">https://www.alertover.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Synology Pushover notifications :: Styxit blog<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdHl4aXQuY29tLzIwMTQvMDUvMTAvc3lub2xvZ3ktcHVzaG92ZXIuaHRtbA==\">https://styxit.com/2014/05/10/synology-pushover.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","消息推送","Alertover"]},{"title":"超级简单易用的相册PhotoShow","url":"/2021/02/22/%E8%B6%85%E7%BA%A7%E7%AE%80%E5%8D%95%E6%98%93%E7%94%A8%E7%9A%84%E7%9B%B8%E5%86%8CPhotoShow/","content":"<p><code>PhotoShow</code> 是一个比较老的开源项目，基于 <code>PHP</code> 开发，但是镜像一直有更新，所以还是可以体验一下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613531602640-1613531602644.png\" alt=\"title\"></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>photoshow</code> ，选择第一个 <code>linuxserver/photoshow</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613531366267-1613531366270.png\" alt=\"title\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>photoshow</code>。然后在 <code>photoshow</code> 目录中创建3个新文件夹，分别命名为 <code>config</code> ， <code>photo</code> 和 <code>thumbs</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613531858116-1613531858117.png\" alt=\"title\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">/docker/photoshow/config</td>\n<td align=\"center\">/config</td>\n<td align=\"center\">设置文件存放目录</td>\n</tr>\n<tr>\n<td align=\"center\">/docker/photoshow/photo</td>\n<td align=\"center\">/Pictures</td>\n<td align=\"center\">照片文件存放目录</td>\n</tr>\n<tr>\n<td align=\"center\">/docker/photoshow/thumbs</td>\n<td align=\"center\">/Thumbs</td>\n<td align=\"center\">缩略图文件存放目录</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613534990269-1613534990270.png\" alt=\"title\"></p>\n<p>如果你只打算用来展示，也可以把 <code>photo</code> 目录设置为只读，以防止照片被误删</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613535168070-1613535168072.png\" alt=\"title\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不能冲突，我没用默认的，找了个空闲的端口 <code>8383</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n<th align=\"center\">类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">8383</td>\n<td align=\"center\">80</td>\n<td align=\"center\">TCP</td>\n</tr>\n<tr>\n<td align=\"center\">8344</td>\n<td align=\"center\">443</td>\n<td align=\"center\">TCP</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613532531643-1613532531644.png\" alt=\"title\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">PGID</td>\n<td align=\"center\"><code>&lt;gid&gt;</code> 设置为 <code>1000</code></td>\n</tr>\n<tr>\n<td align=\"center\">PUID</td>\n<td align=\"center\"><code>&lt;uid&gt;</code> 设置为 <code>1000</code></td>\n</tr>\n<tr>\n<td align=\"center\">TZ</td>\n<td align=\"center\">设置为 <code>Asia/Shanghai</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613532691484-1613532691486.png\" alt=\"title\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:8383</code>，并不能马上看到主界面，从日志看有拉取代码的操作</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613533213611-1613533213614.png\" alt=\"title\"></p>\n<p>直到显示 <code>ready to handle connections</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613533279707-1613533279709.png\" alt=\"title\"></p>\n<p>首先要创建主账号</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613534125303-1613534125305.png\" alt=\"title\"></p>\n<p>登录成功后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613534228485-1613534228486.png\" alt=\"title\"></p>\n<p>在 <code>photo</code> 目录中新建目录 <code>2021.02.17</code>，并且导入三张照片</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613535652582-1613535652585.png\" alt=\"title\"></p>\n<p>刷新主界面，左侧是文件夹列表</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613536054763-1613536054764.png\" alt=\"title\"></p>\n<p>进入目录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613536080863-1613536080864.png\" alt=\"title\"></p>\n<p>查看照片</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613536119137-1613536119138.png\" alt=\"title\"></p>\n<p>可以为图片填写描述和评论，当然也可以重命名或者删除（如果 <code>photo</code> 目录没有勾选 <code>只读</code>）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613536225670-1613536225672.png\" alt=\"title\"></p>\n<p>是不是很简单？<code>PhotoShow</code> 采用了响应式布局，所以也可以从手机上访问和管理 <code>PhotoShow</code>。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>thibaud-rohmer/PhotoShow: 源代码<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RoaWJhdWQtcm9obWVyL1Bob3RvU2hvdw==\">https://github.com/thibaud-rohmer/PhotoShow<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>How to Install PhotoShow on Your Synology NAS – Marius Hosting<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXJpdXNob3N0aW5nLmNvbS9ob3ctdG8taW5zdGFsbC1waG90b3Nob3ctb24teW91ci1zeW5vbG9neS1uYXMv\">https://mariushosting.com/how-to-install-photoshow-on-your-synology-nas/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","图片"]},{"title":"开源视频会议系统OpenMeetings","url":"/2021/02/19/%E5%BC%80%E6%BA%90%E8%A7%86%E9%A2%91%E4%BC%9A%E8%AE%AE%E7%B3%BB%E7%BB%9FOpenMeetings/","content":"<p><strong>什么是 OpenMeetings ？</strong></p>\n<blockquote>\n<p>OpenMeetings 是 Apache 的一个项目，是一个多语言可定制的开源视频会议和协作系统，支持音频和视频，可用于演示、在线培训、网络会议、协作白板绘图和文档编辑以及用户桌面共享。</p>\n</blockquote>\n<p>之前我们介绍过类似的视频会议软件 <code>Jitsi</code>，原文在这里：</p>\n<blockquote>\n<p><a href=\"https://laosu.ml/2020/07/22/%E5%9C%A8%E7%BE%A4%E6%99%96%E4%B8%8A%E6%90%AD%E5%BB%BA%E4%B8%93%E5%B1%9E%E7%9A%84%E8%A7%86%E9%A2%91%E4%BC%9A%E8%AE%AE/\">在群晖上搭建专属的视频会议</a></p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>openmeetings</code> ，选择第四个 <code>apache/openmeetings</code>，版本选择最新的 <code>5.1.0</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613557670179-1613557670181.png\" alt=\"title\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不能冲突</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n<th align=\"center\">类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">5443</td>\n<td align=\"center\">5443</td>\n<td align=\"center\">TCP</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613559749436-1613559749437.png\" alt=\"title\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:5443</code>，会返回错误信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Bad Request</span><br><span class=\"line\">This combination of host and port requires TLS.</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613559941085-1613559941092.png\" alt=\"title\"></p>\n<p>所以必须要用 <code>https</code> 协议而不是 <code>http</code>协议来访问， 在浏览器中输入 <code>https://群晖IP:5443</code>，这回看到了主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613564194185-1613564194187.png\" alt=\"title\"></p>\n<blockquote>\n<p>默认的管理员账号：<code>om_admin</code>，密码：<code>1Q2w3e4r5t^y</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613564490649-1613564490650.png\" alt=\"title\"></p>\n<p>登录成功后的主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613564530717-1613564530718.png\" alt=\"title\"></p>\n<p>展开右下角的聊天窗口</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613565326511-1613565326513.png\" alt=\"title\"></p>\n<h2 id=\"网络测试\"><a href=\"#网络测试\" class=\"headerlink\" title=\"网络测试\"></a>网络测试</h2><p>在登录界面选择 <code>网络测试</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613564838025-1613564838027.png\" alt=\"title\"></p>\n<p>会弹出一个新界面，耐心等待一会儿</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613564356109-1613564356111.png\" alt=\"title\"></p>\n<p>从测试结果看，并没有跑满带宽，因为我的台式机和 NAS 挂在同一个千兆路由上</p>\n<h2 id=\"反向代理设置\"><a href=\"#反向代理设置\" class=\"headerlink\" title=\"反向代理设置\"></a>反向代理设置</h2><p>我已经架设好了 <code>frps</code> 服务，可以通过反代实现互联网的域名访问，方便我们测试效果。</p>\n<p>进入群晖的 <code>控制面板</code> –&gt; <code>Synology 应用程序门户</code> –&gt; <code>反向代理服务器</code> 页面 (找不到的话请点击高级模式) ，如图添加一条 <code>反向代理服务器规则</code>。（<code>来源端口</code> 你自己定义，<code>目的地端口</code> ）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613564735152-1613564735155.png\" alt=\"title\"></p>\n<h2 id=\"设置语言\"><a href=\"#设置语言\" class=\"headerlink\" title=\"设置语言\"></a>设置语言</h2><p>点 <code>Edit your profile</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/18/1613618399162-1613618399195.png\" alt=\"title\"></p>\n<p>语言 <code>Language</code> 选择 <code>Chinese(China)</code> ，国家 <code>Country</code> 选择 <code>中国</code>，顺带着把时区 <code>Timezone</code> 改为了 <code>Asia/Shanghai</code>。</p>\n<blockquote>\n<p>需要将 <code>语言</code>和 <code>国家</code> 同步修改才能生效，否则可能只会部分显示中文</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/18/1613619011006-1613619011007.png\" alt=\"title\"></p>\n<p>保存的时候需要密码，完成之后需要 <code>Logout</code> 之后再登录才会看到中文</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/18/1613619096328-1613619096330.png\" alt=\"title\"></p>\n<h2 id=\"音视频设备检查\"><a href=\"#音视频设备检查\" class=\"headerlink\" title=\"音视频设备检查\"></a>音视频设备检查</h2><p><code>检查音频视频设置</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/18/1613620697256-1613620697258.png\" alt=\"title\"></p>\n<p>有多个音视频设备时，可以通过下拉框选择</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/18/1613620761432-1613620761437.png\" alt=\"title\"></p>\n<p>如果前面带宽测速没问题，摄像头像素可以调高一些</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/18/1613620886762-1613620886766.png\" alt=\"title\"></p>\n<h2 id=\"进入会议\"><a href=\"#进入会议\" class=\"headerlink\" title=\"进入会议\"></a>进入会议</h2><p>1~16人的会议室是自动广播音视频的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613566084292-1613566084294.png\" alt=\"title\"></p>\n<p>1~120人的会议室是默认是不主动广播音视频的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613566124009-1613566124010.png\" alt=\"title\"></p>\n<h3 id=\"文件\"><a href=\"#文件\" class=\"headerlink\" title=\"文件\"></a>文件</h3><p><code>文件</code> –&gt; <code>导入演示</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/18/1613619479128-1613619479131.png\" alt=\"title\"></p>\n<p><code>选择文件</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/18/1613619494834-1613619494836.png\" alt=\"title\"></p>\n<p><code>开始上传</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/18/1613619442159-1613619442161.png\" alt=\"title\"></p>\n<p>上传的文件可以在 <code>我的文件</code> 中找到，对格式似乎没有限制</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/18/1613619662403-1613619662404.png\" alt=\"title\"></p>\n<h3 id=\"白板\"><a href=\"#白板\" class=\"headerlink\" title=\"白板\"></a>白板</h3><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613566200778-1613566200779.png\" alt=\"title\"></p>\n<p>白板的内容可以下载为 png 或者 pdf</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613566590596-1613566590598.png\" alt=\"title\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/18/1613620127312-1613620127316.png\" alt=\"title\"></p>\n<p>支持多页</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613566947562-1613566947564.png\" alt=\"title\"></p>\n<h3 id=\"共享屏幕\"><a href=\"#共享屏幕\" class=\"headerlink\" title=\"共享屏幕\"></a>共享屏幕</h3><p>支持共享 <code>您的整个屏幕</code>，也可以选择 <code>应用窗口</code> 或者 <code>Chrome 标签页</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613566310093-1613566310096.png\" alt=\"title\"></p>\n<p>支持录制</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/17/1613566352630-1613566352632.png\" alt=\"title\"></p>\n<h3 id=\"文档演示\"><a href=\"#文档演示\" class=\"headerlink\" title=\"文档演示\"></a>文档演示</h3><p>可以导入文件，用于文档演示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/18/1613619479128-1613619479131.png\" alt=\"title\"></p>\n<p>勾选 <code>直接载入到白板</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/18/1613619731851-1613619731854.png\" alt=\"title\"></p>\n<p>如果没有勾选 <code>清除白板</code> ，白板上原来的内容还会被保留</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/18/1613619510688-1613619510690.png\" alt=\"title\"></p>\n<h3 id=\"发送邀请\"><a href=\"#发送邀请\" class=\"headerlink\" title=\"发送邀请\"></a>发送邀请</h3><p><code>操作</code> –&gt; <code>发送邀请</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/18/1613620413113-1613620413115.png\" alt=\"title\"></p>\n<p><code>产生URL</code> 可以用邮件、微信等发送</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/18/1613620504383-1613620504387.png\" alt=\"title\"></p>\n<h3 id=\"注册用户\"><a href=\"#注册用户\" class=\"headerlink\" title=\"注册用户\"></a>注册用户</h3><p>收到邀请的用户需要先注册一下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/18/1613626420004-1613626420006.png\" alt=\"title\"></p>\n<p>安装超级简单，有兴趣可以自己装一个研究。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Apache OpenMeetings Project – Home<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9vcGVubWVldGluZ3MuYXBhY2hlLm9yZy9pbmRleC5odG1s\">https://openmeetings.apache.org/index.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>apache/openmeetings: 源代码<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FwYWNoZS9vcGVubWVldGluZ3M=\">https://github.com/apache/openmeetings<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>openmeetings/openmeetings-docker: Docker image for OM<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL29wZW5tZWV0aW5ncy9vcGVubWVldGluZ3MtZG9ja2Vy\">https://github.com/openmeetings/openmeetings-docker<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","视频会议"]},{"title":"黑群晖故障修复记录","url":"/2021/02/15/%E9%BB%91%E7%BE%A4%E6%99%96%E6%95%85%E9%9A%9C%E4%BF%AE%E5%A4%8D%E8%AE%B0%E5%BD%95/","content":"<p>大年初二一早，发现我的黑群晖再次无法访问了，提示“抱歉，您所指定的页面不存在”。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/13/1613204671823-1613204671825.png\" alt=\"title\"></p>\n<p>之所以说再次，是因为之前遇到过，而且网上也有教程。</p>\n<blockquote>\n<p>老外的原帖：<span class=\"exturl\" data-url=\"aHR0cHM6Ly94cGVub2xvZ3kuY29tL2ZvcnVtL3RvcGljLzEyNDA2LWhvdy10by1maXgtc29ycnktdGhhdC1wYWdlLWRvZXNudC1leGlzdC8=\">https://xpenology.com/forum/topic/12406-how-to-fix-sorry-that-page-doesnt-exist/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>中文教程：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zYW4uY2kvNTIyLmh0bWw=\">https://san.ci/522.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<p>上次遇到后我就备份了 <code>libsynopkg.so.1</code> 和 <code>libsynoshare.so.6</code>这两个文件，所以我一点都不担心，直接用 <code>putty</code> 连上群晖，一顿操作猛如虎</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo -i</span><br><span class=\"line\">cp /tmp/lib/libsynopkg.so.1 /lib/</span><br><span class=\"line\">cp /tmp/lib/libsynoshare.so.6 /lib/</span><br><span class=\"line\">reboot  </span><br></pre></td></tr></table></figure>\n\n<p>把两个文件复制到了 <code>lib</code> 目录，重启之后很顺利的进入了群晖的后台页面，但是和上一次完全恢复不同，最直观的异常出现在右侧的小工具上，『存储』一直显示 <code>加载中</code>，『系统状况』除了 <code>系统名称</code>，其他的都无法加载。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/13/1613205375189-1613205375190.png\" alt=\"title\"></p>\n<p>之后陆续又发现：</p>\n<ol>\n<li>『共享文件夹』界面空白</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/13/1613205619155-1613205619157.png\" alt=\"title\"></p>\n<ol start=\"2\">\n<li>『用户账号』界面显示 <code>命令运行失败</code></li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/13/1613205709707-1613205709709.png\" alt=\"title\"></p>\n<ol start=\"3\">\n<li>『外接设备』界面空白</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/13/1613205801926-1613205801927.png\" alt=\"title\"></p>\n<ol start=\"4\">\n<li>『存储空间管理员』界面空白</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/13/1613205889183-1613205889185.png\" alt=\"title\"></p>\n<p>我以为是权限问题，所以又按教程执行了权限变更</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">chmod 644 /lib/libsynopkg.so.1</span><br><span class=\"line\">chmod 644 /lib/libsynoshare.so.6</span><br></pre></td></tr></table></figure>\n\n<p>但是故障依旧，这让原本很放松的心情有了一丝紧张，好在很快找到了另一篇中文教程，从现象看简直一摸一样</p>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L215bDUyNS9hcnRpY2xlL2RldGFpbHMvMTExMzI5OTkz\">黑群晖无法加载系统信息 | 磁盘信息 | 共享文件夹显示空白等BUG 问题解决（https://blog.csdn.net/myl525/article/details/111329993）<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<p>首先打开 <code>/var/log/ha.log</code> 文件，在文件最底部找到了同样的报错信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">synoscgi_SYNO.Core.SHA.DSM.Message_1_should_alert_unbind[1857]: APIRunner.cpp:758 cannot open library: lib&#x2F;SYNO.Core.SHA.so. error &#x3D; &#x2F;lib&#x2F;libsynostoragemgmt.so: invalid ELF header</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/13/1613206961792-1613206961793.png\" alt=\"title\"></p>\n<p>说明问题是一样的，也是 <code>libsynostoragemgmt.so</code> 文件有问题，因为这个文件没有备份，所以需要找到原始固件解压。</p>\n<ol>\n<li>官网直接下载 ds3617xs 固件文件（.pat格式），一定要和你的版本是一致的；</li>\n<li>安装7zip解压软件；</li>\n<li>将目录 <code>hda1.tgz/hda1/usr/lib</code> 里复制出来；</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/13/1613207972483-1613207972486.png\" alt=\"title\"></p>\n<p>如果你之前没有备份 <code>libsynopkg.so.1</code> 和 <code>libsynoshare.so.6</code>这两个文件，也可以一并复制出来。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">cp /tmp/lib/libsynostoragemgmt.so /lib/</span><br></pre></td></tr></table></figure>\n\n<p>不需要重启，直接刷新页面就可以了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/13/1613208303924-1613208303925.png\" alt=\"title\"></p>\n<p>建议：如果你是用来存储重要的数据，有能力的话建议还是买正版的群晖，毕竟数据是无价的。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>解决黑群晖故障- 抱歉，您所指定的页面不存在。 - San.ci<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2FuLmNpLzUyMi5odG1s\">https://www.san.ci/522.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>黑群晖无法加载系统信息 | 磁盘信息 | 共享文件夹显示空白等BUG 问题解决_myl525的专栏-CSDN博客<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L215bDUyNS9hcnRpY2xlL2RldGFpbHMvMTExMzI5OTkz\">https://blog.csdn.net/myl525/article/details/111329993<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖"]},{"title":"安装下载工具qBittorrent","url":"/2021/02/12/%E5%AE%89%E8%A3%85%E4%B8%8B%E8%BD%BD%E5%B7%A5%E5%85%B7qBittorrent/","content":"<p>给大家拜年了，新春快乐，牛年大吉，身体健康，阖家幸福</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/12/1613096839922-1613096839927.png\" alt=\"title\"></p>\n<p><strong>什么是 qBittorrent？</strong></p>\n<blockquote>\n<p><code>qBittorrent</code> 是一款开源免费的种子和磁力链接下载工具，支持 <code>Windows</code>、<code>Mac</code> 和 <code>Linux</code>，是一个跨平台的自由 <code>BitTorrent</code> 客户端，其图形用户接口由 <code>Qt</code> 写成。使用<code>libtorrent</code> 作为后端。由 Christophe Dumez 在贝尔福 - 蒙贝利亚尔理工大学时开始开发。</p>\n</blockquote>\n<p>我下载的需求不大，一直用的玩客云，这玩意儿现在淘宝上还不到50块，比买迅雷会员合算多了，插个移动硬盘就成了下载机，又经济又实惠。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210119202444.png\"></p>\n<p>但为啥又要折腾下载软件呢？因为 <code>qBittorrent</code> 支持 RSS 订阅，可以实现自动化的更新，这会让我们以后的折腾变得更有趣。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在 docker 注册表中搜索 <code>qbittorrent</code> ，选择第三个 <code>johngong/qbittorrent</code>，版本 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/27/1611716629429-1611716629469.png\" alt=\"title\"></p>\n<p>这个版本集成了 <code>Trackers</code> 自动更新，可以帮我们省一些事情。</p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">/docker/qbittorrent/config</td>\n<td align=\"center\">/config</td>\n<td align=\"center\">配置文件的目录</td>\n</tr>\n<tr>\n<td align=\"center\">/docker/qbittorrent/downloads</td>\n<td align=\"center\">/Downloads</td>\n<td align=\"center\">下载文件的目录</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/27/1611717860067-1611717860070.png\" alt=\"title\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不能冲突</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n<th align=\"center\">类型</th>\n<th align=\"center\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">6881</td>\n<td align=\"center\">6881</td>\n<td align=\"center\">TCP</td>\n<td align=\"center\">BT下载监听端口</td>\n</tr>\n<tr>\n<td align=\"center\">6881</td>\n<td align=\"center\">6881</td>\n<td align=\"center\">UDP</td>\n<td align=\"center\">BT下载DHT监听端口</td>\n</tr>\n<tr>\n<td align=\"center\">8989</td>\n<td align=\"center\">8989</td>\n<td align=\"center\">TCP</td>\n<td align=\"center\">web访问端口</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/27/1611717904227-1611717904232.png\" alt=\"title\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">UID</td>\n<td align=\"center\"><code>&lt;uid&gt;</code> 默认为 0</td>\n</tr>\n<tr>\n<td align=\"center\">GID</td>\n<td align=\"center\"><code>&lt;gid&gt;</code> 默认为 0</td>\n</tr>\n<tr>\n<td align=\"center\">TRACKERSAUTO</td>\n<td align=\"center\">自动更新 qBittorrent 的 trackers ,默认开启此功能</td>\n</tr>\n<tr>\n<td align=\"center\">UMASK</td>\n<td align=\"center\">umask设置，默认为022</td>\n</tr>\n<tr>\n<td align=\"center\">WEBUIPORT</td>\n<td align=\"center\">默认为8989，如果前面改了，这里也要改</td>\n</tr>\n<tr>\n<td align=\"center\">TZ</td>\n<td align=\"center\">系统时区设置，默认为Asia/Shanghai</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>注意事项：</p>\n<ol>\n<li><code>WEBUIPORT</code> 要根据前面本地端口的设置而修改，如果不一致可能会导致无法访问。</li>\n<li> 默认的 <code>UID</code> 和 <code>GID</code> 均为 0，这是 <code>root</code> 用户，如果你要使用，请勿将对权限敏感的文件夹映射到此文件夹。<code>UID</code> 和 <code>GID</code> 要通过运行 <code>id user</code> 命令来获得。或者像我一样用 <code>1000</code>，这代表第一个用户。</li>\n<li>其他值保持默认就可以。</li>\n</ol>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/27/1611718253432-1611718253441.png\" alt=\"title\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:8989</code>，就能看到主界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201103003951.png\"></p>\n<blockquote>\n<p>默认的用户名：admin，密码：adminadmin</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201103003907.png\"></p>\n<p>登录成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/27/1611719062262-1611719062272.png\" alt=\"title\"></p>\n<h2 id=\"搜索和下载\"><a href=\"#搜索和下载\" class=\"headerlink\" title=\"搜索和下载\"></a>搜索和下载</h2><p>设置中，默认勾选了 <code>使用我的路由器的 UPnP / NAT-PMP 功能来转发端口</code>，</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/17/1610878034131-1610878034134.png\" alt=\"title\"></p>\n<p>但还需要在路由器开启 <code>UPnP / NAT-PMP</code> 功能。每个路由器不同，我用的电信送的磊科 MG1200AC ，在 <code>路由器设置</code> –&gt; <code>开发者模式</code> 中可以启用和关闭。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/27/1611761715522-1611761715552.png\" alt=\"title\"></p>\n<p>找到右上侧的 <code>搜索</code>，输入你要搜索的内容</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/17/1610874947128-1610874947130.png\" alt=\"title\"></p>\n<p>选中你想下载的资源，双击</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/17/1610875028214-1610875028215.png\" alt=\"title\"></p>\n<p>开始下载</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/17/1610875096483-1610875096484.png\" alt=\"title\"></p>\n<p>如果下载速度慢可能是种子问题也可能是网络环境问题</p>\n<h2 id=\"启用-Jackett-插件\"><a href=\"#启用-Jackett-插件\" class=\"headerlink\" title=\"启用 Jackett 插件\"></a>启用 Jackett 插件</h2><p>默认启用了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/29/1611901927050-1611901927058.png\" alt=\"title\"></p>\n<p>但不做任何修改会提示 API 错误</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/29/1611901483359-1611901483367.png\" alt=\"title\"></p>\n<p>按提示找到 <code>/docker/qbittorrent/config/qBittorrent/data/nova3/engines</code> 下的 <code>jackett.json</code>，右键 <code>用文本编辑器打开</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/29/1611901688264-1611901688272.png\" alt=\"title\"></p>\n<p><code>api_key</code> 可以在 <code>Jackett</code> 主界面的右上角找到</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/29/1611902029591-1611902029593.png\" alt=\"title\"></p>\n<p><code>url</code> 根据实际的地址填写，保存即可。再次搜索就会有结果返回了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/29/1611902252235-1611902252246.png\" alt=\"title\"></p>\n<h2 id=\"支持-https\"><a href=\"#支持-https\" class=\"headerlink\" title=\"支持 https\"></a>支持 https</h2><p>点 <code>注册以处理磁力链接</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/27/1611739192454-1611739192491.png\" alt=\"title\"></p>\n<p>显示需要支持 https 才可以，其实我好像是能直接添加磁力链接下载的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/27/1611739230481-1611739230488.png\" alt=\"title\"></p>\n<p>首先，在 <code>控制面板</code> –&gt; <code>Synology 应用程序门口</code> –&gt; <code>反向代理服务器</code> 中新增规则</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/27/1611739417129-1611739417133.png\" alt=\"title\"></p>\n<p>停止容器，找到 <code>/docker/qbittorrent/config/qBittorrent/config</code> 目录中的 <code>qBittorrent.conf</code> 文件，习惯在修改前先备份一份。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/27/1611739831171-1611739831174.png\" alt=\"title\"></p>\n<p>找到 <code>WebUI\\HostHeaderValidation=true</code> , 将 <code>true</code> 改为 <code>false</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/27/1611738123706-1611738123712.png\" alt=\"title\"></p>\n<p>改为重新启动容器就可以了。</p>\n<blockquote>\n<p>如果不改这一行，访问时会显示 <code>Unanthorized</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/27/1611738150322-1611738150329.png\" alt=\"title\"></p>\n<h2 id=\"RSS-订阅\"><a href=\"#RSS-订阅\" class=\"headerlink\" title=\"RSS 订阅\"></a>RSS 订阅</h2><p>直接点开右上角的 <code>RSS</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/27/1611719471781-1611719471788.png\" alt=\"title\"></p>\n<p>回到设置中，勾选 <code>启用获取 RSS 订阅</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/27/1611719602070-1611719602077.png\" alt=\"title\"></p>\n<p>如果你要想使用 RSS 下载，还需要勾选 <code>启用 RSS Torrent 自动下载</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/27/1611719854767-1611719854770.png\" alt=\"title\"></p>\n<ol>\n<li>转到 <code>qBittorrent</code> 的 <code>RSS</code> 选项卡。</li>\n<li>点击 <code>新 RSS订阅</code> </li>\n<li>在弹出界面中的 URL 地址中输入在上一篇文章《<a href=\"https://laosu.ml/2021/02/08/%E8%B5%84%E6%BA%90%E8%81%9A%E5%90%88%E6%90%9C%E7%B4%A2%E7%A5%9E%E5%99%A8Jackett/\">资源聚合搜索神器Jackett</a>》中生成的带查询结果的RSS， 然后单击“确定” 。 </li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;192.168.0.199:9117&#x2F;api&#x2F;v2.0&#x2F;indexers&#x2F;zooqle&#x2F;results&#x2F;torznab&#x2F;api?apikey&#x3D;4dekwddu91wlil50ho1xrj17fz008aaa&amp;t&#x3D;search&amp;cat&#x3D;5000,103583&amp;q&#x3D;西部世界</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/28/1611824577129-1611824577162.png\" alt=\"title\"></p>\n<p>添加完成后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210129112330.png\"></p>\n<p>转到 <code>RSS 下载器</code> 并按照打开的屏幕截图中的示例设置一些规则，</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210129140822.png\"></p>\n<p>qBittorrent 就会根据你的设置，把订阅的并符合下载规则的资源自动下载。但这个功能要慎用，如果设置不当，可能会下载一堆你不需要的东西回来。</p>\n<p>要实现更高效的自动化下载，且听下回分解​。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>折腾群晖笔记：使用群晖 Docker 安装qbittorrent QB下载器 PT离线下载神器_NAS存储_什么值得买<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2E1azY0NTg3Lw==\">https://post.smzdm.com/p/a5k64587/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>蜗牛星际NAS 篇三：qBittorrent下载器安装配置_办公软件_什么值得买<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2F6NWV6eDkwLw==\">https://post.smzdm.com/p/az5ezx90/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>How to configure Jackett plugin · qbittorrent/search-plugins Wiki · GitHub<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3FiaXR0b3JyZW50L3NlYXJjaC1wbHVnaW5zL3dpa2kvSG93LXRvLWNvbmZpZ3VyZS1KYWNrZXR0LXBsdWdpbg==\">https://github.com/qbittorrent/search-plugins/wiki/How-to-configure-Jackett-plugin<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>[筆記] 使用qBittorrent WebUI訂閱RSS自動下載教學 | NPCHK Blog<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ucGNoay5pbmZvL3FiaXR0b3JyZW50LXdlYi1yc3MtYXV0by1kb3dubG9hZC8=\">https://npchk.info/qbittorrent-web-rss-auto-download/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","BitTorrent","下载"]},{"title":"资源聚合搜索神器Jackett","url":"/2021/02/08/%E8%B5%84%E6%BA%90%E8%81%9A%E5%90%88%E6%90%9C%E7%B4%A2%E7%A5%9E%E5%99%A8Jackett/","content":"<p><strong>什么是 Jackett ？</strong></p>\n<blockquote>\n<p>Jackett 是跨平台的开源应用，支持 OSX ，Windows 和 Linux 平台，集成了众多种子站，可作为代理服务器通过 API 来响应来自应用程序（ Sonarr ， Radarr ，SickRage ，CouchPotato ，Mylar ，Lidarr ，DuckieTV ，qBittorrent ，Nefarious 等）的查询，然后将结果发送回请求软件。</p>\n</blockquote>\n<p>Jackett 的用途有两个：一个是可以直接在 Jackett 中进行搜索，另一个就是给其他工具提供信息源。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>jackett</code> ，选择第一个 <code>linuxserver/jackett</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/27/1611720524649-1611720524659.png\" alt=\"title\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>jackett</code>，然后在 <code>jackett</code> 文件夹中再创建两个新文件夹：分别命名为 <code>config  </code> 和 <code>downloads </code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/27/1611720683271-1611720683278.png\" alt=\"title\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">/docker/jackett/config</td>\n<td align=\"center\">/config</td>\n<td align=\"center\">保存配置文件的目录</td>\n</tr>\n<tr>\n<td align=\"center\">/docker/jackett/downloads</td>\n<td align=\"center\">/downloads</td>\n<td align=\"center\">下载目录，用于保存种子文件</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/27/1611727505607-1611727505617.png\" alt=\"title\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口不能冲突，直接用了默认的</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n<th align=\"center\">类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">9117</td>\n<td align=\"center\">9117</td>\n<td align=\"center\">TCP</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/27/1611727625916-1611727625923.png\" alt=\"title\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">PUID</td>\n<td align=\"center\"><code>&lt;uid&gt;</code> 默认为 1000</td>\n</tr>\n<tr>\n<td align=\"center\">PGID</td>\n<td align=\"center\"><code>&lt;gid&gt;</code> 默认为 1000</td>\n</tr>\n<tr>\n<td align=\"center\">TZ</td>\n<td align=\"center\">Asia/shanghai</td>\n</tr>\n<tr>\n<td align=\"center\">AUTO_UPDATE</td>\n<td align=\"center\">true #可选项</td>\n</tr>\n<tr>\n<td align=\"center\">RUN_OPTS</td>\n<td align=\"center\">#可选项</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/27/1611728056578-1611728056585.png\" alt=\"title\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:9117</code>，就能看到主界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/27/1611728259669-1611728259683.png\" alt=\"title\"></p>\n<h2 id=\"添加索引器\"><a href=\"#添加索引器\" class=\"headerlink\" title=\"添加索引器\"></a>添加索引器</h2><p>选择 <code>Add Indexer</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/27/1611728567045-1611728567053.png\" alt=\"title\"></p>\n<p>根据需要选择</p>\n<blockquote>\n<p>如果类型是 <code>private</code> 或者 <code>Semi-Private</code>，则需要登录才能使用。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/27/1611728687270-1611728687279.png\" alt=\"title\"></p>\n<p>我加了 <code>Zooqle</code></p>\n<blockquote>\n<p>Zooqle 是一个综合 BT 站点，主打美剧、电影资源</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/27/1611730406182-1611730406190.png\" alt=\"title\"></p>\n<p>点搜索，从这两个地方进去是一样的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/27/1611731005688-1611731005695.png\" alt=\"title\"></p>\n<p>支持中文检索，比如输入 <code>我和我的家乡</code>，返回了4条记录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/27/1611730634526-1611730634534.png\" alt=\"title\"></p>\n<h2 id=\"为其他软件提供信息源\"><a href=\"#为其他软件提供信息源\" class=\"headerlink\" title=\"为其他软件提供信息源\"></a>为其他软件提供信息源</h2><p>主界面有详细的说明</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/27/1611730910875-1611730910882.png\" alt=\"title\"></p>\n<p>生成 RSS 订阅只要 <code>Copy RSS Feed</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;192.168.0.199:9117&#x2F;api&#x2F;v2.0&#x2F;indexers&#x2F;zooqle&#x2F;results&#x2F;torznab&#x2F;api?apikey&#x3D;4dekwddu91wlil50ho1xrj17fz008aaa&amp;t&#x3D;search&amp;cat&#x3D;&amp;q&#x3D;</span><br></pre></td></tr></table></figure>\n\n<p>如果要生成带查询的 RSS 订阅 ，只要修改参数 <code>q</code>（搜索字符串）和 <code>cat</code>（类别）参数</p>\n<blockquote>\n<p>例如我要查 <code>西部世界</code>，类别是5000（TV）和 103583（TV）</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210129110742.png\"></p>\n<p>可以下改成这样的</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;192.168.0.199:9117&#x2F;api&#x2F;v2.0&#x2F;indexers&#x2F;zooqle&#x2F;results&#x2F;torznab&#x2F;api?apikey&#x3D;4dekwddu91wlil50ho1xrj17fz008aaa&amp;t&#x3D;search&amp;cat&#x3D;5000,103583&amp;q&#x3D;西部世界</span><br></pre></td></tr></table></figure>\n\n<p>将上面的链接在浏览器中打开，我们会看到确实返回了 <code>西部世界</code> 的查询结果</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210129111934.png\"></p>\n<p>其他的等我们安装相应的软件时再说，有兴趣可以先研究。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Jackett/Jackett: API Support for your favorite torrent trackers.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0phY2tldHQvSmFja2V0dA==\">https://github.com/Jackett/Jackett<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Jackett Installation (Docker) | How to Setup Jackett on a Synology.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zYXNxdWF0dGVycy5jb20vamFja2V0dC1kb2NrZXIv\">https://sasquatters.com/jackett-docker/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Jackett Configuration | How to Configure Automatic Torrents Snatching.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zYXNxdWF0dGVycy5jb20vamFja2V0dC1jb25maWd1cmF0aW9uLw==\">https://sasquatters.com/jackett-configuration/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Jackett Sonarr Radarr 介绍_软件应用_什么值得买<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2E3OHp4b3JkLw==\">https://post.smzdm.com/p/a78zxord/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","BitTorrent"]},{"title":"自动备份Bitwarden数据库","url":"/2021/02/05/%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BDBitwarden%E6%95%B0%E6%8D%AE%E5%BA%93/","content":"<blockquote>\n<p>今天是小年夜，按照我们那的习俗，过了腊月廿四就天天都是年了。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/05/1612522977966-1612522978002.png\" alt=\"title\"></p>\n<p>数据无价！如果用来保存密码的数据库损坏了，你会不会抓狂？这种事情就让我遇上了，之前一直用的好好的 <code>Bitwarden</code> 前些天突然不能同步，查询日志发现</p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">[2021-01-13 04:09:32.760][panic][ERROR] thread &#x27;main&#x27; panicked at &#x27;Failed to turn on WAL: DatabaseError(__Unknown, &quot;database disk image is malformed&quot;)&#x27;: src/main.rs:232</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>SQLite，你不讲武德啊！</p>\n</blockquote>\n<p>还好前几天备份过 <code>db.sqlite3</code>，不然可就麻烦大了。不过还是损失了中间几天的数据，所以一定要想办法搞定自动定时备份数据库。</p>\n<p><code>github</code> 上有个开源的脚本可以实现我想要的功能，脚本地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vdml0b2JvdHRhLzNhNmM1M2MzNjkzZmY3N2NkMGM5MjBkMGE1NDE2MjJkI2ZpbGUtYml0d2FyZGVuX3JzLWJhY2t1cC1zaC1MMjU=\">https://gist.github.com/vitobotta/3a6c53c3693ff77cd0c920d0a541622d#file-bitwarden_rs-backup-sh-L25<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>唯一要修改的是 <code>parent_dir</code> 的值，这是 <code>bitwarden-rs</code> 的数据库目录，请根据你的实际情况填写。</p>\n<p>我的 <code>bitwarden-rs</code> 数据库在 <code>/docker/bitwarden</code> 目录，右键属性可以获得完整的路径。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/29/1611906408597-1611906408627.png\" alt=\"title\"></p>\n<p>虽然目录中有密钥文件和网站图标缓存，但以下脚本只备份<code>数据库文件</code>及<code>attachments</code> 目录 。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> LC_ALL=C</span><br><span class=\"line\"></span><br><span class=\"line\">now=$(date +<span class=\"string\">&quot;%Y%m%d-%H%M%S&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># parent_dir 请根据你自己的安装目录修改</span></span><br><span class=\"line\">parent_dir=<span class=\"string\">&quot;/volume1/docker/bitwarden&quot;</span></span><br><span class=\"line\">backups_dir=<span class=\"string\">&quot;<span class=\"variable\">$&#123;parent_dir&#125;</span>/backups&quot;</span></span><br><span class=\"line\">log_file=<span class=\"string\">&quot;<span class=\"variable\">$&#123;backups_dir&#125;</span>/backup-progress.log.<span class=\"variable\">$&#123;now&#125;</span>&quot;</span></span><br><span class=\"line\">tmp_sqlite_backup=<span class=\"string\">&quot;backups/db.sqlite3.<span class=\"variable\">$&#123;now&#125;</span>&quot;</span></span><br><span class=\"line\">archive=<span class=\"string\">&quot;backups/backup.tar.gz.<span class=\"variable\">$&#123;now&#125;</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">error</span></span> () &#123;</span><br><span class=\"line\">  <span class=\"built_in\">printf</span> <span class=\"string\">&quot;%s: %s\\n&quot;</span> <span class=\"string\">&quot;<span class=\"subst\">$(basename <span class=\"string\">&quot;<span class=\"variable\">$&#123;BASH_SOURCE&#125;</span>&quot;</span>)</span>&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;1&#125;</span>&quot;</span> &gt;&amp;2</span><br><span class=\"line\">  <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">trap</span> <span class=\"string\">&#x27;error &quot;An unexpected error occurred.&quot;&#x27;</span> ERR</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">take_backup</span></span> () &#123;</span><br><span class=\"line\">  <span class=\"built_in\">cd</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;parent_dir&#125;</span>&quot;</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  sqlite3 db.sqlite3 <span class=\"string\">&quot;.backup &#x27;<span class=\"variable\">$&#123;tmp_sqlite_backup&#125;</span>&#x27;&quot;</span></span><br><span class=\"line\">  /bin/tar czf <span class=\"string\">&quot;<span class=\"variable\">$&#123;archive&#125;</span>&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;tmp_sqlite_backup&#125;</span>&quot;</span> attachments</span><br><span class=\"line\"></span><br><span class=\"line\">  rm <span class=\"string\">&quot;<span class=\"variable\">$&#123;tmp_sqlite_backup&#125;</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  find <span class=\"string\">&quot;<span class=\"variable\">$&#123;backups_dir&#125;</span>/&quot;</span> -<span class=\"built_in\">type</span> f -mtime +30 -<span class=\"built_in\">exec</span> rm &#123;&#125; \\;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">printf</span> <span class=\"string\">&quot;\\n=======================================================================&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">printf</span> <span class=\"string\">&quot;\\nBitwarden Backup&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">printf</span> <span class=\"string\">&quot;\\n=======================================================================&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">printf</span> <span class=\"string\">&quot;\\nBackup in progress...&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">take_backup 2&gt; <span class=\"string\">&quot;<span class=\"variable\">$&#123;log_file&#125;</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [[ -s <span class=\"string\">&quot;<span class=\"variable\">$&#123;log_file&#125;</span>&quot;</span> ]]</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">  <span class=\"built_in\">printf</span> <span class=\"string\">&quot;\\nBackup failure! Check <span class=\"variable\">$&#123;log_file&#125;</span> for more information.&quot;</span></span><br><span class=\"line\">  <span class=\"built_in\">printf</span> <span class=\"string\">&quot;\\n=======================================================================\\n\\n&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">  rm <span class=\"string\">&quot;<span class=\"variable\">$&#123;log_file&#125;</span>&quot;</span></span><br><span class=\"line\">  <span class=\"built_in\">printf</span> <span class=\"string\">&quot;...SUCCESS!\\n&quot;</span></span><br><span class=\"line\">  <span class=\"built_in\">printf</span> <span class=\"string\">&quot;Backup created at <span class=\"variable\">$&#123;backups_dir&#125;</span>/backup.tar.gz.<span class=\"variable\">$&#123;now&#125;</span>&quot;</span></span><br><span class=\"line\">  <span class=\"built_in\">printf</span> <span class=\"string\">&quot;\\n=======================================================================\\n\\n&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><p>将上面的内容复制到了一个新建的空的文本文件中，保存后重命名为 <code>sqlite_backup.sh</code>，将其上传到 <code>/docker/bitwarden</code> 目录。</p>\n</li>\n<li><p>在 <code>/docker/bitwarden</code> 目录中新建文件夹 <code>backups</code>，这个文件是用来保存备份文件的。</p>\n</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/29/1611907078098-1611907078107.png\" alt=\"title\"></p>\n<ol start=\"3\">\n<li>在 <code>控制面板</code> 中进入 <code>任务计划</code>，新建 <code>用户定义的脚本</code></li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/29/1611907317629-1611907317636.png\" alt=\"title\"></p>\n<ul>\n<li><code>常规</code> 中设定任务名称，用户账号用默认的 <code>root</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/29/1611907471192-1611907471205.png\" alt=\"title\"></p>\n<ul>\n<li><code>计划</code> 按你实际的需要来，我的使用频度不高，所以设置成了每天运行一次</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/29/1611907607992-1611907607999.png\" alt=\"title\"></p>\n<blockquote>\n<p>如果你希望每天多备份几次，也可以像下图这样</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/02/05/1612523648382-1612523648384.png\" alt=\"title\"></p>\n<blockquote>\n<p>这意味着每天早上8点开始，每四个小时备份一次，直到下午8点结束，也就是在8点、12点、16点和20点运行，这样每天会生成4个备份文件</p>\n</blockquote>\n<ul>\n<li><code>任务设置</code> 中设置了邮件地址，这样可以获得运行的状态，命令中填入了脚本的地址</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/29/1611907784485-1611907784493.png\" alt=\"title\"></p>\n<ol start=\"4\">\n<li>选中脚本右键 <code>运行</code> 来做测试</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/29/1611907911134-1611907911142.png\" alt=\"title\"></p>\n<ol start=\"5\">\n<li>如果一切正常，会收到一封这样的邮件</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/29/1611908006873-1611908006877.png\" alt=\"title\"></p>\n<ol start=\"6\">\n<li>在 <code>backups</code> 目录中我们可以找到备份的文件</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/29/1611908119939-1611908119944.png\" alt=\"title\"></p>\n<ol start=\"7\">\n<li>下载备份文件，并重命名为 <code>backup.tar.gz</code>，用解压缩软件解开，可以看到备份的内容</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/29/1611908363169-1611908363177.png\" alt=\"title\"></p>\n<p>这回再也不用担心数据库损坏了。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>使用Docker搭建Bitwarden密码存储服务器并定时备份数据库 - 韩艺博的博客<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaGFueWliby5jb20vbGludXgvYml0d2FyZGVuLWRvY2tlci1uZ2lueC1Qcm94eS5odG1s\">https://www.hanyibo.com/linux/bitwarden-docker-nginx-Proxy.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Bitwarden_rs db/attachments backup<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vdml0b2JvdHRhLzNhNmM1M2MzNjkzZmY3N2NkMGM5MjBkMGE1NDE2MjJkI2ZpbGUtYml0d2FyZGVuX3JzLWJhY2t1cC1zaC1MMjU=\">https://gist.github.com/vitobotta/3a6c53c3693ff77cd0c920d0a541622d#file-bitwarden_rs-backup-sh-L25<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>用Bitwarden自建密码管理系统 | 老苏的blog<br>地址：<a href=\"https://laosu.ml/2020/07/18/%E7%94%A8bitwarden%E8%87%AA%E5%BB%BA%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/\">https://laosu.ml/2020/07/18/%E7%94%A8bitwarden%E8%87%AA%E5%BB%BA%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</a></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","数据库","Bitwarden","SQLite"]},{"title":"统一的家庭服务器Web门户Organizr","url":"/2021/02/01/%E7%BB%9F%E4%B8%80%E7%9A%84%E5%AE%B6%E5%BA%AD%E6%9C%8D%E5%8A%A1%E5%99%A8Web%E9%97%A8%E6%88%B7Organizr/","content":"<p><strong>什么是 Organizr ？</strong></p>\n<blockquote>\n<p><code>Organizr</code> 是所有服务器应用程序的前端管理器。它可以将所有常用网站或媒体应用程序组织到一个仪表板中。只需将您喜欢的网站添加到 <code>Organizr</code> 中，它们就会在左侧显示为 <code>标签</code>。只需单击一下，即可在同一窗口中打开任何站点。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/16/1610779534359-1610779534361.png\" alt=\"title\"></p>\n<p>我们之前已经介绍过的相似应用：</p>\n<blockquote>\n<p><a href=\"https://laosu.ml/2020/08/14/%E7%BB%99%E7%BE%A4%E6%99%96%E5%BC%84%E4%B8%AA%E6%BC%82%E4%BA%AE%E7%9A%84%E5%AF%BC%E8%88%AA%E9%A1%B5%EF%BC%88%E4%B8%8A%EF%BC%89/\">给群晖弄个漂亮的导航页（上）</a><br><a href=\"https://laosu.ml/2020/08/16/%E7%BB%99%E7%BE%A4%E6%99%96%E5%BC%84%E4%B8%AA%E6%BC%82%E4%BA%AE%E7%9A%84%E5%AF%BC%E8%88%AA%E9%A1%B5%EF%BC%88%E4%B8%8B%EF%BC%89/\">给群晖弄个漂亮的导航页（下）</a><br><a href=\"https://laosu.ml/2020/12/11/Heimdall%E6%89%93%E9%80%A0%E4%B8%AA%E4%BA%BA%E5%AF%BC%E8%88%AA%E9%A1%B5/\">Heimdall打造个人导航页</a></p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>organizr</code> ，选择第四个 <code>organizr/organizr</code>，这是官方的镜像，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/16/1610774249606-1610774249607.png\" alt=\"title\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>organizr</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/16/1610774926012-1610774926013.png\" alt=\"title\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/organizr</code></td>\n<td align=\"center\"><code>/config</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/16/1610775183755-1610775183758.png\" alt=\"title\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>要避免端口冲突，所以重新指定了本地端口</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">3443</td>\n<td align=\"center\">80</td>\n</tr>\n<tr>\n<td align=\"center\">3680</td>\n<td align=\"center\">443</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/16/1610775363483-1610775363484.png\" alt=\"title\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">TZ</td>\n<td align=\"center\">默认为 <code>Etc/UTC</code>，修改为 <code>Asia/Shanghai</code></td>\n</tr>\n<tr>\n<td align=\"center\">PGID</td>\n<td align=\"center\"><code>&lt;gid&gt;</code></td>\n</tr>\n<tr>\n<td align=\"center\">PUID</td>\n<td align=\"center\"><code>&lt;uid&gt;</code></td>\n</tr>\n<tr>\n<td align=\"center\">fpm</td>\n<td align=\"center\">默认值为 <code>false</code></td>\n</tr>\n<tr>\n<td align=\"center\">branch</td>\n<td align=\"center\">默认值为 <code>v2-master</code></td>\n</tr>\n</tbody></table>\n<blockquote>\n<ul>\n<li>参数fpm：Used to enable php to use the socket rather than TCP, often increases performance. Valid values are(comma separated) <code>true</code>, <code>false</code></li>\n<li>参数branch：Used to switched between branches of organizr. Valid values are(comma separated) <code>v2-master</code>, <code>master</code>, <code>v2-develop</code>, <code>develop</code>, <code>dev</code></li>\n</ul>\n</blockquote>\n<p>PUID和PGID 的获取方法在 <a href=\"https://laosu.ml/2020/07/30/%E5%88%A9%E7%94%A8Cloudreve%E6%90%AD%E5%BB%BA%E8%87%AA%E7%94%A8%E7%BD%91%E7%9B%98/\">利用Cloudreve搭建自用网盘</a> 一文中简单介绍过。主要是为了解决有时在使用卷（-v标志）时，主机 OS 和容器之间可能会出现的权限问题。</p>\n<p>SSH登录群晖后，运行 <code>id user</code>，会得到类似于下面的一段代码</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ id &lt;dockeruser&gt;</span><br><span class=\"line\">   uid=1001(dockeruser) gid=1001(dockergroup) groups=1001(dockergroup)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/17/1610872896874-1610872896909.png\" alt=\"title\"></p>\n<p>将获取到的 <code>uid</code> 填入到 <code>PUID</code>，<code>gid</code> 填入到 <code>PGID</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/17/1610873235113-1610873235114.png\" alt=\"title\"></p>\n<h2 id=\"高级设置\"><a href=\"#高级设置\" class=\"headerlink\" title=\"高级设置\"></a>高级设置</h2><p>记得勾选 <code>启动自动重新启动</code>，因为后面容器会根据 <code>branch</code> 参数更新代码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/16/1610782019425-1610782019428.png\" alt=\"title\"></p>\n<p>全部设置完成后，点 <code>应用</code>。往常 <code>应用</code> 之后就可以使用，但是这次因为有代码更新，所以要等代码更新之后才行。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/16/1610778852218-1610778852221.png\" alt=\"title\"></p>\n<p>从日志看有拉取动作</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/16/1610776613932-1610776613934.png\" alt=\"title\"></p>\n<p>我的机器上速度比较慢</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/16/1610776039569-1610776039569.png\" alt=\"title\"></p>\n<p>安装完成后，docker会自动重启</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/16/1610781436018-1610781436019.png\" alt=\"title\"></p>\n<h1 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h1><h2 id=\"首次设置\"><a href=\"#首次设置\" class=\"headerlink\" title=\"首次设置\"></a>首次设置</h2><p>在浏览器中输入 <code>http://群晖IP:3680</code>，就能看到主界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/16/1610783067682-1610783067684.png\" alt=\"title\"></p>\n<p>右上角可以选择界面语言，但是不管选 <code>chinese</code> 还是 <code>chinese(Traditional)</code>，都显示的繁体中文</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/16/1610783407233-1610783407235.png\" alt=\"title\"></p>\n<p>安装类型选择 <code>个人版本</code>，然后 <code>Next</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/16/1610783277318-1610783277319.png\" alt=\"title\"></p>\n<p>管理信息中输入账号、密码和邮箱，然后 <code>Next</code></p>\n<blockquote>\n<p>我虽然没有安装 Emby 和 Plex ，但是安装了 Jellyfin</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/16/1610783938262-1610783938263.png\" alt=\"title\"></p>\n<p>安全部分主要输入 <code>Hash密码</code> 和 <code>注册密码</code>，<code>API密码</code> 是自动生成的，然后 <code>Next</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/16/1610784110185-1610784110187.png\" alt=\"title\"></p>\n<p>给资料库取个名字，路径用了建议的，然后 <code>Next</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/16/1610784320911-1610784320912.png\" alt=\"title\"></p>\n<p>设置完成</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/16/1610784401326-1610784401331.png\" alt=\"title\"></p>\n<p>自动跳转</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/16/1610784481082-1610784481083.png\" alt=\"title\"></p>\n<h2 id=\"添加新标签\"><a href=\"#添加新标签\" class=\"headerlink\" title=\"添加新标签\"></a>添加新标签</h2><p><code>标签编辑器</code> –&gt; <code>标签</code> –&gt; <code>+</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/16/1610784777154-1610784777156.png\" alt=\"title\"></p>\n<p>以 <code>Jellyfin</code> 为例</p>\n<blockquote>\n<ul>\n<li>标签名称：Jellyfin</li>\n<li>标签URL：Jellyfin URL</li>\n<li>标签本地网址：留空</li>\n<li>PING URL：留空</li>\n<li>Tab Auto Action：无</li>\n<li>Tab Auto Action Minutes：0</li>\n<li>选择图片：搜索 <code>jellyfin</code> 以找到 jellyfin 图标。</li>\n<li>选择图示：留空</li>\n</ul>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/16/1610790589182-1610790589184.png\" alt=\"title\"></p>\n<p>默认并没有 <code>生效</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/16/1610799092345-1610799092347.png\" alt=\"title\"></p>\n<p><code>生效</code> 之后就会出现在左侧的导航栏</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/16/1610799289275-1610799289278.png\" alt=\"title\"></p>\n<p>因为类型选了 <code>iFrame</code> 而不是 <code>New Window</code>，所以是在同一个页面里打开了 <code>Jellyfin</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/16/1610799985470-1610799985475.png\" alt=\"title\"></p>\n<h2 id=\"设置首页\"><a href=\"#设置首页\" class=\"headerlink\" title=\"设置首页\"></a>设置首页</h2><p><code>标签编辑器</code> –&gt; <code>主页项目</code> –&gt; <code>JELLYFIN</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/17/1610853885077-1610853885080.png\" alt=\"title\"></p>\n<p>勾选 <code>启动</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/17/1610854308246-1610854308248.png\" alt=\"title\"></p>\n<p>在 <code>Jellyfin</code> 中新建 API 秘钥</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/17/1610853218903-1610853218904.png\" alt=\"title\"></p>\n<p>复制 <code> API 秘钥</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/17/1610853322000-1610853322003.png\" alt=\"title\"></p>\n<p>返回到 <code>Organizr</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/17/1610853423942-1610853423945.png\" alt=\"title\"></p>\n<p>点 <code>测试连接</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/17/1610854563048-1610854563051.png\" alt=\"title\"></p>\n<p>如果测试成功，右下角有提示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/17/1610854504456-1610854504461.png\" alt=\"title\"></p>\n<p>点左侧的 <code>homepage</code>，会看到 <code>Jellyfin</code> 中新增的影片</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/17/1610853529136-1610853529138.png\" alt=\"title\"></p>\n<h2 id=\"手机上访问\"><a href=\"#手机上访问\" class=\"headerlink\" title=\"手机上访问\"></a>手机上访问</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210116212407.jpg\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210116212517.jpg\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210116212658.jpg\"></p>\n<h2 id=\"自定义外观\"><a href=\"#自定义外观\" class=\"headerlink\" title=\"自定义外观\"></a>自定义外观</h2><p>在 <code>定制</code> 中，可以更改 <code>登录</code> 页面的外观，主题（默认为 <code>Organizr</code> 或蓝色），样式（浅色，深色或水平），或添加自己的自定义CSS。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/17/1610854879566-1610854879567.png\" alt=\"title\"></p>\n<p>通过应用集成，<code>Organizr</code> 简化了访问站点的方式，当然你也可以在 <code>Organizr</code> 中添加任何常用的网站。</p>\n<h1 id=\"升级\"><a href=\"#升级\" class=\"headerlink\" title=\"升级\"></a>升级</h1><p>当有新版本时，右下角会弹出提示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/27/1611709930927-1611709930963.png\" alt=\"title\"></p>\n<p>选择 <code>Update Now</code> 即开始升级，有进度条提示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/27/1611709948793-1611709948796.png\" alt=\"title\"></p>\n<p>升级完成，右下角会显示 <code>Update Sucessful</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/27/1611709972459-1611709972462.png\" alt=\"title\"></p>\n<p>版本顺利的从刚安装时的 <code>2.1.120</code> 升级到了 <code>2.1.165</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/27/1611710297814-1611710297847.png\" alt=\"title\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Organizr – Forget Bookmarks<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9vcmdhbml6ci5hcHAv\">https://organizr.app/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>causefx/Organizr: HTPC/Homelab Services Organizer - Written in PHP<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NhdXNlZngvT3JnYW5penI=\">https://github.com/causefx/Organizr<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Organizr/docker-organizr: Docker image for Organizr<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL09yZ2FuaXpyL2RvY2tlci1vcmdhbml6ciNwYXJhbWV0ZXJz\">https://github.com/Organizr/docker-organizr#parameters<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Organizr 官方文档<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm9yZ2FuaXpyLmFwcC8=\">https://docs.organizr.app/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>The Ultimate Organizr V2 Setup Guide for Windows - Smarthome Pursuits<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zbWFydGhvbWVwdXJzdWl0cy5jb20vaW5zdGFsbC1vcmdhbml6ci12Mi13aW5kb3dzLw==\">https://smarthomepursuits.com/install-organizr-v2-windows/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","导航"]},{"title":"Vercel上部署Hexo","url":"/2021/01/29/Vercel%E4%B8%8A%E9%83%A8%E7%BD%B2Hexo/","content":"<p><strong>什么是 Vercel？</strong></p>\n<blockquote>\n<p>Vercel (之前也叫 Zeit 或 now.sh )是一家云部署服务的公司，支持静态托管以及 Serverless 服务。 支持从 Github , GitLab , Bitbucket 等代码仓库中自动拉取代码，然后进行项目打包和部署等功能。</p>\n</blockquote>\n<p><strong>什么是 Freenom？</strong></p>\n<blockquote>\n<p>Freenom 是世界上第一个也是唯一的免费域名提供商。</p>\n</blockquote>\n<p><strong>什么是 DNSPod？</strong></p>\n<blockquote>\n<p>DNSPod 是国内提供智能 DNS 产品的网站，致力于为各类网站提供高质量的电信、网通、教育网双线或者三线智能 DNS 免费解析。</p>\n</blockquote>\n<h1 id=\"Vercel账号\"><a href=\"#Vercel账号\" class=\"headerlink\" title=\"Vercel账号\"></a>Vercel账号</h1><p>浏览器中打开 <code>https://vercel.com/</code> ，不需要注册，直接用 <code>github</code> 的账号</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/20/1611107684285-1611107684314.png\" alt=\"title\"></p>\n<p>需要提供设备验证码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/20/1611107755276-1611107755280.png\" alt=\"title\"></p>\n<p>将邮件中收到 6 位数字码填入，然后授权</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/20/1611108668222-1611108668231.png\" alt=\"title\"></p>\n<p>然后就可以用 <code>github</code>账号登录了</p>\n<h1 id=\"导入-git-仓库\"><a href=\"#导入-git-仓库\" class=\"headerlink\" title=\"导入 git 仓库\"></a>导入 git 仓库</h1><p>准备导入</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/20/1611108823588-1611108823598.png\" alt=\"title\"></p>\n<p>指定的仓库</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/20/1611109029392-1611109029400.png\" alt=\"title\"></p>\n<p>开始导入</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/20/1611109138691-1611109138697.png\" alt=\"title\"></p>\n<p>选择个人</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/20/1611109255229-1611109255237.png\" alt=\"title\"></p>\n<p>开始导入项目</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/20/1611109298564-1611109298573.png\" alt=\"title\"></p>\n<p>项目名称默认带 <code>-</code> ，我的是 <code>wbsu2003-github-io</code>，直接改成 <code>wbsu2003</code> ，这会让默认的域名短一点。</p>\n<blockquote>\n<p>默认分配的域名：<code>https://&lt;PROJECT NAME&gt;.vercel.app/</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/20/1611111954038-1611111954045.png\" alt=\"title\"></p>\n<p>上图中框架我从下拉框选过 <code>Hexo</code> ，但是发布之后会出 <code>404</code> 错误，用缺省的 <code>Other</code> 反而正常，很可能跟 <code>Hexo</code> 的版本有关系。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/20/1611111816046-1611111816052.png\" alt=\"title\"></p>\n<p>开始发布</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/20/1611112043461-1611112043468.png\" alt=\"title\"></p>\n<p>发布完成会撒花，左侧的小窗口会生成预览的窗口</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/20/1611112080565-1611112080572.png\" alt=\"title\"></p>\n<p>直接点击 <code>Visit</code> 即可进行浏览。默认的域名是 <code>https://wbsu2003.vercel.app/</code></p>\n<h1 id=\"测速\"><a href=\"#测速\" class=\"headerlink\" title=\"测速\"></a>测速</h1><p>在站长之家（ <span class=\"exturl\" data-url=\"aHR0cDovL3Rvb2wuY2hpbmF6LmNvbS9zaXRlc3BlZWQ=\">http://tool.chinaz.com/sitespeed<i class=\"fa fa-external-link-alt\"></i></span> ）–&gt;【国内网速测试】，分别输入域名进行测试。</p>\n<ul>\n<li>Vercel原生域名：wbsu2003.vercel.app</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/20/1611112463078-1611112463088.png\" alt=\"title\"></p>\n<ul>\n<li>Gitee原生域名：wbsu2003.gitee.io</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/20/1611112580806-1611112580814.png\" alt=\"title\"></p>\n<ul>\n<li>解析到Coding的域名：laosu.ml</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/20/1611112747150-1611112747154.png\" alt=\"title\"></p>\n<ul>\n<li>Github原生域名：wbsu2003.github.io</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/20/1611112832091-1611112832099.png\" alt=\"title\"></p>\n<p><code>Vercel</code> 虽然比不上 <code>Gitee</code> ，但是比 <code>Github</code> 和 <code>Coding</code> 香港主机强的多。</p>\n<h1 id=\"流量限制\"><a href=\"#流量限制\" class=\"headerlink\" title=\"流量限制\"></a>流量限制</h1><p>看起来有流量限制，但是对我而言 <code>100GB/月流量</code> 绝对够用了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/20/1611113305642-1611113305650.png\" alt=\"title\"></p>\n<h1 id=\"自定义域名\"><a href=\"#自定义域名\" class=\"headerlink\" title=\"自定义域名\"></a>自定义域名</h1><p>找到 <code>Domains</code>，然后 <code>Add</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/20/1611122068644-1611122068652.png\" alt=\"title\"></p>\n<p>会提示设置错误，直接点 <code>Edit</code>进入编辑</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/20/1611122122267-1611122122275.png\" alt=\"title\"></p>\n<p>可以设置重定向</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/20/1611122147203-1611122147211.png\" alt=\"title\"></p>\n<p>个人不建议用重定向，体验不好</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/20/1611126666516-1611126666548.png\" alt=\"title\"></p>\n<p>存在 <code>nameserver</code> 冲突</p>\n<p>当前的</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ns01.freenom.com</span><br><span class=\"line\">ns02.freenom.com</span><br><span class=\"line\">ns03.freenom.com</span><br><span class=\"line\">ns04.freenom.com</span><br></pre></td></tr></table></figure>\n\n<p>Intended Nameservers</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ns1.vercel-dns.com</span><br><span class=\"line\">ns2.vercel-dns.com</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/20/1611122173659-1611122173667.png\" alt=\"title\"></p>\n<p>转到 <code>Freenom</code>，我的域名提供商那里，修改 Nameservers</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/20/1611122224547-1611122224554.png\" alt=\"title\"></p>\n<p>提交后返回 <code>Vercel</code>，会开始自动申请 SSL 证书</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/20/1611122324061-1611122324068.png\" alt=\"title\"></p>\n<p>本来到这里就应该可以了，但是很奇怪的是如果不用科学上网，是访问不到 <code>https://laosu.cf/</code> 的，经过摸索，发现还需要在 DNSPod 解析一下。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/23/1611373243070-1611373243079.png\" alt=\"title\"></p>\n<p>因为没有用 DNSPod 平台默认的 DNS 服务器，所以会报 DNS 错误，但是没关系，等 <code>https://laosu.cf/</code> 能正常访问后，可以全部停止解析，然后就一切正常了。</p>\n<h1 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h1><ol>\n<li>零配置部署：只要完成前面的 <code>导入 git 仓库</code> 步骤，之后只要 <code>Hexo</code> 提交到 <code>Github</code> ，就会自动部署。</li>\n<li>访问速度虽然不上 <code>Gitee Pages</code>，但是比 <code>Github Pages</code> 好。</li>\n<li>免费，虽然有流量限制，但对我来说应该够用。</li>\n</ol>\n<h1 id=\"后续规划\"><a href=\"#后续规划\" class=\"headerlink\" title=\"后续规划\"></a>后续规划</h1><table>\n<thead>\n<tr>\n<th align=\"center\">域名</th>\n<th align=\"center\">对应主机</th>\n<th align=\"center\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><a href=\"https://laosu.ml/\">https://laosu.ml</a></td>\n<td align=\"center\">Vercel</td>\n<td align=\"center\">主站</td>\n</tr>\n<tr>\n<td align=\"center\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYW9zdS50ay8=\">https://laosu.tk<i class=\"fa fa-external-link-alt\"></i></span></td>\n<td align=\"center\">Netlify</td>\n<td align=\"center\">备站</td>\n</tr>\n<tr>\n<td align=\"center\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYW9zdS5ncS8=\">https://laosu.gq<i class=\"fa fa-external-link-alt\"></i></span></td>\n<td align=\"center\">Coding</td>\n<td align=\"center\">备站</td>\n</tr>\n<tr>\n<td align=\"center\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYW9zdS5nYS8=\">https://laosu.ga<i class=\"fa fa-external-link-alt\"></i></span></td>\n<td align=\"center\">Github</td>\n<td align=\"center\">备站</td>\n</tr>\n<tr>\n<td align=\"center\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYW9zdS5jZi8=\">https://laosu.cf<i class=\"fa fa-external-link-alt\"></i></span></td>\n<td align=\"center\">Vercel</td>\n<td align=\"center\">备站</td>\n</tr>\n<tr>\n<td align=\"center\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93YnN1MjAwMy5naXRlZS5pby8=\">https://wbsu2003.gitee.io<i class=\"fa fa-external-link-alt\"></i></span></td>\n<td align=\"center\">Gitee</td>\n<td align=\"center\">国内推荐</td>\n</tr>\n</tbody></table>\n<p>目前网站上已完成调整，应该能找到您访问最快的站点。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/23/1611373817191-1611373817209.png\" alt=\"title\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Vercel + Hexo 免费搭建自用博客保姆级教程 | NEROASMARA.TOP<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9uZXJvYXNtYXIudG9wL2hleG8tYnVpbGRpbmcv\">https://neroasmar.top/hexo-building/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>ZEIT(Vercel) now.sh 免费部署博客网站，支持 Serverless Python Go Node.js | MindSpark<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93aXZ3aXYuY29tL3Bvc3QvemVpdC11c2UtZ3VpZGUv\">https://wivwiv.com/post/zeit-use-guide/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["Blog","Hexo","GitHub","Vercel"]},{"title":"在VMware上跑Linux Mint","url":"/2021/01/25/%E5%9C%A8VMware%E4%B8%8A%E8%B7%91Linux%20Mint/","content":"<p>这几天满屏都在刷 <code>Linux Mint</code>，原因是两个熊孩子在爸爸的电脑上玩耍时，一顿乱按，居然因导致屏保崩溃而进入了被锁定的系统桌面，当然这个漏洞已经被修复了。</p>\n<p>这让我想起去年底在 VMware 上安装的 <code>Linux Mint</code>，当时只是因为网上很多人推荐，说 <code>Linux Mint</code> 是适合老电脑使用的替代 <code>Windows</code> 的系统，所以尝试了一下。</p>\n<h1 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h1><h2 id=\"下载-Linux-Mint\"><a href=\"#下载-Linux-Mint\" class=\"headerlink\" title=\"下载 Linux Mint\"></a>下载 Linux Mint</h2><p>Linux Mint 有三种不同风格的版本，分别提供三种不同的桌面环境。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">版本</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Cinnamon</td>\n<td align=\"center\">最现代，最新颖，全功能的桌面</td>\n</tr>\n<tr>\n<td align=\"center\">MATE</td>\n<td align=\"center\">更稳定，更快的桌面</td>\n</tr>\n<tr>\n<td align=\"center\">Xfce</td>\n<td align=\"center\">最轻量级，最稳定</td>\n</tr>\n</tbody></table>\n<p>Linux Mint 最流行的版本是 Cinnamon 版。Cinnamon 主要由 Linux Mint 团队开发，专为 Linux Mint 打造的桌面环境，流畅，美观，充满新特性。</p>\n<blockquote>\n<p>这次出现 bug 的就是 Cinnamon 版</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201227145348.png\"></p>\n<p> Cinnamon 版的操作界面和 Windows 比较像，包括了菜单、工具栏以及托盘图标。</p>\n<blockquote>\n<p>其他两种版本的详细说明请参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW51eG1pbnQtaW5zdGFsbGF0aW9uLWd1aWRlLnJlYWR0aGVkb2NzLmlvL3poX0NOL2xhdGVzdC9jaG9vc2UuaHRtbA==\">https://linuxmint-installation-guide.readthedocs.io/zh_CN/latest/choose.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<p>最新版本的下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW51eG1pbnQuY29tL2Rvd25sb2FkLnBocA==\">https://linuxmint.com/download.php<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201227143227.png\"></p>\n<h1 id=\"安装过程\"><a href=\"#安装过程\" class=\"headerlink\" title=\"安装过程\"></a>安装过程</h1><p>新建虚拟机，我用了 <code>典型</code> 模式</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201227152920.png\"></p>\n<p>选中下载的 <code>linuxmint-20-cinnamon-64bit.iso</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201227153047.png\"></p>\n<p>操作系统选 <code>Liunx</code>，版本选 <code>Ubuntu 64 位</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201227162808.png\"></p>\n<p>改了默认的名称</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201227153501.png\"></p>\n<p>磁盘大小用了默认的值，存储改为了单个文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201227163104.png\"></p>\n<p>到这里就安装完成了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201227163024.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>启动虚拟机</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201227163227.png\"></p>\n<p>点击桌面的 <code>Install Linux Mint</code> 开始安装</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201227163337.png\"></p>\n<p>选择 <code>中文(简体)</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201227163548.png\"></p>\n<p>安装类型选 <code>其他选项</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201227163953.png\"></p>\n<p>点 <code>新建分区表</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201227164134.png\"></p>\n<p><code>继续</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201227164340.png\"></p>\n<p>在空闲分区上右键，添加</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201227164644.png\"></p>\n<p>创建 <code>1G</code> 的 <code>交换空间</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201227164906.png\"></p>\n<p>剩下的创建主分区，格式用的默认的 <code>Ext4</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201227165116.png\"></p>\n<p><code>现在安装</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201227165240.png\"></p>\n<p>继续</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201227165356.png\"></p>\n<p>接下来是一些个性化设置，完成之后就开始文件拷贝了，安装过程会比较久，耐心等待就好了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201227165623.png\"></p>\n<p>重启之后就可以使用了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201227172204.png\"></p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><p>Linux Mint 属于开箱即用的系统，常用的软件都已经自带了，包括图片查看器，音乐播放器，视频播放器，办公软件，邮箱系统等等</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201227174154.png\"></p>\n<p>使用上感觉也相当流畅，可以考虑给老机器上试试。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Main Page - Linux Mint<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW51eG1pbnQuY29tLw==\">https://linuxmint.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Linux Mint 安装指南 — Linux Mint Installation Guide 文档<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW51eG1pbnQtaW5zdGFsbGF0aW9uLWd1aWRlLnJlYWR0aGVkb2NzLmlvL3poX0NOL2xhdGVzdC8=\">https://linuxmint-installation-guide.readthedocs.io/zh_CN/latest/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>你有一台旧电脑？不如试试Linux Mint，极致精简，运行流畅如新机 - 知乎<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xMzcyNTAxOTg=\">https://zhuanlan.zhihu.com/p/137250198<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>使用VMWare WorkStation安装Linux Mint - 简书<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9jNDE0NDAxZmI2NWM=\">https://www.jianshu.com/p/c414401fb65c<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>程序员大神JWZ和Linux Mint干起来了：两个熊孩子引起的“口水”大战<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvVTFFRDlrUllWanh5Mm1HX0locGkyUQ==\">https://mp.weixin.qq.com/s/U1ED9kRYVjxy2mG_Ihpi2Q<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["虚拟机","VMware","Linux"]},{"title":"在Gitee上搭建Hexo Blog","url":"/2021/01/22/%E5%9C%A8Gitee%E4%B8%8A%E6%90%AD%E5%BB%BAHexo%20Blog/","content":"<p>为了这个 <code>Blog</code> 的访问速度，我们已经折腾了好几次，</p>\n<blockquote>\n<p><a href=\"https://laosu.ml/2020/04/29/%E5%9C%A8GitHub%E4%B8%8A%E6%90%AD%E5%BB%BABlog/\">在GitHub上搭建Blog</a><br><a href=\"https://laosu.ml/2020/05/06/%E5%9C%A8Netlify%E4%B8%8A%E9%83%A8%E7%BD%B2Hexo/\">在Netlify上部署Hexo</a><br><a href=\"https://laosu.ml/2020/05/12/%E5%9C%A8Coding%E4%B8%8A%E9%83%A8%E7%BD%B2Hexo%E5%B9%B6%E5%AE%9E%E7%8E%B0%E5%92%8CGithub%E5%8F%8C%E7%BA%BF%E8%AE%BF%E9%97%AE/\">在Coding上部署Hexo并实现和Github双线访问</a></p>\n</blockquote>\n<p>但是最近 <code>Coding</code> 升级后可能因为域名没有备案被迁移到了香港的主机，导致访问速度变的非常慢，而且发布也不像原来可以直接刷新预览，而是有一个发布、部署的过程，这个过程有可能需要好几分钟~几十分钟，因此有必要再折腾折腾 <code>Gitee</code> ，虽然 <code>Gitee pages</code> 需要手动发布并且不支持自定义域名，但眼下似乎没有更好的选择 。</p>\n<p><strong>什么是Gitee？</strong></p>\n<blockquote>\n<p>Gitee即码云，是开源中国于 2013 年推出的基于 Git 的代码托管和协作开发平台，提供本土化的代码托管服务。同时 Gitee 也提供了开源软件的发布和沟通社区，供开发者在其中进行技术交流与沟通。根据官方介绍，开发者超过 600 万，托管项目超过 1500 万，汇聚几乎所有本土原创开源项目，并于 2016 年推出企业版，提供企业级代码托管服务，成为开发领域领先的 SaaS 服务提供商。</p>\n</blockquote>\n<p>关于 Coding 升级踩坑的问题，可以看看这篇文章 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9hc3VyYWRhLnpvbmUvcG9zdC9DT0RJTkctUGFnZXMtVXBncmFkZS1Uby1UZW5jZW50Q2xvdWQv\">CODING Pages 静态网站升级腾讯云新版踩坑小记(https://asurada.zone/post/CODING-Pages-Upgrade-To-TencentCloud/)<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"注册账号\"><a href=\"#注册账号\" class=\"headerlink\" title=\"注册账号\"></a>注册账号</h1><p>首先你得要有一个 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20v\">Gitee<i class=\"fa fa-external-link-alt\"></i></span> 码云账号，没有的话就注册一个。</p>\n<h1 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h1><p>如果你想你的 pages 首页访问地址不带二级目录，需要创建一个与你的 <code>Gitee</code> 空间地址同名的空项目。</p>\n<blockquote>\n<p>空间地址就是个人主页的地址。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/19/1611034265029-1611034265061.png\" alt=\"title\"></p>\n<p>比如我的 <code>Gitee</code> 空间地址为 <code>https://gitee.com/wbsu2003</code> ，那么创建的项目名为 <code>wbsu2003</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/19/1611042647173-1611042647180.png\" alt=\"title\"></p>\n<blockquote>\n<p>是否开源：勾选 <code>公开</code>；<br>为了省事，勾选了3个初始化，一般勾选第一个就可以了；</p>\n</blockquote>\n<p>仓库 <code>https://gitee.com/wbsu2003/wbsu2003</code> 部署完成后，就可以以  <code>https://wbsu2003.gitee.io</code> 进行访问了。</p>\n<h1 id=\"地址验证\"><a href=\"#地址验证\" class=\"headerlink\" title=\"地址验证\"></a>地址验证</h1><p>如果你现在直接访问 <code>https://wbsu2003.gitee.io</code>，那么结果会是这样的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/19/1611036141360-1611036141367.png\" alt=\"title\"></p>\n<p>需要我们新建一个 <code>html</code> 文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/19/1611045900827-1611045900836.png\" alt=\"title\"></p>\n<p>文件名为 <code>index.html</code>，填入下列内容并提交</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>测试页面<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>hexo test page<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>没有设置编码，所以如果 <code>body</code> 中的内容写中文，页面预览时会看到一堆乱码；</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/19/1611046163031-1611046163042.png\" alt=\"title\"></p>\n<p>就像这样</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2021/01/22/1611309242121-1611309242160.png\" alt=\"title\"></p>\n<h1 id=\"部署服务\"><a href=\"#部署服务\" class=\"headerlink\" title=\"部署服务\"></a>部署服务</h1><p>选择 <code>Gitee pages</code> 服务</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/19/1611047021450-1611047021460.png\" alt=\"title\"></p>\n<p>选择需要部署的分支，这里选择默认的 <code>master</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/19/1611046566680-1611046566692.png\" alt=\"title\"></p>\n<p>开始部署</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/19/1611046614049-1611046614058.png\" alt=\"title\"></p>\n<p>完成之后，会显示访问地址</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/19/1611046644592-1611046644598.png\" alt=\"title\"></p>\n<p>直接点击访问地址，或者在浏览器中输入 <code>https://wbsu2003.gitee.io</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/19/1611046899138-1611046899145.png\" alt=\"title\"></p>\n<h1 id=\"修改配置\"><a href=\"#修改配置\" class=\"headerlink\" title=\"修改配置\"></a>修改配置</h1><p>复制项目地址，我选的是 <code>SSH</code> 而不是用默认的 <code>HTTPS</code> ，比如我的地址是 <code>git@gitee.com:wbsu2003/wbsu2003.git</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/19/1611048048508-1611048048517.png\" alt=\"title\"></p>\n<p>修改 hexo根目录下的 _config.yml 文件</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Deployment</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> </span><br><span class=\"line\">    <span class=\"attr\">github:</span> <span class=\"string\">git@github.com:wbsu2003/wbsu2003.github.io.git</span></span><br><span class=\"line\">    <span class=\"attr\">coding:</span> <span class=\"string\">git@e.coding.net:laosu/blog/blog.git</span></span><br><span class=\"line\">    <span class=\"attr\">gitee:</span> <span class=\"string\">git@gitee.com:wbsu2003/wbsu2003.git</span>  </span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"添加公钥\"><a href=\"#添加公钥\" class=\"headerlink\" title=\"添加公钥\"></a>添加公钥</h1><p>在 <code>Gitee</code>添加自己电脑的 <code>ssh key</code>，这样每次更新代码到 <code>Gitee</code> 就不用再输入密码了</p>\n<p>生成 <code>SSH公钥</code> 的方法可以参考 <a href=\"https://gitee.com/help/articles/4181\">生成/添加SSH公钥<br>(https://gitee.com/help/articles/4181)</a></p>\n<p>添加 <code>SSH公钥</code> 的方法可以参考 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vaGVscC9hcnRpY2xlcy80MTkx\">SSH 公钥设置(https://gitee.com/help/articles/4191)<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210119202029.png\"></p>\n<p>添加时需要确认</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210119211957.png\"></p>\n<p>成功提示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210119212042.png\"></p>\n<h1 id=\"测试连接\"><a href=\"#测试连接\" class=\"headerlink\" title=\"测试连接\"></a>测试连接</h1><p>输入如下命令</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">ssh -T git@gitee.com</span><br></pre></td></tr></table></figure>\n\n<p>会得到如下输出，询问是否确认连接，输入 <code>yes</code> 回车确认</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">The authenticity of host <span class=\"string\">&#x27;gitee.com (180.97.125.228)&#x27;</span> can<span class=\"string\">&#x27;t be established.</span></span><br><span class=\"line\"><span class=\"string\">ECDSA key fingerprint is SHA256:FQGC9Kn/eye1W8icdBgrQp+KkGYoFgbVr17bmjey0Wc.</span></span><br><span class=\"line\"><span class=\"string\">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span><br></pre></td></tr></table></figure>\n\n<p>最后连接成功会看到如下输出</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">Warning: Permanently added <span class=\"string\">&#x27;gitee.com,180.97.125.228&#x27;</span> (ECDSA) to the list of known hosts.</span><br><span class=\"line\">Hi laosu! You<span class=\"string\">&#x27;ve successfully authenticated, but GITEE.COM does not provide shell access.</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210119212804.png\"></p>\n<h1 id=\"hexo发布\"><a href=\"#hexo发布\" class=\"headerlink\" title=\"hexo发布\"></a>hexo发布</h1><p>发布的过程和之前一样，输入命令</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo d -g</span><br></pre></td></tr></table></figure>\n\n<p>因为我都保留了，所以发布时能看到多次提交</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210119213450.png\"></p>\n<h1 id=\"切记切记\"><a href=\"#切记切记\" class=\"headerlink\" title=\"切记切记\"></a>切记切记</h1><p>但和以往不同，<code>hexo deploy</code> (or d) 之后直接访问网站 URL 会发现页面并没有改变，还需要手动更新一下 <code>Gitee Page</code> ，也就是还需要执行我们前面的 <code>部署服务</code> 环节。这是和之前 <code>github</code>、<code>Coding</code> 不一样的地方。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210119215614.png\"></p>\n<p>虽然麻烦了一点，但是如果速度能起来，一切都是值得的。</p>\n<h1 id=\"简单对比\"><a href=\"#简单对比\" class=\"headerlink\" title=\"简单对比\"></a>简单对比</h1><p>在站长之家（ <span class=\"exturl\" data-url=\"aHR0cDovL3Rvb2wuY2hpbmF6LmNvbS8=\">http://tool.chinaz.com<i class=\"fa fa-external-link-alt\"></i></span> ）–&gt;【网站速度测试】，分别输入域名进行测试。</p>\n<ul>\n<li>Gitee原生域名：wbsu2003.gitee.io</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210119220721.png\"></p>\n<ul>\n<li>解析到Coding的域名：laosu.ml</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210119221448.png\"></p>\n<ul>\n<li>Github原生域名：wbsu2003.github.io</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210119221138.png\"></p>\n<p>基本上是依次递减的，虽然我很想把 laosu.ml 国内解析到 wbsu2003.gitee.io，但是自定义域名需要 <code>Gitee pages Pro</code> 才支持，但目前这项服务暂时关闭了个人用户购买入口。</p>\n<blockquote>\n<p>Gitee Pages Pro不但可以绑定独立域名，还可以直接实现文章推送。也就是执行完了hexo d 命令之后，页面直接部署到码云上了，不需要在到Pages页面手工点击更新；</p>\n</blockquote>\n<p>路漫漫其修远兮，吾将上下而求索。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Gitee Pages - Gitee.com<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vaGVscC9hcnRpY2xlcy80MTM2I2FydGljbGUtaGVhZGVyMA==\">https://gitee.com/help/articles/4136#article-header0<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Hexo博客部署到Gitee码云_野猿新一-CSDN博客<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21xZHhpYW94aWFvL2FydGljbGUvZGV0YWlscy85NTc4MTM2OA==\">https://blog.csdn.net/mqdxiaoxiao/article/details/95781368<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>基于Gitee+Hexo搭建个人博客 - SegmentFault 思否<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDAxODY2MjY5Mg==\">https://segmentfault.com/a/1190000018662692<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["Blog","Hexo","GitHub","Gitee"]},{"title":"VMware安装MacOS Big Sur系统","url":"/2021/01/18/VMware%E5%AE%89%E8%A3%85MacOS%20Big%20Sur%E7%B3%BB%E7%BB%9F/","content":"<p>经历了几次 <code>MacOS</code> 升级后带来的欲仙欲死的感觉后，再也不敢轻易升级了，这次的 <code>MacOS Big Sur</code> 虽然很想体验一下，但是看着网上说的各种问题后，最终还是忍住了。毕竟电脑还要用于工作，把环境搞乱了恢复起来也还是一件很麻烦的事情。</p>\n<p>但是就这么算了吗？显然不符合我们折腾的宗旨，一番研究之后准备祭出虚拟机大法，在家里的 <code>Windowns</code> 台式机上实验 <code>VMware + MacOS</code>。</p>\n<h1 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h1><h2 id=\"虚拟机-VMware-16\"><a href=\"#虚拟机-VMware-16\" class=\"headerlink\" title=\"虚拟机 VMware 16\"></a>虚拟机 VMware 16</h2><p>这里就不提供下载了，您可以自行搜索，至于版本个人倾向于用最新的，<code>VMware Workstation</code> 和 <code>VMware Player</code> 都可以。<code>VMware Player</code> 不仅是免费的，而且具有 <code>VMware Workstatio</code> 几乎相同的功能和特性。</p>\n<h2 id=\"Unlocker-工具\"><a href=\"#Unlocker-工具\" class=\"headerlink\" title=\"Unlocker 工具\"></a>Unlocker 工具</h2><p>这个不是用来给 <code>VMware Workstation</code> 注册用的，而是一个可以让 <code>VMware</code> 能安装 <code>MacOS</code> 的插件，可以在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Bhb2xvLXByb2plY3RzL3VubG9ja2VyL3JlbGVhc2Vz\">https://github.com/paolo-projects/unlocker/releases<i class=\"fa fa-external-link-alt\"></i></span> 上下载，目前最新的版本是 3.03；</p>\n<h2 id=\"MacOS-的镜像文件\"><a href=\"#MacOS-的镜像文件\" class=\"headerlink\" title=\"MacOS 的镜像文件\"></a>MacOS 的镜像文件</h2><p>可以去 [<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWZwdWQuY29tL21hY29zL2Nkci8=\">黑苹果动力：<i class=\"fa fa-external-link-alt\"></i></span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWZwdWQuY29tL21hY29zL2Nkci8=\">https://www.mfpud.com/macos/cdr/<i class=\"fa fa-external-link-alt\"></i></span> 】看看，提供了各种版本的 CDR 镜像文件</p>\n<blockquote>\n<p>如果你不是某度的会员，建议用天翼云，就算不是会员下载速度一样很快。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201221183608.png\"></p>\n<blockquote>\n<p>如果你想学习自制 <code>MacOS</code> 镜像文件，可以看看这篇文章《<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODU1NDIwL2FydGljbGUvZGV0YWlscy8xMDI3NTAwNTU=\">黑苹果 制作虚拟机CDR镜像（详细的教程，别再翻了！）<i class=\"fa fa-external-link-alt\"></i></span>》，文章地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODU1NDIwL2FydGljbGUvZGV0YWlscy8xMDI3NTAwNTU=\">https://blog.csdn.net/qq_41855420/article/details/102750055<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<h1 id=\"安装过程\"><a href=\"#安装过程\" class=\"headerlink\" title=\"安装过程\"></a>安装过程</h1><h2 id=\"VMware\"><a href=\"#VMware\" class=\"headerlink\" title=\"VMware\"></a>VMware</h2><p><code>VMware</code> 的安装还是比较简单的。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201221221856.png\"></p>\n<h2 id=\"Unlocker\"><a href=\"#Unlocker\" class=\"headerlink\" title=\"Unlocker\"></a>Unlocker</h2><p>在打补丁之前，<code>VMware</code> 并不支持安装 <code>MacOS</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201221221259.png\"></p>\n<p>在运行 <code>Unlocker</code> 之前，需要退出 <code>VMware</code> ，但实际上并不能完全退干净，所以还需要在任务管理器中，把带 <code>vmware</code> 开头的进程全部结束掉。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201221222617.png\"></p>\n<p>当然更安全的做法是在 <code>服务</code> 中将关于 <code>VMware</code> 的服务全部停止运行。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222192749.png\"></p>\n<p>解压 <code>unlocker.zip</code> 文件然后右键点击 <code>win-install.cmd</code> 并使用管理员权限（必须是管理员）运行脚本，最好退出杀毒使用。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201221223236.png\"></p>\n<blockquote>\n<p>切记，<code>win-install.cmd</code> 必须使用管理员身份运行；</p>\n</blockquote>\n<p>执行过程中会联网从 <code>VMware</code> 官方服务器下载多个依赖组件，时间取决于网速的情况，需要耐心等待。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201221223633.png\"></p>\n<p>脚本工作完成后，打开 <code>VMware Workstation</code> 新建虚拟机即可看到 <code>Apple Mac OS</code> 的选项。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201221234416.png\"></p>\n<h2 id=\"MacOS\"><a href=\"#MacOS\" class=\"headerlink\" title=\"MacOS\"></a>MacOS</h2><p>新建虚拟机，我用了 <code>典型</code> 模式</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201221235412.png\"></p>\n<p>选择下载好的 <code>Install macOS Big Sur 11.0.1 20B29 CDR.cdr</code> 镜像文件，会提示 <code>无法检测此光盘映像中的操作系统</code>，不用理会，点击 <code>下一步</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201221235521.png\"></p>\n<p>选择 <code>Apple Mac OS X</code>，版本按我们下载的实际版本选择，然后点 <code>下一步</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201221235839.png\"></p>\n<p>直接用的默认名称就行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222000332.png\"></p>\n<p>磁盘用的默认大小，存储改为了<code>单个文件</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222000428.png\"></p>\n<p>到这就算安装完成了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222000533.png\"></p>\n<h1 id=\"运行设置\"><a href=\"#运行设置\" class=\"headerlink\" title=\"运行设置\"></a>运行设置</h1><p>启动虚拟机</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222000824.png\"></p>\n<p>设置语言，我选了<code>简体中文</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222000909.png\"></p>\n<p>选<code>磁盘工具</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222001346.png\"></p>\n<p>选择 <code>VMware Virtual SATA Hard Drive Media</code>，然后点击<code>抹掉</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222001559.png\"></p>\n<p>名称看个人喜好，格式用默认的 <code>APFS</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222001940.png\"></p>\n<p>开始<code>抹除</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222002150.png\"></p>\n<p>完成后退出 <code>磁盘工具</code>，选 <code>重新安装macOS Big Sur</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222001106.png\"></p>\n<p><code>继续</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222001216.png\"></p>\n<p><code>同意</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222003323.png\"></p>\n<p>选择安装的磁盘，<code>继续</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222003458.png\"></p>\n<p>安装过程挺花时间的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222003545.png\"></p>\n<p>具体时间没统计</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222004517.png\"></p>\n<p>选 <code>中国大陆</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222184449.png\"></p>\n<p>接下来就是一堆的初始化设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222184641.png\"></p>\n<p>辅助功能可以选 <code>以后</code> 来跳过</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222184755.png\"></p>\n<p>网络默认 <code>本地网络</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222184934.png\"></p>\n<p>联网类型直接跳过了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222185046.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222185614.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222185653.png\"></p>\n<p>选左下角的  <code>以后</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222185912.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222185957.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222190215.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222190240.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222190314.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222190356.png\"></p>\n<p>选 <code>稍后设置</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222190436.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222190501.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222190534.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222190638.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222190726.png\"></p>\n<p>大功告成！</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222190800.png\"></p>\n<p>最后看下版本</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222191121.png\"></p>\n<h1 id=\"解决问题\"><a href=\"#解决问题\" class=\"headerlink\" title=\"解决问题\"></a>解决问题</h1><p>安装 <code>VMware Tools</code> 选项显示灰色</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201227113253.png\"></p>\n<p>关闭虚拟机，打开虚拟机设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201228152538.png\"></p>\n<p> <code>CD/DVD</code> -&gt; <code>使用ISO映像文件</code> -&gt; <code>浏览</code>，如果 <code>VMware</code> 安装在 C盘，打开 <code>C:\\Program Files (x86)\\VMware\\VMware Workstation</code> 目录，根据系统选择不同的 <code>iso</code> 文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201228152442.png\"></p>\n<p>一般重启之后，桌面上就会有 <code>VMware Tools</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201228152621.png\"></p>\n<p>双击就可以安装了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201228152647.png\"></p>\n<p>之后就可以修改分辨率了，之前只能使用  <code>1024*768</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201227112514.png\"></p>\n<p>现在会随窗口变化</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201228152713.png\"></p>\n<p>全屏可以到 1920*1080</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201228152752.png\"></p>\n<p>如果你的电脑性能足够强，相当于又多了一台运行 <code>MacOS</code> 的苹果电脑，是不是很爽？</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>VMWare14 安装Mac OS系统（操作图解）_u011415782的专栏-CSDN博客<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTE0MTU3ODIvYXJ0aWNsZS9kZXRhaWxzLzc4NTA1NDIy\">https://blog.csdn.net/u011415782/article/details/78505422<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>使用VMware 16安装macOS 10.14虚拟机实操记录_Michael002-CSDN博客<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzI0ODY2NjI5L2FydGljbGUvZGV0YWlscy8xMDkwMzcxOTQ=\">https://blog.csdn.net/sinat_24866629/article/details/109037194<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>VMware虚拟机安装macOS 10.15——步骤如此简单 - 顺顺博客-<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iay5zaHVubGVpdGUuY29tL3Bvc3QtNDcuaHRtbA==\">https://bk.shunleite.com/post-47.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>VMware吃黑苹果全记录 - 知乎<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8yNjEzNTY1OTQ=\">https://zhuanlan.zhihu.com/p/261356594<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>黑苹果懒人版CDR下载-思羽布丁<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWZwdWQuY29tL21hY29zL2Nkci8=\">https://www.mfpud.com/macos/cdr/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>[Ultimate Guide] Install macOS Big Sur on VMware on Windows PC<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly90ZWNoc3Byb2JlLmNvbS9pbnN0YWxsLW1hY29zLWJpZy1zdXItb24tdm13YXJlLW9uLXdpbmRvd3Mv\">https://techsprobe.com/install-macos-big-sur-on-vmware-on-windows/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["虚拟机","MacOS","VMWare"]},{"title":"支持天翼云的在线文件目录ShareList","url":"/2021/01/15/%E6%94%AF%E6%8C%81%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9A%84%E5%9C%A8%E7%BA%BF%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95ShareList/","content":"<p>之前我们分享过『<a href=\"https://laosu.ml/2020/12/25/%E5%9C%A8%E7%BA%BF%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95Z-file/\">在线文件目录Z-file</a>』，<code>ShareList</code> 从功能上来说和 <code>Z-file</code> 基本一样，但是相对来说支持的国产网盘比较多，包括天翼云、和彩云等等，甚至连阿里刚推出的 <code>Teambition</code> 网盘都已经支持了。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>sharelist</code> ，选择第二个 <code>reruin/sharelist </code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/08/1610089676827-1610089676872.png\" alt=\"title\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>sharelist</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/sharelist</code></td>\n<td align=\"center\"><code>/sharelist/cache</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/15/1610710362028-1610710362061.png\" alt=\"title\"></p>\n<blockquote>\n<p>后台设置完成后，会在 <code>/docker/sharelis</code> 目录中生成两个文件，<code>config.json</code> 和 <code>db.json</code>；</p>\n</blockquote>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>直接用了默认的端口 <code>33001</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">33001</td>\n<td align=\"center\">33001</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/08/1610090481589-1610090481597.png\" alt=\"title\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:33001</code>，第一次需要初始化。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/08/1610090594361-1610090594369.png\" alt=\"title\"></p>\n<blockquote>\n<p><code>口令</code> 是后台的管理密码，必须要记住</p>\n<p><code>网站标题</code> 是显示在左上角的网站的名称</p>\n<p><code>虚拟路径</code> 中点击 <code>FileSystem</code> 会展开一个下拉列表，展示了支持的网站</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/08/1610090855687-1610090855697.png\" alt=\"title\"></p>\n<p>不仅支持常用的GD（GoogleDrive）、OD（OneDrive）、连阿里刚推出的 <code>Teambition</code> 网盘都支持了。</p>\n<p>建议只设前两项，第三项就用默认 <code>FileSystem</code>，然后点保存就可。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/08/1610092152924-1610092152927.png\" alt=\"title\"></p>\n<h1 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h1><p>在浏览器中输入 <code>http://群晖IP:33001/manage</code>，打开后台设置界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images//mynote/2021/01/08/1610092247515-1610092247522.png\" alt=\"title\"></p>\n<p>输入之前设置的密码，登录成功后即可看到后台的参数设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/08/1610092384655-1610092384663.png\" alt=\"title\"></p>\n<p>往下拉到最下面，可以看到 <code>虚拟路径</code> 设置，而且已经变成了中文了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/08/1610092482527-1610092482534.png\" alt=\"title\"></p>\n<h2 id=\"天翼云\"><a href=\"#天翼云\" class=\"headerlink\" title=\"天翼云\"></a>天翼云</h2><p>选择了 <code>天翼云 账号登录版</code>，后面的路径建议填 <code>/</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/08/1610092552822-1610092552825.png\" alt=\"title\"></p>\n<p><code>保存</code> 之后，浏览器中新开一个窗口输入 <code>http://群晖IP:33001/</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/08/1610092695658-1610092695660.png\" alt=\"title\"></p>\n<p>输入天翼云的账号、密码后点 <code>验证</code>，通过后会直接显示天翼云盘的文件列表</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/08/1610092851969-1610092851972.png\" alt=\"title\"></p>\n<blockquote>\n<p><code>天翼云 API版</code> 没测试成功，应该是已经不支持这种模式了。</p>\n</blockquote>\n<h2 id=\"和彩云\"><a href=\"#和彩云\" class=\"headerlink\" title=\"和彩云\"></a>和彩云</h2><p>回到后台管理界面，在 <code>虚拟路径</code> 中添加</p>\n<p>选择 <code>和彩云 账号登录版</code>，后面的路径建议填 <code>/</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/08/1610093052217-1610093052222.png\" alt=\"title\"></p>\n<p><code>保存</code> 之后，浏览器中新开一个窗口输入 <code>http://群晖IP:33001/</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/08/1610094582576-1610094582578.png\" alt=\"title\"></p>\n<p>选择下面一个</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/08/1610094671826-1610094671828.png\" alt=\"title\"></p>\n<p>输入账号、密码，密码后点 <code>验证</code>，通过后会直接显示文件列表</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/08/1610094879587-1610094879594.png\" alt=\"title\"></p>\n<h1 id=\"常用设置\"><a href=\"#常用设置\" class=\"headerlink\" title=\"常用设置\"></a>常用设置</h1><h2 id=\"中转\"><a href=\"#中转\" class=\"headerlink\" title=\"中转\"></a>中转</h2><p>因为我挂载的是国内的网盘，所以我没启用中转视频也可以很流畅的播放，但是如果你挂载的是GD或者OD，建议一定要启用；</p>\n<blockquote>\n<p>按官方的说法：某些挂载源因使用了Cookie的原因，会强制中转；</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/13/1610538836777-1610538836781.png\" alt=\"title\"></p>\n<h2 id=\"目录加密\"><a href=\"#目录加密\" class=\"headerlink\" title=\"目录加密\"></a>目录加密</h2><p>在需要加密的目录内新建 <code>.passwd</code> 文件，<code>type</code> 为验证方式，<code>data</code> 为验证内容。</p>\n<p>目前只支持用户名密码对加密（由auth.basic插件实现）。 例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">type: basic </span><br><span class=\"line\">data: </span><br><span class=\"line\">  - user1:111111 </span><br><span class=\"line\">  - user2:aaaaaa</span><br></pre></td></tr></table></figure>\n\n<p>其中 <code>data</code> 中为用户名：密码。也就是 <code>user1</code> 用户可使用密码 <code>111111</code> 验证，<code>user2</code> 用户可使用密码 <code>aaaaaa</code> 验证。</p>\n<p>天翼云盘并不支持直接上传<code>.passwd</code> 文件，而和彩云是支持的；</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210115152249.png\"></p>\n<p>处理办法也很简单，需先重命名为 <code>passwd</code>，一定不要有后缀，上传完成之后，再重命名为 <code>.passwd</code> 就可以了。</p>\n<h2 id=\"WebDAV-导出\"><a href=\"#WebDAV-导出\" class=\"headerlink\" title=\"WebDAV 导出\"></a>WebDAV 导出</h2><p>这是我最看重的功能，这里<code>WebDAV</code> 功能指的是将挂载内容以 <code>WebDAV</code> 方式对外分享，但不支持写入、删除、重命名、复制等操作。该功能默认是启用的，而且是匿名的。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/13/1610545201317-1610545201317.png\" alt=\"title\"></p>\n<p>在 <code>RaiDrive</code> 中挂载，其中：</p>\n<blockquote>\n<p>192.168.0.199 为 群晖的IP<br>33001 为 <code>ShareList</code> 映射的端口<br>账户勾选<code>匿名</code>，会自动填入 <code>anonymous</code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/13/1610545143986-1610545143988.png\" alt=\"title\"></p>\n<p>进入盘符后，可以看到我们挂载成功的两个云盘变成了两个文件夹</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/13/1610546429329-1610546429331.png\" alt=\"title\"></p>\n<p>接下来就可以直接用 <code>PotPlayer</code> 之类的播放器直接看电影了。如果是移动端，可以用 <code>nPlayer</code>试试。</p>\n<p>如果你曾经薅过天翼云 <code>30T</code> 的羊毛，都可以它用来建个视频网站了。</p>\n<blockquote>\n<p>注意：这里的 WebDAV 是只读的，当你试图向目录中拷贝文件时，会提示需要权限；</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/13/1610547289275-1610547289275.png\" alt=\"title\"></p>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><p>更多的用法可以参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9yZXJ1aW4uZ2l0aHViLmlvL3NoYXJlbGlzdC9kb2NzLyMvemgtY24v\">官方的在线文档(https://reruin.github.io/sharelist/docs/#/zh-cn)<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"遗留问题\"><a href=\"#遗留问题\" class=\"headerlink\" title=\"遗留问题\"></a>遗留问题</h1><h2 id=\"SMB-服务\"><a href=\"#SMB-服务\" class=\"headerlink\" title=\"SMB 服务\"></a>SMB 服务</h2><p><code>ShareList</code> 还支持将挂载内容以 <code>SMB</code> 服务形式分享，默认是禁用的，需要我们在后台选择启用才能使用。按官方的说明，该功能还是实验功能，暂只支持 <code>SMB1.0</code> 且为只读模式。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/13/1610539253129-1610539253132.png\" alt=\"title\"></p>\n<p>这个功能和 <code>WebDAV</code> 差不多，只是能支持的设备和设置会更简单，可惜未能设置成功，开始怀疑是因为群晖本身启用了 <code>SMB</code> 服务的缘故，但停掉群晖本身的 <code>SMB</code> 服务也依然未能实现。</p>\n<p>在 <code>终端机</code> 里运行 <code>npm run dev</code> ，显示应该是已经启用了，</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210115101735.png\"></p>\n<p>但是并不能被识别，有知道的朋友给指导一下吧。谢谢~</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>reruin/sharelist: 快速分享 GoogleDrive OneDrive<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3JlcnVpbi9zaGFyZWxpc3Q=\">https://github.com/reruin/sharelist<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>ShareList（原GDLIST） - 支持Google Drive/OneDrive多网盘同时挂载 | 喵斯基部落<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubW9ld2FoLmNvbS9hcmNoaXZlcy8xNDYyLmh0bWw=\">https://www.moewah.com/archives/1462.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Windows10使用sharelist本地挂载天翼云_Isrror的博客-CSDN博客<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MjA5NTQyL2FydGljbGUvZGV0YWlscy8xMDg1MTgzMzM=\">https://blog.csdn.net/qq_44209542/article/details/108518333<i class=\"fa fa-external-link-alt\"></i></span> </p>\n<p>挂载各类网盘——Sharelist的介绍与使用 | Blog By LTrump<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnhxaC5tYS9fcG9zdHMvMjAyMC0wMy0yNC0lRTYlOEMlODIlRTglQkQlQkQlRTUlOTAlODQlRTclQjElQkIlRTclQkQlOTElRTclOUIlOTgtU2hhcmVsaXN0JUU3JTlBJTg0JUU0JUJCJThCJUU3JUJCJThEJUU0JUI4JThFJUU0JUJEJUJGJUU3JTk0JUE4Lw==\">https://blog.xqh.ma/_posts/2020-03-24-%E6%8C%82%E8%BD%BD%E5%90%84%E7%B1%BB%E7%BD%91%E7%9B%98-Sharelist%E7%9A%84%E4%BB%8B%E7%BB%8D%E4%B8%8E%E4%BD%BF%E7%94%A8/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","网盘","onedrive","天翼云盘"]},{"title":"Linux性能监控工具Netdata（修订）","url":"/2021/01/12/Linux%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7Netdata%EF%BC%88%E4%BF%AE%E8%AE%A2%EF%BC%89/","content":"<p>最近的寒潮，感觉把脑子都冻住了，虽然直觉告诉我『<a href=\"https://laosu.ml/2020/12/28/Linux%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7Netdata/\">Linux性能监控工具Netdata</a>』安装存在问题，但是并没有意识到问题出在哪里。</p>\n<p>这两天 <code>coding.net</code> 又升级了，迁移的时候因为域名没备案被迁到了香港的主机，从这几天的使用看，比原来慢了不是一点半点，因为不断在测试又翻到了『<a href=\"https://laosu.ml/2020/09/22/Glances%E5%AE%9E%E6%97%B6%E7%9B%91%E8%A7%86%E7%BE%A4%E6%99%96%E8%BF%90%E8%A1%8C%E7%8A%B6%E5%86%B5/\">Glances实时监视群晖运行状况</a>』。</p>\n<p>这才焕然大悟，又一次忘记了 <code>/var/run/docker.sock</code> 这个桥梁，今天我们再重新正确的安装一次。</p>\n<p>之前我们 <code>docker</code> 安装主要是使用群晖自带的 <code>Docker</code> 管理器，也用过 <code>portainer</code>，还用过 <code>SSH</code>，今天我们换一种方式，直接用群晖自带的 <code>任务计划</code> 来完成安装。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>转到 <code>控制面板</code> –&gt; <code>任务计划</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/task01-1600232366408.png\" alt=\"title\"></p>\n<p><code>新增</code> –&gt; <code>计划的任务</code> –&gt; <code>用户定义的脚本</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/task02-1600232386590.png\" alt=\"title\"></p>\n<p>在 <code>创建任务</code> 窗口的 <code>常规</code> 选项卡上，确保将 <code>用户账号</code> 选择为 <code>root</code>，填入 <code>任务名称</code>，取消 <code>已启动</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/09/1610166311168-1610166311170.png\" alt=\"title\"></p>\n<p>在 <code>创建任务</code> 窗口的 <code>计划</code> 选项卡上，选择 <code>在以下日期运行</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/09/1610166500466-1610166500467.png\" alt=\"title\"></p>\n<p>在 <code>创建任务</code> 窗口的 <code>任务设置</code> 选项卡上，勾选 <code>通过电子邮件发送运行详情</code>，在 <code>用户定义脚本</code> 中填入</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run -d --name=netdata \\</span><br><span class=\"line\">  -p 19999:19999 \\</span><br><span class=\"line\">  -v /proc:/host/proc:ro \\</span><br><span class=\"line\">  -v /sys:/host/sys:ro \\</span><br><span class=\"line\">  -v /var/run/docker.sock:/var/run/docker.sock:ro \\</span><br><span class=\"line\">  --cap-add SYS_PTRACE \\</span><br><span class=\"line\">  --security-opt apparmor=unconfined \\</span><br><span class=\"line\">  netdata/netdata</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2021/01/09/1610189685790-1610189685792.png\" alt=\"title\"></p>\n<p>确定之后会返回 <code>控制面板</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/09/1610167215370-1610167215370.png\" alt=\"title\"></p>\n<p>选择 <code>Netdata</code> 任务，然后单击 <code>运行</code> 选项卡，在弹出的确认界面选择 <code>是</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/09/1610167436434-1610167436439.png\" alt=\"title\"></p>\n<p>安装过程可能需要花费一些时间，这将取决于您的网络速度。</p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>当你在 <code>Docker</code> 管理器里看到 <code>netdata</code> 时就表示已经安装好了，同时也会收到邮件（如果你设置没有问题的话）。</p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2021/01/09/1610168063691-1610168063693.png\" alt=\"title\"></p>\n<p>在浏览器中输入 <code>http://群晖IP:19999</code>，就可以看到主界面了</p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2021/01/09/1610168176363-1610168176365.png\" alt=\"title\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>netdata/netdata - Docker Hub<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9yZWdpc3RyeS5odWIuZG9ja2VyLmNvbS9yL25ldGRhdGEvbmV0ZGF0YS8=\">https://registry.hub.docker.com/r/netdata/netdata/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>关于/var/run/docker.sock<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmZ1bmRlYnVnLmNvbS8yMDE3LzA0LzE3L2Fib3V0LWRvY2tlci1zb2NrLw==\">https://blog.fundebug.com/2017/04/17/about-docker-sock/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","运维"]},{"title":"在线文档分享工具ShowDoc","url":"/2021/01/08/%E5%9C%A8%E7%BA%BF%E6%96%87%E6%A1%A3%E5%88%86%E4%BA%AB%E5%B7%A5%E5%85%B7ShowDoc/","content":"<p>在 《<a href=\"https://laosu.ml/2020/08/03/%E5%9C%A8%E7%BA%BF%E6%96%87%E6%A1%A3%E7%B3%BB%E7%BB%9FMrDoc/\">在线文档系统MrDoc</a>》 中，我们提到过另一款在线文档 <code>ShowDoc</code>。</p>\n<p><code>ShowDoc</code> 是一款非常适合 IT 团队的在线 API 文档、技术文档工具。你可以使用 <code>ShowDoc</code> 来编写在线 API 文档、技术文档、数据字典、在线手册。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/03/1609661907306-1609661907310.png\" alt=\"title\"></p>\n<p><code>ShowDoc</code> 客户端支持主流的平台</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/08/1610114423460-1610114423462.png\" alt=\"title\"></p>\n<blockquote>\n<p>对于手机app，如果你正在使用 <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zaG93ZG9jLmNvbS5jbi8=\">www.showdoc.com.cn<i class=\"fa fa-external-link-alt\"></i></span> ，则下载即可使用。如果你是使用私有版showdoc，则请登录手机app的时候，在页面右上角指定私有版showdoc的服务器地址（私有版showdoc服务端需要更新到最新代码）</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>showdoc</code> ，选择第一个 <code>star7th/showdoc</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210103162541.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>showdoc</code>，然后在 <code>showdoc</code> 文件夹中再创建一个新的子文件夹，命名为 <code>html</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210103165658.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/showdoc/html</code></td>\n<td align=\"center\"><code>/var/www/html/</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/03/1609664909005-1609664909008.png\" alt=\"title\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>要避免端口冲突，所以重新指定了本地端口</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">4999</td>\n<td align=\"center\">80</td>\n</tr>\n<tr>\n<td align=\"center\">4943</td>\n<td align=\"center\">443</td>\n</tr>\n<tr>\n<td align=\"center\">4900</td>\n<td align=\"center\">9000</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210103171258.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖:4999</code>，第一次会有语言选择设置，默认是 <code>中文</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210103171726.png\"></p>\n<p>安装成功后会显示默认的账号和密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210103171848.png\"></p>\n<p><code>进入网站首页</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210103172028.png\"></p>\n<p>转到 <code>登录/注册</code> 界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210103172255.png\"></p>\n<p>用默认的账号（showdoc）和密码（123456）登录，可以看到官方提供的4种模板。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/03/1609666000700-1609666000701.png\" alt=\"title\"></p>\n<p>建议在后台管理中修改管理员的默认密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210103173829.png\"></p>\n<p><code>新建项目</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/03/1609667530934-1609667530935.png\" alt=\"title\"></p>\n<p><code>复制项目</code>，可以从 4 种模板中直接复制</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/03/1609668253204-1609668253206.png\" alt=\"title\"></p>\n<p>可以 <code>导入文件</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/03/1609668323112-1609668323113.png\" alt=\"title\"></p>\n<p>还能 <code>自动生成</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/03/1609668403253-1609668403254.png\" alt=\"title\"></p>\n<p>新建一个项目</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210103191626.png\"></p>\n<p>管理目录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210103191701.png\"></p>\n<p>编辑页面，可以利用现有的模板</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210103192037.png\"></p>\n<p>也可以自己建模板</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210103192206.png\"></p>\n<p><code>ShowDoc</code> 不仅安装简单，使用也很简单，稍微熟悉下即可上手了。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>star7th/showdoc: 代码<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N0YXI3dGgvc2hvd2RvYw==\">https://github.com/star7th/showdoc<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>ShowDoc 官网<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2hvd2RvYy5jb20uY24v\">https://www.showdoc.com.cn/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>帮助说明–ShowDoc<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2hvd2RvYy5jb20uY24vaGVscA==\">https://www.showdoc.com.cn/help<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","笔记","markdown"]},{"title":"开源广告拦截器Pi-hole","url":"/2021/01/04/%E5%BC%80%E6%BA%90%E5%B9%BF%E5%91%8A%E6%8B%A6%E6%88%AA%E5%99%A8Pi-hole/","content":"<blockquote>\n<p>今天是2021年的第一个工作日，新年新气象，让我们一起加油！</p>\n</blockquote>\n<p>Pi-hole 是一款开源且免费的 DNS 沉洞服务器（DNS sinkhole），能够在不安装任何客户端侧软件的前提下为设备提供网络内容屏蔽服务，非常轻量易用。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201229154116.png\"></p>\n<p>不用安装客户端，这对机顶盒、智能电视、手机、PAD等设备是非常方便的。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在 docker 注册表中搜索 <code>pihole</code> ，选择第一个 <code>pihole/pihole</code>，版本 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201229144344.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>pihole</code>，然后在 <code>pihole</code> 文件夹中创建两个新的子文件夹：分别命名为 <code>pihole</code>，和 <code>dnsmasq.d</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201229152312.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件/文件夹</th>\n<th align=\"center\">装载路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">/docker/pihole/pihole</td>\n<td align=\"center\">/etc/pihole/</td>\n</tr>\n<tr>\n<td align=\"center\">/docker/pihole/dnsmasq.d</td>\n<td align=\"center\">/etc/dnsmasq.d/</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210101165510.png\"></p>\n<h2 id=\"网络\"><a href=\"#网络\" class=\"headerlink\" title=\"网络\"></a>网络</h2><p>勾选 <code>使用与 Docker Host 相同的网络</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210101164630.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">WEB_PORT</td>\n<td align=\"center\"><code>4880</code>等任意值，请根据需要设置</td>\n</tr>\n<tr>\n<td align=\"center\">WEBPASSWORD</td>\n<td align=\"center\">web登录密码，请根据需要设置</td>\n</tr>\n<tr>\n<td align=\"center\">DNSMASQ_LISTENING</td>\n<td align=\"center\">local</td>\n</tr>\n<tr>\n<td align=\"center\">ServerIP</td>\n<td align=\"center\">默认值为 0.0.0.0，需要修改为群晖本机的局域网IP</td>\n</tr>\n</tbody></table>\n<p>其中前三项是需要新加的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201229161930.png\"></p>\n<p>最后一项是需要修改的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201229161458.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>有几种<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaXNjb3Vyc2UucGktaG9sZS5uZXQvdC9ob3ctZG8taS1hY2Nlc3MtcGktaG9sZXMtZGFzaGJvYXJkLWFkbWluLWludGVyZmFjZS8zMTY4\">访问仪表板的方法<i class=\"fa fa-external-link-alt\"></i></span>：</p>\n<ol>\n<li><code>http://&lt;IP_ADDPRESS_OF_YOUR_PI_HOLE&gt;/admin/</code></li>\n<li> <code>http://pi.hole/admin/</code> （当使用 Pi-hole 作为 DNS 服务器时）</li>\n<li> <code>http://pi.hole/</code> （当使用 Pi-hole 作为 DNS 服务器时）</li>\n</ol>\n<p>所以我们在浏览器中输入 <code>http://群晖IP:4880/admin</code>就能看到主界面，如果看不到，再等一会！！！！！</p>\n<blockquote>\n<p>在我的机器上会需要等很长时间，不知道是不是因为内存小的缘故，因为在参考文档《How to Install Pi-Hole on Your Synology NAS – Marius Hosting》中提到，在群晖 NAS 上安装 Pi-hole 需要至少 6G 内存，而我的只有 4G 内存。 </p>\n</blockquote>\n<blockquote>\n<p>但是等到什么时候刷新才行呢，我发现只要 <code>pihole</code> 或者 <code>dnsmasq.d</code> 里有文件的时候就可以了。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210101174321.png\"></p>\n<p>点击左侧菜单栏的 <code>Login</code>，输入密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210101174454.png\"></p>\n<p>然后就可以根据需要进行设置了。</p>\n<h1 id=\"应用\"><a href=\"#应用\" class=\"headerlink\" title=\"应用\"></a>应用</h1><h2 id=\"添加规则\"><a href=\"#添加规则\" class=\"headerlink\" title=\"添加规则\"></a>添加规则</h2><p>有个开源项目 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3ByaXZhY3ktcHJvdGVjdGlvbi10b29scy9hbnRpLUFE\">anti-AD<i class=\"fa fa-external-link-alt\"></i></span>：<br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3ByaXZhY3ktcHJvdGVjdGlvbi10b29scy9hbnRpLUFE\">https://github.com/privacy-protection-tools/anti-AD<i class=\"fa fa-external-link-alt\"></i></span>，在这里能找到适用于 <code>Pi-hole</code> 的规则</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210103134652.png\"></p>\n<p>复制规则的链接，在 <code>Group Management</code> -&gt; <code>Adlists</code> 里面添加到 <code>Pi-hole</code> 中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20210103134917.png\"></p>\n<blockquote>\n<p>除了这个项目，你还能找到其他的 <code>Pi-hole</code> 过滤规则</p>\n</blockquote>\n<h2 id=\"更新规则\"><a href=\"#更新规则\" class=\"headerlink\" title=\"更新规则\"></a>更新规则</h2><p>在 <code>Tools</code> -&gt; <code>Update Gravity</code> 里面点一下“Update”，开始更新屏蔽域名表</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2021/01/03/1609653221769-1609653221795.png\" alt=\"title\"></p>\n<p>一共导入了 <code>43177</code> 条规则。</p>\n<h2 id=\"添加-DNS\"><a href=\"#添加-DNS\" class=\"headerlink\" title=\"添加 DNS\"></a>添加 DNS</h2><p><code>Pi-hole</code> 采用的是使用本地 <code>DNS</code> 服务器的方式在局域网中进行过滤，所以我们需要设置 <code>Pi-hole</code> 为当前网络的<code>DNS</code>。</p>\n<h3 id=\"单个设备设置-DNS\"><a href=\"#单个设备设置-DNS\" class=\"headerlink\" title=\"单个设备设置 DNS\"></a>单个设备设置 DNS</h3><p>您可以在网络上的所有设备上将 <code>群晖 IP</code> 添加为 <code>DNS</code>。</p>\n<h3 id=\"路由器上设置-DNS\"><a href=\"#路由器上设置-DNS\" class=\"headerlink\" title=\"路由器上设置 DNS\"></a>路由器上设置 DNS</h3><p>登录路由器，并通过更改 <code>DNS</code> 来在路由器级别阻止广告。这样，您就不必在每个设备上都单独进行操作了。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Pi-hole – Network-wide protection<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9waS1ob2xlLm5ldC8=\">https://pi-hole.net/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>pi-hole/pi-hole: A black hole for Internet advertisements<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3BpLWhvbGUvcGktaG9sZQ==\">https://github.com/pi-hole/pi-hole<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>pi-hole/docker-pi-hole: Pi-hole in a docker container<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3BpLWhvbGUvZG9ja2VyLXBpLWhvbGUvI3J1bm5pbmctcGktaG9sZS1kb2NrZXI=\">https://github.com/pi-hole/docker-pi-hole/#running-pi-hole-docker<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Block Ads on your Network with Pi-Hole Hosted on Synology – NAS Hosted<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9nZWVrZWQuaG9zdC9ibG9jay1hZHMtb24teW91ci1uZXR3b3JrLXdpdGgtcGktaG9sZS1ob3N0ZWQtb24tc3lub2xvZ3kv\">https://geeked.host/block-ads-on-your-network-with-pi-hole-hosted-on-synology/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>How to Install Pi-Hole on Your Synology NAS – Marius Hosting<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXJpdXNob3N0aW5nLmNvbS9ob3ctdG8taW5zdGFsbC1waS1ob2xlLW9uLXlvdXItc3lub2xvZ3ktbmFzLw==\">https://mariushosting.com/how-to-install-pi-hole-on-your-synology-nas/<i class=\"fa fa-external-link-alt\"></i></span> </p>\n<p>privacy-protection-tools/anti-AD: 致力于成为中文区命中率最高的广告过滤列表，实现精确的广告屏蔽和隐私保护。anti-AD现已支持AdGuardHome，dnsmasq， Surge，Pi-Hole，smartdns等网络组件。完全兼容常见的广告过滤工具所支持的各种广告过滤列表格式<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3ByaXZhY3ktcHJvdGVjdGlvbi10b29scy9hbnRpLUFE\">https://github.com/privacy-protection-tools/anti-AD<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker"]},{"title":"Docker中运行百度网盘客户端","url":"/2020/12/31/Docker%E4%B8%AD%E8%BF%90%E8%A1%8C%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E5%AE%A2%E6%88%B7%E7%AB%AF/","content":"<h1 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h1><blockquote>\n<p>今天是2020年的最后一天，这一年我们过得实”鼠”不易，但不管怎么样，我们已经迈过去了，平安就好！<br>明天就是2021年了，希望朋友们在新的一年里“牛”转乾坤，祝大家新年快乐~</p>\n</blockquote>\n<h1 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h1><p>个人不太喜欢百度网盘，但奈何身边朋友们分享文件用的最多的还是它，虽然转存比较快，但是如果不是会员的话，下载一定会让你抓狂。所以如果不想买会员的话，只能用时间来弥补，比如一台不关机的主机或者虚拟机。</p>\n<p>之前大家需要在群晖上安装 windows 虚拟机跑百度网盘客户端，而现在我们可以直接在开销更小的 <code>docker</code> 中运行百度网盘客户端了。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在 docker 注册表中搜索 <code>baidunetdisk</code> ，选择第三个 <code>royzheng/baidunetdisk</code>，只有一个版本，双击直接下载。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201231090859.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>baidunetdisk</code>，然后在 <code>baidunetdisk</code> 文件夹中创建两个新的子文件夹：分别命名为 <code>config</code>，和 <code>downloads</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201231092447.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">/docker/baidunetdisk/config</td>\n<td align=\"center\">/config</td>\n</tr>\n<tr>\n<td align=\"center\">/docker/baidunetdisk/downloads</td>\n<td align=\"center\">/downloads</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201231092716.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>VNC 的默认端口是 5901，VNC HTTP 的默认端口是 6901。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201231092825.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><p>环境变量 <code>VNC_PW</code> 是 vnc 的访问密码，默认为 <code>vncpassword</code>，请修改为自己的密码，不能为空。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201231093413.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖:6901</code>，浏览器界面的顶部会有输入密码的框</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201231101522.png\"></p>\n<p>输入正确的密码后，可以看到桌面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201231141326.png\"></p>\n<p>双击桌面图标 <code>Baidu Netdisk</code> 来启动百度网盘客户端</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201231093744.png\"></p>\n<p>输入正确的账号和密码，第一次会提示升级，建议不用理睬。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201231101702.png\"></p>\n<p>查看当前版本</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201231114621.png\"></p>\n<p>因为不是会员，所以下载文件文件速度有限，唯一的好处是 <code>7*24</code> 小时，让它慢慢下吧。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201231135932.png\"></p>\n<h1 id=\"附录\"><a href=\"#附录\" class=\"headerlink\" title=\"附录\"></a>附录</h1><blockquote>\n<p>其实在安装 <code>royzheng/baidunetdisk</code> 之前，我尝试过 <code>johnshine/baidunetdisk-crossover-vnc</code> 和 <code>johngong/baidunetdisk</code>，但是在我的机器上都不成功，具体原因不明。</p>\n</blockquote>\n<p>下面我把安装的过程贴出来，请大家指正。</p>\n<h2 id=\"安装-johnshine-baidunetdisk-crossover-vnc-的过程\"><a href=\"#安装-johnshine-baidunetdisk-crossover-vnc-的过程\" class=\"headerlink\" title=\"安装 johnshine/baidunetdisk-crossover-vnc 的过程\"></a>安装 johnshine/baidunetdisk-crossover-vnc 的过程</h2><p>在 docker 注册表中搜索 <code>baidu</code> ，选择第三个 <code>johnshine/baidunetdisk-crossover-vnc</code>，版本 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/11/21/1605964810866-1605964810888.png\" alt=\"title\"></p>\n<h3 id=\"端口-1\"><a href=\"#端口-1\" class=\"headerlink\" title=\"端口\"></a>端口</h3><p>直接用的默认值，不冲突就好，其中 <code>6080</code> 是 web 服务的端口，<code>5901</code> 是 VNC 连接端口</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201122104759.png\"></p>\n<h3 id=\"卷-1\"><a href=\"#卷-1\" class=\"headerlink\" title=\"卷\"></a>卷</h3><p>找一个下载路径映射为 <code>/home/baidu/baidunetdiskdownload/</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201122105057.png\"></p>\n<h3 id=\"环境-1\"><a href=\"#环境-1\" class=\"headerlink\" title=\"环境\"></a>环境</h3><p>新增 <code>vnc_password</code>，用于设置 vnc 访问的密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201122105325.png\"></p>\n<blockquote>\n<p>安装完成后，浏览器里看不到桌面，没用 VNC 客户端连；</p>\n</blockquote>\n<h2 id=\"安装-johngong-baidunetdisk-的过程\"><a href=\"#安装-johngong-baidunetdisk-的过程\" class=\"headerlink\" title=\"安装 johngong/baidunetdisk 的过程\"></a>安装 johngong/baidunetdisk 的过程</h2><p>在 docker 注册表中搜索 <code>baidunetdisk</code> ，选择第二个 <code>johngong/baidunetdisk</code>，版本 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201122111126.png\"></p>\n<h3 id=\"端口-2\"><a href=\"#端口-2\" class=\"headerlink\" title=\"端口\"></a>端口</h3><p>避免冲突修改了端口，其中 <code>5850</code> 是 web 服务的端口，<code>5900</code> 是 VNC 连接端口</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201122114712.png\"></p>\n<h3 id=\"卷-2\"><a href=\"#卷-2\" class=\"headerlink\" title=\"卷\"></a>卷</h3><p>找一个下载路径映射为 <code>/config/baidunetdiskdownload</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201122114416.png\"></p>\n<h3 id=\"环境-2\"><a href=\"#环境-2\" class=\"headerlink\" title=\"环境\"></a>环境</h3><p>新增 <code>vnc_password</code>，用于设置 vnc 访问的密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201122114945.png\"></p>\n<blockquote>\n<p>这个比较夸张，不断的重启。</p>\n</blockquote>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>威联通：VNC连接Linux客户端曲线救国使用百度网盘 | Jay<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLjIzM3NvLmNvbS8yMDIwLzA3L3FuYXAtYmFpZHVuZXRkaXNrLXZuYy8=\">https://blog.233so.com/2020/07/qnap-baidunetdisk-vnc/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>大国特色奇异技巧系列之一：群晖 Docker 接管百度网盘 | 庄菲什<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kcnVua2Zpc2gubWUvYmFpZHVwYW4v\">https://drunkfish.me/baidupan/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","网盘","VNC","百度"]},{"title":"Linux性能监控工具Netdata","url":"/2020/12/28/Linux%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7Netdata/","content":"<p>Netdata 是一款免费开源的 Linux 系统性能实时监控工具，使用 Netdata 我们可以轻松地跟踪大量指标：处理器使用情况，内存消耗，I / O操作，网络使用情况等统计信息，实时地洞察其运行的系统（包括Web服务器，数据库，应用程序）上发生的一切。Netdata 可以自主运行，无需任何第三方组件，也可以集成到现有的监视工具链（Prometheus，Graphite，OpenTSDB，Kafka，Grafana等），最重要的是它占用资源少。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201028164550.png\"></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在 docker 注册表中搜索 <code>netdata</code> ，选择第一个 <code>netdata/netdata/</code>，版本选 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201028160038.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>直接用的默认端口 <code>19999</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201028164345.png\"></p>\n<h1 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h1><p>在浏览器中输入 <code>http://群晖IP:19999</code>，就可以看到主界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201215192535.png\"></p>\n<p>按照说明，Netdata 每秒都会收集927个指标，将其显示在286个图表中，并通过82个警报进行监视。右侧的菜单树，可以快速的切换。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201215195406.png\"></p>\n<ul>\n<li>cpu</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201215195659.png\"></p>\n<ul>\n<li>disk</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201215195756.png\"></p>\n<ul>\n<li>ram</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201215195847.png\"></p>\n<ul>\n<li>network</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201215195922.png\"></p>\n<p>这里都是单节点的监控数据，如果要同时监控多台设备，需要登录到 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcHAubmV0ZGF0YS5jbG91ZC8=\">https://app.netdata.cloud/<i class=\"fa fa-external-link-alt\"></i></span>，而且每台设备都需要安装 agent 。借助 <code>Netdata Cloud</code>，我们就可以构建新的仪表板，将来自任意数量的分布式系统的关键指标集中在一个地方。</p>\n<p>针对集群的部署的方式有好几种，可以在官网的说明上找到 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybi5uZXRkYXRhLmNsb3VkL2RvY3MvYWdlbnQvc3RyZWFtaW5n\">https://learn.netdata.cloud/docs/agent/streaming<i class=\"fa fa-external-link-alt\"></i></span>。</p>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><p>在浏览器中 <code>http://群晖IP:19999/netdata.conf</code>，找到 <code># config directory =</code> 设置。列出的值是系统的 <code>config</code> 目录。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201215202234.png\"></p>\n<p>接下来我们就可以找到这个文件，根据我们的需要进行修改了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201215201826.png\"></p>\n<p>要想用好这个工具，还是要花很多时间去阅读官网的文档，最后用一张官网的功能和体系架构图来展示一下 <code>Netdata</code> 的强大。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201217194555.png\"></p>\n<h1 id=\"疑问\"><a href=\"#疑问\" class=\"headerlink\" title=\"疑问\"></a>疑问</h1><p>用 docker 方式安装，不确定检测的是宿主主机还是 docker 容器的性能，所以我觉得如果可能的话，还是用安装脚本来安装会比较好。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>netdata/netdata: Real-time performance monitoring, done right! <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubmV0ZGF0YS5jbG91ZC8=\">https://www.netdata.cloud<i class=\"fa fa-external-link-alt\"></i></span><br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25ldGRhdGEvbmV0ZGF0YQ==\">https://github.com/netdata/netdata<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Netdata - Monitor everything in real time for free with Netdata<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubmV0ZGF0YS5jbG91ZC8=\">https://www.netdata.cloud/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Learn Netdata 帮助文档<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybi5uZXRkYXRhLmNsb3VkL2RvY3M=\">https://learn.netdata.cloud/docs<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>在电脑桌面实现对NAS与路由器的负载监控（基于Netdata和Wall_NAS存储_什么值得买<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2FtbTVsNnE0Lw==\">https://post.smzdm.com/p/amm5l6q4/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","运维"]},{"title":"在线文件目录Z-file","url":"/2020/12/25/%E5%9C%A8%E7%BA%BF%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95Z-file/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>Z-file是一个开源的在线文件目录程序, 支持各种对象存储和本地存储。官方对 <code>Z-file</code> 的定位是个人放常用工具下载, 或做公共的文件库，并且明确表示不会向多账户方向开发，所以不存在复杂的权限管理。</p>\n<p>官方提供了一个预览地址: <span class=\"exturl\" data-url=\"aHR0cHM6Ly96ZmlsZS5qdW42Lm5ldC8=\">https://zfile.jun6.net<i class=\"fa fa-external-link-alt\"></i></span> ，有助于我们理解 <code>Z-file</code> 的功能和定位。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在 docker 注册表中搜索 <code>zfile</code> ，选择第六个 <code>formattoday/zfile</code>，版本 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201221120256.png\"></p>\n<p>因为这个版本比较新。从说明看是基于 <code>stilleshan/zfile</code>  制作的，所有的参数也是一致的。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201221121735.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>docker</code> 文件夹中，创建一个新文件夹，并将其命名为 <code>zfile</code>，然后在 <code>zfile</code> 文件夹中创建三个新文件夹：分别命名为 <code>conf</code>，<code>db</code> 和 <code>data</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201221133640.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">/docker/zfile/conf</td>\n<td align=\"center\">/root/.zfile</td>\n<td align=\"center\">配置文件的目录</td>\n</tr>\n<tr>\n<td align=\"center\">/docker/zfile/db</td>\n<td align=\"center\">/root/.zfile-new/db</td>\n<td align=\"center\">数据库所在目录</td>\n</tr>\n<tr>\n<td align=\"center\">/docker/zfile/data</td>\n<td align=\"center\">/root/zfile/data</td>\n<td align=\"center\">上传文件所在的目录，如果是挂载网盘或者对象存储，可以不挂载目录</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201221133858.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>反正 <code>8080</code>是不能用的，随便选了个 <code>3380</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201221134022.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:3380</code>，第一次默认会跳转到 <code>http://群晖IP:3380/#/install</code> 的设置界面。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201222112313.png\"></p>\n<p>设置完成名称、账号、密码之后，会提示 <code>未初始化驱动器</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201221134646.png\"></p>\n<p>因为这个时候驱动器还是空的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201221134826.png\"></p>\n<p> 在浏览器中打开<code>http://群晖IP:3380/#/admin</code>，会看到后台设置的登录界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201221140227.png\"></p>\n<p>在驱动列表中进行新增</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201221140354.png\"></p>\n<h2 id=\"本地存储\"><a href=\"#本地存储\" class=\"headerlink\" title=\"本地存储\"></a>本地存储</h2><p>首先加了个 <code>本地存储</code>，文件路径记得填写前面的 <code>/root/zfile/data</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201221142215.png\"></p>\n<p>完成之后，感觉界面分辨率上有点问题，横向并没有满屏但是居然出现了滚动条</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201221140718.png\"></p>\n<h2 id=\"OneDrive-网盘\"><a href=\"#OneDrive-网盘\" class=\"headerlink\" title=\"OneDrive 网盘\"></a>OneDrive 网盘</h2><p>新增 <code>OneDrive</code> 网盘</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201221141054.png\"></p>\n<p>设置完 <code>驱动器名称</code> 和 <code>存储策略</code> 后，先别管 <code>访问令牌</code> 和 <code>刷新令牌</code> ，直接点击 <code>前往获取授权</code>，会新开一个页面跳转到微软的登录验证界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201221141003.png\"></p>\n<p>依次输入账号和密码后，<code>接受</code> 许可申请</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201221141358.png\"></p>\n<p>授权成功后，会获得两个令牌的值，分别复制到对应的位置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201221141502.png\"></p>\n<p>保存后，驱动器列表会增加一个</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201221141718.png\"></p>\n<p>回到主界面 <code>http://群晖IP:3180</code>，默认会跳转到 <code>http://群晖IP:3180/#/main</code>，</p>\n<p>因为我们添加了2个驱动器，所以可以通过右上角进行切换</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201221142949.png\"></p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><h2 id=\"访问地址\"><a href=\"#访问地址\" class=\"headerlink\" title=\"访问地址\"></a>访问地址</h2><blockquote>\n<p>用户前台：http://群晖IP:3380/#/main<br>初始安装：http://群晖IP:3380/#/install<br>管理后台：http://群晖IP:3380/#/admin</p>\n</blockquote>\n<blockquote>\n<p>预览地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96ZmlsZS5qdW42Lm5ldC8=\">https://zfile.jun6.net<i class=\"fa fa-external-link-alt\"></i></span><br>文档地址：<span class=\"exturl\" data-url=\"aHR0cDovL2RvY3Muemhhb2p1bi5pbS96ZmlsZQ==\">http://docs.zhaojun.im/zfile<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<h2 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h2><p>软件特点挺多，但是下面这些是我比较关注的点：</p>\n<ul>\n<li>支持在线浏览文本文件, 视频, 图片, 音乐. (支持 FLV 和 HLS)</li>\n<li>同时挂载多个存储策略</li>\n<li>支持阿里云 OSS, FTP, 华为云 OBS, 本地存储, MINIO, OneDrive 国际/家庭/个人版, OneDrive 世纪互联版, 七牛云 KODO, 腾讯云 COS, 又拍云 USS</li>\n</ul>\n<h2 id=\"建议\"><a href=\"#建议\" class=\"headerlink\" title=\"建议\"></a>建议</h2><p>结合 <code>RaiDrive</code>、<code>ExpanDrive</code>、<code>CloudMounter</code> 这类挂载网盘用，资料多的话 <code>Rclone</code> 也是不错的选择。</p>\n<p>用上述工具将资料传到网盘，然后用 <code>Z-file</code> 来展示。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>zhaojun1998/zfile: 在线云盘、网盘、OneDrive、云存储、私有云、对象存储、h5ai<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3poYW9qdW4xOTk4L3pmaWxl\">https://github.com/zhaojun1998/zfile<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>群晖NAS高级服务 - docker 部署 zfile 在线文件目录 - 思有云 - IOIOX<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaW9pb3guY29tL2FyY2hpdmVzLzkzLmh0bWw=\">https://www.ioiox.com/archives/93.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","网盘","onedrive"]},{"title":"在浏览器里重温DOS游戏","url":"/2020/12/21/%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E9%87%8C%E9%87%8D%E6%B8%A9DOS%E6%B8%B8%E6%88%8F/","content":"<p>偶然找到一个网站， <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb3MuemN6Yy5jei8=\">在线 DOS 游戏<i class=\"fa fa-external-link-alt\"></i></span> ：（<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb3MuemN6Yy5jei8=\">https://dos.zczc.cz/<i class=\"fa fa-external-link-alt\"></i></span>）， 居然有《仙剑奇侠传》、《红色警戒》、《大富翁》、《大航海时代》，看着这些曾经熟悉的画面，虽然精美程度和现在的游戏无法同日而语，但是偶尔放松放松用来怀旧真的是非常不错，目前这个网站已经收集了 1898 款游戏，我相信你一定可以在这里找到你喜欢的游戏。</p>\n<p>有网友把这个游戏网站放到了 <code>docker</code> 中，所以我们可以在群晖上搭建我们自己的 <code>DOS</code> 游戏库了。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在 docker 注册表中搜索 <code>dosgame</code> ，选择第一个 <code>oldiy/dosgame-web-docker</code>，就一个版本，所以双击直接下载。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201209101420.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>直接用了默认的 <code>262</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201209113310.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖:262</code>，即可看到主界面，默认安装了42个游戏​。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201212161211.png\"></p>\n<p>游戏运行非常简单，只要选中自己中意的软件单击就可以了。有些游戏不仅仅有快捷键提示，还贴心的链接了游戏攻略</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201212201038.png\"></p>\n<h1 id=\"下载更多游戏\"><a href=\"#下载更多游戏\" class=\"headerlink\" title=\"下载更多游戏\"></a>下载更多游戏</h1><ul>\n<li>第一步</li>\n</ul>\n<p>在 docker 文件夹中，创建一个新文件夹，并将其命名为 <code>dosgame</code>，查看属性可以得到文件夹的绝对路径</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201212201153.png\"></p>\n<ul>\n<li>第二步</li>\n</ul>\n<p>SSH 登录到群晖，在命令行执行文件拷贝操作。</p>\n<blockquote>\n<p>因为用的默认的命名，所以容器的名称为 <code> oldiy-dosgame-web-docker1</code></p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 从容器内拷贝到群晖</span></span><br><span class=\"line\">docker cp oldiy-dosgame-web-docker1:/app/static/games /volume1/docker/dosgame</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201212201221.png\"></p>\n<p>拷贝完成后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201212201257.png\"></p>\n<p>其中 <code>bin</code> 是游戏目录，<code>img</code> 是游戏封面的目录</p>\n<ul>\n<li>第三步</li>\n</ul>\n<p>打包的镜像中只有42种游戏（目前共1898种游戏，共31.9G，如果需要下载更多游戏的时候，记得创建容器的时候把 /app/static/games 挂载到空间足够的硬盘后再去下载）</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">/docker/dosgame/games</td>\n<td align=\"center\">/app/static/games</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201212201349.png\"></p>\n<ul>\n<li>第四步</li>\n</ul>\n<p>如果你是要定制自己的游戏库，可以打开 <code>all-geme-list.txt</code> 文件，里面有游戏的下载地址</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201212201524.png\"></p>\n<p><code>CONTRIBUTING.md</code> 文件里是对 <code>games.json</code> 的格式说明 </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201212201548.png\"></p>\n<ul>\n<li>第五步</li>\n</ul>\n<p>如果要全部下载，可以在SSH界面按下面的命令操作</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># oldiy-dosgame-web-docker1 是容器的名称</span></span><br><span class=\"line\">docker <span class=\"built_in\">exec</span> -it oldiy-dosgame-web-docker1 sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入容器后操作</span></span><br><span class=\"line\">mv /app/static/games/games.json /app/static/games/42games.json</span><br><span class=\"line\">mv /app/static/games/1898all_games.json /app/static/games/games.json</span><br><span class=\"line\">python /app/static/games/download_data.py</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 等待下载完后重启容器即可</span></span><br><span class=\"line\">docker restart oldiy-dosgame-web-docker1 </span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201212201621.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>一个中文DOS老游戏网站的诞生 - 知乎<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80NzUzMjI2Mw==\">https://zhuanlan.zhihu.com/p/47532263<i class=\"fa fa-external-link-alt\"></i></span> </p>\n<p>在线 DOS 游戏<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb3MuemN6Yy5jei8=\">https://dos.zczc.cz/<i class=\"fa fa-external-link-alt\"></i></span> </p>\n<p>GitHub - rwv/chinese-dos-games-web: 🌐 Source code of <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb3MuemN6Yy5jei8=\">https://dos.zczc.cz<i class=\"fa fa-external-link-alt\"></i></span><br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3J3di9jaGluZXNlLWRvcy1nYW1lcy13ZWI=\">https://github.com/rwv/chinese-dos-games-web<i class=\"fa fa-external-link-alt\"></i></span> </p>\n<p>GitHub - rwv/chinese-dos-games: 🎮 Chinese DOS games in browser.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3J3di9jaGluZXNlLWRvcy1nYW1lcw==\">https://github.com/rwv/chinese-dos-games<i class=\"fa fa-external-link-alt\"></i></span> </p>\n<p>在群晖里玩Dos游戏，没错！使用Docker就可以自建一个web版的dos游戏库！ &gt; oD^Blog<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9vZGNuLnRvcC8yMDE5LzAyLzEyLzI0NzEv\">https://odcn.top/2019/02/12/2471/<i class=\"fa fa-external-link-alt\"></i></span> </p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","游戏"]},{"title":"影视聚合播放器ZY Player","url":"/2020/12/18/%E5%BD%B1%E8%A7%86%E8%81%9A%E5%90%88%E6%92%AD%E6%94%BE%E5%99%A8ZY%20Player/","content":"<p><code>ZY-Player</code> 是一款开源的跨平台视频播放器，它最大的特色是收录了多家在线视频网站的影视资源，免费无广告，即能一键搜索全网的免费影视资源，又能直接在线播放，操作使用非常方便。</p>\n<h1 id=\"视频播放\"><a href=\"#视频播放\" class=\"headerlink\" title=\"视频播放\"></a>视频播放</h1><p>界面非常简洁，①是平台列表，②是工具条，中间是大块的海报墙</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201215092650.png\"></p>\n<p>平台列表随便数了数大概二十多个网站，不过也就豆瓣、芒果、人人看着有点眼熟（但是其实没关系），其他的视频网站都没听过。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201215091251.png\"></p>\n<p>这些资源是可以编辑的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201217092229.png\"></p>\n<p>可以导入、导出和编辑，格式为 <code>JSON</code> 格式</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201217103741.png\"></p>\n<p>按官方文档需满足的格式要求</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>id</td>\n<td>数字小的会在前面显示, 即 id 为1, 则在列表第一个显示. id 不可重复, 必填</td>\n</tr>\n<tr>\n<td>key</td>\n<td>网站的 key , 一般取 网站的域名. key 不可重复. 必填</td>\n</tr>\n<tr>\n<td>name</td>\n<td>网站的中文名称, 必填</td>\n</tr>\n<tr>\n<td>api</td>\n<td>视频源接口, 必填</td>\n</tr>\n<tr>\n<td>download</td>\n<td>视频下载接口, 填写则会复制 MP4 格式的视频下载链接, 不填则复制 M3U8 格式的视频下载链接, 选填</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>注意：</p>\n<ol>\n<li> <code>id</code> 不能重复</li>\n<li> 除了 <code>download</code> 可以留空, 其他均为必填值</li>\n</ol>\n</blockquote>\n<p>检测功能比较有用，可以快速知道这个视频网站是 <code>可用</code> 还是 <code>失效</code>，失效的会自动被剔除掉不再显示在列表中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201217104059.png\"></p>\n<p>随便选一个点进去，会显示影片的详情</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201215093552.png\"></p>\n<p>不仅播放流畅，出乎意料的支持直接拖动滚动条，几乎让我感觉是在播放本地视频，当然网上播放取决于跟服务器之前的网络情况，不同地区、不同时段可能会有不一样的表现。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201215095211.png\"></p>\n<h1 id=\"IPTV\"><a href=\"#IPTV\" class=\"headerlink\" title=\"IPTV\"></a>IPTV</h1><p>除了播放在线视频网站的视频外，<code>ZY-Player</code> 支持播放 <code>IPTV</code> ，同样也支持导入导出，格式采用的是 <code>m3u8</code>，这样之前我们在 <a href=\"https://laosu.ml/2020/11/23/%E7%94%A8Jellyfin+xTeVe%E6%92%AD%E6%94%BE%E5%92%8C%E5%BD%95%E5%88%B6IPTV/\">用Jellyfin+xTeVe播放和录制IPTV</a> 里介绍的工具和源都可以直接使用了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201217103517.png\"></p>\n<p>随便点了几个，似乎官方提供的视频源并不能用，还是需要我们自己找合适的源。</p>\n<h1 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h1><table>\n<thead>\n<tr>\n<th>平台</th>\n<th>链接</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>🖥️ 电脑端 ( Windows &amp; Mac &amp; Linux )</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1bmxvbmd5dS9aWS1QbGF5ZXI=\">ZY Player<i class=\"fa fa-external-link-alt\"></i></span></td>\n</tr>\n<tr>\n<td>📱 手机端 ( Android &amp; IOS )</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1bmxvbmd5dS9aWS1QbGF5ZXItQVBQ\">ZY Player APP<i class=\"fa fa-external-link-alt\"></i></span></td>\n</tr>\n<tr>\n<td>📺 电视端 ( Android &amp; Mac ) ( 进行中 )</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2N1aW9jZWFuL1pZLVBsYXllci1UVg==\">ZY Player TV<i class=\"fa fa-external-link-alt\"></i></span></td>\n</tr>\n<tr>\n<td>🌐 浏览器 ( Web )</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1bmxvbmd5dS9aWS1QbGF5ZXItV2Vi\">ZY Player Web<i class=\"fa fa-external-link-alt\"></i></span></td>\n</tr>\n</tbody></table>\n<p>相对来说，电脑端的功能比较成熟一些，也支持很多比较有特色的功能，比如可以在播放的时候生成二维码，通过微信扫码之后即可直接在微信播放，可以使用第三方播放器、可以更换主题等等。</p>\n<blockquote>\n<p>发稿的时候发现，扫码功能已经被微信停止访问。</p>\n</blockquote>\n<p>项目目前挺活跃的，常常有更新，所以功能还需要大家慢慢摸索。</p>\n<p>最后附上 <code>ZY Player</code> 的下载地址</p>\n<p>电脑端：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1bmxvbmd5dS9aWS1QbGF5ZXIvcmVsZWFzZXMv\">https://github.com/Hunlongyu/ZY-Player/releases/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>手机端：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1bmxvbmd5dS9aWS1QbGF5ZXItQVBQL3JlbGVhc2Vz\">https://github.com/Hunlongyu/ZY-Player-APP/releases<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Hunlongyu/ZY-Player: ▶️ 跨平台桌面端视频资源播放器.简洁无广告.免费高颜值. 🎞<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1bmxvbmd5dS9aWS1QbGF5ZXI=\">https://github.com/Hunlongyu/ZY-Player<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>ZY Player 资源播放器<br>地址：<span class=\"exturl\" data-url=\"aHR0cDovL3p5cGxheWVyLmZ1bi8=\">http://zyplayer.fun/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","工具","多媒体"]},{"title":"安装人人影视追美剧","url":"/2020/12/14/%E5%AE%89%E8%A3%85%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86%E8%BF%BD%E7%BE%8E%E5%89%A7/","content":"<p>人人影视客户端，是一个下载视频的利器，上面的的影视资源很多，而且还带搜索功能，可以直接搜索外部的资源。之前用过 <code>windows</code> 版本，今天我们研究下第三方基于官方 WEB 远程管理版封装的 <code>docker</code> 版本。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在 docker 注册表中搜索 <code>rrshare</code> ，我选择了第六个 <code>dreaminess/rrshareweb</code>，之所以选择这个是因为更新日期比较近吧，因为网上的教程用的镜像已经是2年前的了，这个镜像只有一个版本，所以双击就可以下载。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201122202940.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">/your downloads</td>\n<td align=\"center\">/download</td>\n</tr>\n</tbody></table>\n<p>只需要将上面的 <code>/your downloads</code> 改为你自己的下载路径即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201128204856.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>全部用的默认的端口</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201128203755.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖:3001</code>，就能看到主界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201128204039.png\"></p>\n<p>默认的 <code>解锁密码</code> 是 <code>123456</code>，可以在设置中进行修改；</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201128205057.png\"></p>\n<p><code>存储路径</code> 改为前面设置的 <code>/download</code>，如果不一致可能会出问题。</p>\n<h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p>在左侧 <code>最新更新</code> 里随便下了一个，速度可以达到 4~20MB/s</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201206142422.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201206142521.png\"></p>\n<p>正常速度</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201206142846.png\"></p>\n<p>最大峰值，但是并没有跑满我的带宽（理论上我的带宽应该要到 25MB/s ） </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201211213819.png\"></p>\n<p>当然可以直接通过右上角的下载图标进行添加下载链接，不过支持的协议格式是人人影视自家的格式：yyets开头的。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201129110030.png\"></p>\n<h2 id=\"追剧\"><a href=\"#追剧\" class=\"headerlink\" title=\"追剧\"></a>追剧</h2><p>去官网注册一个人人影视的账号，注册地址：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ycnlzMjAyMC5jb20v\">http://www.rrys2020.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>如果习惯用客户端，可以到下载页面：<span class=\"exturl\" data-url=\"aHR0cDovL2FwcC5ycnlzLnR2Lw==\">http://app.rrys.tv/<i class=\"fa fa-external-link-alt\"></i></span>，挑选适合自己平台的客户端。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201206160217.png\"></p>\n<p>因为 <code>自动下载</code> 默认勾选了 <code>只下载订阅</code>，所以在登录你的人人影视账号之后，所有被收藏的内容，当有最新发布时，都会被客户端自动下载。如果你喜欢美剧，用来追剧是不错的选择。</p>\n<blockquote>\n<p>如果勾选了 <code>全部下载</code>，那么在 <code>最新更新</code> 里出现的都会被自动下载；</p>\n</blockquote>\n<h2 id=\"其他客户端\"><a href=\"#其他客户端\" class=\"headerlink\" title=\"其他客户端\"></a>其他客户端</h2><p>除了前面提到的客户端，还有一个值得关注的基于 Flutter 的客户端，这是个开源项目，其 Android 客户端支持边下边看的功能。</p>\n<p>github地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1ZvdmU3L3l5ZXRzX2ZsdXR0ZXI=\">https://github.com/Vove7/yyets_flutter<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>gitee地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vVm92ZS95eWV0c19mbHV0dGVy\">https://gitee.com/Vove/yyets_flutter<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>YYeTs 人人影视|字幕组官方下载站<br>地址：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ycnlzMjAyMC5jb20v\">http://www.rrys2020.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>人人影视客户端,人人影视PC客户端,人人视频PC客户端,人人影视APP,人人影视下载器,IOS,安卓,WINDOWS,MAC客户端下载|YYeTs人人影视唯一官方客户端下载页<br>地址：<span class=\"exturl\" data-url=\"aHR0cDovL2FwcC5ycnlzLnR2Lw==\">http://app.rrys.tv/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Vove7/yyets_flutter: 人人影视客户端 for Flutter<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1ZvdmU3L3l5ZXRzX2ZsdXR0ZXI=\">https://github.com/Vove7/yyets_flutter<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>NAS 篇九：群晖安装人人影视docker，追剧神器！（据说还可以挖矿）_NAS存储_什么值得买<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2FwejNsbTQ3Lw==\">https://post.smzdm.com/p/apz3lm47/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>群晖NAS | 利用Docker安装使用人人影视客户端 | 喵斯基部落<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubW9ld2FoLmNvbS9hcmNoaXZlcy8xODc0Lmh0bWw=\">https://www.moewah.com/archives/1874.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","下载","Docker"]},{"title":"Heimdall打造个人导航页","url":"/2020/12/11/Heimdall%E6%89%93%E9%80%A0%E4%B8%AA%E4%BA%BA%E5%AF%BC%E8%88%AA%E9%A1%B5/","content":"<p>经常在群晖上搭建各种服务，而每个应用都需要用到自己对应的端口，数量一多就很容易忘记，所以非常需要一个导航网页，之前我们介绍过 <code>webstack</code></p>\n<blockquote>\n<p><a href=\"https://laosu.ml/2020/08/14/%E7%BB%99%E7%BE%A4%E6%99%96%E5%BC%84%E4%B8%AA%E6%BC%82%E4%BA%AE%E7%9A%84%E5%AF%BC%E8%88%AA%E9%A1%B5%EF%BC%88%E4%B8%8A%EF%BC%89/\">给群晖弄个漂亮的导航页（上）</a><br><a href=\"https://laosu.ml/2020/08/16/%E7%BB%99%E7%BE%A4%E6%99%96%E5%BC%84%E4%B8%AA%E6%BC%82%E4%BA%AE%E7%9A%84%E5%AF%BC%E8%88%AA%E9%A1%B5%EF%BC%88%E4%B8%8B%EF%BC%89/\">给群晖弄个漂亮的导航页（下）</a></p>\n</blockquote>\n<p>而今天我们要推荐的是另一个非常漂亮的导航面板 <code>heimdall</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201130223506.png\"></p>\n<p>有没有觉得这图上很多图标看起来很熟悉？因为我们之前已经介绍过其中的一部分了</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在 docker 注册表中搜索 <code>heimdall</code> ，选择第一个 <code>linuxserver/heimdall</code>，版本 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201130231329.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 docker 文件夹中，创建一个新文件夹，并将其命名为 <code>heimdall</code>，然后在 <code>heimdall</code> 文件夹中创建两个个新文件夹：将一个命名为 <code>config</code>，另一个命名为 <code>lang</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201205185355.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">/docker/heimdall/config</td>\n<td align=\"center\">/config</td>\n</tr>\n<tr>\n<td align=\"center\">/docker/heimdall/lang</td>\n<td align=\"center\">/var/www/localhost/heimdall/resources/lang</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201205185627.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>443和80显然是不能用的，找个不冲突的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201201224531.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">TZ</td>\n<td align=\"center\">Asia/Shanghai</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201205181752.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖:4480</code>，就能看到主界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201205183230.png\"></p>\n<h2 id=\"汉化\"><a href=\"#汉化\" class=\"headerlink\" title=\"汉化\"></a>汉化</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201205185825.png\"></p>\n<p>默认的语言中没有中文，所以我决定从 <code>en</code> 目录中把 <code>app.php</code> 拷贝出来</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201205190024.png\"></p>\n<p>我用了比较笨的办法，把 <code>app.php</code>文件中后面的内容逐个拷贝到百度翻译里</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201205195558.png\"></p>\n<p>再把翻译完的内容粘贴回 <code>app.php</code> 文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201205200633.png\"></p>\n<blockquote>\n<p>保存文件的时候，记得编码格式选择UTF-8，为如果不是UTF-8，中文可能会乱码；</p>\n</blockquote>\n<p>然后我把 <code>app.php</code> 文件放到了 <code>de</code> 目录，替换到了里面原来的 <code>app.php</code> 文件，然后再回到主界面，将语言设置为德文</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201205200253.png\"></p>\n<p>设置成功就变成了中文了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201205201256.png\"></p>\n<h2 id=\"添加应用和网站\"><a href=\"#添加应用和网站\" class=\"headerlink\" title=\"添加应用和网站\"></a>添加应用和网站</h2><p>在应用名称中输入 <code>port</code>，就会自动匹配</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201205205351.png\"></p>\n<p>因为 <code>heimdall</code> 默认支持很多常用的应用，所以会自动填写该应用程序的图标，并为图块提供默认颜色。 </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201205201950.png\"></p>\n<p>保存之后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201205203027.png\"></p>\n<p>加了几个之后，在 PC 上的效果</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201206100805.png\"></p>\n<p>在手机上的效果</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201206101125.png\"></p>\n<h2 id=\"添加搜索\"><a href=\"#添加搜索\" class=\"headerlink\" title=\"添加搜索\"></a>添加搜索</h2><p>可以在主界面添加搜索栏</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201206101844.png\"></p>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><p>还支持多用户，换背景等功能，需要大家自己慢慢摸索，最后放一张官网的动图，演示了 <code>heimdall</code> 大部分的功能</p>\n<p><img src=\"https://camo.githubusercontent.com/bcfd4f74c93b25bea7b14eacbafd649206bf754a3d4b596329968f0ee569cf3c/68747470733a2f2f692e696d6775722e636f6d2f4d72433451704e2e676966\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Heimdall Application Dashboard 官网<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZWltZGFsbC5zaXRlLw==\">https://heimdall.site/<i class=\"fa fa-external-link-alt\"></i></span> </p>\n<p>GitHub - linuxserver/Heimdall: An Application dashboard and launcher<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xpbnV4c2VydmVyL0hlaW1kYWxs\">https://github.com/linuxserver/Heimdall<i class=\"fa fa-external-link-alt\"></i></span> </p>\n<p>How to Install Heimdall on Your Synology NAS – Marius Hosting<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXJpdXNob3N0aW5nLmNvbS9ob3ctdG8taW5zdGFsbC1oZWltZGFsbC1vbi15b3VyLXN5bm9sb2d5LW5hcy8=\">https://mariushosting.com/how-to-install-heimdall-on-your-synology-nas/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>私有云存储 篇三：Heimdall 目前国内最难安装也是最好用的NAS主页/导航页_NAS存储_什么值得买<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2E1a3FtbHpsLw==\">https://post.smzdm.com/p/a5kqmlzl/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","导航"]},{"title":"协同工作之电子白板wbo","url":"/2020/12/07/%E5%8D%8F%E5%90%8C%E5%B7%A5%E4%BD%9C%E4%B9%8B%E7%94%B5%E5%AD%90%E7%99%BD%E6%9D%BFwbo/","content":"<p><code>WBO</code> 是一个免费、开源的在线协作白板，它允许多用户同时在一个大型虚拟板上画图。该白板对所有连接的用户实时更新，并且始终可用。它可以用于许多应用场景，包括艺术，娱乐，设计，教学等等。我们可以先在 <span class=\"exturl\" data-url=\"aHR0cDovL3diby5vcGhpci5kZXYv\">演示服务器<i class=\"fa fa-external-link-alt\"></i></span> 上进行体验。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201204212601.png\"></p>\n<p>上图是官方提供的远程协作的示意图之一，也是 <code>WBO</code> 的系统框架图</p>\n<p><code>WBO</code> 使用非常简单，要与某人实时协作绘制图形，只需向他们发送白板的  <code>URL</code> 就可以了 。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在 docker 注册表中搜索 <code>who</code> ，选择第一个 <code>lovasoa/wbo</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201204213154.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>在 <code>filestation</code> 中打开 <code>docker</code> 目录，并新建一个文件夹，将其命名为 <code>wbo</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">/docker/wbo</td>\n<td align=\"center\">/opt/app/server-data</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201204213930.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>将 <code>80</code> 改到了 <code>8480</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201204214055.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖:8480</code>，即可看到主界面，默认支持中文</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201204214240.png\"></p>\n<p><code>WBO</code> 支持三种模式：</p>\n<ul>\n<li>公共白板：属于私人白板的一种，白板名称固定为 <code>anonymous</code></li>\n<li>私人白板：采用的随机命名的方式，每次进入都不同</li>\n<li>自定义名称私人白板：可根据需要填写自己容易记住的名称</li>\n</ul>\n<p>白板界面非常简洁，就左侧一个工具条</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201204214906.png\"></p>\n<p>功能依次为：铅笔、直线、矩形、椭圆、文本、橡皮擦、移动、网格、放大、颜色、粗细、和不透明度</p>\n<p>有些功能单击可以切换，比如铅笔 <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201205155203.png\"> 上单击会切换到修正液 <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201205155322.png\">，而矩形 <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201205155442.png\">  则可以切换为正方形 <img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201205155530.png\"> 等等。</p>\n<p>默认不同的用户会自动分配不同的颜色</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201204222834.png\"></p>\n<p>每个白板的内容都会存储在一个 <code>JSON</code> 格式的文件中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201205160350.png\"></p>\n<p>对于远程沟通来说，个人感觉唯一的缺憾是不支持导入图片，否则就很完美了。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>WBO — 在线协作式白板<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93Ym8ub3BoaXIuZGV2Lw==\">https://wbo.ophir.dev/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>lovasoa/whitebophir: Online collaborative Whiteboard that is simple, free, easy to use and to deploy<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xvdmFzb2Evd2hpdGVib3BoaXI=\">https://github.com/lovasoa/whitebophir<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","文件分享"]},{"title":"协同工作之文件分享filebrowser","url":"/2020/12/04/%E5%8D%8F%E5%90%8C%E5%B7%A5%E4%BD%9C%E4%B9%8B%E6%96%87%E4%BB%B6%E5%88%86%E4%BA%ABfilebrowser/","content":"<p>之前我们分享过 <a href=\"https://laosu.ml/2020/10/01/Snapdrop%E5%AE%9E%E7%8E%B0P2P%E5%B1%80%E5%9F%9F%E7%BD%91%E6%96%87%E4%BB%B6%E4%BA%92%E4%BC%A0/\">《Snapdrop实现P2P局域网文件互传》</a>，<code>Snapdrop</code> 能够在局域网内方便的分享文件，但是异地办公的小伙伴想要分享文件怎么办呢？这就要用到我们今天介绍的主角 <code>File Browser</code> ，先看一张官网的动图。</p>\n<p><img src=\"https://user-images.githubusercontent.com/5447088/50716739-ebd26700-107a-11e9-9817-14230c53efd2.gif\"></p>\n<p><code>File Browser</code> 是一个基于 <code>Web</code> 的文件管理器。它可以使你随时随地的对设备的文件进行基本的管理操作，如：创建、删除、移动、复制等。除了基本文件管理外，还有一些其他的功能。比如支持多用户权限管理（权限可控），每个用户可以拥有自己可以访问的文件和权限。另外还支持文件分享，就像网盘一样，你可以通过它来向你的同事或者朋友分享文件。还能用它来执行一些 <code>Linux</code> 命令，比如你想要在当前目录下克隆一个代码库，就可以用它来执行 <code>git</code> 等命令。</p>\n<p>分享的链接打开是这个样子的，也支持手机上访问和下载。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201203163712.png\"></p>\n<p>之前 <code>File Browser</code> 这个项目曾停止开发，但是现在又有新开发人员接管，并定期维护了。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在 docker 注册表中搜索 <code>filebrowser</code> ，选择第三个 <code>hurlenko/filebrowser</code>，版本 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201203143042.png\"></p>\n<p>在 <code>filestation</code> 中打开 <code>docker</code> 目录，并新建一个文件夹，将其命名为 <code>filebrowser</code>，并在 <code>filebrowser</code> 中新建 <code>config</code> 文件夹</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201203144207.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">/CONFIG_DIR</td>\n<td align=\"center\">/config</td>\n<td align=\"center\">filebrowser.db</td>\n</tr>\n<tr>\n<td align=\"center\">/DATA_DIR</td>\n<td align=\"center\">/data</td>\n<td align=\"center\">Data directory to browse</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201203145322.png\"></p>\n<p>我这里把 <code>DATA_DIR</code> 指向了 netdisk，这是一个挂载盘，其中 <code>airdisk</code> 是 <code>airdisk存宝</code>的存储盘，而 <code>onecloud</code> 是 <code>玩客云</code> 上挂载的下载盘，都是基于 smaba 协议装载的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201203145958.png\"></p>\n<p>现在可以通过 web 来管理 <code>airdisk</code> 和 <code>玩客云</code> 上的文件了，而之前这两个小玩意只能用各种的 app 来上传、下载等等文件操作。</p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>将 <code>8080</code> 改到了 <code>8380</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201203143552.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖:8380</code>，即可看到主界面，账号、密码默认均为 <code>admin</code>，所以务必记得修改。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201203143643.png\"></p>\n<h2 id=\"中文界面\"><a href=\"#中文界面\" class=\"headerlink\" title=\"中文界面\"></a>中文界面</h2><p>登陆成功后，默认是英文界面，需要在设置中找到语言设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201203144807.png\"></p>\n<p>选择 <code>中文(简体)</code>，直接 <code>update</code> 即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201203144855.png\"></p>\n<h2 id=\"快捷键\"><a href=\"#快捷键\" class=\"headerlink\" title=\"快捷键\"></a>快捷键</h2><blockquote>\n</blockquote>\n<p>F1 - 显示该帮助信息<br>F2 - 重命名文件/文件夹<br>DEL - 删除所选的文件/文件夹<br>ESC - 清除已选项或关闭提示信息<br>CTRL + S - 保存文件或下载当前文件夹<br>CTRL + F - 打开搜索框<br>CTRL + Click - 选择多个文件或目录<br>Click - 选择文件或目录<br>Double click - 打开文件/文件夹</p>\n<h2 id=\"文件管理\"><a href=\"#文件管理\" class=\"headerlink\" title=\"文件管理\"></a>文件管理</h2><p>在右上角能看到各种文件管理功能，除上传、下载外，还支持重命名、复制、移动、删除等等；</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201203171710.png\"></p>\n<h2 id=\"文件分享\"><a href=\"#文件分享\" class=\"headerlink\" title=\"文件分享\"></a>文件分享</h2><p>选中一个文件或者一个目录，即可分享，支持设置分享时间控制</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201203153143.png\"></p>\n<h2 id=\"shell\"><a href=\"#shell\" class=\"headerlink\" title=\"shell\"></a>shell</h2><p>进 <code>用户管理</code>，点击用户最右边的编辑（铅笔图标）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201203173857.png\"></p>\n<p>找到 <code>用户命令(shell 命令)</code> 这一项，在下面的输入框中加入你想要在 Shell 中执行的命令，如 clear ls pwd cd rm mkdir 等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201203174044.png\"></p>\n<p>使用这些命令时，只需要点击页面右上角的 <code>激活 Shell</code>，然后输入命令回车就可以执行了。在命令添加之前会执行会显示 <code>Command not allowed</code>，正确添加之后才会返回正确的结果。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201203175147.png\"></p>\n<p>如果你想要更深入的挖掘 <code>File Browser</code> 的功能，可通过浏览官方文档发现更多玩儿法。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>File Browser 官网<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9maWxlYnJvd3Nlci5vcmcv\">https://filebrowser.org/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>filebrowser/filebrowser 代码主页<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ZpbGVicm93c2VyL2ZpbGVicm93c2Vy\">https://github.com/filebrowser/filebrowser<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>原作者：hacdias (Henrique Dias)<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hhY2RpYXM=\">https://github.com/hacdias<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>新开发者：o1egl (Oleg Lobanov)<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL28xZWds\">https://github.com/o1egl<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>小白跟着大佬学群晖-filebrowser实现多磁盘文件共享_软件应用_什么值得买<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2Fxbmxvb3drLw==\">https://post.smzdm.com/p/aqnloowk/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","文件分享"]},{"title":"协同工作之代码分享PrivateBin","url":"/2020/11/30/%E5%8D%8F%E5%90%8C%E5%B7%A5%E4%BD%9C%E4%B9%8B%E4%BB%A3%E7%A0%81%E5%88%86%E4%BA%ABPrivateBin/","content":"<p>代码分享网站挺多，例如： <code>Pastebin</code>、<code>Gist</code>、<code>Pastie</code>等等，今天我们要介绍的 <code>PrivateBin</code> 可以在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcml2YXRlYmluLm5ldC8=\">https://privatebin.net/<i class=\"fa fa-external-link-alt\"></i></span> 先试用。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在 docker 注册表中搜索 <code>privatebin</code> ，选择第二个 <code>jgeusebroek/privatebin</code>，版本 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201115150906.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">docker/privatebin/data</td>\n<td align=\"center\">/privatebin/data</td>\n</tr>\n<tr>\n<td align=\"center\">docker/privatebin/cfg</td>\n<td align=\"center\">/privatebin/cfg</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201115162350.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>默认的 80 端口显然是不能用的，随便找了个 9180 ，只要不和现有的端口冲突即可。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201115162621.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入：<code>http://群晖IP:9180</code>。第一次打开会显示错误</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201115162936.png\"></p>\n<h2 id=\"报错处理\"><a href=\"#报错处理\" class=\"headerlink\" title=\"报错处理\"></a>报错处理</h2><ol>\n<li><p>报错1：”PrivateBin需要在现代浏览器上工作”</p>\n</li>\n<li><p>报错2：“您的浏览器可能需要HTTPS连接才能支持WebCrypto API。 尝试切换到HTTPS 。”</p>\n</li>\n</ol>\n<p>查阅了官网文档，归根到底就是需要 <code>https</code> 协议才行，所以要设置反向代理来实现</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201115164448.png\"></p>\n<p>在浏览器中用刚才设置的域名访问</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201115164054.png\"></p>\n<h2 id=\"粘贴测试\"><a href=\"#粘贴测试\" class=\"headerlink\" title=\"粘贴测试\"></a>粘贴测试</h2><p>选择 <code>markdown</code> 格式，随便写的内容</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201115165412.png\"></p>\n<p>预览</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201115165517.png\"></p>\n<p>关闭 <code>阅后即焚</code>，开启 <code>开放讨论</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201115165629.png\"></p>\n<p><code>送出</code> 之后会生成链接和二维码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201115170044.png\"></p>\n<p>别人在浏览器中打开你分享的链接后就可以看到内容了，因为前面启用了 <code>开放讨论</code>，所以还可以 <code>添加评论</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201115170420.png\"></p>\n<h1 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h1><p>直接启动容器，右键进入「详情」</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201117094207.png\"></p>\n<p>「终端机」 =&gt; 「新增」 =&gt; 「通过命令启动」=&gt; 「请输入一个命令」=&gt; 「sh」</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201117094355.png\"></p>\n<p>通过修改 <code>privatebin/cfg/conf.php</code> 文件来进行功能设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201117094623.png\"></p>\n<h2 id=\"增加附件上传\"><a href=\"#增加附件上传\" class=\"headerlink\" title=\"增加附件上传\"></a>增加附件上传</h2><p>将 <code>fileupload</code> 从 <code>false</code> 改为 <code>true</code></p>\n<p>保存后刷新页面，就会多出 <code>添加一个附件</code> 按钮</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201117095110.png\"></p>\n<h2 id=\"启用图片显示\"><a href=\"#启用图片显示\" class=\"headerlink\" title=\"启用图片显示\"></a>启用图片显示</h2><p>默认设置是不能加载第三方服务器上的图片（官网有具体的说明 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1ByaXZhdGVCaW4vUHJpdmF0ZUJpbi93aWtpL0ZBUSN3aHktZG9lcy1ub3QtaXQtbG9hZC1lbWJlZGRlZC1pbWFnZXM=\">https://github.com/PrivateBin/PrivateBin/wiki/FAQ#why-does-not-it-load-embedded-images<i class=\"fa fa-external-link-alt\"></i></span>）。比如粘贴以下的 <code>markdown</code> 文本</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">## 卷</span></span><br><span class=\"line\"></span><br><span class=\"line\">| 文件夹 | 装载路径 |</span><br><span class=\"line\">| :--: | :--:|</span><br><span class=\"line\">| docker/privatebin/data | /privatebin/data |</span><br><span class=\"line\">| docker/privatebin/cfg | /privatebin/cfg |</span><br><span class=\"line\"></span><br><span class=\"line\">![](https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201115162350.png)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201117090855.png\"></p>\n<p>在预览时只能看到表格而没有图片</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201117090828.png\"></p>\n<ol>\n<li>取消  <code>cspheader</code> 前面的注释</li>\n<li>将 <code>cspheader</code> 中的 <code>img-src &#39;self&#39; data: blob:</code> 改为 <code>img-src &#39;self&#39; data: https:</code></li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201117101652.png\"></p>\n<p>其他的可以根据自己的需要进行调整，比如文件大小，是否要使用MySQL等等，这里就不一一介绍了。</p>\n<h1 id=\"不足之处\"><a href=\"#不足之处\" class=\"headerlink\" title=\"不足之处\"></a>不足之处</h1><ul>\n<li>源代码识别效果不好</li>\n</ul>\n<p>比如这段代码 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21lZXRlY2hvL2phbnVzLWdhdGV3YXkvYmxvYi9tYXN0ZXIvcGx1Z2lucy9sdWEvamFudXMtbG9nZ2VyLmx1YQ==\">https://github.com/meetecho/janus-gateway/blob/master/plugins/lua/janus-logger.lua<i class=\"fa fa-external-link-alt\"></i></span> ，明显受了 <code>&#39;</code> 号的影响</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201117092024.png\"></p>\n<p>将  <code>&#39;</code> 改为中文符号 <code>’</code>，效果立刻不一样了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201117092210.png\"></p>\n<p>不过瑕不掩瑜，免注册、安全性强，用来分享代码片段还是挺不错的。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>PrivateBin 主页<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcml2YXRlYmluLmluZm8v\">https://privatebin.info/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>PrivateBin/PrivateBin: 代码主页<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1ByaXZhdGVCaW4vUHJpdmF0ZUJpbg==\">https://github.com/PrivateBin/PrivateBin<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>CVE-2020-5223 PrivateBin 跨站脚本漏洞 -漏洞情报、漏洞详情、安全漏洞、CVE - 安全客，安全资讯平台<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW5xdWFua2UuY29tL3Z1bC9pZC8xOTI5MTQ5\">https://www.anquanke.com/vul/id/1929149<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","markdown"]},{"title":"协同工作之屏幕共享Screego","url":"/2020/11/27/%E5%8D%8F%E5%90%8C%E5%B7%A5%E4%BD%9C%E4%B9%8B%E5%B1%8F%E5%B9%95%E5%85%B1%E4%BA%ABScreego/","content":"<p><code>Screego</code> 是 <code>GitHub</code> 上一款用 <code>Golang</code> 开发的开源的屏幕共享工具，支持多用户，基于 <code>WebRTC</code> 进行安全传输，并集成了 <code>TURN</code> 服务，可通过 <code>Docker</code> 或二进制文件快速完成安装，拥有更低延迟、更高质量的屏幕共享体验。</p>\n<p>使用起来非常简单，只要通过创建一个房间就可以进行屏幕的共享了，可以选择共享的内容。包括屏幕共享、应用共享和 chrome 标签页共享三种模式。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201121113751.png\"></p>\n<p>将当前房间的链接发送给他人，他人就可以加入进这个房间，从而进行多人的屏幕共享，可以先体验下官方的 Demo 预览：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcHAuc2NyZWVnby5uZXQv\">app.screego.net<i class=\"fa fa-external-link-alt\"></i></span>；</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在 docker 注册表中搜索 <code>screego</code> ，只有一个 <code>screego/server</code>，我选择的版本是 <code>amd64-1.1.1</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201121121812.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>直接用的默认值</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201121142921.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><p>因为我用的 <code>frps</code> ，所以 <code>SCREEGO_EXTERNAL_IP</code> 填的是 <code>vps</code> 的公网 IP 地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201121123326.png\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:5050</code> 就能看到主界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201121143218.png\"></p>\n<p>但是在 <code>http</code> 协议下是不能共享的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201121143523.png\"></p>\n<p>在控制面板中设置反向代理服务，就可以在浏览器中输入刚才反代的域名，通过 <code>https</code> 来访问了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201121143838.png\"></p>\n<p><code>NAT</code> 只能选择 <code>STUN</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201121150015.png\"></p>\n<p><code>TURN</code> 一直是灰的，先不管了，点 <code>CREATE ROOM</code> 进房间</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201121160035.png\"></p>\n<p>点击 <code>Start Presentation</code> 可以自主选择共享的内容</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201121144423.png\"></p>\n<p>把屏幕2上 <code>potplayer</code> 正在播放的电影共享了出来</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201121145732.png\"></p>\n<p><code>Android</code> 手机和另一台 <code>Win10</code> 电脑，都正常接收到了串流。感觉上手机端的延时要小的多</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201121160344.jpg\"></p>\n<p>软件本身不能调整方向，只能利用手机的旋转</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201121162500.jpg\"></p>\n<p>除了用电影测试实时性，也用文档和代码测试了清晰度，自己感受一下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201121163049.jpg\"></p>\n<p>网页还可以放大</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201121163139.jpg\"></p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><ol>\n<li>支持简单的用户验证，但是我们没进行这方面的设置，有兴趣的自己研究下文档</li>\n<li>传输的实时图像没有丢帧，图像清晰、流畅，而且延时非常低</li>\n<li>如果你安装了浏览器插件 <code>WebRTC Control</code>，务必要停用 </li>\n<li>关于 <code>STUN</code> 、 <code>TURN</code> 不是太明白，有空了再研究</li>\n</ol>\n<p>如果能共享音频就可以远程看电影了，期待着 <code>Screego</code> 的不断完善。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>screego 官网<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zY3JlZWdvLm5ldC8jLw==\">https://screego.net/#/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>screego/server: screen sharing for developers<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NjcmVlZ28vc2VydmVy\">https://github.com/screego/server<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Screego：便捷的共享你的屏幕-荒岛<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYWxhLmltLzc0MzAuaHRtbA==\">https://lala.im/7430.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>screego 安装配置教程：一款简单易用的屏幕共享工具 - 简书<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8zYTJjMDE1NzdjN2M=\">https://www.jianshu.com/p/3a2c01577c7c<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>STUN, TURN, ICE介绍-阿里云开发者社区<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuYWxpeXVuLmNvbS9hcnRpY2xlLzI0MzU0MA==\">https://developer.aliyun.com/article/243540<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","WebRTC","屏幕共享"]},{"title":"用Jellyfin+xTeVe播放和录制IPTV","url":"/2020/11/23/%E7%94%A8Jellyfin+xTeVe%E6%92%AD%E6%94%BE%E5%92%8C%E5%BD%95%E5%88%B6IPTV/","content":"<h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><p>首先要有直播源，<code>百度在手，天下我有</code>，但是网上收集到的资源是否可用，一个一个验证起来会比较麻烦，不嫌烦的话可以用 <code>Potplayer</code> 来做播放测试</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201031104046.png\"></p>\n<p>如果资源可用的话，我们很快就会看到画面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201031102624.png\"></p>\n<p>这个办法不仅能验证资源是否可用，还能比较直观的感受到接像速度的快慢，在同一个频道有多个视频源的情况下，可以挑选优质资源，缺点是效率很低，所以我们还需要一个能批量验证的工具。</p>\n<h2 id=\"IPTV-Checker\"><a href=\"#IPTV-Checker\" class=\"headerlink\" title=\"IPTV Checker\"></a>IPTV Checker</h2><p>软件下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hYnNpZGV2LmNvbS8yMDIwLzA2LzAyL2lwdHYtY2hlY2tlci11cGRhdGUtdmVyc2lvbi0yLTUv\">https://absidev.com/2020/06/02/iptv-checker-update-version-2-5/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>虽然是英文版的，但是软件本身很简洁，一看就明白</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201031103058.png\"></p>\n<p>检测完成后会有弹窗提醒</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201031103636.png\"></p>\n<p>选择 <code>Online</code>，然后 <code>Save</code>，就可以另存出一份可用的 m3u8 播放列表文件了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201031103841.png\"></p>\n<h2 id=\"TeleList\"><a href=\"#TeleList\" class=\"headerlink\" title=\"TeleList\"></a>TeleList</h2><p>如果你搜集的资源不是 m3u8 格式，或者需要把 m3u8 转换成其他播放列表格式，你就会需要用到这个工具。</p>\n<p>软件下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ndWloZXQuY29tL3R2bGl2ZS10ZWxlbGlzdC5odG1s\">https://guihet.com/tvlive-telelist.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201031104812.png\"></p>\n<p>到这里，准备工作就差不多了，接下来准备进入正题。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在 <a href=\"https://laosu.ml/2020/05/01/%E5%AE%B6%E5%BA%AD%E5%A4%9A%E5%AA%92%E4%BD%93%E4%B8%AD%E5%BF%83%EF%BC%884%EF%BC%89%EF%BC%9A%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AF%87/\">家庭多媒体中心（4）：流媒体服务器篇</a> 中虽然没有介绍 Jellyfin 的详细安装，但可以看该文后附的参考文档，有手把手的教程，接下来介绍 xTeVe 的安装。</p>\n<p>在 docker 注册表中搜索  <code>xteve</code> ，选择  <code>alturismo/xteve_guide2go</code>，双击下载。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201031110416.png\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">/docker/xteve/_guide2go</td>\n<td align=\"center\">/guide2go</td>\n</tr>\n<tr>\n<td align=\"center\">/docker/xteve/_config</td>\n<td align=\"center\">/config</td>\n</tr>\n<tr>\n<td align=\"center\">/docker/xteve</td>\n<td align=\"center\">/root/.xteve</td>\n</tr>\n<tr>\n<td align=\"center\">/docker/tmp</td>\n<td align=\"center\">/tmp/xteve</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201031181858.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>直接使用了默认的 34400 端口</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201031111106.png\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><p><code>TZ</code> 默认值为 <code>Europe/Berlin</code>，建议修改为 <code>Asia/Shanghai</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201031111359.png\"></p>\n<h1 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h1><h2 id=\"设置xTeVe\"><a href=\"#设置xTeVe\" class=\"headerlink\" title=\"设置xTeVe\"></a>设置xTeVe</h2><p>没有深入的研究，按网上的教程简单设置了一下，浏览器中输入 <code>http://群晖IP:34400/web</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201031113504.png\"></p>\n<p>将我们前面保存好的 m3u8 文件放到 <code>/docker/xteve/_config</code> 中，然后在 <code>Playlist</code> 中新建</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201031113948.png\"></p>\n<p>类型就用默认的 <code>M3U</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201031114211.png\"></p>\n<h2 id=\"设置Jellyfin\"><a href=\"#设置Jellyfin\" class=\"headerlink\" title=\"设置Jellyfin\"></a>设置Jellyfin</h2><p>打开 Jellyfin 后台网页，找到 <code>控制台</code> 进入 -&gt; 左侧左侧菜单栏 <code>电视直播</code> -&gt; 在右侧找到调谐器设备，点击 <code>+</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201031130707.png\"></p>\n<p>为直播源添加节目信息，点击 <code>电视直播</code> 界面 -&gt; 在右侧找到 <code>电视指南数据提供方</code>，点击 <code>+</code>，新增 -&gt; 选择 <code>Xml TV</code> 类型，<code>文件或网址</code> 中填 <code>http://epg.51zmt.top:8000/e.xml</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201031131457.png\"></p>\n<h1 id=\"播放\"><a href=\"#播放\" class=\"headerlink\" title=\"播放\"></a>播放</h1><p>返回 Jellyfin 首页，在 <code>我的媒体</code> 中会新增了一个 <code>电视直播</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201031131750.png\"></p>\n<p>进入<code>电视直播</code> ，第一个是 <code>节目</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201031100508.png\"></p>\n<p><code>指南</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201031100401.png\"></p>\n<p><code>频道</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201031100537.png\"></p>\n<p>随便点开一个</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201031100731.png\"></p>\n<h1 id=\"录制\"><a href=\"#录制\" class=\"headerlink\" title=\"录制\"></a>录制</h1><p>打开 <code>Jelllyfin</code> 的后台，找到左侧菜单栏的 <code>DVR</code>，点击进入，按如下设置。设置完成后，即可开启录像功能。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201031170745.png\"></p>\n<blockquote>\n<p>选 <code>默认录制路径</code> 时，最好用网络盘，否则会录制在容器内部，不好管理。</p>\n</blockquote>\n<p>选中节目的右下角的三个点</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201031162701.png\"></p>\n<p>会看到 <code>播放</code> 和 <code>录制</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201031162053.png\"></p>\n<p>点击 <code>录制</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201031162334.png\"></p>\n<p>在播放界面会有录制的标识</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201031164005.png\"></p>\n<p>录制的文件格式是 <code>ts</code> ，可以直接用 <code>Potplayer</code> 播放</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201031165449.png\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>xTeVe · PMS Proxy<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly94dGV2ZS5kZS8=\">https://xteve.de/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>xteve-project/xTeVe: M3U Proxy for Plex DVR and Emby Live TV<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3h0ZXZlLXByb2plY3QveFRlVmU=\">https://github.com/xteve-project/xTeVe<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>群辉相关 篇一：群辉+jellyfin+IPTV直播录制一体，丢掉IPTV盒子，实现局域网内多路多终端直播_NAS存储_什么值得买<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2EwN29vcTB3Lw==\">https://post.smzdm.com/p/a07ooq0w/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>xTeve jellyfin实现IPTV直播录制在Debian PVE上 | 半亩方塘<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLm9sZHRhb2dlLnNwYWNlLzIwMjAvMDgvMDMveHRldmUtamVsbHlmaW4lRTUlQUUlOUUlRTclOEUlQjBpcHR2JUU3JTlCJUI0JUU2JTkyJUFEJUU1JUJEJTk1JUU1JTg4JUI2JUU1JTlDJUE4ZGViaWFuLXB2ZSVFNCVCOCU4QS8=\">https://blog.oldtaoge.space/2020/08/03/xteve-jellyfin%E5%AE%9E%E7%8E%B0iptv%E7%9B%B4%E6%92%AD%E5%BD%95%E5%88%B6%E5%9C%A8debian-pve%E4%B8%8A/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>使用Jellyfin看电视直播 Jellyfin+xteve播放录制IPTV - 群晖 Synology - 就爱NAS<br>地址：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy45Mm5hcy5jb20vZm9ydW0ucGhwP21vZD12aWV3dGhyZWFkJnRpZD0xNDA=\">http://www.92nas.com/forum.php?mod=viewthread&amp;tid=140<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>点播、直播一条龙，使用Jellyfin打造最强媒体中心（篇一）_服务软件_什么值得买<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2Fkd2xnMHB6Lw==\">https://post.smzdm.com/p/adwlg0pz/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Windows系统利用plex和xteve看免费的iptv直播 - 知乎<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xMTQwMzcwNjE=\">https://zhuanlan.zhihu.com/p/114037061<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>PLEX，目前最佳的IPTV直播软件，没有之一 - 第20页 - 网络设备 - KoolShare - 源于玩家 服务玩家<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9rb29sc2hhcmUuY24vdGhyZWFkLTE0ODUyMi0yMC0xLmh0bWw=\">https://koolshare.cn/thread-148522-20-1.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","多媒体","Jellyfin","IPTV"]},{"title":"即时销毁的邮箱","url":"/2020/11/20/%E5%8D%B3%E6%97%B6%E9%94%80%E6%AF%81%E7%9A%84%E9%82%AE%E7%AE%B1/","content":"<blockquote>\n<p>题图来自：<span class=\"exturl\" data-url=\"aHR0cDovLzExMzEyMy54eXovcG9zdC0yNTIuaHRtbA==\">http://113123.xyz/post-252.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<p>很多时候我们需要注册一个用户才能使用论坛或者网站的完整功能，除了手机外，大多数还是需要一个电子邮箱才能注册，如果使用我们的个人或者工作邮箱，免不了会收到很多广告或者推销等垃圾邮件。</p>\n<p><code>Forsaken Mail</code> 是一个免费、开源的临时邮箱系统，可以供任何人接受邮件，即收即毁，支持自定义邮箱地址前缀，这样我们注册完之后这些临时邮箱就不再需要了，避免了收到收到垃圾短信。</p>\n<p>官网提供的 <code>Online Demo</code> 地址：<span class=\"exturl\" data-url=\"aHR0cDovL2Rpc3Bvc2FibGUuZGhjLWFwcC5jb20v\">http://disposable.dhc-app.com/<i class=\"fa fa-external-link-alt\"></i></span>，感觉好像有了新的界面。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201120211458.png\" alt=\"title\"></p>\n<p>原来是长成下图这样的，而且我们即将安装出来的也是这样的。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/06/1601977552229-1601977552232.png\" alt=\"title\"></p>\n<h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><p>假设你的域名为 <code>abc.ml</code> ，为了接收电子邮件，假设你想邮件地址格式都为 <code>*@abc.ml</code> 的形式，需要添加两条 <code>DNS</code> 记录：</p>\n<ul>\n<li>首先是MX记录：<code>abc.ml MX 10 mx.abc.ml</code> 。这意味着该地址的邮件服务器 <code>*@abc.ml</code> 将为 <code>mx.abc.ml</code> 。</li>\n<li>然后是A记录：<code>mx.abc.ml A 服务器IP</code>。这告诉可以在哪个 <code>IP</code> 地址找到邮件服务器。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/06/1601993790636-1601993790637.png\" alt=\"title\"></p>\n<ul>\n<li>在 <code>frpc.ini</code> 中映射端口25</li>\n</ul>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[smtp:tcp_port]</span></span><br><span class=\"line\"><span class=\"attr\">type</span> = tcp</span><br><span class=\"line\"><span class=\"attr\">local_ip</span> = <span class=\"number\">192.168</span>.<span class=\"number\">0.199</span></span><br><span class=\"line\"><span class=\"attr\">local_port</span> = <span class=\"number\">25</span></span><br><span class=\"line\"><span class=\"attr\">remote_port</span> = <span class=\"number\">25</span></span><br><span class=\"line\"><span class=\"attr\">use_encryption</span> = <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">use_compression</span> = <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在 docker 注册表中搜索 <code>Forsaken</code> ，选择第二个 <code>denghongcai/forsaken-mail</code>，双击下载。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/06/1601984575614-1601984575616.png\" alt=\"title\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口要避免冲突</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/06/1601992691193-1601992691197.png\" alt=\"title\"></p>\n<h1 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h1><p>在浏览器中输入 <code>http://群晖IP:3280</code> ，即可看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/06/1601992886886-1601992886887.png\" alt=\"title\"></p>\n<p>接下来设置反向代理</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/06/1601993101911-1601993101912.png\" alt=\"title\"></p>\n<p>你可以用 <code>smtp服务器测试程序</code> 来验证设置是否正确，地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9teHRvb2xib3guY29tL2RpYWdub3N0aWMuYXNweA==\">https://mxtoolbox.com/diagnostic.aspx<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>你也可以跳过这一步，直接做收发邮件测试</p>\n<p>在邮件主页的右上角指定一个邮箱，比如 <code>test@mail.abc.ml</code>，只要输入 <code>test</code> 即可，后缀是主动生成的。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/06/1601993987235-1601993987237.png\" alt=\"title\"></p>\n<p>发个邮件试试，设置没问题的话，顶多一分钟就可以看到邮件了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/07/1602053456019-1602053456114.png\" alt=\"title\"></p>\n<p>实际上，收件人为 <code>test@mail.abc.ml</code> 和 <code>test@abc.ml</code> 都是可以的</p>\n<ul>\n<li><p>发给 <code>test@abc.ml</code><br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/07/1602055385860-1602055385863.png\" alt=\"title\"></p>\n</li>\n<li><p>发给 <code>test@mail.abc.ml</code><br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/07/1602055402602-1602055402604.png\" alt=\"title\"></p>\n</li>\n</ul>\n<p>当然如果你不想这么混乱，可以不用反代，直接用 <code>frp</code> 把端口 <code>3280</code> 映射出来，这样就可以通过 <code>http(s)://abc.ml:3280</code> 来访问主页，邮箱也会变成 <code>test@abc.ml</code> 了</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[mail]</span></span><br><span class=\"line\"><span class=\"attr\">type</span> = http</span><br><span class=\"line\"><span class=\"attr\">local_ip</span> = <span class=\"number\">192.168</span>.<span class=\"number\">0.199</span></span><br><span class=\"line\"><span class=\"attr\">local_port</span> = <span class=\"number\">3280</span></span><br><span class=\"line\"><span class=\"attr\">remote_port</span> = <span class=\"number\">3280</span> </span><br><span class=\"line\"><span class=\"attr\">custom_domains</span> = www.abc.ml</span><br></pre></td></tr></table></figure>\n\n<p>如果你备案了，而且 <code>80</code> 端口没有被占用，改成 <code>remote_port = 80</code> 就可以通过 <code>http(s)://abc.ml</code> 来访问了这个网页了。</p>\n<p>我习惯了按需启动 docker ，也就是说平时是这样的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201120212123.png\"></p>\n<p>虽然 <code>Forsaken Mail</code> 本身系统占用并不高，但是还是只有在需要用到时才会启动</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201120212218.png\"></p>\n<h1 id=\"福利\"><a href=\"#福利\" class=\"headerlink\" title=\"福利\"></a>福利</h1><p>如果你懒得自己安装，推荐几个可以直接使用的临时邮箱：</p>\n<ol>\n<li><p>Tmail邮箱，可以自己指定邮箱前缀，支持多域名，支持多语言；<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly94a3gubWUv\">https://xkx.me/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>TEMP MAIL邮箱，不能修改邮箱前缀，支持多语言；<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly90ZW1wLW1haWwub3JnL3poLw==\">https://temp-mail.org/zh/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>临时邮箱，也不能修改前缀，但是支持多个域名，中文版<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGluc2hpeW91eGlhbmcubmV0Lw==\">https://www.linshiyouxiang.net/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>Moakt邮箱，可以自己指定邮箱前缀，支持多域名，支持多语言；<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubW9ha3QuY29tL3po\">https://www.moakt.com/zh<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>10分钟邮箱，可以自己指定邮箱前缀，支持多语言；<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly8xMG1pbnV0ZW1haWwubmV0Lz9sYW5nPXpoLWNu\">https://10minutemail.net/?lang=zh-cn<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n</ol>\n<p>排名不分先后，看各人的需求。</p>\n<p>祝周末愉快~</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>denghongcai/forsaken-mail 代码主页<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2Rlbmdob25nY2FpL2ZvcnNha2VuLW1haWw=\">https://github.com/denghongcai/forsaken-mail<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Forsaken-Mail 搭建教程 - 临时邮箱系统（即收即毁） | 喵斯基部落<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubW9ld2FoLmNvbS9hcmNoaXZlcy8xMzI5Lmh0bWw=\">https://www.moewah.com/archives/1329.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>IT男的VPS系列教程 篇五：如何自己搭建一个即时销毁的邮箱？_IT互联网_什么值得买<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wLzcxNzYzNy8=\">https://post.smzdm.com/p/717637/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>使用Forsaken Mail搭建一个临时邮箱系统，即收即毁 - Rat’s Blog<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubW9lcmF0cy5jb20vYXJjaGl2ZXMvNzIzLw==\">https://www.moerats.com/archives/723/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","邮箱","email","临时邮箱"]},{"title":"用Docusaurus生成帮助文档","url":"/2020/11/16/%E7%94%A8Docusaurus%E7%94%9F%E6%88%90%E5%B8%AE%E5%8A%A9%E6%96%87%E6%A1%A3/","content":"<p>因为工作需要，将 <code>Markdown</code> 格式编写的产品说明书转成 <code>html</code> 格式，以便在网页上发布。经同事推荐，使用了 <code>Facebook</code> 开源的一个静态网站生成器 <code>Docusaurus</code> ，从功能上看和 <code>hexo</code> 非常类似，可以根据 <code>Markdown</code> 文件生成静态页面，从而可以直接部署到 <code>Github Pages</code> 之类的纯静态环境。</p>\n<p>第一次用，所以简单记录下安装和配置过程。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>主要参考了官网的说明，<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZG9jdXNhdXJ1cy5jbi9kb2NzLw==\">https://www.docusaurus.cn/docs/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"系统需求\"><a href=\"#系统需求\" class=\"headerlink\" title=\"系统需求\"></a>系统需求</h2><ul>\n<li>Node.js &gt;= 10.15.1 或更高版本（可以通过运行 node -v 命令进行检查）。你可以使用 nvm 在已经安装了 Node.js 的计算机上管理多个版本的 Node.js</li>\n</ul>\n<p>Node.js的官网：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub2RlanMub3JnL2VuL2Rvd25sb2FkLw==\">https://nodejs.org/en/download/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201111145843.png\"></p>\n<p>我的 MacOS 上已经安装过 Node.js，而且版本也符合要求，所以这一步可以略过。</p>\n<ul>\n<li>Yarn &gt;= 1.5 版本（可以通过运行 yarn version 命令进行检查）。Yarn 是 JavaScript 生态中的高性能软件包管理工具，可取代 npm。虽然这不是严格必须的，但强烈推荐。</li>\n</ul>\n<p>Yarn的官网： <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbGFzc2ljLnlhcm5wa2cuY29tL2VuLw==\">https://classic.yarnpkg.com/en/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201111145514.png\"></p>\n<h2 id=\"安装-Yarn\"><a href=\"#安装-Yarn\" class=\"headerlink\" title=\"安装 Yarn\"></a>安装 Yarn</h2><p>MacOS 上可以通过 Homebrew 包管理器安装 Yarn，如果没有安装 Node.js 它也可以安装。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">brew install yarn</span><br></pre></td></tr></table></figure>\n\n<p>但是遇到了错误</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201111151339.png\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">~ % brew install yarn</span><br><span class=\"line\">Error: yarn: undefined method &#96;license&#39; for Formulary::FormulaNamespace0a0774ce52ae9d0d13f74ff9102c9a37::Yarn:Class</span><br><span class=\"line\">~ % </span><br></pre></td></tr></table></figure>\n\n<p>查了半天也没找到原因，只能换脚本安装方式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">curl -o- -L https:&#x2F;&#x2F;yarnpkg.com&#x2F;install.sh | bash</span><br></pre></td></tr></table></figure>\n\n<p>这回非常顺利</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201111153335.png\"></p>\n<h1 id=\"新建项目网站\"><a href=\"#新建项目网站\" class=\"headerlink\" title=\"新建项目网站\"></a>新建项目网站</h1><p>创建一个包含脚手架文件的新目录。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">npx @docusaurus&#x2F;init@next init my-website classic</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201111160255.png\"></p>\n<h2 id=\"项目结构\"><a href=\"#项目结构\" class=\"headerlink\" title=\"项目结构\"></a>项目结构</h2><p>假设您选择了经典模板并将站点命名为 my-website，您将在新目录 <code>my-website/</code> 下看到以下文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">my-website</span><br><span class=\"line\">├── blog</span><br><span class=\"line\">│   ├── 2019-05-28-hola.md</span><br><span class=\"line\">│   ├── 2019-05-29-hello-world.md</span><br><span class=\"line\">│   └── 2020-05-30-welcome.md</span><br><span class=\"line\">├── docs</span><br><span class=\"line\">│   ├── doc1.md</span><br><span class=\"line\">│   ├── doc2.md</span><br><span class=\"line\">│   ├── doc3.md</span><br><span class=\"line\">│   └── mdx.md</span><br><span class=\"line\">├── src</span><br><span class=\"line\">│   ├── css</span><br><span class=\"line\">│   │   └── custom.css</span><br><span class=\"line\">│   └── pages</span><br><span class=\"line\">│       ├── styles.module.css</span><br><span class=\"line\">│       └── index.js</span><br><span class=\"line\">├── static</span><br><span class=\"line\">│   └── img</span><br><span class=\"line\">├── docusaurus.config.js</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── README.md</span><br><span class=\"line\">├── sidebars.js</span><br><span class=\"line\">└── yarn.lock</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201111160615.png\"></p>\n<h2 id=\"运行开发服务器\"><a href=\"#运行开发服务器\" class=\"headerlink\" title=\"运行开发服务器\"></a>运行开发服务器</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">cd my-website</span><br><span class=\"line\">yarn run start</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201111161819.png\"></p>\n<p>默认情况下，浏览器将打开 <span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdDozMDAwLw==\">http://localhost:3000<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201111161138.png\"></p>\n<h2 id=\"导入数据\"><a href=\"#导入数据\" class=\"headerlink\" title=\"导入数据\"></a>导入数据</h2><p>官方要求 <code>markdown</code> 文件的开头是这样的</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">id: greeting</span><br><span class=\"line\">title: Hello</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<p><code>id</code> 是用来配置侧边栏的，<code>title</code> 就是文章标题，会显示在侧边栏。但是我没有写 <code>id</code> 和 <code>title</code>，不知道会有什么影响。</p>\n<p>我的帮助文档是在 <code>obsidian</code> 中完成的，我把 <code>my-website/docs</code> 原有的4个文档删掉，将其全部拷进去，目录结构是这样的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201113172220.png\"></p>\n<h1 id=\"修改\"><a href=\"#修改\" class=\"headerlink\" title=\"修改\"></a>修改</h1><h2 id=\"侧边栏配置\"><a href=\"#侧边栏配置\" class=\"headerlink\" title=\"侧边栏配置\"></a>侧边栏配置</h2><p>根目录下的 <code>sidebars.js</code> 就是侧边栏的配置文件。</p>\n<p>下面是 <code>sidebars.js</code> 默认的内容，这是个两级目录，其中 <code>Docusaurus</code>、<code>Features</code> 是一级目录，4个文档本身是二级目录</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  someSidebar: &#123;</span><br><span class=\"line\">    Docusaurus: [<span class=\"string\">&#x27;doc1&#x27;</span>, <span class=\"string\">&#x27;doc2&#x27;</span>, <span class=\"string\">&#x27;doc3&#x27;</span>],</span><br><span class=\"line\">    Features: [<span class=\"string\">&#x27;mdx&#x27;</span>],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>下面的例子是个三级目录，<code>Guides</code> 是一级目录，label 中的 <code>Docs</code> 是二级目录，items 中 3个文档是三级目录</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  docs: &#123;</span><br><span class=\"line\">    Guides: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        type: <span class=\"string\">&#x27;category&#x27;</span>,</span><br><span class=\"line\">        label: <span class=\"string\">&#x27;Docs&#x27;</span>,</span><br><span class=\"line\">        collapsed: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        items: [<span class=\"string\">&#x27;markdown-features&#x27;</span>, <span class=\"string\">&#x27;sidebar&#x27;</span>, <span class=\"string\">&#x27;versioning&#x27;</span>],</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>我全部用的相对路径</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  在线帮助: &#123;</span><br><span class=\"line\">      网校快速入门: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">              type: <span class=\"string\">&#x27;category&#x27;</span>,</span><br><span class=\"line\">              label: <span class=\"string\">&#x27;基本介绍&#x27;</span>,</span><br><span class=\"line\">              collapsed: <span class=\"literal\">false</span>,</span><br><span class=\"line\">              items: [<span class=\"string\">&#x27;A网校快速入门/01、基本介绍/1.1. 概览&#x27;</span>, <span class=\"string\">&#x27;A网校快速入门/01、基本介绍/1.2. 机构注册&#x27;</span>],</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>关于详细的配置，可以查看 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZG9jdXNhdXJ1cy5jbi9kb2NzL2RvY3MtaW50cm9kdWN0aW9u\">https://www.docusaurus.cn/docs/docs-introduction<i class=\"fa fa-external-link-alt\"></i></span>，才开始用，就不误人子弟了。</p>\n<h2 id=\"站点配置\"><a href=\"#站点配置\" class=\"headerlink\" title=\"站点配置\"></a>站点配置</h2><p>根目录下的 <code>docusaurus.config.js</code> 就是站点配置文件，可以配置站点信息、页头、页脚。</p>\n<p>这部分的配置，可以在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWlzdGVybWEuY29tL2FyY2hpdmVzLzg3Mi8=\">https://www.misterma.com/archives/872/<i class=\"fa fa-external-link-alt\"></i></span> 找到详细的说明。</p>\n<h2 id=\"修改默认的首页\"><a href=\"#修改默认的首页\" class=\"headerlink\" title=\"修改默认的首页\"></a>修改默认的首页</h2><p>首页文件位于 <code>src/pages/index.js</code>，根据自己的需要改吧</p>\n<h1 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h1><ul>\n<li>第一步、修改 <code>docusaurus.config.js</code>文件</li>\n</ul>\n<p>因为我们最终要把帮助文档放在 <code>helpdoc</code>中，（比如：<code>http://pic.vinclass.cn/helpdoc/</code>），而不是根目录中，所以要修改 <code>docusaurus.config.js</code> 文件中的 <code>baseUrl</code></p>\n<p>从</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">baseUrl: <span class=\"string\">&#x27;/&#x27;</span>,</span><br></pre></td></tr></table></figure>\n\n<p>改为</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">baseUrl: <span class=\"string\">&#x27;/helpdoc/&#x27;</span>,</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>这一步只影响预览，也就是只影响 <code>yarn run start</code> 的显示效果； </p>\n</blockquote>\n<ul>\n<li>第二步，修改  <code>package.json</code> 文件</li>\n</ul>\n<p>需要修改相对于当前工作空间的新输出目录的完整路径，这部分的内容在  <code>package.json</code> 文件中，将默认值 <code>build</code></p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">&quot;build&quot;: &quot;docusaurus build&quot;,</span><br></pre></td></tr></table></figure>\n\n<p>改为输出目录为 <code>helpdoc</code></p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">&quot;build&quot;: &quot;docusaurus build --out-dir helpdoc&quot;,</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>这一步影响的是构建后的结果，也就是 <code>yarn run build</code> 的输出结果；</p>\n</blockquote>\n<ul>\n<li>第三步、开始构建</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">yarn run build</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201113152027.png\"></p>\n<ul>\n<li>第四步、预览</li>\n</ul>\n<p>用 <code>python</code> 起个 web 服务，用来预览生产的静态文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">cd my-website&#x2F;</span><br><span class=\"line\">python -m SimpleHTTPServer 80</span><br></pre></td></tr></table></figure>\n\n<p>在浏览器中输入： <code>http://localhost/helpdoc</code>，如果一切正常，就可以发布了。</p>\n<ul>\n<li>第五步、将 <code>helpdoc</code> 发布到网站</li>\n</ul>\n<p>最终的效果，可以在 <span class=\"exturl\" data-url=\"aHR0cDovL3BpYy52aW5jbGFzcy5jbi9oZWxwZG9jLw==\">http://pic.vinclass.cn/helpdoc/<i class=\"fa fa-external-link-alt\"></i></span> 看到。</p>\n<h1 id=\"鸣谢\"><a href=\"#鸣谢\" class=\"headerlink\" title=\"鸣谢\"></a>鸣谢</h1><p>感谢 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NodWRvbmd2aXA=\">初冬<i class=\"fa fa-external-link-alt\"></i></span> 给我推荐了这个工具，让我能够快速完成发布任务，同时也给了我很多好的建议；</p>\n<p>感谢 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2plcm9tZXhpb25n\">Jerome Xiong<i class=\"fa fa-external-link-alt\"></i></span> 不仅帮我解决了编译的输出路径问题，并且帮我把帮助文件发布到了公网；</p>\n<p>再次感谢两位小帅哥~💐💐💐</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>安装 · Docusaurus<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2N1c2F1cnVzLmlvL2RvY3MvemgtQ04vbmV4dC9pbnN0YWxsYXRpb24=\">https://docusaurus.io/docs/zh-CN/next/installation<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>安装 | Docusaurus 中文文档<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZG9jdXNhdXJ1cy5jbi9kb2NzL2luc3RhbGxhdGlvbg==\">https://www.docusaurus.cn/docs/installation<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>使用 Docusaurus 为开源项目生成帮助文档 - Mr. Ma’s Blog<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWlzdGVybWEuY29tL2FyY2hpdmVzLzg3Mi8=\">https://www.misterma.com/archives/872/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>几款制作帮助文档的工具汇总 - 米扑博客<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLm1pbXZwLmNvbS9hcnRpY2xlLzM4NzUyLmh0bWw=\">https://blog.mimvp.com/article/38752.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["Markdown","hexo","静态页面"]},{"title":"searX用处不大的个人聚合搜索引擎","url":"/2020/11/12/searX%E7%94%A8%E5%A4%84%E4%B8%8D%E5%A4%A7%E7%9A%84%E4%B8%AA%E4%BA%BA%E8%81%9A%E5%90%88%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/","content":"<p>什么是元搜索引擎？</p>\n<blockquote>\n<p>元搜索引擎又称多搜索引擎，通过一个统一的用户界面帮助用户在多个搜索引擎中选择和利用合适的（甚至是同时利用若干个）搜索引擎来实现检索操作，是对分布于网络的多种检索工具的全局控制机制。（搜索引擎分类：全文搜索引擎、目录索引、元搜索引擎）【百度百科】</p>\n</blockquote>\n<p>搭建个人聚合搜索的目的无非是要解决几个问题：隐私保护、匿名访问、无广告。</p>\n<p>在我的脑海里首先蹦出来的是 <code>Whoogle</code> 和 <code>searX</code>，前者号称获取 Google 搜索结果，但不包含任何广告，javascript，AMP链接，cookie 或 IP 地址跟踪。但因为众所周知的原因，在国内用不起来。不过你可以到 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93aG9vZ2xlLnNkZi5vcmcv\">https://whoogle.sdf.org/<i class=\"fa fa-external-link-alt\"></i></span> 感受一下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/09/1602222680730-1602222680732.png\" alt=\"title\"></p>\n<p>后者号称可展现 Google/Bing 等70多种搜索网站的搜索结果，但是据用过的人说对中文支持并不好。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/09/1602220821982-1602220822018.png\" alt=\"title\"></p>\n<p>你可以到 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWFyeC5sYXF1YWRyYXR1cmUubmV0Lw==\">https://searx.laquadrature.net/<i class=\"fa fa-external-link-alt\"></i></span>  感受一下。个人感觉还行，只是遇到被Q的引擎还是会报错。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/09/1602221843638-1602221843647.png\" alt=\"title\"></p>\n<p>当然 <code>元搜索引擎</code> 肯定不止上面提到的两个，比如基于 <code>searX</code> 二次开发的秘迹搜索</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/09/1602220764047-1602220764054.png\" alt=\"title\"></p>\n<p>你可以到  <span class=\"exturl\" data-url=\"aHR0cHM6Ly9taWppc291LmNvbS8=\">https://mijisou.com/<i class=\"fa fa-external-link-alt\"></i></span> 感受一下。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/09/1602222970226-1602222970232.png\" alt=\"title\"></p>\n<p>今天我们要安装的是 <code>searX</code>，来近距离感受一下元搜索引擎。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在 docker 注册表中搜索 <code>searx</code> ，选择第一个 <code>wonderfall/searx</code>，版本 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/09/1602230972671-1602230972681.png\" alt=\"title\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/09/1602250865656-1602250865707.png\" alt=\"title\"></p>\n<h1 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h1><p>在浏览器中输入 <code>http://群晖IP:8888</code> 就可以看到主界面，但是第一次运行会有错误提示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/09/1602251214312-1602251214317.png\" alt=\"title\"></p>\n<p>需要编辑右上角的 <code>首选项</code>，我们会看到搜索引擎，看起来都是英文的，而且我们能辨识的也就 <code>google</code>、<code>bing</code>、<code>yahoo</code>，其他的确实请原谅我的孤陋寡闻</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/09/1602252523834-1602252523836.png\" alt=\"title\"></p>\n<p>感觉什么也不用改，返回主界面就不再报错了，但是搜索结果要不就是找不到任何东西</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/09/1602253948316-1602253948318.png\" alt=\"title\"></p>\n<p>要不就是超时报错（首选项采用默认值）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/09/1602254045435-1602254045437.png\" alt=\"title\"></p>\n<p>搜个视频，关键词 <code>小丑</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/09/1602258945951-1602258945954.png\" alt=\"title\"></p>\n<p>搜个图片，关键词 <code>印度</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/09/1602259138872-1602259138875.png\" alt=\"title\"></p>\n<p>所以感觉也不是不能用，只是在国内并不好用吧。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>searx/searx: 开源代码主页<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NlYXJ4L3NlYXJ4\">https://github.com/searx/searx<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Welcome to searx — Searx Documentation (Searx-0.17.0.tex)<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWFyeC5naXRodWIuaW8vc2Vhcngv\">https://searx.github.io/searx/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>宝塔面板Docker安装Searx – 搭建一个尊重隐私的私人聚合搜索平台 - 大鸟博客<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZGFuaWFvLm9yZy82NTE1Lmh0bWw=\">https://www.daniao.org/6515.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","搜索引擎"]},{"title":"搭建你自己的RSS订阅服务器","url":"/2020/11/08/%E6%90%AD%E5%BB%BA%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84RSS%E8%AE%A2%E9%98%85%E6%9C%8D%E5%8A%A1%E5%99%A8/","content":"<p>自2013年 <code>Google Reader</code> 关闭以来，一直都在用 <code>feedly</code> 作为新闻聚合平台，但是很多功能都是要收费的，比如保存，分享，关闭广告等等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/06/1601968934729-1601968934731.png\" alt=\"price\"></p>\n<p>当然可以通过一些其他的服务来曲线救国，例如通过 <code>feedly</code> 自带的 <code>Read Later</code> 功能来触发 <code>IFTTT</code>，从而实现保存到 <code>EverNote</code> 或者 <code>WizNote</code>，但现在 <code>IFTTT</code> 开始收费了，想要不受制约，还是自己搭建服务吧。</p>\n<p>今天我们要安装的是 <code>Tiny Tiny RSS</code>，简称为 tt-rss 。</p>\n<p>什么是 Tiny Tiny RSS?</p>\n<blockquote>\n<p>Tiny Tiny RSS 是免费的 RSS feed 阅读器，是一个开源 RSS / Atom 新闻提要阅读器和汇总器。它是一个 Web 应用程序，必须安装在 Web 服务器上。在Google 宣布将淘汰 Google Reader 之后，Tiny Tiny RSS 在主要的技术博客和在线杂志中被广泛评论为可能的替代品。</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在 docker 注册表中搜索 <code>tt-rss</code> ，选择第一个 <code>lunik1/tt-rss</code>，双击下载。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/05/1601908872300-1601908872301.png\" alt=\"title\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/05/1601909195672-1601909195673.png\" alt=\"title\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">/docker/ttrss</td>\n<td align=\"center\">/config</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/05/1601909148469-1601909148471.png\" alt=\"title\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">SELF_URL_PATH</td>\n<td align=\"center\">TTRSS 实例地址</td>\n</tr>\n<tr>\n<td align=\"center\">DB_TYPE</td>\n<td align=\"center\">数据库类型</td>\n</tr>\n<tr>\n<td align=\"center\">DB_HOST</td>\n<td align=\"center\">数据库地址</td>\n</tr>\n<tr>\n<td align=\"center\">DB_PORT</td>\n<td align=\"center\">数据库端口</td>\n</tr>\n<tr>\n<td align=\"center\">DB_NAME</td>\n<td align=\"center\">数据库名称</td>\n</tr>\n<tr>\n<td align=\"center\">DB_USER</td>\n<td align=\"center\">数据库用户名</td>\n</tr>\n<tr>\n<td align=\"center\">DB_PASS</td>\n<td align=\"center\">数据库密码</td>\n</tr>\n</tbody></table>\n<p>也可以先不配置，直接在网页上配置，这里我们选择先不配</p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:1818</code> ，可以看到设置界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/05/1601909362597-1601909362598.png\" alt=\"title\"></p>\n<p>依次进行设置，数据库我选择了 <code>MySQL</code>，因为在群晖上已经安装了 <code>MariaDB 5</code>，并已经建好了用户和数据库，按官方的说明建议使用 <code>PostgreSQL</code></p>\n<p>设置完成后，点最下面的 <code>test configuration</code> 按钮，如果测试通过，会在后面显示 <code>Initialize database</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/05/1601909777569-1601909777572.png\" alt=\"title\"></p>\n<p>初始化完成后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/05/1601909832395-1601909832397.png\" alt=\"title\"></p>\n<p>点击 <code>Save configuration</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/05/1601909910600-1601909910602.png\" alt=\"title\"></p>\n<p>回到 <code>http://群晖IP:1818</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/05/1601910004356-1601910004358.png\" alt=\"title\"></p>\n<p>默认的用户：<code>admin</code> ，密码：<code>password</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/05/1601910433184-1601910433185.png\" alt=\"title\"></p>\n<p>登录成功后，系统会提示修改密码，确认后会跳转到偏好设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/05/1601910507114-1601910507116.png\" alt=\"title\"></p>\n<p>转到 <code>用户</code> ，点击 <code>admin</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/05/1601910591592-1601910591593.png\" alt=\"title\"></p>\n<p>改完密码需要重新登录，登录成功之后会看到默认订阅的 <code>https://tt-rss.org/forum/rss.php</code> 的信息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/05/1601910729704-1601910729706.png\" alt=\"title\"></p>\n<p>我直接给取消了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/06/1601954004811-1601954004814.png\" alt=\"title\"></p>\n<p>设置 <code>订阅信息源</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/05/1601912083518-1601912083521.png\" alt=\"title\"></p>\n<p>订阅成功后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/05/1601912138965-1601912138967.png\" alt=\"title\"></p>\n<p>如果要映射到公网，记得修改环境变量 <code>SELF_URL_PATH</code>，否则会报错</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/06/1601953779904-1601953779979.png\" alt=\"title\"></p>\n<h1 id=\"插件\"><a href=\"#插件\" class=\"headerlink\" title=\"插件\"></a>插件</h1><p>阅读全文</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/06/1601955331176-1601955331178.png\" alt=\"title\"></p>\n<p>启动插件后在后台全局设置中勾选为 <code>核心代码和其他插件提供全文服务</code>，然后对于需要全文输出的信息源勾选 <code>inline 文章内容</code>。没有勾选该功能的信息源也可以使用 <code>手动切换</code> 全文输出，如果需要在移动端直接查看全文的必须勾选 <code>inline 文章内容</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/06/1601955507165-1601955507168.png\" alt=\"title\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/06/1601956027764-1601956027767.png\" alt=\"title\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/06/1601955796556-1601955796557.png\" alt=\"title\"></p>\n<h1 id=\"Android-客户端\"><a href=\"#Android-客户端\" class=\"headerlink\" title=\"Android 客户端\"></a>Android 客户端</h1><p>如果你不能访问到 <code>Google Play</code>，那就只能到 <code>F-Droid</code> 下载了， <span class=\"exturl\" data-url=\"aHR0cHM6Ly9mLWRyb2lkLm9yZy96aF9IYW5zL3BhY2thZ2VzL29yZy50dHJzc3JlYWRlci8=\">https://f-droid.org/zh_Hans/packages/org.ttrssreader/<i class=\"fa fa-external-link-alt\"></i></span> </p>\n<p>先要在后台 <code>启用API</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/06/1601963427559-1601963427561.png\" alt=\"title\"></p>\n<p>否则会一直显示无法连接服务器</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/06/1601964313360-1601964313360.png\" alt=\"title\"></p>\n<p>密码可以用主密码，也可以为app单独生成</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/06/1601964258484-1601964258487.png\" alt=\"title\"></p>\n<p>登录成功后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/06/1601964470467-1601964470469.png\" alt=\"title\"></p>\n<p>tt-rss 支持插件，也支持主题，接下来就是持续的优化了。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>framasoft/ttrss: A PHP and Ajax feed reader<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ZyYW1hc29mdC90dHJzcw==\">https://github.com/framasoft/ttrss<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>linuxserver/docker-tt-rss<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xpbnV4c2VydmVyL2RvY2tlci10dC1yc3M=\">https://github.com/linuxserver/docker-tt-rss<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Tiny Tiny RSS – Wiki<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly90dC1yc3Mub3JnL3dpa2kucGhw\">https://tt-rss.org/wiki.php<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Docker - Tiny Tiny RSS (TT-RSS) - Free and open source web-based news feed (RSS/Atom) reader and aggregator<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc3lub2ZvcnVtLmNvbS9yZXNvdXJjZXMvdGlueS10aW55LXJzcy10dC1yc3MtZnJlZS1hbmQtb3Blbi1zb3VyY2Utd2ViLWJhc2VkLW5ld3MtZmVlZC1yc3MtYXRvbS1yZWFkZXItYW5kLWFnZ3JlZ2F0b3IuMzMv\">https://www.synoforum.com/resources/tiny-tiny-rss-tt-rss-free-and-open-source-web-based-news-feed-rss-atom-reader-and-aggregator.33/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","笔记","IFTTT","RSS"]},{"title":"外网访问群晖的新方案Tailscale","url":"/2020/11/04/%E5%A4%96%E7%BD%91%E8%AE%BF%E9%97%AE%E7%BE%A4%E6%99%96%E7%9A%84%E6%96%B0%E6%96%B9%E6%A1%88Tailscale/","content":"<p><strong>WireGuard 是什么？</strong></p>\n<blockquote>\n<p>WireGuard 是由 Jason A. Donenfeld 开发的开源 VPN 程序及协议，基于 Linux 核心实现，利用 Curve25519 进行秘钥交换，ChaCha20 用于加密，Poly1305 用于资料认证，BLAKE2 用于杂凑函数运算，支持 IPv4 和 IPv6 的第3层。</p>\n</blockquote>\n<p><strong>零信任网络是什么？</strong></p>\n<blockquote>\n<p>“零信任”是一个安全术语也是一个安全概念，它将网络防御的边界缩小到单个或更小的资源组，其中心思想是企业不应自动信任内部或外部的任何人/事/物、不应该根据物理或网络位置对系统授予完全可信的权限，应在授权前对任何试图接入企业系统的人/事/物进行验证、对数据资源的访问只有当资源需要的时候才授予。简单来说，“零信任”的策略就是不相信任何人。除非网络明确知道接入者的身份，否则任谁都无法接入到网络。</p>\n</blockquote>\n<p><strong>Tailscale 是什么？</strong></p>\n<blockquote>\n<p>Tailscale 是基于 WireGuard 的网状 VPN 替代产品，可将您的计算机，数据库和服务安全地连接在一起，而无需任何代理。</p>\n</blockquote>\n<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>Tailscale 是一家自称为新型虚拟隐私网络 (VPN) 的初创公司，成立于2019年，是由一群前谷歌软件工程师创立的初创公司，该公司完全是远程办公，其产品 Tailscale 正式推出之际，正值许多公司不得不适应远程办公。</p>\n<p>其技术基于谷歌的零信任 BeyondCorp 架构，并使用 WireGuard 协议构建，使用 OAuth2（SSO），OpenID 或 SAML 进行身份验证，并在客户端和服务器之间创建点对点的完全加密连接。</p>\n<p>传统的 VPN 技术使用预共享密钥（PSK）对用户进行身份验证。而 Tailscale 的技术不需要硬件或基础设施，对协调服务器的身份验证使用的是已经存在的服务，无论是组织自己的 OAuth2 服务还是 Google Apps 或 Office 365 之类的第三方服务。这种与现有身份提供商的紧密集成意味着不需要维护单独的授权用户列表，而且新员工和新员工团队成员或添加双因素身份验证比传统的 VPN 产品更简单。</p>\n<p>目前主要的 Mesh VPN 解决方案：</p>\n<ol>\n<li>Tinc</li>\n<li>Zerotier</li>\n<li>Nebula</li>\n<li>Tailscale</li>\n</ol>\n<p>之前我用过 zerotier ，感觉 Tailscale 设置上比 zerotier 更简单一些，免费版和 zerotier 一样，支持 100 台设备。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026212105.png\"></p>\n<p>但是似乎免费版只能用 Google 账号和 Microsoft 账号登录。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026212431.png\"></p>\n<h1 id=\"客户端\"><a href=\"#客户端\" class=\"headerlink\" title=\"客户端\"></a>客户端</h1><p>Tailscale 是一个开源项目，客户端基本上覆盖了主流平台</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026143142.png\"></p>\n<p>但对于我们来说，最主要的是要在外网访问家里的群晖，所以首先需要解决的是有没有能在群晖上运行的版本。</p>\n<h2 id=\"群晖套件\"><a href=\"#群晖套件\" class=\"headerlink\" title=\"群晖套件\"></a>群晖套件</h2><p>官方没有相应的版本，所以只能使用第三方的套件 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25pcmV2L3N5bm9sb2d5LXRhaWxzY2FsZQ==\">https://github.com/nirev/synology-tailscale<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>如果在这张报表里找不到您的设备</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026163004.png\"></p>\n<p>可以在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc3lub2xvZ3kuY29tL3poLWNuL2tub3dsZWRnZWJhc2UvRFNNL3R1dG9yaWFsL0NvbXBhdGliaWxpdHlfUGVyaXBoZXJhbHMvV2hhdF9raW5kX29mX0NQVV9kb2VzX215X05BU19oYXZl\">https://www.synology.com/zh-cn/knowledgebase/DSM/tutorial/Compatibility_Peripherals/What_kind_of_CPU_does_my_NAS_have<i class=\"fa fa-external-link-alt\"></i></span> 查找对应的 CPU 类型。</p>\n<p>比如 DS3617xs</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026163359.png\"></p>\n<p>其实也不用这么麻烦，只要搞清楚自己的 CPU 是 x86 还是 arm ，是 32 位还是 64 位就可以了，反正就4个版本，直接下载了 x86 的 64位 的版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026175735.png\"></p>\n<p>如果下错了版本，会显示不兼容，比如我安装 32 位的版本</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026165701.png\"></p>\n<p>手动安装</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026175931.png\"></p>\n<p>再次检查</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026180435.png\"></p>\n<p>安装完成后，需要SSH登录到群晖。执行 <code>sudo tailscale up</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026200335.png\"></p>\n<p>复制红框内的内容，在浏览器中打开，用你的账号登录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026200437.png\"></p>\n<h2 id=\"其他nas\"><a href=\"#其他nas\" class=\"headerlink\" title=\"其他nas\"></a>其他nas</h2><p>可以到这里看看 <span class=\"exturl\" data-url=\"aHR0cHM6Ly90YWlsc2NhbGUuY29tL2tiLzEwNzQvY29ubmVjdC10by15b3VyLW5hcw==\">https://tailscale.com/kb/1074/connect-to-your-nas<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"MacOS\"><a href=\"#MacOS\" class=\"headerlink\" title=\"MacOS\"></a>MacOS</h2><p>直接在 APP Store 里搜索 <code>Tailscale</code> ，支持 MacOS 10.13 及之后的系统版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026144539.png\"></p>\n<p>运行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026144637.png\"></p>\n<p>允许添加 VPN 配置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026144727.png\"></p>\n<h2 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h2><p>需要说明的是只支持 windows 7 之后的系统版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026154958.png\"></p>\n<p>安装虚拟网卡的驱动</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026155124.png\"></p>\n<p>如果安装了360，需要同意而不是阻止</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026155347.png\"></p>\n<p>点 <code>Log in</code> 跳转到浏览器中登录验证</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201103195734.png\"></p>\n<h2 id=\"Android\"><a href=\"#Android\" class=\"headerlink\" title=\"Android\"></a>Android</h2><p>Android 客户端的下载比较费周折，官方只提供了 Google Play 这里就不细说了。</p>\n<p>有一点需要说明，群晖上使用 <code>1.1.335</code> 版本时，我的 Android 手机怎么也连不上，但是群晖升级到 <code>1.1.540</code> 版本后，Android 就能正常访问群晖了。</p>\n<blockquote>\n<p>目前 <code>1.1.540</code> 的版本还是 unstable 的，如果没遇到问题不建议安装这个版本。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25pcmV2L3N5bm9sb2d5LXRhaWxzY2FsZS9wdWxsLzMy\">https://github.com/nirev/synology-tailscale/pull/32<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<h2 id=\"Centos\"><a href=\"#Centos\" class=\"headerlink\" title=\"Centos\"></a>Centos</h2><p>尝试在 vps 上安装的</p>\n<ol>\n<li>安装 Yum repository manager</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo yum install yum-utils</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201103191018.png\"></p>\n<ol start=\"2\">\n<li>添加 Tailscale 库并安装</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo yum-config-manager --add-repo https:&#x2F;&#x2F;pkgs.tailscale.com&#x2F;stable&#x2F;centos&#x2F;7&#x2F;tailscale.repo</span><br><span class=\"line\"></span><br><span class=\"line\">sudo yum install tailscale</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201103191139.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201103191252.png\"></p>\n<ol start=\"3\">\n<li>使用 <code>systemctl</code> 启用和启动服务</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo systemctl enable --now tailscaled</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201103191539.png\"></p>\n<ol start=\"4\">\n<li>验证登录到你的 Tailscale 网络</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo tailscale up</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201104195711.png\"></p>\n<p>复制红框内的内容，在浏览器中打开，用你的账号登录。</p>\n<ol start=\"5\">\n<li><p>进入 <code>admin console</code> 可以看到新加入的设备IP</p>\n</li>\n<li><p>获取您的 Tailscale IP 地址，当然在后台也能看到</p>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ip addr show tailscale0</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201103191935.png\"></p>\n<ol start=\"7\">\n<li>为了避免失效总需要验证，建议开启 <code>Disable Key Expiry</code></li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201103192932.png\"></p>\n<blockquote>\n<p>对于验证不方便的群晖、Linux 和 Android 手机，我都启用了 <code>Disable Key Expiry</code>。</p>\n</blockquote>\n<h1 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h1><p>所有设备的 IP，可以在 <code>Admin console</code> 中查到</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201027144501.png\"></p>\n<p>比如在设备列表中的群晖主机</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026200613.png\"></p>\n<blockquote>\n<p>默认情况下，每个设备都会收到 100.xyz 范围内的 IP 地址。该 IP 地址是根据设备和授权凭证自动分配的，无法手动更改。这个是和 zerotier 不一样的。</p>\n</blockquote>\n<p>从外网 ping 群晖在 Tailscale 中的 IP，偶有丢包</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201027090003.png\"></p>\n<p>有时也会存在连续性的丢包</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201030090805.png\"></p>\n<p>利用之前安装的测速软件 <code>Speedtest</code> 来测个速度</p>\n<blockquote>\n<p>测速服务器搭建请参考 『<a href=\"https://laosu.ml/2020/10/27/%E8%87%AA%E5%BB%BASpeedtest%E7%BD%91%E7%BB%9C%E6%B5%8B%E9%80%9F%E6%9C%8D%E5%8A%A1%E5%99%A8/\">自建Speedtest网络测速服务器</a>』</p>\n</blockquote>\n<ul>\n<li>输入 frp 映射的域名，测速结果</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201027085727.png\"></p>\n<ul>\n<li>输入后台获取到的 Tailscale 的 IP 地址 + 端口，测速结果</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201027085533.png\"></p>\n<p>smb 协议映射到群晖的共享目录，然后拷贝</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201028131938.png\"></p>\n<p>如果这样不够直观的话，用网页下载方式</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201104200215.png\"></p>\n<p>和 <code>Speedtest</code> 的测试结果非常接近，显然比通过 frp 服务做的内网穿透强多了，虽然腾讯的 vps 也跑满了带宽，但是毕竟只是 1Mb/s 的小水管， 差了 30 倍左右，当然这不是 frp 的问题，是因为做 frps 的 vps 带宽太小了，如果要提升到 3Mb/s ，每年要多花300多，要想达到 30Mb/s，一年估计起码多出1~2万。</p>\n<p>当然效果还需要持续观察，毕竟 zerotier 偶尔也是可以打洞成功的，只是 zerotier 大部分时间需要走服务器中转，即便搭建了 moon 服务器也是一样，这也是我一直关注新的替代产品的主要原因。</p>\n<p>我个人觉得 Mesh VPN 比 frp、nps 等内网穿透软件更简单，也更安全。因为我是给自己用，又不是对外提供服务，唯一的不便也就是要安装客户端，但节省了公网架设服务器的费用和带宽费用，还是很值得尝试的。</p>\n<p>因为群晖的 Tailscale 版本暂时还不支持子网，所以这次我们暂时没有讨论其他不能安装 Tailscale 客户端的设备。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Tailscale 主页<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly90YWlsc2NhbGUuY29tLw==\">https://tailscale.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Tailscale 代码<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RhaWxzY2FsZQ==\">https://github.com/tailscale<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>nirev/synology-tailscale: 群晖版代码<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25pcmV2L3N5bm9sb2d5LXRhaWxzY2FsZQ==\">https://github.com/nirev/synology-tailscale<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>How Tailscale works · Tailscale Blog<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly90YWlsc2NhbGUuY29tL2Jsb2cvaG93LXRhaWxzY2FsZS13b3Jrcy8=\">https://tailscale.com/blog/how-tailscale-works/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Rethinking VPN: Tailscale startup packages Wireguard with network security • The Register<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudGhlcmVnaXN0ZXIuY29tLzIwMjAvMDQvMDIvcmV0aGlua2luZ192cG5fdGFpbHNjYWxlX3N0YXJ0dXBfcGFja2FnZXMv\">https://www.theregister.com/2020/04/02/rethinking_vpn_tailscale_startup_packages/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Digging unconventional and mesh VPNs<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly91bmRpc2Nsb3NlZC5ibG9nL21lc2gtdnBuLw==\">https://undisclosed.blog/mesh-vpn/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>A programmer’s note | Tailscale：不一样的VPN<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnNodWtlYmV0YS5jb20vMjAyMC8wNS8xNS90YWlsc2NhbGUlRUYlQkMlOUElRTQlQjglOEQlRTQlQjglODAlRTYlQTAlQjclRTclOUElODR2cG4v\">https://blog.shukebeta.com/2020/05/15/tailscale%EF%BC%9A%E4%B8%8D%E4%B8%80%E6%A0%B7%E7%9A%84vpn/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>TAILSCALE种子轮融资300万加元 – North America Incubator<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubmFpbmN1YmF0b3IuY29tLzIzMDQuaHRtbA==\">https://www.naincubator.com/2304.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","网络","vpn","内网穿透"]},{"title":"给群晖安装firefox浏览器","url":"/2020/11/01/%E7%BB%99%E7%BE%A4%E6%99%96%E5%AE%89%E8%A3%85firefox%E6%B5%8F%E8%A7%88%E5%99%A8/","content":"<p>当你因为需要访问家里的路由器、监控时，原来我用的办法：</p>\n<ul>\n<li>最早是用 <code>TeamViewer</code> 、<code>向日葵</code> 、<code>千千桌面</code> 、<code>ToDesk</code> 、<code>Guacamole</code> 这类远程桌面软件来登录到家里的台式机，再通过台式机去访问路由器，但是台式机不可能一直开着，所以还需要远程开机或者远程开关，总之越搞越复杂</li>\n<li>后来是将路由器通过 <code>frp</code> 映射到公网，虽然方便但是安全性堪忧</li>\n</ul>\n<p>正因为有了上述不便，所以才有了这篇文章，毕竟群晖本身是 <code>7*24</code> 小时开机的，所以在群晖上安装 <code>web</code> 浏览器个人感觉才是最正确的姿势。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在 docker 注册表中搜索 <code>firefox</code> ，选择第一个 <code>jlesage/firefox</code>，版本 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/04/1601815201326-1601815201327.png\" alt=\"title\"></p>\n<h2 id=\"常规设置\"><a href=\"#常规设置\" class=\"headerlink\" title=\"常规设置\"></a>常规设置</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/04/1601817819191-1601817819195.png\" alt=\"title\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n<th align=\"center\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">/docker/firefox/config</td>\n<td align=\"center\">/config</td>\n<td align=\"center\">配置文件和下载文件的目录</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201027203527.png\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/04/1601817265176-1601817265177.png\" alt=\"title\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n<th align=\"center\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">ENABLE_CJK_FONT</td>\n<td align=\"center\">1</td>\n<td align=\"center\">支持中、日、韩文</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201027203440.png\"></p>\n<p>分辨率只能设置为 <code>1280*768</code>，猜测跟性能有关系</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201101204800.png\"></p>\n<h1 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h1><p>在浏览器中输入 <code>http://群晖IP:5800</code> 即可看到主界面，应该是分辨率的缘故，所以有白边。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/04/1601818071945-1601818071948.png\" alt=\"title\"></p>\n<p>打开一个中文网站，比如 <code>百度</code> ，中文显示正常</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/04/1601820155413-1601820155419.png\" alt=\"title\"></p>\n<p>访问路由器</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/04/1601820327350-1601820327352.png\" alt=\"title\"></p>\n<p>虽然路由器页面本身有密码，但是浏览器没有任何保护显然是不行的，毕竟这个 <code>web</code> 浏览器是要映射到公网的，要想增加密码保护需要我们在 <code>docker</code> 容器的环境变量中增加 <code>VNC_PASSWORD</code> 字段，按官方的说法</p>\n<blockquote>\n<p>ATTENTION: Password is limited to 8 characters. This limitation comes from the Remote Framebuffer Protocol RFC (see section 7.2.2). Any characters beyond the limit are ignored.<br>密码限制为8个字符。此限制来自远程帧缓冲协议RFC（请参阅第7.2.2节）。超出限制的任何字符都将被忽略。</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">VNC_PASSWORD</td>\n<td align=\"center\">你的密码</td>\n</tr>\n</tbody></table>\n<p>重启容器后再次打开网页，会先需要输入密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/04/1601820733552-1601820733553.png\" alt=\"title\"></p>\n<h1 id=\"性能\"><a href=\"#性能\" class=\"headerlink\" title=\"性能\"></a>性能</h1><p>感觉资源消耗略高</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/04/1601822078885-1601822078888.png\" alt=\"title\"></p>\n<p>稍微开了几个页面之后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/04/1601824112137-1601824112138.png\" alt=\"title\"></p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>除了 <code>VNC</code> 版本外</p>\n<blockquote>\n<p>VNC（Virtual Network Computing）)是虚拟网络控制台的缩写。它 是一款优秀的远程控制工具软件，由著名的 AT&amp;T 的欧洲研究实验室开发的。VNC 是在基于 UNIX 和 Linux 操作系统的免费的开源软件，远程控制能力强大，高效实用，其性能可以和 Windows 和 MAC 中的任何远程控制软件媲美。 在 Linux 中，VNC 包括以下四个命令：vncserver，vncviewer，vncpasswd，和 vncconnect。大多数情况下用户只需要其中的两个命令：vncserver 和 vncviewer。【百度百科】</p>\n</blockquote>\n<p>记得开始搜索的时候看到过 <code>RDP</code> 的版本</p>\n<blockquote>\n<p>RDP (Remote Desktop Protocol 远程桌面协议)，是一个多通道（multi-channel）的协议，让使用者(所在计算机称为用户端或’本地计算机’)连上提供微软终端机服务的计算机(称为服务端或’远程计算机’)。【百度百科】</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/05/1601866206076-1601866206078.png\" alt=\"title\"></p>\n<p>另外还查到基于 <code>WebRTC</code> 的版本，项目叫 <code>n.eko</code> ，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL251cmRpc20vbmVrbw==\">https://github.com/nurdism/neko<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/05/1601869966724-1601869966726.png\" alt=\"title\"></p>\n<p>这个应用程序使用 <code>WebRTC</code> 在 <code>docker</code> 容器中传输桌面视频流，按官方文档描述需要比较高的配置，毕竟要对桌面进行编码/传输，而且浏览器本身还要消耗性能，有兴趣的可以去研究研究。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>jlesage/docker-firefox<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2psZXNhZ2UvZG9ja2VyLWZpcmVmb3g=\">https://github.com/jlesage/docker-firefox<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>使用docker在群晖/普通linux服务器中安装web浏览器_软件应用_什么值得买<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2E5OTJlNHJvLw==\">https://post.smzdm.com/p/a992e4ro/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>在群晖里使用浏览器，通过Docker安装火狐/Chrome浏览器+Enpass，可以外网访问群晖所在内网路由等！ &gt; oD^Blog<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9vZGNuLnRvcC8yMDE5LzAyLzAxLzIzNzMvJUU1JTlDJUE4JUU3JUJFJUE0JUU2JTk5JTk2JUU5JTg3JThDJUU0JUJEJUJGJUU3JTk0JUE4JUU2JUI1JThGJUU4JUE3JTg4JUU1JTk5JUE4JUVGJUJDJThDJUU5JTgwJTlBJUU4JUJGJTg3ZG9ja2VyJUU1JUFFJTg5JUU4JUEzJTg1JUU3JTgxJUFCJUU3JThCJTkwJUU2JUI1JThGJUU4JUE3JTg4JUU1JTk5JUE4ZW5wYXNzJUVGJUJDJThDLw==\">https://odcn.top/2019/02/01/2373/%E5%9C%A8%E7%BE%A4%E6%99%96%E9%87%8C%E4%BD%BF%E7%94%A8%E6%B5%8F%E8%A7%88%E5%99%A8%EF%BC%8C%E9%80%9A%E8%BF%87docker%E5%AE%89%E8%A3%85%E7%81%AB%E7%8B%90%E6%B5%8F%E8%A7%88%E5%99%A8enpass%EF%BC%8C/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","VNC","浏览器","noVNC"]},{"title":"YouTube-DL被下架了","url":"/2020/10/30/YouTube-DL%E8%A2%AB%E4%B8%8B%E6%9E%B6%E4%BA%86/","content":"<p>上周五，美国唱片业协会（RIAA）要求 GitHub 下架 YouTube-DL 这一广受欢迎的下载器项目 repo，此举不仅令 GitHub CEO 感到难堪，同时也激怒了众多开发人员。</p>\n<p>到现在为止，RIAA 的下架令明显起到了反效果，很多开发人员不仅仅对此表示了抗议，还发布了更多代码副本。其中最具创意的回应是有人将 YouTube-DL 编码为易于共享的图像，并鼓励其他人也共享这些图像。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201030173608.png\"></p>\n<p>YouTube-DL 虽然名字里包含了 YouTube ，但是能下载的不仅仅是 YouTube 的音视频，而是可以从 700 多个站点下载音视频，还包括了 Facebook、B 站、爱奇艺、优酷以及 TikTok 等知名站点。所以应该触动了很多人的奶酪吧，被封杀应该也是意料之中的事情。</p>\n<p>其实 YouTube-DL 除了简单视频下载功能外，还可以将下载内容转换为几乎任何格式，包括创建仅包含视频音轨的 mp3。记者群体也多使用它处理报道工作，包括下载新闻稿、转录视频与音频等等。所以关键不是工具本身，而是看你用来这个工具来做什么用途。</p>\n<p>如果仅仅是下载，类似的工具还有 You-Get，Annie，ytdl 等等，当然还可以用 Greasemonkey 脚本、或者浏览器插件，所以说实话，看不出这种封杀会产生什么样的效果。尤其是我想到了北极准备保存 1000 年的 Arctic Code Vault项目，打造的代码诺亚方舟。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201030203046.png\"></p>\n<p>到目前为止， YouTube-DL 的官网仍然可以正常访问下载 。官网地址：<span class=\"exturl\" data-url=\"aHR0cDovL3lvdXR1YmUtZGwub3JnLw==\">http://youtube-dl.org<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201030201252.png\"></p>\n<p>在群晖 docker 注册表中搜索 <code>youtubedl</code>，也依然能还能搜索出一堆。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201030204125.png\"></p>\n<h1 id=\"申明\"><a href=\"#申明\" class=\"headerlink\" title=\"申明\"></a>申明</h1><p>本文中提到的工具仅用于信息描述。作者不会支持、提倡、鼓励使用任何软件来下载受版权保护的内容。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Tzahi12345/YoutubeDL-Material: Self-hosted YouTube downloader built on Material Design<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1R6YWhpMTIzNDUvWW91dHViZURMLU1hdGVyaWFs\">https://github.com/Tzahi12345/YoutubeDL-Material<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>YouTubeDL Material – A Self-Hosted YouTube Video Downloader – NAS Hosted<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9nZWVrZWQuaG9zdC95b3V0dWJlZGwtbWF0ZXJpYWwtYS1zZWxmLWhvc3RlZC15b3V0dWJlLXZpZGVvLWRvd25sb2FkZXIv\">https://geeked.host/youtubedl-material-a-self-hosted-youtube-video-downloader/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>soimort/you-get: Dumb downloader that scrapes the web<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NvaW1vcnQveW91LWdldA==\">https://github.com/soimort/you-get<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>iawia002/annie: 👾 Fast, simple and clean video downloader<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2lhd2lhMDAyL2Fubmll\">https://github.com/iawia002/annie<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>rylio/ytdl: YouTube download library and CLI written in Go<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3J5bGlvL3l0ZGw=\">https://github.com/rylio/ytdl<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["工具","下载"]},{"title":"自建Speedtest网络测速服务器","url":"/2020/10/27/%E8%87%AA%E5%BB%BASpeedtest%E7%BD%91%E7%BB%9C%E6%B5%8B%E9%80%9F%E6%9C%8D%E5%8A%A1%E5%99%A8/","content":"<p>Speedtest 是开源项目，github 上的代码地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xpYnJlc3BlZWQvc3BlZWR0ZXN0\">https://github.com/librespeed/speedtest<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>官网地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9saWJyZXNwZWVkLm9yZy8=\">https://librespeed.org/<i class=\"fa fa-external-link-alt\"></i></span>，即开即用，不需要注册，也没有广告，干净又清爽</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/03/1601703563672-1601703563674.png\" alt=\"title\"></p>\n<p>没找到国内的服务器，除了美国就是欧洲</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/03/1601703851361-1601703851363.png\" alt=\"title\"></p>\n<p>选个 <code>New York</code> 的随便试试</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/03/1601704256390-1601704256392.png\" alt=\"title\"></p>\n<p>这样的结果让我说什么呢？</p>\n<p>既然是开源的，我们也可以自己搭建，正好可以用来测试外网访问群晖的速度。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在 docker 注册表中搜索 <code>speedtest</code> ，选择第一个 <code>adolfintel/speedtest</code>，双击直接下载。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/03/1601694882991-1601694882992.png\" alt=\"title\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>找一个空闲的端口</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/03/1601695165788-1601695165789.png\" alt=\"title\"></p>\n<h1 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h1><p>在浏览器中输入 <code>http://群晖IP:8180</code> 就能看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/03/1601695344304-1601695344306.png\" alt=\"title\"></p>\n<p>先试试局域网，测试机和群晖接在同一个千兆路由上，理论上应该是可以到千兆的，事实上也确实如此</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/03/1601695416780-1601695416782.png\" alt=\"title\"></p>\n<p>接下来我们设置反代，从外网来访问</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/03/1601695685888-1601695685890.png\" alt=\"title\"></p>\n<p>618 时买的腾讯主机是 <code>1Mbps</code> 带宽的，上面就跑了个 <code>frp server</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/03/1601701187551-1601701187553.png\" alt=\"title\"></p>\n<p>从结果看下载带宽跑满了，但是上传为啥是 0 呢？再来一次</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/03/1601704804665-1601704804666.png\" alt=\"title\"></p>\n<p>看来上传确实不行，下回换个时间段再来测试。</p>\n<h1 id=\"Android-客户端\"><a href=\"#Android-客户端\" class=\"headerlink\" title=\"Android 客户端\"></a>Android 客户端</h1><p>Android 客户端也是开源的，github 上的代码地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xpYnJlc3BlZWQvc3BlZWR0ZXN0LWFuZHJvaWQ=\">https://github.com/librespeed/speedtest-android<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>下载的版本是对应官方公网服务器的，要想测试自己的服务器，需要修改 <code>ServerList.json</code> 文件，具体的修改方法请参考 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xpYnJlc3BlZWQvc3BlZWR0ZXN0LWFuZHJvaWQvYmxvYi9tYXN0ZXIvZG9jLm1k\">https://github.com/librespeed/speedtest-android/blob/master/doc.md<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>个人觉得没啥必要，所以就这样吧。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>LibreSpeed - Speedtest 官网主页<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9saWJyZXNwZWVkLm9yZy8=\">https://librespeed.org/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>librespeed/speedtest 代码主页<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xpYnJlc3BlZWQvc3BlZWR0ZXN0\">https://github.com/librespeed/speedtest<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>NAS折腾笔记 篇二：打造专属测速服务器，群晖/威联通安装speedtest 自建 测速服务器 方便内外网测速_NAS存储_什么值得买<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2EwNzhwNHc5Lw==\">https://post.smzdm.com/p/a078p4w9/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>网络测速工具 | speedtest测速工具搭建指南_什么值得买<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wLzcwMjc0NC8=\">https://post.smzdm.com/p/702744/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","测速","网络","Speedtest"]},{"title":"BT Web客户端工具live-torrent","url":"/2020/10/23/BT%20Web%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%B7%A5%E5%85%B7live-torrent/","content":"<h1 id=\"软件简介\"><a href=\"#软件简介\" class=\"headerlink\" title=\"软件简介\"></a>软件简介</h1><p><code>live-torrent</code> 是一款免下载的种子资源在线播放器！是一个支持磁力链接和种子播放的在线搜索云播 <code>Web</code> 客户端！有强大的引擎搜索查找资源，无敏感资源搜索，自动识别 <code>bt</code> 种子视频文件然后播放观看，能自动给视频添加字幕！字幕采用的 <code>OpenSubtitles</code> ，所以还需要您在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3BlbnN1YnRpdGxlcy5vcmcv\">https://www.opensubtitles.org<i class=\"fa fa-external-link-alt\"></i></span> 注册一个账号，后面会用到。</p>\n<p>软件特点：</p>\n<ol>\n<li>开源项目，代码主页：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0RhdmVuY2h5L2xpdmUtdG9ycmVudA==\">https://github.com/Davenchy/live-torrent<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>不支持在线搜索中文资源，但中文资源可以自己上传然后识别下载和播放</li>\n<li>搜索之后复制磁力链接到站点，点击右侧的眼睛按钮-快速进行解析</li>\n<li>支持在线播放和极速下载，画质巨清晰，进度条任意拖拽</li>\n</ol>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在 docker 注册表中搜索 <code>live-torrent</code> ，选择第一个 <code>davenchy/live-torrent</code>，版本 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601541814494-1601541814497.png\" alt=\"title\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>找一个空闲的端口，别冲突就行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601543529497-1601543529500.png\" alt=\"title\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><p>如果你需要字幕，需要申请 <code>OpenSubtitles</code> 的 <code>UserAgent 字符串</code> ，目前官网是在手动添加 <code>UA</code> ，因此可能需要几天的时间。</p>\n<p>收件人:<span class=\"exturl\" data-url=\"bWFpbHRvOiYjOTc7JiN4NjQ7JiMxMDk7JiN4Njk7JiMxMTA7JiM2NDsmI3g2ZjsmIzExMjsmI3g2NTsmI3g2ZTsmI3g3MzsmI3g3NTsmIzk4OyYjMTE2OyYjeDY5OyYjeDc0OyYjMTA4OyYjMTAxOyYjeDczOyYjNDY7JiN4NmY7JiN4NzI7JiN4Njc7\">&#97;&#x64;&#109;&#x69;&#110;&#64;&#x6f;&#112;&#x65;&#x6e;&#x73;&#x75;&#98;&#116;&#x69;&#x74;&#108;&#101;&#x73;&#46;&#x6f;&#x72;&#x67;<i class=\"fa fa-external-link-alt\"></i></span><br>主题：Register User Agent Request<br>邮件内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Required info</span><br><span class=\"line\">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class=\"line\">Your name: your real name </span><br><span class=\"line\">Your registered OS username: your username on opensubtitles.org</span><br><span class=\"line\">Contact mail: your mail</span><br><span class=\"line\">Title of useragent: your name of useragent</span><br><span class=\"line\">Version of useragent: for example: v1</span><br><span class=\"line\">Programming language: C++&#x2F;Java&#x2F;PHP&#x2F;Python...</span><br><span class=\"line\">Approximate users of program: how many approx. users are using your program?</span><br><span class=\"line\">Opensource: yes&#x2F;no</span><br><span class=\"line\">Upload feature: yes&#x2F;no&#x2F;maybe in future</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Optional info</span><br><span class=\"line\">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class=\"line\">Application URL: where is possible find homepage of application</span><br><span class=\"line\">Developer URL: developers homepage</span><br></pre></td></tr></table></figure>\n\n<p>如果你懒得申请也可以用默认的，只是每天对 <code>IP/用户</code> 下载有次数限制</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">OSUA</td>\n<td align=\"center\">your UserAgent string （缺省值：TemporaryUserAgent）</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601545255660-1601545255661.png\" alt=\"title\"></p>\n<h1 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h1><p>在浏览器中输入 <code>http://群晖IP:3180</code>，即可看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601545396783-1601545396785.png\" alt=\"title\"></p>\n<p>这里只能输入 <code>torrentID </code>，<code>torrentID</code> 可以是 <code>torrent magnet , torrent HTTP/HTTPS url or torrent info hash</code>，也可以上传自己的种子文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601546546850-1601546546853.png\" alt=\"title\"></p>\n<p>这里可以直接搜索电影，但不支持中文，比如你搜索 <code>黄金眼</code>，显示的是</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601546670453-1601546670455.png\" alt=\"title\"></p>\n<p>所以我的办法是去豆瓣电影：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tb3ZpZS5kb3ViYW4uY29tLw==\">https://movie.douban.com/<i class=\"fa fa-external-link-alt\"></i></span>，找电影的英文名称</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601546759768-1601546759770.png\" alt=\"title\"></p>\n<p>然后再来搜索</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601546842897-1601546842898.png\" alt=\"title\"></p>\n<p>查看详情</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601546944013-1601546944018.png\" alt=\"title\"></p>\n<p>往下拉</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601547016188-1601547016191.png\" alt=\"title\"></p>\n<p>查看详情</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601547774308-1601547774309.png\" alt=\"title\"></p>\n<p>试试在线播放，有的半天没动静</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601565540291-1601565540293.png\" alt=\"title\"></p>\n<p>有的电影秒开，这个和我们下载 <code>bt</code> 是一样的，取决于种子的活跃度</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601547842787-1601547842792.png\" alt=\"title\"></p>\n<p>直接拖拽了一下，只停顿了几秒钟</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601548077095-1601548077098.png\" alt=\"title\"></p>\n<p>需要启用字幕</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601548295552-1601548295555.png\" alt=\"title\"></p>\n<p>没搞明白为什么是英文字幕而不是中文，因为没有找到设置语言的地方，现在想到的办法是先到 <code>opensubtitles</code> 找中文字幕，然后复制 <code>URL</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601553682059-1601553682060.png\" alt=\"title\"></p>\n<p>然后回到播放界面，用 <code>Load URL Caption</code> 加载刚刚复制的 <code>URL</code> 或者用 <code>Upload Caption</code><br> 上传字幕文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601553544943-1601553544946.png\" alt=\"title\"></p>\n<p>图省事的话，更简单的办法就是启用 <code>Google Translate</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601554425439-1601554425441.png\" alt=\"title\"></p>\n<p>瞬间就变中文，不过有时候还不如不翻译呢</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601554382386-1601554382389.png\" alt=\"title\"></p>\n<h1 id=\"缓存目录\"><a href=\"#缓存目录\" class=\"headerlink\" title=\"缓存目录\"></a>缓存目录</h1><p>视频缓存目录 <code>/tmp/webtorrent/</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601555248054-1601555248056.png\" alt=\"title\"></p>\n<p>目录比较深</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601557188418-1601557188419.png\" alt=\"title\"></p>\n<p>我的 <code>volume1</code> 比较小，所以如果不定期清理，会很容易爆掉</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601557720024-1601557720026.png\" alt=\"title\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Davenchy/live-torrent: Torrent Web Client 代码主页<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0RhdmVuY2h5L2xpdmUtdG9ycmVudA==\">https://github.com/Davenchy/live-torrent<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>live-torrent：一个支持磁力链和种子的在线搜索云播Web客户端 - Rat’s Blog<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubW9lcmF0cy5jb20vYXJjaGl2ZXMvMTAyNy8=\">https://www.moerats.com/archives/1027/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Live-torrent：磁力链和种子在线搜索播放下载 – Aneeo Blog<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hbmVlby5jb20vNDY2NC5odG1s\">https://aneeo.com/4664.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","多媒体","torrent"]},{"title":"Android手机上查看obsidian笔记的不完美方案","url":"/2020/10/19/Android%E6%89%8B%E6%9C%BA%E4%B8%8A%E6%9F%A5%E7%9C%8Bobsidian%E7%AC%94%E8%AE%B0%E7%9A%84%E4%B8%8D%E5%AE%8C%E7%BE%8E%E6%96%B9%E6%A1%88/","content":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1><p>在『<a href=\"https://laosu.ml/2020/09/09/%E8%83%BD%E6%9E%84%E5%BB%BA%E7%9F%A5%E8%AF%86%E5%BA%93%E7%9A%84%E7%AC%94%E8%AE%B0%E8%BD%AF%E4%BB%B6obsidian%E8%AF%95%E7%94%A8/\">能构建知识库的笔记软件obsidian试用</a>』中我们简单介绍过 <code>obsidian</code> 笔记，<code>obisidian</code> 最主要的特点是采用纯文本的 <code>Markdown</code> 文件，而且所有文件均存放于本地，目前只提供了桌面客户端，所以我们如何才能实现在移动端查看或者编辑笔记？</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><blockquote>\n<p>之所以不考虑 <code>Syncthing</code> 的移动端，主要出于两方面考虑：一方面我需要的不是同步，而是按需，另一方面 <code>Syncthing</code> 移动端的功耗比较高。</p>\n</blockquote>\n<p>我们为了在不同的设备上实现 <code>obsidian</code> 笔记的同步安装了『<a href=\"https://laosu.ml/2020/09/04/Syncthing%E6%96%87%E4%BB%B6%E5%A4%B9%E5%90%8C%E6%AD%A5%E7%A5%9E%E5%99%A8/\">Syncthing文件夹同步神器</a>』</p>\n<p>同时我们已经在『<a href=\"https://laosu.ml/2020/04/28/RaiDrive%E6%8C%82%E8%BD%BDfrp%E6%98%A0%E5%B0%84%E7%9A%84WebDAV%E7%BD%91%E7%9B%98/\">RaiDrive挂载frp映射的WebDAV网盘</a>』实现了通过 <code>WebDAV</code> 协议访问群晖的文件目录。</p>\n<p>所以我在想，能否在通过 <code>WebDAV</code> 协议访问  <code>Syncthing</code> 同步目录中的 <code>Markdown</code> 文件，间接实现手机端访问 <code>obsidian</code> 笔记?</p>\n<p>当然如果你和我一样用群晖搭建的环境，更简单的办法当然是直接用 <code>DS file</code> 来访问 <code>obsidian</code> 笔记啦。</p>\n<h1 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h1><h2 id=\"方案一\"><a href=\"#方案一\" class=\"headerlink\" title=\"方案一\"></a>方案一</h2><p>按上面的思路，首先我们要找一个 WebDAV 客户端，这个方案虽然麻烦，但是具备一定的通用性，即使你没有采用群晖，也是可以的。</p>\n<h3 id=\"WebDAV-客户端\"><a href=\"#WebDAV-客户端\" class=\"headerlink\" title=\"WebDAV 客户端\"></a>WebDAV 客户端</h3><p>因为我的手机是小米的，所以我找了几个 Android 平台的免费的 WebDAV 客户端</p>\n<ol>\n<li>Amaze File Manager</li>\n<li>Astro File Manager</li>\n<li>Cx File Explorer</li>\n<li>Total Commander</li>\n</ol>\n<p>经过一番试用，最终选了 <code>Total Commander</code>，原因我们后面再说。</p>\n<p>下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ2hpc2xlci5jb20vYW5kcm9pZC5odG0=\">https://www.ghisler.com/android.htm<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>在这个看重颜值的时代，<code>Total Commander</code> 的界面实在是有点朴素</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201017214930.jpg\"></p>\n<p>配置界面甚至让我有种穿越的感觉</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201017215113.jpg\"></p>\n<p>因为软件本身并没有集成插件，所以安装程序很小，所以如果我们要用 <code>WebDAV</code> 协议，需要另外进行安装。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201017215403.jpg\"></p>\n<p>插件也不大，也就800多k，点击链接后就开始下载了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201017215604.jpg\"></p>\n<p>插件安装完成后，主界面会多出 <code>WebDAV</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201017220616.png\"></p>\n<p>进入后，通过 <code>添加服务器</code>，将群晖的 <code>WebDAV</code> 服务器加到列表中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201017220919.png\"></p>\n<p>接下来就能看到文件列表了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201017221244.png\"></p>\n<p>其他的插件是否要安装，看个人需要了</p>\n<h2 id=\"方案二\"><a href=\"#方案二\" class=\"headerlink\" title=\"方案二\"></a>方案二</h2><p>如果你也是在群晖上搭建的，我建议直接用 <code>DS file</code>，而不需要再去找第三方的客户端。</p>\n<h3 id=\"DS-file-客户端\"><a href=\"#DS-file-客户端\" class=\"headerlink\" title=\"DS file 客户端\"></a>DS file 客户端</h3><p>下载地址：各应用市场</p>\n<h2 id=\"Markdown-编辑器\"><a href=\"#Markdown-编辑器\" class=\"headerlink\" title=\"Markdown 编辑器\"></a>Markdown 编辑器</h2><p>文件已经可以访问了，接下来就是 Markdown 文件的编辑和查看了，Android 平台免费的 Markdown 编辑器应该不少，但是我个人觉得 <code>Markor</code> 挺好用的，这是一个开源的 Markdown 编辑器。</p>\n<p>代码主页：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dzYW50bmVyL21hcmtvcg==\">https://github.com/gsantner/markor<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9mLWRyb2lkLm9yZy9lbi9wYWNrYWdlcy9uZXQuZ3NhbnRuZXIubWFya29yLw==\">https://f-droid.org/en/packages/net.gsantner.markor/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>软件安装很简单，但我们需要把 <code>Markor</code> 作为打开  <code>md</code> 文件的默认程序。</p>\n<p>点开右上角</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201017230847.png\"></p>\n<p>进入 <code>设置</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201017231014.jpg\"></p>\n<p>进入 <code>通用</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201017231106.png\"></p>\n<p>在 <code>总是使用此应用打开</code> 中添加 <code>.md</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201017231236.jpg\"></p>\n<h1 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h1><p>回到 <code>Total Commander</code>，找一篇 <code>md</code> 文档打开试试</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201017231737.jpg\"></p>\n<p>需要我们选择 <code>Markor</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201017232441.jpg\"></p>\n<p>不管是打开还是编辑，<code>md</code> 文件都会先被下载，这就是前面提到的选择 <code>Total Commander</code> 的原因，因为用其他软件，比如 <code>Cx File Explorer</code>， <code>Markor</code> 会提示错误</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201017232151.jpg\"></p>\n<p>原因是 <code>Markor</code> 只支持本地文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201017232736.png\"></p>\n<p>预览和编辑可以切换</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201017232831.jpg\"></p>\n<h1 id=\"本地创建文件的回传\"><a href=\"#本地创建文件的回传\" class=\"headerlink\" title=\"本地创建文件的回传\"></a>本地创建文件的回传</h1><p>本地新建的文件，默认在 <code>Document/markor</code> 目录下，需要按下面操作，使之能进入到 <code>obsidia</code> 的库中</p>\n<ol>\n<li>长按文件，点击上面的分享按钮</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201017234956.jpg\"></p>\n<ol start=\"2\">\n<li>选择 <code>Total Commander</code>  或 <code>Cx File Explorer</code> 或  <code>DS file</code></li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201019195932.png\"></p>\n<p>3、 <code>DS file</code> 一切正常，但是  <code>Total Commander</code> 会报错</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201019200318.jpg\"></p>\n<p> <code>Cx File Explorer</code> 也是一样</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201019205302.png\"></p>\n<p>真是奇怪，同样的目录在 MacOS 上用 CloudMounter 读写正常，同样在 windoiws 上 RaiDrive 读写也一样正常，难道移动端的 <code>WebDAV</code> 客户端都是只读的？有谁知道原因，请不吝赐教！</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>gsantner/markor: Text editor - Notes &amp; ToDo (for Android) - Markdown, todo.txt, plaintext, math, ..<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dzYW50bmVyL21hcmtvcg==\">https://github.com/gsantner/markor<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Markor - 带 todo 功能的易用 Markdown 编辑器 [Android] - 小众软件<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYXBwaW5uLmNvbS9tYXJrb3Iv\">https://www.appinn.com/markor/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["笔记","WebDAV","Markdown"]},{"title":"部署Guacamole远程桌面网关服务","url":"/2020/10/16/%E9%83%A8%E7%BD%B2Guacamole%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E7%BD%91%E5%85%B3%E6%9C%8D%E5%8A%A1/","content":"<p><strong>什么是Guacamole？</strong></p>\n<blockquote>\n<p>Apache Guacamole 是无客户端远程桌面网关，是基于 HTML5 的远程桌面控制框架。它支持标准协议，例如 VNC，RDP和SSH。</p>\n</blockquote>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>使用 guacamole 的主要原因是可以从任何地方远程访问一个或多个桌面，而无需安装客户端，这给我们带来了很大的便利，几乎可以在带有网络浏览器的任何设备上使用 guacamole，而且代理或防火墙的存在不会阻止 guacamole 的使用。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/%E6%9E%B6%E6%9E%84-1600260803126.png\" alt=\"title\"></p>\n<p>关于 guacamole 更多的介绍，可以到这里看看：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1RlbERyYWdvbi9ndWFjYW1vbGU=\">https://github.com/TelDragon/guacamole<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>根据 apache guacamole 官方文档，官方的 docker 涉及到3个独立的容器，分别是 <code>guacamole/guacd</code>、<code>guacamole/guacamol</code>、<code>mysql</code> 或者 <code>postgresql</code>，这种遵循单一原则的分离更有利于升级、维护，但是我们只是临时的测试环境，即便是使用也是偶尔和数量很少的用户，所以我个人更喜欢用单容器，有点类似虚拟机，在一个容器中跑多个应用，就算是挂了，重启容器就行了。</p>\n<p>基于上述的原因，我们今天选择的镜像是 <code>oznu/guacamole</code>，这是一个多合一的镜像，包含了 <code>guacd server</code> ，<code>guacamole web client</code> 和 <code>postgres database</code>，支持 x64 和 ARM 平台。 </p>\n<p>之前我们已经安装过 portainer 来管理 docker，所以我们今天尝试用 portainer 来安装 guacamole。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/docker1-1600260893774.png\" alt=\"title\"></p>\n<p>其中</p>\n<blockquote>\n<p>① 是容器的名称<br>② 是镜像的名称<br>③ 前面是主机的端口，不冲突就可，后面是容器的端口<br>④ 是重启的策略<br>⑤ 是部署按钮</p>\n</blockquote>\n<p>点击⑤开始部署，部署的时间取决于网络</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/docker2-1600260918381.png\" alt=\"title\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:3080</code>，就可以看到登录界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/login-1600260935535.png\" alt=\"title\"></p>\n<p>缺省的用户名和密码都是 <code>guacadmin</code></p>\n<p>右上角 <code>guacadmin</code> –&gt; <code>设置</code> –&gt; <code>连接</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/setup1-1600260977020.png\" alt=\"title\"></p>\n<h2 id=\"SSH-连接\"><a href=\"#SSH-连接\" class=\"headerlink\" title=\"SSH 连接\"></a>SSH 连接</h2><p>选择 <code>SSH</code> 协议</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/setup2-1600261007887.png\" alt=\"title\"></p>\n<p>只要输入主机IP和端口即可，我这里输入了群晖的IP</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/setup3-1600261022509.png\" alt=\"title\"></p>\n<p>输入账号、密码就能成功看到界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/setup4-1600261045349.png\" alt=\"title\"></p>\n<p>如果连不上，检查下是否勾选了 <code>启用 SSH 功能</code>，以及 <code>端口</code> 是否正确</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/16/1602860097377-1602860097436.png\" alt=\"title\"></p>\n<p>除了命令，还支持常用的 tab 补全和 vi，这不就是个 web 版的 ssh 吗？</p>\n<h2 id=\"RDP-连接\"><a href=\"#RDP-连接\" class=\"headerlink\" title=\"RDP 连接\"></a>RDP 连接</h2><p>windows主机新建用于远程登录的用户</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/windows1-1600261074886.png\" alt=\"title\"></p>\n<p>远程桌面中 <code>允许远程连接到此计算机</code>，选择用户</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/windows2-1600261094711.png\" alt=\"title\"></p>\n<p>选择添加</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/windows3-1600261120369.png\" alt=\"title\"></p>\n<p>文本框中输入用户 <code>RDP</code> 之后，点检查名称，会自动补全，确定就可以了 </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/windows4-1600261132672.png\" alt=\"title\"></p>\n<p>自动返回上一个界面，确定即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/windows5-1600261144014.png\" alt=\"title\"></p>\n<p>回到 <code>guacamole</code> 的 <code>连接</code> 设置界面，这次选择 <code>RDP</code> 协议</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/setup5-1600261158041.png\" alt=\"title\"></p>\n<p>同样只要输入主机IP和端口即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/setup6-1600261172647.png\" alt=\"title\"></p>\n<p>选择用户</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/windows6-1600261187005.png\" alt=\"title\"></p>\n<p>输入密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/windows7-1600261198341.png\" alt=\"title\"></p>\n<p>登录成功后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/windows8-1600261210725.png\" alt=\"title\"></p>\n<p>从操作看还是比较流畅的</p>\n<h2 id=\"主机切换\"><a href=\"#主机切换\" class=\"headerlink\" title=\"主机切换\"></a>主机切换</h2><p>在后台首页能看到登录过的主机</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/web1-1600261225206.png\" alt=\"title\"></p>\n<p>可以通过点击主机界面的右下角在不同的主机间进行切换</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/web2-1600261236854.png\" alt=\"title\"><br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/web3-1600261245798.png\" alt=\"title\"></p>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><p>从协议看，还支持 <code>VNC</code>、<code>Telnet</code>、<code>Kubernetes</code>，有兴趣的可以自行研究。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/%E5%8D%8F%E8%AE%AE-1600261262006.png\" alt=\"title\"></p>\n<p>对我而言，支持 <code>SSH</code> 和  <code>RDP</code> 已经足够了， <code>TeamViewer</code> 和 <code>向日葵</code> 都可以卸了。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Apache Guacamole™<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ndWFjYW1vbGUuYXBhY2hlLm9yZy8=\">https://guacamole.apache.org/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>oznu/docker-guacamole: A self-contained guacamole docker container for x64 and ARM. Remotely connect over SSH, RDP or VNC using HTML5.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL296bnUvZG9ja2VyLWd1YWNhbW9sZQ==\">https://github.com/oznu/docker-guacamole<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Using Portainer to Deploy Guacamole Docker- Web-based Remote Access Gateway - Info Security Memo<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuNTFzZWMub3JnLzIwMTkvMDgvMDMvdXNpbmctcG9ydGFpbmVyLXRvLWRlcGxveS1ndWFjYW1vbGUtZG9ja2VyLXdlYi1iYXNlZC1yZW1vdGUtYWNjZXNzLWdhdGV3YXkv\">https://www.51sec.org/2019/08/03/using-portainer-to-deploy-guacamole-docker-web-based-remote-access-gateway/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Guacamole桌面虚拟化介绍和安装使用 - ❤️ 我洋洋 - OSCHINA - 中文开源技术交流社区<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9teS5vc2NoaW5hLm5ldC96ZXl1cGhvZW5peC9ibG9nLzUzMDc4MA==\">https://my.oschina.net/zeyuphoenix/blog/530780<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Apache Guacamole多个漏洞分析 - 安全客，安全资讯平台<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW5xdWFua2UuY29tL3Bvc3QvaWQvMjA5NzIx\">https://www.anquanke.com/post/id/209721<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","VNC","远程桌面","SSH","RDP"]},{"title":"Markdown的图片伴侣PicGo","url":"/2020/10/13/Markdown%E7%9A%84%E5%9B%BE%E7%89%87%E4%BC%B4%E4%BE%A3PicGo/","content":"<p>什么是图床？</p>\n<blockquote>\n<p>图床一般是指储存图片的服务器，有国内和国外之分。国外的图床由于有空间距离等因素决定访问速度很慢影响图片显示速度。国内也分为单线空间、多线空间和 cdn 加速三种。[百度百科]</p>\n</blockquote>\n<p>什么是 CDN ？</p>\n<blockquote>\n<p>CDN 的全称是 Content Delivery Network ，即内容分发网络。CDN 是构建在网络之上的内容分发网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN 的关键技术主要有内容存储和分发技术。[百度百科]</p>\n</blockquote>\n<p>什么是 jsDelivr ？</p>\n<blockquote>\n<p>jsDelivr 是用于开源项目的免费公共 CDN ，由 Cloudflare、Fastly、StackPath、QUANTIL 等 CDN 供应商提供了全球超过 750 个 CDN 节点。最重要的是，jsDelivr 在中国大陆也拥有超过数百个节点，因为 jsDelivr 拥有正规的 ICP 备案，解决了中国大陆的访问速度优化，实现真正的全球极速低延迟体验。<br> jsDelivr 是免费的、不限制带宽的，可以加速 NPM、Github 内的文件，而且无需进行任何配置。</p>\n</blockquote>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>最近被两个问题困扰：</p>\n<p>1、之前用 gitnote 写作时，图片都是自动上传到 github 的，因为我启用了 gitnote 自带的 github 图床插件，所以当已完成的 md 文档发布到 hexo 时，不需要考虑图片的问题。而从 gitnote 转到 obsidian 后，粘贴的图片都在本地创建的 <code>附件目录</code> 中，在发布前还需要手动上传到图床，加上发布到微信公众号还需要单独上传图片，相当于一张图片要上传2次。</p>\n<p>2、因为 DNS 污染的原因，github 图床的图片显示并不稳定，有时候能看到图，有时候会变成</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/13/1602559204537-1602559204563.png\" alt=\"title\"></p>\n<h1 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h1><p>针对问题1：首先想到了 PicGo ，这个图床工具大名鼎鼎，免费、开源、支持Windows、MacOS 和 Linux，相信用 Markdown 来写文档的朋友们都应该知道，它的界面友好，支持的图床也多，支持拖拽上传，使用很方便，最重要的是支持插件系统，功能扩展很方便。</p>\n<p>以前一直没用主要是 gitnote 本身支持图床，包括 MWeb 也是一样；毕竟外置的工具再怎么好用也比不上内置的方便。</p>\n<p>但目前 obsidian 还没有开放插件，所以只能用第三方工具来迂回解决。</p>\n<p>针对问题2：网上给出的方法一般是修改 hosts 文件，当然还可以用科学上网的方法，但是不管哪一种方法，我都不能要求读者必须满足条件之一才能观看我的文章。</p>\n<p>所以最好的办法当然是能让读者直接能访问到 github 上的图片，而解决这个问题可以通过 jsDelivr CDN 来进行全球加速，只是不确定这种方法是不是对 jsDelivr 的滥用？</p>\n<p>除了 jsDelivr 外，还有 staticaly ，官网地址： <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGF0aWNhbGx5LmlvLw==\">https://statically.io/<i class=\"fa fa-external-link-alt\"></i></span>  也是免费不限流量的，而 Cloudflare  免费账户每天 10 万次请求，一般用用肯定是够的。</p>\n<h1 id=\"PicGo\"><a href=\"#PicGo\" class=\"headerlink\" title=\"PicGo\"></a>PicGo</h1><p>关于用 PicGo 设置免费的 github 图床，可以看这篇文章 「<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDAyMzIyMjEzNw==\">GitHub + jsDelivr + PicGo打造免费图床<i class=\"fa fa-external-link-alt\"></i></span>」，照着文档一步一步做就可以了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201013001524.png\"></p>\n<p><code>设定自定义域名</code> 决定了图片上传成功后返回的字符串，你可以选择 <code>Markdown</code> 、<code>HTML</code> 等不同的格式。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/13/1602573583123-1602573583132.png\" alt=\"title\"></p>\n<p>我们可以利用 <code>设定自定义域名</code> 将上传成功的图片地址从 github 地址自动转换为 jsDelivr 地址。</p>\n<p>开始 <code>设定自定义域名</code> 中只是替换了域名部分</p>\n<p>从 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;wbsu2003&#x2F;gitnote-images&#x2F;master</span><br></pre></td></tr></table></figure>\n\n<p>改成了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;wbsu2003&#x2F;gitnote-images&#x2F;master</span><br></pre></td></tr></table></figure>\n\n<p>结果返回了错误</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Package size exceeded the configured limit of 50 MB. Try https:&#x2F;&#x2F;github.com&#x2F;wbsu2003&#x2F;gitnote-images&#x2F;tree&#x2F;master&#x2F;mynote&#x2F;master&#x2F;2020&#x2F;10&#x2F;13&#x2F;1602571758405-1602571758418.png instead.</span><br></pre></td></tr></table></figure>\n\n<p>实际上应该改成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;wbsu2003&#x2F;gitnote-images@master</span><br></pre></td></tr></table></figure>\n\n<p>或者</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;wbsu2003&#x2F;gitnote-images</span><br></pre></td></tr></table></figure>\n\n\n<p>所以总结起来应该是这个样子：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;GitHub用户名&#x2F;仓库名@release版本号&#x2F;文件名(含目录)</span><br></pre></td></tr></table></figure>\n\n<p>或是</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;GitHub用户名&#x2F;仓库名&#x2F;文件名(含目录)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"实践\"><a href=\"#实践\" class=\"headerlink\" title=\"实践\"></a>实践</h1><p>我们首先来测试一张图片，它的原始路径是：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;wbsu2003&#x2F;gitnote-images&#x2F;master&#x2F;mynote&#x2F;2020&#x2F;10&#x2F;13&#x2F;1602571758405-1602571758418.png</span><br></pre></td></tr></table></figure>\n\n<p>显示效果：</p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/13/1602571758405-1602571758418.png\" alt=\"测试图片1\"></p>\n<p>采用 jsdelivr 地址规则后</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;wbsu2003&#x2F;gitnote-images@master&#x2F;mynote&#x2F;2020&#x2F;10&#x2F;13&#x2F;1602571758405-1602571758418.png</span><br></pre></td></tr></table></figure>\n\n<p>显示效果：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/13/1602571758405-1602571758418.png\" alt=\"测试图片2\"></p>\n<p>master 可选择仓库的不同分支，如果像我一样仓库只有 master 的分支，@master 是可以省略的，直接用图片链接：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;wbsu2003&#x2F;gitnote-images&#x2F;mynote&#x2F;2020&#x2F;10&#x2F;13&#x2F;1602571758405-1602571758418.png</span><br></pre></td></tr></table></figure>\n\n<p>显示效果：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/13/1602571758405-1602571758418.png\" alt=\"测试图片\"></p>\n<h1 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h1><p>用 jsDelivr 不仅能加速图片，也可以为 Hexo 博客进行 CDN 加速，不过我的博客之前已经做了双线，暂时先这么用着吧。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>PicGo 官网主页<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tb2x1bmVyZmlubi5jb20vUGljR28v\">https://molunerfinn.com/PicGo/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Molunerfinn/PicGo 代码主页<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL01vbHVuZXJmaW5uL1BpY0dv\">https://github.com/Molunerfinn/PicGo<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>PicGo v2.2 更新，快捷键系统与一波插件推荐 - 少数派<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zc3BhaS5jb20vcG9zdC81ODIyMw==\">https://sspai.com/post/58223<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>GitHub + jsDelivr + PicGo打造免费图床_个人文章 - SegmentFault 思否<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDAyMzIyMjEzNw==\">https://segmentfault.com/a/1190000023222137<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>使用 jsDelivr 为 Hexo 博客提供高效免费的CDN加速 - 一个人的孤落时辰<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xaW55dWFucGVpLmdpdGh1Yi5pby9wb3N0cy8xNDE3NzE5NTAyLw==\">https://qinyuanpei.github.io/posts/1417719502/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>快速免费的公用 CDN —— jsDelivr - Rogn - 博客园<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbGZyaS9wLzEyMjEyODc4Lmh0bWw=\">https://www.cnblogs.com/lfri/p/12212878.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["Markdown","图床","CDN"]},{"title":"IFTTT的开源替代品","url":"/2020/10/10/IFTTT%E7%9A%84%E5%BC%80%E6%BA%90%E6%9B%BF%E4%BB%A3%E5%93%81/","content":"<p>什么是 IFTTT？</p>\n<blockquote>\n<p>IFTTT，是一個新生的網絡服務平台，通過其他不同平台的條件來決定是否執行下一條命令。即對網絡服務通過其他網絡服務作出反應。IFTTT得名為其口號「if this then that」。 IFTTT的官方念法類似英語單詞「gift」的「ift」，即不要發「g」的音。 [維基百科]</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/10/1602301546869-1602301546877.png\" alt=\"title\"><br>【图片来自：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc29odS5jb20vYS8yMjU4ODA4NTVfMTE1Nzg1\">https://www.sohu.com/a/225880855_115785<i class=\"fa fa-external-link-alt\"></i></span>】</p>\n<p>IFTTT要收费了，即在意料之外又在情理之中，毕竟一个网站的运营不可能长期靠爱来发电。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/10/1602300227661-1602300227713.png\" alt=\"title\"></p>\n<p>不过定价方式比较奇特，10月31日前由用户自己填写，当然能设置的最低价格是 $1.99，从11月1号开始固定为 $3.99。</p>\n<p>如果你不想付费也还是可以继续使用的，只是免费版的 IFTTT 只能创建 3 个应用，这对于不是重度用户来说也是够的。</p>\n<p>我之前主要用在收藏资料，比如最早是从 Google Reader 到 Evernote， Pocket 到 Evernote，feedly 到 Evernote，后来笔记改为 Wiznote 后，又从 feedly 到 Wiznote 等等，当然 IFTTT 能做的事情远不仅仅是我的这点应用，可以结合家里的智能家居，比如智能温控器，来更有效的控制空调设备，或者结合智能空气检测仪，来控制新风系统等等。</p>\n<p>其实 IFTTT 的替代品挺多的，我指的是开源的，能够自建的那种。</p>\n<h1 id=\"n8n\"><a href=\"#n8n\" class=\"headerlink\" title=\"n8n\"></a>n8n</h1><p>n8n 是免费的基于节点的工作流自动化工具，可以轻松实现跨不同服务的任务自动化。</p>\n<p>类似 IFTTT、Zapier，可以互联互通包括 GitHub、Dropbox、Google、NextCLoud、RSS、Slack、Telegram 在内的几十款在线服务。实现当 A 条件发生，触发 B 服务这样的自动工作流程。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/10/1602309461118-1602309461125.png\" alt=\"title\"></p>\n<p>官网：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9uOG4uaW8v\">https://n8n.io/<i class=\"fa fa-external-link-alt\"></i></span><br>代码：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL244bi1pby9uOG4v\">https://github.com/n8n-io/n8n/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/10/1602308666661-1602308666702.png\" alt=\"title\"><br>【图片来自：官网】</p>\n<h1 id=\"Node-RED\"><a href=\"#Node-RED\" class=\"headerlink\" title=\"Node-RED\"></a>Node-RED</h1><p>Node-RED 是一种编程工具，用于以新颖有趣的方式将硬件设备、API 和在线服务连接在一起。 它提供了一个基于浏览器的编辑器，使您可以轻松地使用设计器中的各种节点将流连接在一起，只需单击即可将其部署到其运行，简洁高效的完成一个服务的部署。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/10/1602316253657-1602316253664.png\" alt=\"title\"></p>\n<p>官网：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub2RlcmVkLm9yZy8=\">https://nodered.org/<i class=\"fa fa-external-link-alt\"></i></span><br>代码：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25vZGUtcmVkL25vZGUtcmVk\">https://github.com/node-red/node-red<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/10/1602315954066-1602315954075.png\" alt=\"title\"><br>【图片来自：官网】</p>\n<h1 id=\"StackStorm\"><a href=\"#StackStorm\" class=\"headerlink\" title=\"StackStorm\"></a>StackStorm</h1><p>StackStorm 是一个强大的自动化平台，结合 DevOps 和 ChatOps ，提供可扩展、灵活和健壮的工具链用于应用、服务和工作流的自动化能力。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/10/1602309409523-1602309409523.png\" alt=\"title\"></p>\n<p>官网：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja3N0b3JtLmNvbS8=\">https://stackstorm.com/<i class=\"fa fa-external-link-alt\"></i></span><br>代码：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1N0YWNrU3Rvcm0vc3Qy\">https://github.com/StackStorm/st2<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/10/1602309301405-1602309301415.png\" alt=\"title\"><br>【图片来自：官网】</p>\n<h1 id=\"Huginn\"><a href=\"#Huginn\" class=\"headerlink\" title=\"Huginn\"></a>Huginn</h1><p>Huginn 是一个强大的自动化工具，它就像 IFTTT，if 1 then 2，当事件 1 出现，自动完成事件 2。 它可以帮助你设置感应器，收集信息并完成从信息的搜集—过滤—通知这样一连串的任务。 比起 IFTTT，它更加强大，更加自动化，也更加难以搞定。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/10/1602309926948-1602309926955.png\" alt=\"title\"></p>\n<p>代码：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2h1Z2lubi9odWdpbm4=\">https://github.com/huginn/huginn<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/10/1602310311110-1602310311119.png\" alt=\"title\"><br>【图片来自：官网】</p>\n<h1 id=\"Flogo\"><a href=\"#Flogo\" class=\"headerlink\" title=\"Flogo\"></a>Flogo</h1><p>Flogo项目是一个资源高效的，基于 Go 的开源生态系统，用于构建事件驱动的应用程序。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/10/1602317155625-1602317155628.png\" alt=\"title\"></p>\n<p>主页：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5mbG9nby5pby8=\">http://www.flogo.io/<i class=\"fa fa-external-link-alt\"></i></span><br>代码：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RpYmNvc29mdHdhcmUvZmxvZ28=\">https://github.com/tibcosoftware/flogo<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/10/1602317169844-1602317169851.png\" alt=\"title\"><br>【图片来自：官网】</p>\n<h1 id=\"Beehive\"><a href=\"#Beehive\" class=\"headerlink\" title=\"Beehive\"></a>Beehive</h1><p>Beehive 是由 Go 模板引擎驱动的开源 IFTTT，一个灵活的事件和代理系统。它允许你创建自己的代理，执行由事件和过滤器触发的自动化任务。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/10/1602317668267-1602317668274.png\" alt=\"title\"></p>\n<p>代码：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL211ZXNsaS9iZWVoaXZlLw==\">https://github.com/muesli/beehive/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/muesli/beehive-docs@master/screencaps/new_bees.gif\" alt=\"title\"><br>【图片来自：官网】</p>\n<h1 id=\"DataFire\"><a href=\"#DataFire\" class=\"headerlink\" title=\"DataFire\"></a>DataFire</h1><p>DataFire 是一个用于构建和集成 API 的开源框架，可以快速开发连接到 1000 多种不同服务的任务和 API。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/10/1602317855774-1602317855780.png\" alt=\"title\"></p>\n<p>主页：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcHAuZGF0YWZpcmUuaW8v\">https://app.datafire.io/<i class=\"fa fa-external-link-alt\"></i></span><br>代码：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0RhdGFGaXJlL0RhdGFGaXJl\">https://github.com/DataFire/DataFire<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/10/1602317962457-1602317962464.png\" alt=\"title\"></p>\n<h1 id=\"Actionsflow\"><a href=\"#Actionsflow\" class=\"headerlink\" title=\"Actionsflow\"></a>Actionsflow</h1><p>Actionsflow 基于 GitHub Actions 实现，因此可通过配置 YAML 文件来构建工作流，亦可用作 IFTTT/Zapier 的开源替代品。</p>\n<p>可用于构建各类 App、数据、API 之间的工作流程，帮你更好的处理文件同步、信息收集、任务管理等事项。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/10/1602312266089-1602312266092.png\" alt=\"title\"></p>\n<p>官网：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hY3Rpb25zZmxvdy5naXRodWIuaW8v\">https://actionsflow.github.io/<i class=\"fa fa-external-link-alt\"></i></span><br>代码：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FjdGlvbnNmbG93L2FjdGlvbnNmbG93\">https://github.com/actionsflow/actionsflow<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/10/1602312796307-1602312796316.png\" alt=\"title\"><br>【图片来自：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZWliby5jb20vNTcyMjk2NDM4OS9Kb2RGRGRqMmw=\">https://weibo.com/5722964389/JodFDdj2l<i class=\"fa fa-external-link-alt\"></i></span>】</p>\n<p>当然还有一些已经不活跃的项目，比如 Trigger Happy、Fr8，有新的后续再增补吧。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>玩转 IFTTT，互联网自动化也可以很简单<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc29odS5jb20vYS8yMjU4ODA4NTVfMTE1Nzg1\">https://www.sohu.com/a/225880855_115785<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>n8n - 开源自动工作流工具，类 IFTTT/Zapier，互联互通 50+ 款在线服务 - 小众软件<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYXBwaW5uLmNvbS9uOG4taW8v\">https://www.appinn.com/n8n-io/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Stackstorm的介绍与入门_夜深人静后的码农-CSDN博客<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3N4YjA4NDE5MDExMTYvYXJ0aWNsZS9kZXRhaWxzLzc5ODI2OTY5\">https://blog.csdn.net/sxb0841901116/article/details/79826969<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Huginn中文指南：搭建自己的iFTTT — Corkine’s BlOG<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLm1hemhhbmdqaW5nLmNvbS8yMDE3LzAxLzE0L2h1Z2lubiVFNiU4QyU4NyVFNSU4RCU5Ny8=\">https://blog.mazhangjing.com/2017/01/14/huginn%E6%8C%87%E5%8D%97/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Beehive-go-Go 模板引擎驱动的 IFTTT<br>地址：<span class=\"exturl\" data-url=\"aHR0cDovL2NvZGluZ2RpY3QuY29tL29zL3NvZnR3YXJlLzkzNzMz\">http://codingdict.com/os/software/93733<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>ActionsFlow：程序员的 IFTTT 开源替代品<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuMDI1MjI1LmNvbS9yZWFkLTI0NjkzLmh0bWw=\">https://www.025225.com/read-24693.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["自动化","IFTTT"]},{"title":"国庆在家玩录播","url":"/2020/10/07/%E5%9B%BD%E5%BA%86%E5%9C%A8%E5%AE%B6%E7%8E%A9%E5%BD%95%E6%92%AD/","content":"<p>上一篇我们研究了如何在家里直播，今天我们来研究下怎么进行录播，这样我们就不用担心错过什么了，比如说网课，体育比赛等等。</p>\n<p>和 <code>LiveGo</code> 一样，<code>Bililive-go</code> 也是基于 <code>Go</code> 语言开发的项目，如果你正在学习 <code>Go</code> 语言，可以到这里看看，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9ja2VybGkubmV0L3Bvc3QvZ28tYXdlc29tZS8=\">https://shockerli.net/post/go-awesome/<i class=\"fa fa-external-link-alt\"></i></span>，作者汇聚了大量 <code>Go</code> 语言开发的优秀资源，涵盖了软件开发的方方面面，非常👍。</p>\n<p>根据官方的资料显示，目前 <code>Bililive-go</code> 支持的平台</p>\n<table>\n<thead>\n<tr>\n<th>站点</th>\n<th>url</th>\n<th>支持情况</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>哔哩哔哩直播</td>\n<td>live.bilibili.com</td>\n<td>滋瓷</td>\n</tr>\n<tr>\n<td>熊猫直播</td>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5wYW5kYS50di8=\">www.panda.tv<i class=\"fa fa-external-link-alt\"></i></span></td>\n<td>滋瓷</td>\n</tr>\n<tr>\n<td>战旗直播</td>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy56aGFucWkudHYv\">www.zhanqi.tv<i class=\"fa fa-external-link-alt\"></i></span></td>\n<td>滋瓷</td>\n</tr>\n<tr>\n<td>斗鱼直播</td>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5kb3V5dS5jb20v\">www.douyu.com<i class=\"fa fa-external-link-alt\"></i></span></td>\n<td>滋瓷</td>\n</tr>\n<tr>\n<td>火猫直播</td>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5odW9tYW8uY29tLw==\">www.huomao.com<i class=\"fa fa-external-link-alt\"></i></span></td>\n<td>滋瓷</td>\n</tr>\n<tr>\n<td>龙珠直播</td>\n<td>longzhu.com</td>\n<td>滋瓷</td>\n</tr>\n<tr>\n<td>虎牙直播</td>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5odXlhLmNvbS8=\">www.huya.com<i class=\"fa fa-external-link-alt\"></i></span></td>\n<td>滋瓷</td>\n</tr>\n<tr>\n<td>全民直播</td>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5xdWFubWluLnR2Lw==\">www.quanmin.tv<i class=\"fa fa-external-link-alt\"></i></span></td>\n<td>滋瓷</td>\n</tr>\n<tr>\n<td>CC 直播</td>\n<td>cc.163.com</td>\n<td>滋瓷</td>\n</tr>\n<tr>\n<td>一直播</td>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy55aXpoaWJvLmNvbS8=\">www.yizhibo.com<i class=\"fa fa-external-link-alt\"></i></span></td>\n<td>滋瓷</td>\n</tr>\n<tr>\n<td>twitch</td>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy50d2l0Y2gudHYv\">www.twitch.tv<i class=\"fa fa-external-link-alt\"></i></span></td>\n<td>滋瓷</td>\n</tr>\n<tr>\n<td>OPENREC</td>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5vcGVucmVjLnR2Lw==\">www.openrec.tv<i class=\"fa fa-external-link-alt\"></i></span></td>\n<td>滋瓷</td>\n</tr>\n</tbody></table>\n<p>对直播行业不是太了解，不知道是不是主流的直播平台都覆盖到了？测试的时候才知道 <code>熊猫直播</code> 已经停止运营了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/01/1601520711839-1601520711841.png\" alt=\"title\"></p>\n<p>我试了 <code>哔哩哔哩</code> 和 <code>斗鱼</code> ，还是可以正常使用的。话不多说，继续我们今天的环境安装。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在 docker 注册表中搜索 <code>bililive</code> ，选择第一个 <code>chigusa/bililive-go</code>，版本 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/01/docker01-1601520267478.png\" alt=\"title\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><table>\n<thead>\n<tr>\n<th align=\"center\">文件/文件夹</th>\n<th align=\"center\">装载路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">群晖的本地目录</td>\n<td align=\"center\">/srv/bililive</td>\n</tr>\n</tbody></table>\n<p>这里我挂载到了 <code>airdisk</code> 用 <code>samba</code> 协议映射到群晖的盘上</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/01/docker02-1601520285720.png\" alt=\"title\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>找个不冲突的端口就可</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">4880</td>\n<td align=\"center\">8080</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/01/docker03-1601520302918.png\" alt=\"title\"></p>\n<h1 id=\"录制\"><a href=\"#录制\" class=\"headerlink\" title=\"录制\"></a>录制</h1><h2 id=\"主界面\"><a href=\"#主界面\" class=\"headerlink\" title=\"主界面\"></a>主界面</h2><p>在浏览器中输入 <code>http://群晖IP:4880</code>，就可以看到主界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/01/web01-1601520323760.png\" alt=\"title\"></p>\n<p><code>系统状态</code>中的信息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/01/web02-1601520337927.png\" alt=\"title\"></p>\n<h2 id=\"录制B站\"><a href=\"#录制B站\" class=\"headerlink\" title=\"录制B站\"></a>录制B站</h2><p>在 <code>B站</code> 找到直播的入口 ，随便选了个试试</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/01/bili01-1601520352073.png\" alt=\"title\"></p>\n<p>选中打开后，复制浏览器地址栏的地址</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/01/1601521670811-1601521670817.png\" alt=\"title\"></p>\n<p>添加房间，粘贴地址，点 <code>OK</code> 确定</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/01/1601521774163-1601521774164.png\" alt=\"title\"></p>\n<p>列表中可以看到已经在 <code>录制中</code> 了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/01/1601521809230-1601521809232.png\" alt=\"title\"></p>\n<p>在 <code>File Station</code> 中已经能看到录制的文件了，格式是 <code>flv</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/01/1601521892818-1601521892821.png\" alt=\"title\"></p>\n<p>可以通过点击 <code>停止监控</code> 来停止录像</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/01/bili06-1601520413719.png\" alt=\"title\"></p>\n<p>确定后，列表中的 <code>运行状态</code> 会改变</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/01/bili07-1601520421414.png\" alt=\"title\"></p>\n<p>再回到  <code>File Station</code> ，右键直接播放，会显示格式不支持</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/01/bili08-1601520430229.png\" alt=\"title\"></p>\n<p>用 <code>airdisk</code> 播放试试</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/01/1601522190230-1601522190232.png\" alt=\"title\"></p>\n<p>即便是远程模式，也很流畅</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/01/1601522288057-1601522288060.png\" alt=\"title\"></p>\n<p><code>斗鱼</code> 上也是一样的操作</p>\n<h1 id=\"写在后面\"><a href=\"#写在后面\" class=\"headerlink\" title=\"写在后面\"></a>写在后面</h1><p>录制功能很强大，但是这个毕竟不是完整的应用而是个开发的框架，需要根据实际应用进行完善，程序提供了 <code>Http Rest API</code> 接口，所以开发 <code>WEB</code> 应用还是很简单快捷的。</p>\n<h2 id=\"不能删除直播间\"><a href=\"#不能删除直播间\" class=\"headerlink\" title=\"不能删除直播间\"></a>不能删除直播间</h2><p>遇到房间不能删除的情况，只能在 <code>终端机</code> 中手动修改 <code>config.yml</code> 文件，配置文件为 <code>/etc/bililive-go/config.yml</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/01/Pasted%20image%2020200930195841-1601520500966.png\" alt=\"title\"></p>\n<p>把不需要的房间整行删除，重启容器就可以了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/01/Pasted%20image%2020200930200512-1601520531398.png\" alt=\"title\"></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># config.yml 说明</span></span><br><span class=\"line\"><span class=\"attr\">rpc:</span> </span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span>           <span class=\"comment\"># 是否开启API</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span><span class=\"string\">:8080</span>    <span class=\"comment\"># 监听地址</span></span><br><span class=\"line\">  <span class=\"attr\">token:</span> <span class=\"string\">&quot;&quot;</span>               <span class=\"comment\"># token</span></span><br><span class=\"line\">  <span class=\"attr\">tls:</span>                    <span class=\"comment\"># tls配置</span></span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"attr\">cert_file:</span> <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">key_file:</span> <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"><span class=\"attr\">debug:</span> <span class=\"literal\">false</span>              <span class=\"comment\"># debug模式</span></span><br><span class=\"line\"><span class=\"attr\">interval:</span> <span class=\"number\">15</span>              <span class=\"comment\"># 直播间状态查询间隔时间（秒）</span></span><br><span class=\"line\"><span class=\"attr\">out_put_path:</span> <span class=\"string\">./</span>          <span class=\"comment\"># 输出文件路径</span></span><br><span class=\"line\"><span class=\"attr\">live_rooms:</span>               <span class=\"comment\"># 直播间url</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">https://www.panda.tv/10300</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">https://live.bilibili.com/1010</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"重启容器后开始录制\"><a href=\"#重启容器后开始录制\" class=\"headerlink\" title=\"重启容器后开始录制\"></a>重启容器后开始录制</h2><p>重启容器会导致原来已经停止监控的房间又开始处于 <code>录制中</code> 或 <code>监控中</code>，目前只能手动停止</p>\n<h2 id=\"不支持定时录制\"><a href=\"#不支持定时录制\" class=\"headerlink\" title=\"不支持定时录制\"></a>不支持定时录制</h2><p>不支持定时录制，但没有视频流的时候，也就是没直播的时候会显示 <code>监控中</code>，当有视频流的时候才会录制，状态会显示 <code>录制中</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/01/Pasted%20image%2020200930201141-1601520544629.png\" alt=\"title\"></p>\n<p>如果你正在做录播项目，基于 <code>Bililive-go</code> 可以让你事倍功半。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>GitHub - hr3lxphr6j/bililive-go: 一个直播录制工具<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hyM2x4cGhyNmovYmlsaWxpdmUtZ28=\">https://github.com/hr3lxphr6j/bililive-go<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>n1化身全网直播录制工具，妈妈再也不用担心我上网课走神了_软件应用_什么值得买<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2FscHd2d3ZvLw==\">https://post.smzdm.com/p/alpwvwvo/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>bililive-go的使用 - A trivial blog.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jYXByaWNjaW8ubW9lL2FyY2hpdmVzLzM0Lw==\">https://capriccio.moe/archives/34/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>BRITE’S BLOG.人生在世，看得穿，又看得远者prevail everywhere.: 用VPS实现一些方便的功能<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9icml0ZW1pbmcuYmxvZ3Nwb3QuY29tLzIwMTkvMTIvdnBzLmh0bWw=\">https://briteming.blogspot.com/2019/12/vps.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Go 语言优秀资源整理，为项目落地加速🏃[2020.08.17更新] - 格物<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9ja2VybGkubmV0L3Bvc3QvZ28tYXdlc29tZS8=\">https://shockerli.net/post/go-awesome/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","录播"]},{"title":"国庆在家玩直播","url":"/2020/10/03/%E5%9B%BD%E5%BA%86%E5%9C%A8%E5%AE%B6%E7%8E%A9%E7%9B%B4%E6%92%AD/","content":"<h1 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h1><p>推流工具：OBS（Open Broadcaster Software），软件下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9vYnNwcm9qZWN0LmNvbS9kb3dubG9hZA==\">https://obsproject.com/download<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/29/obs00-1601387112184.png\" alt=\"title\"></p>\n<p>播放工具：<br>PotPlayer（windows），下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kYXVtcG90cGxheWVyLmNvbS9kb3dubG9hZC8=\">https://daumpotplayer.com/download/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>IINA（macOS），下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9paW5hLmlvL2Rvd25sb2FkLw==\">https://iina.io/download/<i class=\"fa fa-external-link-alt\"></i></span> </p>\n<p>VLC（跨平台），下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudmlkZW9sYW4ub3JnL3ZsYy8=\">https://www.videolan.org/vlc/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在 docker 注册表中搜索 <code>livego</code> ，选择第二个 <code>gwuhaolin/livego</code>，应该就只有一个版本，所以双击直接下载。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/29/docker01-1601387155710.png\" alt=\"title\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">1935</td>\n<td align=\"center\">1935</td>\n<td align=\"center\">RTMP协议，用于主播推流</td>\n</tr>\n<tr>\n<td align=\"center\">7001</td>\n<td align=\"center\">7001</td>\n<td align=\"center\">HTTP-FLV协议，用于播放</td>\n</tr>\n<tr>\n<td align=\"center\">7002</td>\n<td align=\"center\">7002</td>\n<td align=\"center\">HLS协议 ，用于播放</td>\n</tr>\n<tr>\n<td align=\"center\">8090</td>\n<td align=\"center\">8090</td>\n<td align=\"center\">HTTP-API</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/29/docker02-1601387181377.png\" alt=\"title\"></p>\n<h1 id=\"直播\"><a href=\"#直播\" class=\"headerlink\" title=\"直播\"></a>直播</h1><h2 id=\"PotPlayer设置\"><a href=\"#PotPlayer设置\" class=\"headerlink\" title=\"PotPlayer设置\"></a>PotPlayer设置</h2><p>用 <code>PotPlayer</code> 播放《007：女王密使》作为 <code>OBS</code> 的视频源，因为后面还要用 <code>PotPlayer</code> 来播放，所以一定要修改 <code>多重处理方式</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/29/obs01-1601387203550.png\" alt=\"title\"></p>\n<h2 id=\"OBS的设置\"><a href=\"#OBS的设置\" class=\"headerlink\" title=\"OBS的设置\"></a>OBS的设置</h2><p>在 <code>OBS</code> –&gt; <code>来源</code> –&gt; <code>窗口捕捉</code> 设置捕捉画面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/29/obs02-1601387217094.png\" alt=\"title\"></p>\n<p>当然也也可以选择摄像头（视频捕获设备）或者本地媒体文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/29/obs03-1601387234911.png\" alt=\"title\"></p>\n<p>当然如果你愿意，你也可以叠加显示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/29/obs04-1601387244297.png\" alt=\"title\"></p>\n<h2 id=\"用OBS推流\"><a href=\"#用OBS推流\" class=\"headerlink\" title=\"用OBS推流\"></a>用OBS推流</h2><p>第一步、在浏览器中输入 <code>http://群晖IP:8090/control/get?room=movie</code>， 获取一个房间的 <code>channelkey</code> 用于推流。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/29/tl01-1601387257535.png\" alt=\"title\"></p>\n<p>第二步、使用OBS来推流。</p>\n<p>按官网的介绍，通过 <code>RTMP</code> 协议推送视频流的地址是： <code>rtmp://server ip:1935/&#123;appname&#125;/&#123;channelkey&#125;</code>，<br>其中 <code>appname</code> 默认是 <code>live</code>，所以在 <code>OBS</code> 的推流设置中的 <code>服务器</code> 地址填 <code>rtmp://群晖IP:1935/live</code>，<code>串流秘钥</code> 填第一步获取到的 <code>channelkey</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/29/tl02-1601387279512.png\" alt=\"title\"></p>\n<h2 id=\"用客户端播放\"><a href=\"#用客户端播放\" class=\"headerlink\" title=\"用客户端播放\"></a>用客户端播放</h2><p>第三步、播放，其中 <code>RTMP</code> 的播放地址如下: <code>rtmp://server ip:1935/&#123;appname&#125;/movie</code>，所以我们在 <code>PotPlayer</code> 中 <code>打开链接</code> 中输入 <code>rtmp://群晖IP:1935/live/movie</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/29/tl03-1601387293549.png\" alt=\"title\"></p>\n<p>如果没什么意外，你应该能看到直播画面了。左边是 <code>OBS</code> 推流的界面，右边是 <code>PotPlayer</code> 播放的界面。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/29/tl04-1601387304747.png\" alt=\"title\"></p>\n<p>如果是在 <code>macOS</code> 上播放，可以用 <code>IINA</code>，我尝试着用远程推流和远程播放，受限于带宽和无 <code>CDN</code> 支持，常常会需要缓冲，不过这一切都在情理之中。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/29/tl05-1601387350427.png\" alt=\"title\"></p>\n<p>所以如果要投入实用，当然还是要用大厂的云服务才行。</p>\n<h2 id=\"用网页播放\"><a href=\"#用网页播放\" class=\"headerlink\" title=\"用网页播放\"></a>用网页播放</h2><p>除了播放器外，我们还可以用网页播放，因为 <code>LiveGo</code> 除了 <code>RTMP</code> 外还支持 <code>HTTP-FLV</code> 和 <code>HLS</code> 播放协议。</p>\n<p>我把网页播放器打包到了<code>webplayer.zip</code> 中，<code>webplayer.zip</code> 下载地址：</p>\n<p><a href=\"https://laosu.ml/uploads/webplayer.zip\">https://laosu.ml/uploads/webplayer.zip</a></p>\n<p>或者 </p>\n<p>百度分享链接: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMVNVVHVXZnBRVG00OGd6ajBJOXpzTFE=\">https://pan.baidu.com/s/1SUTuWfpQTm48gzj0I9zsLQ<i class=\"fa fa-external-link-alt\"></i></span> 提取码: xbj1</p>\n<p><code>webplayer.zip</code> 里有三个文件，源代码来源自『<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9kOWM2NmQ3ZDE2NTM=\">使用flv.js与video.js实现播放视频直播(简教程)<i class=\"fa fa-external-link-alt\"></i></span>』，对作者表示感谢！</p>\n<p>其中 <code>flv.htm</code> 引用了 <code>flv.js</code> 库，而 <code>hls.htm</code> 则引用了 <code>video.js</code> 库，这两个库都是开源的，有兴趣的可以自己研究。</p>\n<h3 id=\"FLV协议\"><a href=\"#FLV协议\" class=\"headerlink\" title=\"FLV协议\"></a>FLV协议</h3><p>用记事本打开 <code>flv.htm</code>，找到下图中的部分</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/29/htm01-1601387468589.png\" alt=\"title\"></p>\n<p> <code>LiveGo</code> 采用 <code>HTTP-FLV</code> 协议的播放地址为： <code>http://127.0.0.1:7001/&#123;appname&#125;/movie.flv</code>，所以根据 <code>OSB</code> 推流的地址，这里要修改为 <code>http://群晖IP:7001/live/movie.flv</code>，保存文件后，双击 <code>flv.htm</code> 文件，用默认浏览器打开，点播放按钮，如果没意外的话，图像就应该出来了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/29/web01-1601387451525.png\" alt=\"title\"></p>\n<blockquote>\n<p>这个地址输入到 <code>PotPlayer</code> 中，也是可以播放的</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/29/potplayer01-1601387572071.png\" alt=\"title\"></p>\n<p>如果 <code>OBS</code> 没有推流，<code>flv.htm</code> 中会一直转圈</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/29/web03-1601387594589.png\" alt=\"title\"></p>\n<h3 id=\"HLS协议\"><a href=\"#HLS协议\" class=\"headerlink\" title=\"HLS协议\"></a>HLS协议</h3><p>同样的，用记事本打开 <code>hls.htm</code>，找到下图中的部分</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/29/htm02-1601387614142.png\" alt=\"title\"></p>\n<p> <code>LiveGo</code> 采用 <code>HLS</code> 协议的播放地址为： <code>http://127.0.0.1:7002/&#123;appname&#125;/movie.m3u8</code>，所以根据 <code>OSB</code> 的推流地址，这里要修改为 <code>http://群晖IP:7002/live/movie.m3u8</code>，保存文件后，双击 <code>hls.htm</code> 文件，用默认浏览器打开，点播放按钮，如果没意外的话，图像也应该会出来</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/29/web02-1601387682271.png\" alt=\"title\"></p>\n<blockquote>\n<p>这个地址输入到 <code>PotPlayer</code> 中，同样也是可以播放的</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/29/potplayer02-1601387707104.png\" alt=\"title\"></p>\n<p>如果 <code>OBS</code> 还没开始推流，<code>hls.htm</code> 会直接报错</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/29/web04-1601387724308.png\" alt=\"title\"></p>\n<h1 id=\"空间占用\"><a href=\"#空间占用\" class=\"headerlink\" title=\"空间占用\"></a>空间占用</h1><p>直播会在 <code>docker</code> 容器中生成临时文件，占用大量的空间，这个需要定期进行清理，不然很容易爆了，因为我存放 <code>docker</code> 的系统盘比较小</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/03/1601709501032-1601709501033.png\" alt=\"title\"></p>\n<p>每次推流都会产生一个 <code>flv</code> 文件，文件的大小取决于直播的时间。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/03/1601709605283-1601709605284.png\" alt=\"title\"></p>\n<h1 id=\"写在最后\"><a href=\"#写在最后\" class=\"headerlink\" title=\"写在最后\"></a>写在最后</h1><p>直播的用途很多，直播讲课，直播带货等等，用在家里的话，可以试试直播监控摄像头。</p>\n<h2 id=\"RTMP协议\"><a href=\"#RTMP协议\" class=\"headerlink\" title=\"RTMP协议\"></a>RTMP协议</h2><p>对于支持 <code>rtmp</code> 协议的摄像头比较好办，可以像 <code>OBS</code> 一样直接推流到 <code>LiveGo</code> 服务。</p>\n<h2 id=\"mjpeg协议\"><a href=\"#mjpeg协议\" class=\"headerlink\" title=\"mjpeg协议\"></a>mjpeg协议</h2><p>对于支持 <code>mjpeg</code> 协议的摄像头，需要用 <code>OBS</code> 来推流。在 <code>OBS</code> 的 <code>来源</code> 中新建 <code>浏览器</code>，在 <code>浏览器</code> 属性中的 <code>URL</code> 中输入摄像机的 <code>mjpeg url</code> 访问地址 </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/29/1601389289912-1601389289914.png\" alt=\"title\"></p>\n<h2 id=\"RTSP协议\"><a href=\"#RTSP协议\" class=\"headerlink\" title=\"RTSP协议\"></a>RTSP协议</h2><p><code>OBS</code> 本身并不支持 <code>RTSP</code> 协议，所以还需要 <code>VLC</code> 或者 <code>PotPlayer</code> 来做中转。</p>\n<p>首先在 <code>PotPlayer</code> 中打开 <code>rtsp</code> 地址</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/29/1601390266564-1601390266566.png\" alt=\"title\"></p>\n<p>然后在 <code>OBS</code> 的 <code>来源</code> 中新建 <code>窗口捕获</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/29/1601390994870-1601390994873.png\" alt=\"title\"></p>\n<p>当然你熟悉 <code>ffmpeg</code> 的话，也可以用 <code>ffmpeg</code> 将 <code>rtsp</code> 流转为 <code>rtmp</code> 流并推给 <code>LiveGo</code> 服务器，只是我还没试过。</p>\n<p>我承认这个过程确实有点折腾，但也挺好玩的不是么？</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>livego/README_cn.md at master · gwuhaolin/livego · GitHub<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2d3dWhhb2xpbi9saXZlZ28vYmxvYi9tYXN0ZXIvUkVBRE1FX2NuLm1k\">https://github.com/gwuhaolin/livego/blob/master/README_cn.md<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>livego介绍以及最全使用方法介绍 | 码农家园<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY29kZW5vbmcuY29tL2NzMTA2NjgzMTg0Lw==\">https://www.codenong.com/cs106683184/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>使用flv.js做直播 · Issue #3 · gwuhaolin/blog · GitHub<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2d3dWhhb2xpbi9ibG9nL2lzc3Vlcy8z\">https://github.com/gwuhaolin/blog/issues/3<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>使用flv.js做直播 - 浩麟的博客<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93dWhhb2xpbi5jbi8yMDE3LzA1LzE3LyVFNCVCRCVCRiVFNyU5NCVBOGZsdi5qcyVFNSU4MSU5QSVFNyU5QiVCNCVFNiU5MiVBRC8=\">https://wuhaolin.cn/2017/05/17/%E4%BD%BF%E7%94%A8flv.js%E5%81%9A%E7%9B%B4%E6%92%AD/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>使用flv.js与video.js实现播放视频直播(简教程) - 简书<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9kOWM2NmQ3ZDE2NTM=\">https://www.jianshu.com/p/d9c66d7d1653<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>livego+obs+flv.js 搭建视频直播 - sentangle - 博客园<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vc2VudGFuZ2xlL3AvMTIyMzg4MzYuaHRtbA==\">https://www.cnblogs.com/sentangle/p/12238836.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>flv + livego + obs 实现简易直播平台(windows版+Linux版)_qq_38556217的博客-CSDN博客<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4NTU2MjE3L2FydGljbGUvZGV0YWlscy8xMDQ2MjI4NzU=\">https://blog.csdn.net/qq_38556217/article/details/104622875<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>rtsp视频流转rtmp在网页上直播_banjing_1993的博客-CSDN博客<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2JhbmppbmdfMTk5My9hcnRpY2xlL2RldGFpbHMvMTA1MjIxNTA2\">https://blog.csdn.net/banjing_1993/article/details/105221506<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","RTMP","推流","直播","HLS","HTTP-FLV","mjpeg","RTSP"]},{"title":"Snapdrop实现P2P局域网文件互传","url":"/2020/10/01/Snapdrop%E5%AE%9E%E7%8E%B0P2P%E5%B1%80%E5%9F%9F%E7%BD%91%E6%96%87%E4%BB%B6%E4%BA%92%E4%BC%A0/","content":"<p>今天是国庆也是中秋节，祝各位新老朋友节日快乐！幸福圆满！</p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>经常在办公室需要和同事传个文档啥的，如果正好大家都是 Mac，可以通过 <code>AirDrop</code> (中文名：<code>隔空投送</code>) 来传，但是如果不是，那就只能用 U 盘了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/01/airdrop-1601485544332.png\" alt=\"title\"></p>\n<p>那不同系统的电脑间文件传输有没有简单一点的方法呢？今天跟大家分享一个跨平台、跨设备的文档传输服务，打开浏览器就可以使用。只要两个设备在同一个网路环境下，就可以快速传输，让我们在 <code>Windows</code> 上也可以跟 <code>Mac</code> 互传文件达到类似 <code>AirDrop</code> 的效果！</p>\n<p>官网地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zbmFwZHJvcC5uZXQv\">https://snapdrop.net/<i class=\"fa fa-external-link-alt\"></i></span>，既不需要注册，也不需要安装 <code>APP</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/01/web1-1601485560982.png\" alt=\"title\"></p>\n<p>当我们在另一台机器上打开网页后，我们能看到</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/01/web2-1601485573420.png\" alt=\"title\"></p>\n<p>点击扫描到的设备名称后，就可以开始传输文件了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/01/web3-1601485586284.png\" alt=\"title\"></p>\n<p>在扫描到的设备上右键，可以发消息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/01/web4-1601485594613.png\" alt=\"title\"></p>\n<p>如果觉得 <code>Snapdrop</code> 速度慢或者不可靠，还能自己搭建一个，这样不仅更快捷也更安全，虽然 <code>Snapdrop</code> 本身是走的 <code>P2P</code>，并不会在服务器上存储文件。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/01/error-1601485619811.png\" alt=\"title\"></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p><code>Snapdrop</code> 是开源的项目：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1JvYmluTGludXMvc25hcGRyb3A=\">https://github.com/RobinLinus/snapdrop<i class=\"fa fa-external-link-alt\"></i></span>，它基于下面这些技术构建：<br>    - Vanilla HTML5 / ES6 / CSS3<br>    - Progressive Web App<br>    - WebRTC<br>    - WebSockets<br>    - NodeJS<br>    - Material Design</p>\n<p>技术原理上是通过浏览器的 <code>WebRTC</code> 实现点对点的传输，所以不需要安装软件，也没有文件大小的限制，理论上可以在任何平台和设备上运行，只要浏览器支持 <code>WebRTC</code> 即可。</p>\n<p>我们用 <code>portainer</code> 来安装，选择 <code>seji/snapdrop-docker</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/01/docker-1601485643838.png\" alt=\"title\"></p>\n<h1 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h1><p>在浏览器中输入 <code>http://群晖IP:4080</code>，看到的是和官网一样简洁的界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/01/1601487081660-1601487081662.png\" alt=\"title\"></p>\n<h2 id=\"传输文件\"><a href=\"#传输文件\" class=\"headerlink\" title=\"传输文件\"></a>传输文件</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/01/Pasted%20image%2020201001004829-1601485667388.png\" alt=\"title\"></p>\n<p>发送端，传输完成后有提示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/01/Pasted%20image%2020201001004459-1601485681947.png\" alt=\"title\"></p>\n<p>接收端需要确认，保障了安全性</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/01/Pasted%20image%2020201001004537-1601485694851.png\" alt=\"title\"></p>\n<h2 id=\"发送文字\"><a href=\"#发送文字\" class=\"headerlink\" title=\"发送文字\"></a>发送文字</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/01/Pasted%20image%2020201001005039-1601485709255.png\" alt=\"title\"></p>\n<p>发送端</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/01/Pasted%20image%2020201001004649-1601485722701.png\" alt=\"title\"></p>\n<p>接收端</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/01/Pasted%20image%2020201001004704-1601485735620.png\" alt=\"title\"></p>\n<p>经测试，我们自己搭建的服务和 <code>snapdrop</code> 官网是一致的。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>RobinLinus/snapdrop官网<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1JvYmluTGludXMvc25hcGRyb3A=\">https://github.com/RobinLinus/snapdrop<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Snapdrop 瀏覽器跨裝置 P2P 傳檔，比 AirDrop 更易使用！<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9mcmVlLmNvbS50dy9zbmFwZHJvcC8=\">https://free.com.tw/snapdrop/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","P2P","网络"]},{"title":"小米手机降级记录","url":"/2020/09/26/%E5%B0%8F%E7%B1%B3%E6%89%8B%E6%9C%BA%E9%99%8D%E7%BA%A7%E8%AE%B0%E5%BD%95/","content":"<p>MIUI 12 新增了大量功能特性，看起来也很炫酷，所以收到推送后第一时间就升了级</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/26/1601119035746-1601119035780.png\" alt=\"title\"></p>\n<p>可是用了几天后发现，我的小米8一天3冲变成了常态，最要命的是手机会变身暖手宝，时不时的发发烫，就看见电量蹭蹭的往下掉，不带个充电宝都不敢出门，最后纠结了半天还是决定刷机降级</p>\n<h1 id=\"备份手机\"><a href=\"#备份手机\" class=\"headerlink\" title=\"备份手机\"></a>备份手机</h1><p>既然要刷机，首先就应该先备份数据</p>\n<p>在设置中，找到备份与恢复</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/26/1601120094811-1601120094813.png\" alt=\"title\"></p>\n<p>当应用比较多的时候还是比较花时间的，尤其是微信，居然占用了 20 个 G，但是备份出来应该是进行了压缩，只有 5~6 个 G 了</p>\n<p>这里只备份了数据和程序，没有包含照片、文档等内容，需要我们另外备份。当然如果你买了小米的会员，应该就简单多了</p>\n<h1 id=\"手机解锁\"><a href=\"#手机解锁\" class=\"headerlink\" title=\"手机解锁\"></a>手机解锁</h1><p>因为不熟悉小米，所以我是上来就直接刷机的，结果显示锁定状态下不允许擦除</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/26/1601120894277-1601120894280.png\" alt=\"title\"></p>\n<p>结果跑去解锁又失败了，告诉我要先绑定</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/26/1601122238697-1601122238698.png\" alt=\"title\"></p>\n<p>所以走了一堆弯路后，让我们捋一下流程：要解锁，首先要绑定设备和账号，而要完成绑定的话，先得打开开发者模式</p>\n<h2 id=\"开发者模式\"><a href=\"#开发者模式\" class=\"headerlink\" title=\"开发者模式\"></a>开发者模式</h2><p>打开 <code>系统设置</code>，依次点击<code>我的设备</code> –&gt; <code>全部参数</code> 后进入到参数界面，在参数界面连续点击 5 次 MIUI 版本，开启成功会弹出提示 “开发者模式成功开启” 。</p>\n<h2 id=\"绑定账号和设备\"><a href=\"#绑定账号和设备\" class=\"headerlink\" title=\"绑定账号和设备\"></a>绑定账号和设备</h2><p>在系统设置界面下依次点击 <code>更多设置</code> –&gt; <code>开发者选项</code> 进入到开发者选项设置。</p>\n<p>在 <code>开发者选项</code> 界面下拉找到 <code>设备解锁状态</code> 进入到 <code>绑定账号</code> 界面，点击<code>绑定账号和设备</code>，绑定成功会提示绑定成功</p>\n<blockquote>\n<p>如果使用 WIFI 会提示关闭 WIFI 后使用移动数据进行绑定<br>如果关闭 WIFI 提示绑定不成功，退出小米账号重新登录一下小米账号再次尝试绑定<br>如果还是失败，尝试关闭 <code>小米云服务</code> 中的 <code>查找手机</code> 功能</p>\n</blockquote>\n<p>再不好使我也不知道了，因为我关闭 <code>查找手机</code> 功能之后就绑定成功了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/26/1601121827476-1601121827481.png\" alt=\"title\"></p>\n<h2 id=\"解锁手机\"><a href=\"#解锁手机\" class=\"headerlink\" title=\"解锁手机\"></a>解锁手机</h2><p>访问官网进行解锁 ，地址是 <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5taXVpLmNvbS91bmxvY2svaW5kZXguaHRtbA==\">http://www.miui.com/unlock/index.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>下载解锁工具后，按流程操作</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/26/1601122064798-1601122064800.png\" alt=\"title\"></p>\n<p>手机进入 BootLoader 模式，用 USB 数据线和电脑连接，连接成功后会提示你用户数据将被清除，所以切记一定要先备份，备份，备份</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/26/1601122598833-1601122598834.png\" alt=\"title\"></p>\n<p>开始解锁了会再次提醒</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/26/1601122754136-1601122754137.png\" alt=\"title\"></p>\n<p>解锁成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/26/1601122803641-1601122803642.png\" alt=\"title\"></p>\n<h1 id=\"下载固件\"><a href=\"#下载固件\" class=\"headerlink\" title=\"下载固件\"></a>下载固件</h1><p>小米各机型的固件可以在这里找到 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9taXVpdmVyLmNvbS8=\">https://miuiver.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/26/1601122964973-1601122964975.png\" alt=\"title\"></p>\n<p>我的是小米8屏下指纹透明版，所以我下载 <code>小米8 探索版</code> 的线刷包</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/26/1601123076315-1601123076318.png\" alt=\"title\"></p>\n<p>可是加载后告诉我不匹配</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/26/1601123152292-1601123152293.png\" alt=\"title\"></p>\n<p>后来才搞明白，我应该下 <code>小米8 Pro</code> 的线刷包</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/26/1601123233085-1601123233086.png\" alt=\"title\"></p>\n<p>我直接下载了最古老的版本，这样后续还可以用 OTA 进行升级</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/26/1601123378479-1601123378482.png\" alt=\"title\"></p>\n<h1 id=\"开始刷机\"><a href=\"#开始刷机\" class=\"headerlink\" title=\"开始刷机\"></a>开始刷机</h1><p>MIUI 的刷机工具可以在这里下载 <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5taXVpLmNvbS9zaHVhamktMzkzLmh0bWw=\">http://www.miui.com/shuaji-393.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/26/1601123585907-1601123585908.png\" alt=\"title\"></p>\n<p>手机进入 BootLoader 模式，用 USB 数据线和电脑连接，首先会需要安装驱动</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/26/1601125278343-1601125278344.png\" alt=\"title\"></p>\n<p>选择 <code>全部删除并lock</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/26/1601125329482-1601125329483.png\" alt=\"title\"></p>\n<p>完成后手机会重启，按向导设置好就可以使用了。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>小米手机MIUI系统降级任意版本通用教程，MIUI12→MIUI9<br>地址：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy4zNjBkb2MuY29tL2NvbnRlbnQvMjAvMDUyNS8yMS80MDUyMDA3OV85MTQ1MjcwMDkuc2h0bWw=\">http://www.360doc.com/content/20/0525/21/40520079_914527009.shtml<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>小米手机解锁 Bootloader 教程 - 小米社区<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueGlhb21pLmNuL3Bvc3QvMTg4NzM1MzU=\">https://www.xiaomi.cn/post/18873535<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>通过线刷升级<br>地址：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5taXVpLmNvbS9zaHVhamktMzkzLmh0bWw=\">http://www.miui.com/shuaji-393.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["小米手机","MIUI","刷机"]},{"title":"Glances实时监视群晖运行状况","url":"/2020/09/22/Glances%E5%AE%9E%E6%97%B6%E7%9B%91%E8%A7%86%E7%BE%A4%E6%99%96%E8%BF%90%E8%A1%8C%E7%8A%B6%E5%86%B5/","content":"<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在 docker 注册表中搜索 <code>glances</code> ，选择第一个 <code>nicolargo/glances</code>，版本 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/docker01-1600232128459.png\" alt=\"title\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/docker02-1600232156260.png\" alt=\"title\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/docker03-1600232169422.png\" alt=\"title\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><h2 id=\"发现问题\"><a href=\"#发现问题\" class=\"headerlink\" title=\"发现问题\"></a>发现问题</h2><p>在浏览器中输入 <code>http://群晖IP:61208</code>，即可看到主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/index01-1600232212596.png\" alt=\"title\"></p>\n<p>但是跟官网的图片比，好像右下角缺了一大块，仔细对比之后发现缺了 <code>docker</code> 的信息，和 <code>portainer</code>、<code>watchtower</code> 不同，<code>glances</code> 并没找到对远程终端的支持。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/index02-1600232229777.png\" alt=\"title\"></p>\n<p>所以问题应该出在 <code>/var/run/docker.sock</code>，这是 <code>Docker API</code> 的主要入口,简单地说，它是 Docker 守护进程（Docker daemon）默认监听的 Unix 域套接字（Unix domain socket），容器中的进程可以通过它与 Docker 守护进程进行通信。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/1600233408261-1600233408269.png\" alt=\"title\"></p>\n<blockquote>\n<p>图片来自<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmZ1bmRlYnVnLmNvbS8yMDE3LzA0LzE3L2Fib3V0LWRvY2tlci1zb2NrLw==\">https://blog.fundebug.com/2017/04/17/about-docker-sock/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<h2 id=\"计划任务\"><a href=\"#计划任务\" class=\"headerlink\" title=\"计划任务\"></a>计划任务</h2><p>黑群晖老版本无法直接访问 var 目录,所以无法通过配置 -v <code>/var/run/docker.sock:/var/run/docker.sock</code> 来完成，所以我们要用<br> <code>sudo ln -s /var/run/docker.sock /volume1/docker/docker.sock</code> 把你当前群晖的 docker.sock 映射到 docker 共享目录（我安装在了 volume1 ），同时为避免重启后软链会消失，需要把它加到计划任务中。</p>\n<p>转到 <code>控制面板</code> –&gt; <code>任务计划</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/task01-1600232366408.png\" alt=\"title\"></p>\n<p><code>新增</code> –&gt; <code>计划的任务</code> –&gt; <code>用户定义的脚本</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/task02-1600232386590.png\" alt=\"title\"></p>\n<p>在 <code>创建任务</code> 窗口的 <code>常规</code> 选项卡上，确保将 <code>用户账号</code> 选择为 <code>root</code>，填入 <code>任务名称</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/task03-1600232399083.png\" alt=\"title\"></p>\n<p>在 <code>创建任务</code> 窗口的 <code>计划</code> 选项卡上，在 <code>日期</code> –&gt; <code>在以下的天中运行</code> 下，选择 <code>每日</code> 。在 <code>时间</code> –&gt; <code>运行频率</code> 下，选择 <code>每1小时</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/task04-1600232413872.png\" alt=\"title\"></p>\n<p>在 <code>创建任务</code> 窗口的 <code>任务设置</code> 选项卡上，在 <code>运行命令</code> –&gt; <code>用户定义的脚本</code>中，粘贴 <code>sudo ln -s /var/run/docker.sock /volume1/docker/docker.sock</code> 到文本框中，然后按 <code>确定</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/task05-1600232425336.png\" alt=\"title\"></p>\n<p>在新创建的任务，右键单击 <code>运行</code> 立即运行一次</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/task06-1600232436204.png\" alt=\"title\"></p>\n<p>需要确认</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/task07-1600232446903.png\" alt=\"title\"></p>\n<h2 id=\"解决问题\"><a href=\"#解决问题\" class=\"headerlink\" title=\"解决问题\"></a>解决问题</h2><p>软链接在 <code>File Station</code> 是看不到的，所以我们不能再用 GUI 来修改或者创建了，但是命令行创建成功后，可以在 GUI 中查看 </p>\n<p>通过SSH进入Synology，运行以下docker run命令</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run -d --restart=<span class=\"string\">&quot;always&quot;</span> --name=<span class=\"string\">&quot;nicolargo-glances1&quot;</span> -p 61208-61209:61208-61209 -e GLANCES_OPT=<span class=\"string\">&quot;-w&quot;</span> -v /volume1/docker/docker.sock:/var/run/docker.sock:ro --pid host docker.io/nicolargo/glances</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/ssh01-1600232476479.png\" alt=\"title\"></p>\n<p>再回到浏览器，刷新一下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/index03-1600232489329.png\" alt=\"title\"></p>\n<p>容器的信息已经有了，我们在 GUI 中 找到 <code>nicolargo-glances1</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/22/1600775620347-1600775620409.png\" alt=\"title\"></p>\n<p>先停止，然后进入编辑，是可以看到文件夹映射的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/22/1600775684921-1600775684924.png\" alt=\"title\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Glances - An Eye on your system<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9uaWNvbGFyZ28uZ2l0aHViLmlvL2dsYW5jZXMv\">https://nicolargo.github.io/glances/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>nicolargo/glances: Glances an Eye on your system. A top/htop alternative for GNU/Linux, BSD, Mac OS and Windows operating systems.<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25pY29sYXJnby9nbGFuY2Vz\">https://github.com/nicolargo/glances<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Docker — Glances 3.1.4 documentation<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9nbGFuY2VzLnJlYWR0aGVkb2NzLmlvL2VuL2xhdGVzdC9kb2NrZXIuaHRtbA==\">https://glances.readthedocs.io/en/latest/docker.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>关于/var/run/docker.sock<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmZ1bmRlYnVnLmNvbS8yMDE3LzA0LzE3L2Fib3V0LWRvY2tlci1zb2NrLw==\">https://blog.fundebug.com/2017/04/17/about-docker-sock/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","性能监视","运维","可视化"]},{"title":"watchtower自动化更新docker镜像","url":"/2020/09/18/watchtower%E8%87%AA%E5%8A%A8%E5%8C%96%E6%9B%B4%E6%96%B0docker%E9%95%9C%E5%83%8F/","content":"<p><strong>什么是 watchtower ?</strong></p>\n<blockquote>\n<p>watchtower 是一款实现自动化更新 Docker 镜像与容器的实用工具。它监控着所有正在运行的容器以及相关镜像，当检测本地镜像与镜像仓库中的镜像有差异时，会自动拉取最新镜像并使用最初部署时的参数重新启动相应的容器。</p>\n</blockquote>\n<h1 id=\"Docker手动升级流程\"><a href=\"#Docker手动升级流程\" class=\"headerlink\" title=\"Docker手动升级流程\"></a>Docker手动升级流程</h1><p>在介绍自动升级前，让先我们来了解一下手动升级的流程，以 <code>Airsonic</code> 为例</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/airsonic01-1600228454902.png\" alt=\"title\"></p>\n<p>1、在注册表选择最新（latest）的映像下载（由于名字和以前下载的一样，在映像里只有一个，在DSM消息里有提示下载完成即可）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/airsonic02-1600228493146.png\" alt=\"title\"></p>\n<p>2、在容器里选择正在运行的 airsonic，在上面的操作里选择 <code>停止--&gt;清除--&gt;启动</code>，就完成升级了。（数据不会丢失）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/airsonic03-1600228510043.png\" alt=\"title\"></p>\n<p>3、映像下载慢可以使用阿里等国内镜像下载，启动完成后，已经是新版本了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/airsonic04-1600228544199.png\" alt=\"title\"></p>\n<h1 id=\"用watchtower自动升级\"><a href=\"#用watchtower自动升级\" class=\"headerlink\" title=\"用watchtower自动升级\"></a>用watchtower自动升级</h1><p>一般采用 <code>docker run</code> 方式，SSH 登录到群晖后用命令行执行</p>\n<h2 id=\"快速启动\"><a href=\"#快速启动\" class=\"headerlink\" title=\"快速启动\"></a>快速启动</h2><p>执行以下标准命令启动 <code>watchtower</code> 容器，<code>watchtower</code> 将开始监视我们正在运行的 Docker 容器，并每隔几分钟检查一次所有容器的镜像是否为最新版，如发现镜像更新将会自动停止容器，删除容器，拉取最新镜像，再以之前启动容器的命令启动容器。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run -d \\</span><br><span class=\"line\">    --name watchtower \\</span><br><span class=\"line\">    -v /var/run/docker.sock:/var/run/docker.sock \\</span><br><span class=\"line\">    containrrr/watchtower</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"指定容器更新\"><a href=\"#指定容器更新\" class=\"headerlink\" title=\"指定容器更新\"></a>指定容器更新</h2><p>如无需自动更新所有稳定运行的容器，可以配置仅更新指定容器，只需要在命令后加上容器名。例如只更新 <code>nginx</code> 和 <code>redis</code>。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run -d \\</span><br><span class=\"line\">    --name watchtower \\</span><br><span class=\"line\">    --restart always \\</span><br><span class=\"line\">    -v /var/run/docker.sock:/var/run/docker.sock \\</span><br><span class=\"line\">    containrrr/watchtower \\</span><br><span class=\"line\">    --cleanup \\</span><br><span class=\"line\">    nginx redis</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"远程主机\"><a href=\"#远程主机\" class=\"headerlink\" title=\"远程主机\"></a>远程主机</h2><p>缺省情况下，<code>watchtower</code>监控的是本地的 <code>docker daemon</code>，但是也可以监控另一台机器上的 docker，比如我本机 IP 是 <code>192.168.0.199</code>，而另一台蜗牛星际的 IP 是 <code>192.168.0.198</code></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run -d \\</span><br><span class=\"line\">    --name watchtower \\</span><br><span class=\"line\">    containrrr/watchtower --host <span class=\"string\">&quot;tcp://192.168.0.199:2375&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>或者</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run -d \\</span><br><span class=\"line\">    --name watchtower \\</span><br><span class=\"line\">    -e DOCKER_HOST=<span class=\"string\">&quot;tcp://192.168.0.199:2375&quot;</span> \\</span><br><span class=\"line\">    containrrr/watchtower</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"建议\"><a href=\"#建议\" class=\"headerlink\" title=\"建议\"></a>建议</h1><p>不建议自动更新全部，而要用指定容器更新，因为有些项目升级可能会带来很严重的兼容性问题，比如 <code>homeassistant</code> 从 <code>0.82</code> 升到 <code>0.93</code>，各种不兼容，折腾到差点放弃，所以现在虽然已经都 <code>0.114</code> 了，可我还是一直停留在 <code>0.93</code>。</p>\n<p>更多的参数和命令，比如定时更新等等，可以参考官方的文档<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb250YWlucnJyLmRldi93YXRjaHRvd2VyLw==\">https://containrrr.dev/watchtower/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>目前我觉得手动升级足够了，毕竟也才30多个镜像而已</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/1600228999348-1600228999350.png\" alt=\"title\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Remote hosts - Watchtower<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb250YWlucnJyLmRldi93YXRjaHRvd2VyL3JlbW90ZS1ob3N0cy8=\">https://containrrr.dev/watchtower/remote-hosts/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Watchtower - 自动更新 Docker 镜像与容器 - 思有云 - IOIOX<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaW9pb3guY29tL2FyY2hpdmVzLzg0Lmh0bWw=\">https://www.ioiox.com/archives/84.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>群晖NAS下自动更新docker镜像_NAS存储_什么值得买<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2E2bHJtbjZuLw==\">https://post.smzdm.com/p/a6lrmn6n/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>如何自动更新群晖docker的镜像与容器 | 生活的左上角<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9id3NreWVyLmNvbS9zeW5vbG9neS1kb2NrZXItaW5zdGFsbC13YXRjaHRvd2VyLmh0bWw=\">https://bwskyer.com/synology-docker-install-watchtower.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","运维","可视化"]},{"title":"用portainer管理docker服务","url":"/2020/09/16/%E7%94%A8portainer%E7%AE%A1%E7%90%86docker%E6%9C%8D%E5%8A%A1/","content":"<p><strong>什么是portainer？</strong></p>\n<blockquote>\n<p>portainer 是一个轻量级的 docker 图形化管理方案，可以用来管理 docker 宿主机和 docker swarm 集群。提供状态显示面板、应用模板快速部署、容器镜像网络数据卷的基本操作（包括上传下载镜像，创建容器等操作）、事件日志显示、容器控制台操作、Swarm集群和服务等集中管理和操作、登录用户管理和控制等功能。</p>\n</blockquote>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>设备多了，服务多了，docker 的管理就是一个问题，而 portainer 就是一个让 docker 管理更简单的软件，能实现多设备的集中管理，这是 portainer ​比群晖自带的 docker GUI 工具强的地方。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在 docker 注册表中搜索 <code>portainer</code> ，选择第一个 <code>portainer/portainer</code>，版本 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/download-1600227637102.png\" alt=\"title\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">/docker/portainer</td>\n<td align=\"center\">/data</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/volume-1600227674616.png\" alt=\"title\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>端口直接用默认的9000</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/port-1600227701031.png\" alt=\"title\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:9000</code> ，会看到正在载入中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/first_run-1600227735006.png\" alt=\"title\"></p>\n<p>完成后，需要新建用户</p>\n<h2 id=\"新建管理员\"><a href=\"#新建管理员\" class=\"headerlink\" title=\"新建管理员\"></a>新建管理员</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/login-1600227767242.png\" alt=\"title\"></p>\n<blockquote>\n<p>注意：如果你设置了反向代理，并通过反向代理去访问，这一步会报错<br>参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3BvcnRhaW5lci9wb3J0YWluZXIvaXNzdWVzLzEzNTI=\">https://github.com/portainer/portainer/issues/1352<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/error-1600227819185.png\" alt=\"title\"></p>\n<p>所以这里有2点需要注意：</p>\n<ul>\n<li>在创建好管理员账号之前，不要走反向代理</li>\n<li>密码必须超过8位，否则不能设置成功</li>\n</ul>\n<h2 id=\"连接Docker服务\"><a href=\"#连接Docker服务\" class=\"headerlink\" title=\"连接Docker服务\"></a>连接Docker服务</h2><p>用管理员登录后，需要配置连接到 docker 服务</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/setup01-1600227838611.png\" alt=\"title\"></p>\n<p>首先我们需要让群晖的docker服务允许通过TCP进行连接，用 SSH 连到群晖上，编辑文件 <code>/var/packages/Docker/etc/dockerd.json</code> ，并新增一行：</p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">&quot;hosts&quot; : [ &quot;tcp://192.168.0.199:2375&quot;, &quot;unix:///var/run/docker.sock&quot; ],</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/setup02-1600227865839.png\" alt=\"title\"></p>\n<p>其中的 IP 需要改成群晖主机的 IP 地址，然后用保存。接下来重启群晖的 docker 服务：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">synoservice --restart pkgctl-Docker</span><br></pre></td></tr></table></figure>\n\n<p>在之前的连接 docker 终端的界面，<code>Name</code> 随便填写，<code>Endpoint URL</code> 填写群晖的 IP 和端口2375，TLS 选择关闭，然后点击 <code>Connect</code> 按钮。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/setup03-1600227888287.png\" alt=\"title\"></p>\n<p>连接之后就能看到我们新建的 <code>Endpoint</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/setup04-1600227909597.png\" alt=\"title\"></p>\n<p>进入 <code>Endpoint info</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/setup05-1600227930799.png\" alt=\"title\"></p>\n<h2 id=\"再添加另一台群晖\"><a href=\"#再添加另一台群晖\" class=\"headerlink\" title=\"再添加另一台群晖\"></a>再添加另一台群晖</h2><p>把蜗牛星际也加进去，当然也同样需要先修改 <code>/var/packages/Docker/etc/dockerd.json</code> 文件，记得要重启，然后回到 Web界面 <code>Add Endpoint</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/setup06-1600227952921.png\" alt=\"title\"></p>\n<p>只要填名字和 IP 即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/setup07-1600227966361.png\" alt=\"title\"></p>\n<p>右上角出现</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/setup08-1600227981114.png\" alt=\"title\"></p>\n<p>在主界面会看到刚建的 <code>docker-woniu</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/setup09-1600227998902.png\" alt=\"title\"></p>\n<h1 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h1><h2 id=\"汉化\"><a href=\"#汉化\" class=\"headerlink\" title=\"汉化\"></a>汉化</h2><p>可以在 <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5uYXNnZS5jb20vYXJjaGl2ZXMvNTkuaHRtbA==\">http://www.nasge.com/archives/59.html<i class=\"fa fa-external-link-alt\"></i></span> 找到汉化的版本</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/cn_download-1600228017165.png\" alt=\"title\"></p>\n<p>在 <code>/docker/portainer</code> 中新建 <code>public</code> 目录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/cn01-1600228038540.png\" alt=\"title\"></p>\n<p>将汉化包解压到 <code>public</code> 目录，重新启动镜像，再次访问已经是中文了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/cn02-1600228056170.png\" alt=\"title\"></p>\n<p>如果要恢复英文，只要停止镜像，并删除装载路径 <code>public</code>，再重新启动就行了</p>\n<h2 id=\"版本\"><a href=\"#版本\" class=\"headerlink\" title=\"版本\"></a>版本</h2><p>左下角显示有新版本，打开官方网站显示已经有了 v2.0.0，但是官方的镜像还只能下载到 v1.24.1，看来还得等等</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/16/version-1600228072498.png\" alt=\"title\"></p>\n<p>大致用了一下，Portainer基本上可以实现对 docker 的各种操作，详细的功能还需要慢慢探索。</p>\n<p>如果你希望实现 docker 镜像在有新版本后自动升级，可以关注即将推出的用 <code>watchtower</code> 自动更新 docker 镜像。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Portainer – Docker可视化管理工具的安装配置及使用_Aurora Silent-CSDN博客<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0E2MzIxODkwMDcvYXJ0aWNsZS9kZXRhaWxzLzc4Nzc5OTIw\">https://blog.csdn.net/A632189007/article/details/78779920<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Portainer一个轻量级的Docker环境管理UI_Kubernetes中文社区<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cua3ViZXJuZXRlcy5vcmcuY24vNTg4My5odG1s\">https://www.kubernetes.org.cn/5883.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>家庭云不一样的玩法：集中管理群晖与威联通NAS上的docker服务_NAS存储_什么值得买<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2F2N203bTM0Lw==\">https://post.smzdm.com/p/av7m7m34/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>手把手带你玩转NAS 篇十九：简单易用的docker可视化管理工具——portainer简明使用教程_NAS存储_什么值得买<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2FwejNsZHcwLw==\">https://post.smzdm.com/p/apz3ldw0/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Setup and Install Portainer on Synology NAS – NAS Hosted<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9uYXNob3N0ZWQuY29tL3NldHVwLWFuZC1pbnN0YWxsLXBvcnRhaW5lci1vbi1zeW5vbG9neS1uYXMv\">https://nashosted.com/setup-and-install-portainer-on-synology-nas/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","运维","可视化"]},{"title":"用Wallabag搭建稍后阅读","url":"/2020/09/13/%E7%94%A8Wallabag%E6%90%AD%E5%BB%BA%E7%A8%8D%E5%90%8E%E9%98%85%E8%AF%BB/","content":"<p><strong>什么是稍后阅读?</strong></p>\n<blockquote>\n<p>稍后阅读即是将网页（文字、图片、多媒体）等内容，通过用户操作，在网络浏览器及服务器中进行保存，或发送到指定云存储平台及邮箱，可以满足用户的移动阅读需求。【百度百科】</p>\n</blockquote>\n<p><strong>什么是Wallabag？</strong></p>\n<blockquote>\n<p>wallabag 是一款可自行托管的 PHP 应用程序，可以让你不会丢失任何内容。只需要点击保存，然后在你有时间时阅读。wallabag 同时包含各种第三方开发的浏览器扩展和手机应用，可进入软件下载页面获取。</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖的 <code>Docker</code> 中搜索 <code>Wallabag</code>，选第一个，这是官方的版本，版本 <code>latest</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/30/1598788179972-1598788179997.png\" alt=\"title\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><table>\n<thead>\n<tr>\n<th align=\"center\">文件/文件夹</th>\n<th align=\"center\">装载路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">/docker/wallabag/images</td>\n<td align=\"center\">/var/www/wallabag/web/assets/images</td>\n</tr>\n<tr>\n<td align=\"center\">/docker/wallabag/data</td>\n<td align=\"center\">/var/www/wallabag/data</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/11/w%E5%8D%B7ok.png-1599836898992.png\" alt=\"title\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>不冲突就行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/11/w%E7%AB%AF%E5%8F%A3-1599836943100.png\" alt=\"title\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><p>数据库支持 <code>SQLite</code>、<code>MariaDB / MySQL</code>、<code>PostgreSQL</code>、<code>Redis</code>，本来想用群晖套件原来已安装的 <code>MariaDB</code> ，但一直报错，按照官方对于<code>SYMFONY__ENV__DATABASE_HOST</code> 的描述，当使用 <code>MySQL</code> 时，这个字段只能填<code>the name of the mariadb container</code>，所以最后还是用了 <code>SQLite</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">SYMFONY__ENV__DOMAIN_NAME</td>\n<td align=\"center\">缺省值 “<span class=\"exturl\" data-url=\"aHR0cHM6Ly95b3VyLXdhbGxhYmFnLXVybC1pbnN0YW5jZS5jb23igJ0v\">https://your-wallabag-url-instance.com”<i class=\"fa fa-external-link-alt\"></i></span></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/11/w%E7%8E%AF%E5%A2%83ok-1599837032541.png\" alt=\"title\"></p>\n<p>这个参数必须要填，不然web界面是这样的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/11/login_error-1599837069108.png\" alt=\"title\"></p>\n<p>从代码看，当你不设置的时候，用了缺省值，因此导致了图片等异常</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/11/link_error-1599837097748.png\" alt=\"title\"></p>\n<p>设置正确的域名后，登录界面已经可以正常显示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/11/login-1599837114901.png\" alt=\"title\"></p>\n<p>默认用户名和密码均为 <code>wallabag</code></p>\n<h1 id=\"客户端安装\"><a href=\"#客户端安装\" class=\"headerlink\" title=\"客户端安装\"></a>客户端安装</h1><p>可以在后台找到浏览器插件和移动端的下载地址</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/13/1600007262033-1600007262064.png\" alt=\"title\"></p>\n<h2 id=\"浏览器插件安装\"><a href=\"#浏览器插件安装\" class=\"headerlink\" title=\"浏览器插件安装\"></a>浏览器插件安装</h2><p>后台生成 <code>Client ID</code> 和 <code>Client secret</code>，这个在配置Chrome插件时会用到</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/11/Client_ID-1599837147646.png\" alt=\"title\"></p>\n<p>设置界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/11/w%E6%8F%92%E4%BB%B6-1599837169391.png\" alt=\"title\"></p>\n<p>填入参数</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/11/ID_%E5%AF%86%E7%A0%81ok-1599837194398.png\" alt=\"title\"></p>\n<h2 id=\"移动端安装\"><a href=\"#移动端安装\" class=\"headerlink\" title=\"移动端安装\"></a>移动端安装</h2><p>因为是自建的，所以要选<code>其他</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/11/android_wallabag1-1599837226877.jpg\" alt=\"title\"></p>\n<p>填写地址、账号和密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/11/android_wallabag2-1599837239484.jpg\" alt=\"title\"></p>\n<h1 id=\"使用和设置\"><a href=\"#使用和设置\" class=\"headerlink\" title=\"使用和设置\"></a>使用和设置</h1><h2 id=\"图片保存到本地\"><a href=\"#图片保存到本地\" class=\"headerlink\" title=\"图片保存到本地\"></a>图片保存到本地</h2><p>这样可以确保即便源站删除了，你这里的图片也不会因为源站的改变而受到影响。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/11/local_image-1599837343381.png\" alt=\"title\"></p>\n<p>测试的时候发现，因为 <code>加载 wallabag API...</code> 明显时间变长了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/11/save_image-1599837406757.png\" alt=\"title\"></p>\n<p>有时候容易出现错误</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/11/save_error-1599837432884.png\" alt=\"title\"></p>\n<p>猜测可能跟网络、SQLite 等等相关，Android 上要好很多。</p>\n<h2 id=\"保存文章的方式\"><a href=\"#保存文章的方式\" class=\"headerlink\" title=\"保存文章的方式\"></a>保存文章的方式</h2><ul>\n<li>通过chrome插件收藏，在浏览器上点击图标 </li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/13/1600007553618-1600007553621.png\" alt=\"title\"></p>\n<ul>\n<li>在wallabag的后台，直接输入要保存的网页的 url</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/13/1600007735441-1600007735443.png\" alt=\"title\"></p>\n<ul>\n<li>手机上公众号的文章收藏方法，和之前我们分享的《<a href=\"https://laosu.ml/2020/06/30/%E5%A6%82%E4%BD%95%E6%94%B6%E8%97%8F%E5%BE%AE%E4%BF%A1%E5%86%85%E5%AE%B9%E5%88%B0%E4%B8%BA%E7%9F%A5%E7%AC%94%E8%AE%B0/\">如何收藏微信内容到为知笔记</a>》一样，需要通过浏览器打开之后，再分享到 <code>wallabag</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/11/android_wallabag4-1599837273111.jpg\" alt=\"title\"></p>\n<p>最后展示一张完整的首页界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/11/first-1599837298400.png\" alt=\"title\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>保存网页、稍后阅读，自建 Wallabag 服务也是一种选择 - 少数派<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zc3BhaS5jb20vcG9zdC81Mjk3OQ==\">https://sspai.com/post/52979<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>自建稍后阅读服务之 Wallabag<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9idXN5LmltL3Bvc3QvcmVhZC1pdC1sYXRlci13YWxsYWJhZy8=\">https://busy.im/post/read-it-later-wallabag/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>重温 wallabag：Instapaper 的开源替代品 - 知乎<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80MjY2NTk4OA==\">https://zhuanlan.zhihu.com/p/42665988<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>【NAS玩机十一年高阶玩家教程系列其二：wallabag】_NAS存储_什么值得买<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2Fvb3cycm05Lw==\">https://post.smzdm.com/p/aoow2rm9/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖,稍后阅读]"]},{"title":"能构建知识库的笔记软件obsidian试用","url":"/2020/09/09/%E8%83%BD%E6%9E%84%E5%BB%BA%E7%9F%A5%E8%AF%86%E5%BA%93%E7%9A%84%E7%AC%94%E8%AE%B0%E8%BD%AF%E4%BB%B6obsidian%E8%AF%95%E7%94%A8/","content":"<p><strong>什么是obsidian？</strong></p>\n<blockquote>\n<p>Obsidian 是一款支持 macOS、Windows、Linux 多平台的 Markdown 编辑器，同时也支持双向链接，带有效果相当惊艳的网状笔记视图，它还支持标签管理、多种插件（例如日记、实时预览、星标、自定义CSS 样式等），是一款功能强大的知识库软件。</p>\n</blockquote>\n<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>Obisidian 最主要的特点是采用纯文本的 <code>Markdown</code> 文件，而且所有文件均存放于本地，可以使用任何形式的网盘/Git 进行同步，并且免费使用，当然如果你想的话，官方也即将提供加密同步服务——$4/月。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/29/1598697978047-1598697978050.png\" alt=\"title\"></p>\n<p>除此之外官方还提供发布分享服务，当然也是需要付费的，对我而言，<code>Obsidian</code> 的本地功能用于资料的梳理已完全足够了。</p>\n<p>我目前同步用的是 <code>Syncthing</code>，关于  <code>Syncthing</code> 可以参考上一篇文章 《<a href=\"https://laosu.ml/2020/09/04/Syncthing%E6%96%87%E4%BB%B6%E5%A4%B9%E5%90%8C%E6%AD%A5%E7%A5%9E%E5%99%A8/\">Syncthing文件夹同步神器</a>》</p>\n<p>至于发布，除了一个月发几篇公众号之外，其他都是工作笔记，不存在发布的问题，所以暂时可以不用考虑。</p>\n<h1 id=\"基础\"><a href=\"#基础\" class=\"headerlink\" title=\"基础\"></a>基础</h1><h2 id=\"设置库\"><a href=\"#设置库\" class=\"headerlink\" title=\"设置库\"></a>设置库</h2><p>第一次运行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/27/1598492776803-1598492776810.png\" alt=\"title\"></p>\n<p>新建</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/27/1598494497636-1598494497643.png\" alt=\"title\"></p>\n<p>首次首界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/27/1598494543978-1598494543986.png\" alt=\"title\"></p>\n<h2 id=\"设置中文\"><a href=\"#设置中文\" class=\"headerlink\" title=\"设置中文\"></a>设置中文</h2><p>左下角【Setting】-&gt;【About】-&gt;【Language】，设置为中文</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/27/1598494727192-1598494727200.png\" alt=\"title\"></p>\n<p><code>relaunch</code> 之后就是中文界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/27/1598495816906-1598495816914.png\" alt=\"title\"></p>\n<h2 id=\"中文的使用帮助\"><a href=\"#中文的使用帮助\" class=\"headerlink\" title=\"中文的使用帮助\"></a>中文的使用帮助</h2><p>在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0phY2tpZXhpYW8vb2JzaWRpYW4=\">https://github.com/Jackiexiao/obsidian<i class=\"fa fa-external-link-alt\"></i></span> 可以找到中文版的帮助</p>\n<p>直接下载 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0phY2tpZXhpYW8vb2JzaWRpYW4vYXJjaGl2ZS9tYXN0ZXIuemlw\">https://github.com/Jackiexiao/obsidian/archive/master.zip<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>解压后用 <code>obsidian</code> 打开。左下角 <code>打开其他库</code> 或者 <code>Open another vault</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/27/1598496641899-1598496641901.png\" alt=\"title\"></p>\n<p>我是直接将 <code>中文帮助</code> 目录丢到了刚才新建的库 <code>KW</code> 里</p>\n<blockquote>\n<p>但是这样会导致图看不到，所以最好还是把整个文件夹丢进去比较好</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/27/1598496774941-1598496774949.png\" alt=\"title\"></p>\n<p>返回到 <code>obsidian</code> 主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/27/1598496813275-1598496813280.png\" alt=\"title\"></p>\n<h2 id=\"图谱\"><a href=\"#图谱\" class=\"headerlink\" title=\"图谱\"></a>图谱</h2><p>选中 <code>插件列表</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/27/1598496925268-1598496925278.png\" alt=\"title\"></p>\n<p>点击圆点</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/27/1598496988239-1598496988249.png\" alt=\"title\"></p>\n<h2 id=\"搜索\"><a href=\"#搜索\" class=\"headerlink\" title=\"搜索\"></a>搜索</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/27/1598497122956-1598497122966.png\" alt=\"title\"></p>\n<h2 id=\"尝试最新版\"><a href=\"#尝试最新版\" class=\"headerlink\" title=\"尝试最新版\"></a>尝试最新版</h2><p>在 <code>Obsidian</code> 的首页 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9vYnNpZGlhbi5tZC8=\">https://obsidian.md/<i class=\"fa fa-external-link-alt\"></i></span>，就能看到和自己平台对应的版本</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/09/download-1599651894564.png\" alt=\"title\"></p>\n<p>但是如果你想吃螃蟹，参与内部版本的测试，则需要在GitHub才能找到：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL29ic2lkaWFubWQvb2JzaWRpYW4tcmVsZWFzZXMvcmVsZWFzZXM=\">https://github.com/obsidianmd/obsidian-releases/releases<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/09/github_download-1599651943859.png\" alt=\"title\"></p>\n<p>但是我们解压出来是 <code>.asar</code>要怎么样使用呢？以 <code>Mac</code> 为例，选中 <code>Obsidian</code> 的图标右键 –&gt; 显示包内容</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/09/content-1599651978786.png\" alt=\"title\"></p>\n<p>进入 <code>Contents</code> 目录 –&gt;  <code>Resources</code> 目录， 替换掉 <code>obsidian.asar</code> 文件，在替换前记得备份，完成后再看版本</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/09/version-1599652013356.png\" alt=\"title\"></p>\n<h1 id=\"进阶\"><a href=\"#进阶\" class=\"headerlink\" title=\"进阶\"></a>进阶</h1><p>工具本身作为一个 <code>Markdown</code> 编辑器还是很容易上手的，但是想要提高也不太容易，B站有些关于 <code>Obsidian</code> 的视频还是不错的，重要的不是工具，而是方法，<code>Obsidian</code>背后的逻辑是卡片盒笔记法，这需要我们持续不断的实践。</p>\n<h1 id=\"chrome插件\"><a href=\"#chrome插件\" class=\"headerlink\" title=\"chrome插件\"></a>chrome插件</h1><p>插件本身和 <code>Obsidian</code> 没啥关系，但是对于记笔记这件事却有很大的帮助，当然如果你访问不了 <code>Chrome 应用商店</code>，那我也爱莫能助，还是直接跳过这个部分吧。</p>\n<h2 id=\"TabCopy\"><a href=\"#TabCopy\" class=\"headerlink\" title=\"TabCopy\"></a>TabCopy</h2><p>TabCopy 能够一键复制网页的标题和网址，这对需要记录一些资料的标题及链接或需要将网页分享给他人查看时非常方便。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/29/1598712218798-1598712218800.png\" alt=\"title\"></p>\n<p>像我的参考文档中的引用格式</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/09/Quote-1599652050068.png\" alt=\"title\"></p>\n<p>下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaHJvbWUuZ29vZ2xlLmNvbS93ZWJzdG9yZS9kZXRhaWwvdGFiY29weS9taWNkbGxpaGdvcHBtZWpwZWNta2lsZ2dtYWFnZmRtYj91dG1fc291cmNlPWNocm9tZS1udHAtaWNvbg==\">https://chrome.google.com/webstore/detail/tabcopy/micdllihgoppmejpecmkilggmaagfdmb?utm_source=chrome-ntp-icon<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"Roam-Highlighter\"><a href=\"#Roam-Highlighter\" class=\"headerlink\" title=\"Roam-Highlighter\"></a>Roam-Highlighter</h2><p>这应该是为 <code>Roam Research</code> 做的插件，可以方便的将 Web 中的文字高亮并导入到  <code>Roam Researc</code> 中，也支持 <code>Obsidian</code> 标签，也能很方便的导入 <code>Obsidian</code> 。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/29/1598712191795-1598712191797.png\" alt=\"title\"></p>\n<p>下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaHJvbWUuZ29vZ2xlLmNvbS93ZWJzdG9yZS9kZXRhaWwvcm9hbS1oaWdobGlnaHRlci9tY29pbWllZ2xtaGRqZG9wbGhwY21pZmdwbGtiZmlicD91dG1fc291cmNlPWNocm9tZS1udHAtaWNvbg==\">https://chrome.google.com/webstore/detail/roam-highlighter/mcoimieglmhdjdoplhpcmifgplkbfibp?utm_source=chrome-ntp-icon<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"Web-Clipper\"><a href=\"#Web-Clipper\" class=\"headerlink\" title=\"Web Clipper\"></a>Web Clipper</h2><p>支持 Notion、GitHub、OneNote、我来等各种笔记，也可以将网页转成 <code>Markdown</code> 格式直接下载到本地，这是个开源的插件。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/29/1598712361844-1598712361846.png\" alt=\"title\"></p>\n<p>下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaHJvbWUuZ29vZ2xlLmNvbS93ZWJzdG9yZS9kZXRhaWwvd2ViLWNsaXBwZXIvbWhmYm9maW9rbXBwZ2RsaWFrbWluYmdkZ2NtYmhiYWM/dXRtX3NvdXJjZT1jaHJvbWUtbnRwLWljb24=\">https://chrome.google.com/webstore/detail/web-clipper/mhfbofiokmppgdliakminbgdgcmbhbac?utm_source=chrome-ntp-icon<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"GitHub加速\"><a href=\"#GitHub加速\" class=\"headerlink\" title=\"GitHub加速\"></a>GitHub加速</h2><p>这个插件和笔记都没关系，只是如果你经常要去下载 <code>Obsidian</code> 内测版的话，有了这个插件可能会快一些吧。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/09/github-1599652092868.png\" alt=\"title\"></p>\n<p>下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaHJvbWUuZ29vZ2xlLmNvbS93ZWJzdG9yZS9kZXRhaWwvZ2l0aHViJUU1JThBJUEwJUU5JTgwJTlGL21mbmtmbGlkam5sYWRua2xkZm9ubmFpY2xqcHBhaHBnP3V0bV9zb3VyY2U9Y2hyb21lLW50cC1pY29u\">https://chrome.google.com/webstore/detail/github%E5%8A%A0%E9%80%9F/mfnkflidjnladnkldfonnaicljppahpg?utm_source=chrome-ntp-icon<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>官网<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9vYnNpZGlhbi5tZC8=\">https://obsidian.md/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>How I use Obsidian to manage my goals, tasks, notes, and software development knowledge base<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW5pc2FuZXdzLmNvbS9ob3ctaS11c2Utb2JzaWRpYW4tdG8tbWFuYWdlLW15LWdvYWxzLXRhc2tzLW5vdGVzLWFuZC1zb2Z0d2FyZS1kZXZlbG9wbWVudC1rbm93bGVkZ2UtYmFzZS8=\">https://www.anisanews.com/how-i-use-obsidian-to-manage-my-goals-tasks-notes-and-software-development-knowledge-base/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>从卡片链接到大脑联想，基于 Obsidian 的卡片盒笔记法实践 - 少数派<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zc3BhaS5jb20vcG9zdC82MDgwMg==\">https://sspai.com/post/60802<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Chrome扩展程序——TabCopy：一键复制网页标题和网址_Erik_ly的博客-CSDN博客<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTIzMTgwNzQvYXJ0aWNsZS9kZXRhaWxzLzc3NDM1NzI0\">https://blog.csdn.net/u012318074/article/details/77435724<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["笔记","双向链接"]},{"title":"Syncthing文件夹同步神器","url":"/2020/09/04/Syncthing%E6%96%87%E4%BB%B6%E5%A4%B9%E5%90%8C%E6%AD%A5%E7%A5%9E%E5%99%A8/","content":"<p><strong>什么是 Syncthing？</strong></p>\n<blockquote>\n<p>Syncthing是一個開源的文件同步客戶端與伺服器軟體，採用Go語言編寫。它可以在本地網絡上的設備之間或通過Internet在遠程設備之間同步文件，使用了其獨有的對等自由塊交換協議。原始碼託管在GitHub上 【維基百科】</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/27/1598527713988-1598527714057.png\" alt=\"title\"></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖的 <code>Docker</code> 中搜索 <code>syncthing</code>，选第二个，这是官方的镜像，版本 <code>latest</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/27/1598528457772-1598528457779.png\" alt=\"title\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">/wherever/st-sync</td>\n<td align=\"center\">/var/syncthing</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/27/1598529398892-1598529398895.png\" alt=\"title\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>默认的就可以</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/27/1598531022141-1598531022144.png\" alt=\"title\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><p>默认的就可以</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/27/1598529884395-1598529884397.png\" alt=\"title\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:8384</code> ，第一次会有是<code>运行匿名使用报告</code>的提示，选 <code>否</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/27/1598531171486-1598531171488.png\" alt=\"title\"></p>\n<h2 id=\"设置访问-Syncthing-管理界面的密码\"><a href=\"#设置访问-Syncthing-管理界面的密码\" class=\"headerlink\" title=\"设置访问 Syncthing 管理界面的密码\"></a>设置访问 Syncthing 管理界面的密码</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/27/1598531403781-1598531403785.png\" alt=\"title\"></p>\n<p>设置好用户名和密码，保存</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/27/1598540094555-1598540094557.png\" alt=\"title\"></p>\n<h2 id=\"windows平台\"><a href=\"#windows平台\" class=\"headerlink\" title=\"windows平台\"></a>windows平台</h2><p>建议使用 <code>SyncTrayzor</code>，拥有图形用户界面并可以最小化到托盘后台运行，并可以设置开机启动。</p>\n<p>github上的下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NhbnRvbjcvU3luY1RyYXl6b3IvcmVsZWFzZXMv\">https://github.com/canton7/SyncTrayzor/releases/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/31/1598880269327-1598880269330.png\" alt=\"title\"></p>\n<p>但是需要注意，<code>SyncTrayzor</code> 最新版本也是2019年7月27号发布的，已经过了1年多，感觉作者已经弃坑了，所以<code>SyncTrayzor</code> 中的 <code>Syncthing</code> 版本是比较低，才 <code>v1.2.0</code> ，需要我们下载最新的版本进行替换，当然不升级也能用，尝试过台式机上的 <code>v1.2.0</code> 可以和群晖上的 <code>v1.8.0</code> 同步，也是完全没问题的</p>\n<p>github上的下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N5bmN0aGluZy9zeW5jdGhpbmcvcmVsZWFzZXM=\">https://github.com/syncthing/syncthing/releases<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/31/1598875947266-1598875947268.png\" alt=\"title\"></p>\n<p>如果<code>SyncTrayzor</code>尚未运行过，直接替换根目录下的 <code>Syncthing.exe</code> 即可，如果已经运行过，要替换 <code>data</code> 目录下的 <code>Syncthing.exe</code>，更换之后，版本就会显示成 <code>v1.8.0</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/09/04/1599221602040-1599221602042.png\" alt=\"title\"></p>\n<p>添加群晖的设备ID</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/31/1598875507376-1598875507416.png\" alt=\"title\"></p>\n<p>群晖的设备ID能在网页上查到</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/27/1598535544096-1598535544100.png\" alt=\"title\"></p>\n<p>设备ID就是一串字符和一个二维码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/27/1598535609545-1598535609546.png\" alt=\"title\"></p>\n<h2 id=\"Mac-平台\"><a href=\"#Mac-平台\" class=\"headerlink\" title=\"Mac 平台\"></a>Mac 平台</h2><p>github上的下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N5bmN0aGluZy9zeW5jdGhpbmctbWFjb3MvcmVsZWFzZXMv\">https://github.com/syncthing/syncthing-macos/releases/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>开机启动</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/28/1598577486739-1598577486746.png\" alt=\"title\"></p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><p>因为群晖是24小时开机的，所以所有需要同步的设备都和群晖互加</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/31/1598881146444-1598881146447.png\" alt=\"title\"></p>\n<p>每台设备都只能看到自己和群晖，而在群晖上能看到其他所有的远程设备</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/31/1598881332126-1598881332127.png\" alt=\"title\"></p>\n<p>因为我们没有搭建自己的 <code>discovery server</code> 和 <code>relay server</code>，所以地址列表里只要保持 <code>dynamic</code> 就行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/31/1598881476624-1598881476625.png\" alt=\"title\"></p>\n<p>是否需要把群晖上的 <code>Syncthing webUI</code> 映射出去呢？个人觉得没啥必要，因为也就开始相互添加的时候需要查询设备ID和进行同意，之后都是靠 <code> global discovery server</code> 来找到设备了，而速度则取决于 <code>relay server</code>，如果速度不理想，可以考虑自己搭建 <code>Syncthing</code> 发现和中继服务器。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Syncthing的安裝與使用<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaXRyZWFkMDEuY29tL2NvbnRlbnQvMTU0OTAyMDEzOS5odG1s\">https://www.itread01.com/content/1549020139.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Syncthing就是我要的同步备份软件<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aGloLm1lL3N5bmN0aGluZy10aGUtYmVzdC8=\">https://zhih.me/syncthing-the-best/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Syncthing – 数据同步利器—自己的网盘，详细安装配置指南，内网使用，发现服务器配置，更新docker<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vamFja2FkYW0vcC84NTY4ODMzLmh0bWw=\">https://www.cnblogs.com/jackadam/p/8568833.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Syncthing - P2P文件同步工具<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC82OTI2NzAyMA==\">https://zhuanlan.zhihu.com/p/69267020<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>點對點傳輸的同步軟體Syncthing：無限擴大個人的線上儲<br>地址：<span class=\"exturl\" data-url=\"aHR0cDovL2pkZXYudHcvYmxvZy80ODQ0L3N5bmN0aGluZy1wZWVyLXRvLXBlZXItc3luYy10b29s\">http://jdev.tw/blog/4844/syncthing-peer-to-peer-sync-tool<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>使用Syncthing搭建我们的私有同步网盘 db1024 db1024<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZGIxMDI0LmNvbS9pbmRleC5waHAvMjAxOS8wNC8yOS8lRTQlQkQlQkYlRTclOTQlQThzeW5jdGhpbmclRTYlOTAlQUQlRTUlQkIlQkElRTYlODglOTElRTQlQkIlQUMlRTclOUElODQlRTclQTclODElRTYlOUMlODklRTUlOTAlOEMlRTYlQUQlQTUlRTclQkQlOTElRTclOUIlOTgv\">https://www.db1024.com/index.php/2019/04/29/%E4%BD%BF%E7%94%A8syncthing%E6%90%AD%E5%BB%BA%E6%88%91%E4%BB%AC%E7%9A%84%E7%A7%81%E6%9C%89%E5%90%8C%E6%AD%A5%E7%BD%91%E7%9B%98/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","同步","云盘"]},{"title":"搭建自己的聊天服务器（Element篇）","url":"/2020/09/01/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E8%81%8A%E5%A4%A9%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88Element%E7%AF%87%EF%BC%89/","content":"<p><strong>什么是 Matrix 协议 ？</strong></p>\n<blockquote>\n<p>Matrix 是一種用於即時通訊的開放協定。它允許擁有一個通訊服務提供商帳戶的用戶與不同服務提供商的用戶進行網路聊天，IP語音和影片電話。也就是說，它旨在使不同服務提供商之間的即時通訊無縫工作，就像使用電子郵件一樣。採用該協定的軟體有Riot.im。 【維基百科】</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/22/1598077660389-1598077660394.png\" alt=\"title\"></p>\n<p>上图展示了不同 Matrix home server 上的客户之间是如何通讯的，这是一种类似电子邮件的方式</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/22/1598081495380-1598081495382.png\" alt=\"title\"></p>\n<p>架构图展示的是不同服务器之间的关系</p>\n<p><strong>什么是 Element ？</strong></p>\n<blockquote>\n<p>Element 原来叫 Riot.im，是一个基于 Matrix 协议的协作平台，可以在 iOS、Android、Web 端运行，完全由自身控制的通用安全聊天应用程序。支持多大25种语言（支持中文），且还在不断地增加！可以应用到：即时通讯、视频会议、智能通知、机器人等。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/21/1597997280169-1597997280181.png\" alt=\"title\"></p>\n<p>您可以在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXRyaXgub3JnL2RvY3MvcHJvamVjdHMvdHJ5LW1hdHJpeC1ub3cv\">https://matrix.org/docs/projects/try-matrix-now/<i class=\"fa fa-external-link-alt\"></i></span> 找到支持 Matrix 协议的各种资源，包括服务器、客户端及 SDK 等等。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>element 只是支持 Matrix 协议的客户端，其客户端涵盖了 Web, Android, iOS, macOS, Windows &amp; Linux等几个主流平台，所以我们需要自己搭建 Matrix 服务器，当然也可以直接加入已有的 Matrix 服务器。</p>\n<p>公共服务器列表：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaGVsbG8tbWF0cml4Lm5ldC9wdWJsaWNfc2VydmVycy5waHA=\">https://www.hello-matrix.net/public_servers.php<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"安装服务端Synapse\"><a href=\"#安装服务端Synapse\" class=\"headerlink\" title=\"安装服务端Synapse\"></a>安装服务端Synapse</h2><p>在 <code>Docker</code> 注册表中搜索 <code>Synapse</code> ，选择 <code>matrixdotorg/synapse</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/21/1597999012573-1597999012578.png\" alt=\"title\"></p>\n<p>SSH 登录到群晖</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 生成配置文件</span></span><br><span class=\"line\">docker run -it --rm \\</span><br><span class=\"line\">    -v /volume1/docker/matrix:/data \\</span><br><span class=\"line\">    -e SYNAPSE_SERVER_NAME=mx.xxsu.tk \\</span><br><span class=\"line\">    -e SYNAPSE_REPORT_STATS=yes \\</span><br><span class=\"line\">    matrixdotorg/synapse:latest generate</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 运行</span></span><br><span class=\"line\">docker run -d --name synapse \\</span><br><span class=\"line\">    -v /volume1/docker/matrix:/data \\</span><br><span class=\"line\">    -p 8008:8008 \\</span><br><span class=\"line\">    matrixdotorg/synapse:latest</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"打开注册\"><a href=\"#打开注册\" class=\"headerlink\" title=\"打开注册\"></a>打开注册</h3><p>修改 <code>/volume1/docker/matrix/homeserver.yaml</code> 中的参数</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Enable registration for new users.</span></span><br><span class=\"line\"><span class=\"comment\"># 允许注册新用户，默认值是 false</span></span><br><span class=\"line\"><span class=\"attr\">enable_registration:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"新建用户\"><a href=\"#新建用户\" class=\"headerlink\" title=\"新建用户\"></a>新建用户</h3><p>当然你也可以关闭注册，自己在后台新建用户</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">register_new_matrix_user -c /data/homeserver.yaml http://localhost:8008</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/22/1598072386115-1598072386117.png\" alt=\"title\"></p>\n<h2 id=\"安装-Web-端-riot-web\"><a href=\"#安装-Web-端-riot-web\" class=\"headerlink\" title=\"安装 Web 端 riot-web\"></a>安装 Web 端 riot-web</h2><p>在 <code>Docker</code> 注册表中搜索 <code>vectorim</code> ，选择 <code>vectorim/riot-web</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/21/1597996900806-1597996900840.png\" alt=\"title\"></p>\n<h3 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h3><p>关于 <code>config.json</code>，详细的说明文档在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3ZlY3Rvci1pbS9lbGVtZW50LXdlYi9ibG9iL2RldmVsb3AvZG9jcy9jb25maWcubWQ=\">https://github.com/vector-im/element-web/blob/develop/docs/config.md<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>可以在这里 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3ZlY3Rvci1pbS9lbGVtZW50LXdlYi9ibG9iL2RldmVsb3AvY29uZmlnLnNhbXBsZS5qc29u\">https://github.com/vector-im/element-web/blob/develop/config.sample.json<i class=\"fa fa-external-link-alt\"></i></span> 直接复制粘贴 <code>config.sample.json</code> 的内容。</p>\n<p>之后直接在卷里 <code>添加文件</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/22/1598029798594-1598029798599.png\" alt=\"title\"></p>\n<h3 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h3><p>端口只要不冲突即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/22/1598030925417-1598030925420.png\" alt=\"title\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>第一次运行居然显示不支持浏览器</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/22/1598031227607-1598031227612.png\" alt=\"title\"></p>\n<p>而实际上我的浏览器已经是最新版本的 <code>Chrome</code> 了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/22/1598030814939-1598030814946.png\" alt=\"title\"></p>\n<p>修改语言</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/22/1598032446000-1598032446005.png\" alt=\"title\"></p>\n<p>中文看起来习惯多了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/22/1598032629803-1598032629806.png\" alt=\"title\"></p>\n<h2 id=\"登入\"><a href=\"#登入\" class=\"headerlink\" title=\"登入\"></a>登入</h2><p>如果已经在后台建好了账号，可以直接选择 <code>登入</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/22/1598073300784-1598073300787.png\" alt=\"title\"></p>\n<p>需要手动修改服务器地址，如果没有备案，记得把端口也带上</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/22/1598073771395-1598073771398.png\" alt=\"title\"></p>\n<p>输入账号、密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/22/1598073626932-1598073626934.png\" alt=\"title\"></p>\n<p>登录成功后，需要设置安全备份</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/22/1598074032507-1598074032510.png\" alt=\"title\"></p>\n<p>安全密钥是这样的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/22/1598074091967-1598074091971.png\" alt=\"title\"></p>\n<p>安全密码设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/22/1598074145492-1598074145495.png\" alt=\"title\"></p>\n<p>如果密码不符合要求，会有相应的提示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/22/1598074281177-1598074281179.png\" alt=\"title\"></p>\n<p>这个密码够强悍，可自己也记不住，还是要靠 <code>bitwarden</code> 才行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/22/1598074398221-1598074398224.png\" alt=\"title\"></p>\n<p>个人感觉如果是在不同的机器上使用 <code>Element</code> ，还是安全密码更方便一些</p>\n<p>首界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/22/1598074665651-1598074665653.png\" alt=\"title\"></p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><p>除网页版之外，在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9yb2NrZXQuY2hhdC9pbnN0YWxsLw==\">https://element.io/get-started<i class=\"fa fa-external-link-alt\"></i></span> 可以下载桌面和移动端应用</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/22/1598076807180-1598076807182.png\" alt=\"title\"></p>\n<p>Android移动端如果下载存在问题，可以去 <code>F-Droid</code> 下载</p>\n<p>下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9mLWRyb2lkLm9yZy9wYWNrYWdlcy9pbS52ZWN0b3IuYXBwLw==\">https://f-droid.org/packages/im.vector.app/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>可以拉到底直接下载 <code>apk</code> 文件，也可以先下载 <code>F-Droid</code> 客户端，不过速度有点慢，不行可以多下几次。</p>\n<h2 id=\"网页版\"><a href=\"#网页版\" class=\"headerlink\" title=\"网页版\"></a>网页版</h2><h3 id=\"加联系人\"><a href=\"#加联系人\" class=\"headerlink\" title=\"加联系人\"></a>加联系人</h3><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/22/1598078287029-1598078287030.png\" alt=\"title\"></p>\n<h3 id=\"建聊天室\"><a href=\"#建聊天室\" class=\"headerlink\" title=\"建聊天室\"></a>建聊天室</h3><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/22/1598078092973-1598078092977.png\" alt=\"title\"></p>\n<p>邀请用户</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/22/1598078207415-1598078207418.png\" alt=\"title\"></p>\n<h2 id=\"移动端\"><a href=\"#移动端\" class=\"headerlink\" title=\"移动端\"></a>移动端</h2><p>选 <code>Other</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/22/1598079470743-1598079470745.png\" alt=\"title\"></p>\n<p>自己输入服务器地址</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/22/1598079499071-1598079499074.png\" alt=\"title\"></p>\n<p>注册或者登陆</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/22/1598079659304-1598079659306.png\" alt=\"title\"></p>\n<p>登陆后会收到邀请</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/22/1598079751509-1598079751511.png\" alt=\"title\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/22/1598079775395-1598079775397.png\" alt=\"title\"></p>\n<h2 id=\"音视频呼叫\"><a href=\"#音视频呼叫\" class=\"headerlink\" title=\"音视频呼叫\"></a>音视频呼叫</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/22/1598079885811-1598079885816.png\" alt=\"title\"></p>\n<p>不需要依赖第三方应用，开箱即用，这点比较方便。</p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>目前测试的几款通讯软件，虽然各有特点，但毕竟都号称是 <code>slack</code> 的替代品，所以用法大同小异，稍稍用用就习惯了</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>[资源分享] Riot-IM：是一个开源免费的即时通讯聊天协作工具，功能丰富且跨平台——Riot-IM<br>地址：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zb29sY28uY29tL3Bvc3QvMzA5ODhfMV8xLmh0bWw=\">http://www.soolco.com/post/30988_1_1.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>一款开源免费的多功能聊天室：Riot.im安装教程<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubW9lcmF0cy5jb20vYXJjaGl2ZXMvNTk1Lw==\">https://www.moerats.com/archives/595/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>借美国禁用微信，再谈去中心化的即时通信与Matrix协议<br>地址：   <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXR0ZXJzLm5ld3MvQHd6bWtua2d6aGhuLyVFNSU4MCU5RiVFNyVCRSU4RSVFNSU5QiVCRCVFNyVBNiU4MSVFNyU5NCVBOCVFNSVCRSVBRSVFNCVCRiVBMS0lRTUlODYlOEQlRTglQjAlODglRTUlOEUlQkIlRTQlQjglQUQlRTUlQkYlODMlRTUlOEMlOTYlRTclOUElODQlRTUlOEQlQjMlRTYlOTclQjYlRTklODAlOUElRTQlQkYlQTElRTQlQjglOEVtYXRyaXglRTUlOEQlOEYlRTglQUUlQUUtYmFmeXJlaWZodW01c2l5Z3czemJiMnFzdW5zYmdzaTRvbDdraDJ5bGdnYzVxMnpjdmtkZWE3cHByaW0=\">https://matters.news/@wzmknkgzhhn/%E5%80%9F%E7%BE%8E%E5%9B%BD%E7%A6%81%E7%94%A8%E5%BE%AE%E4%BF%A1-%E5%86%8D%E8%B0%88%E5%8E%BB%E4%B8%AD%E5%BF%83%E5%8C%96%E7%9A%84%E5%8D%B3%E6%97%B6%E9%80%9A%E4%BF%A1%E4%B8%8Ematrix%E5%8D%8F%E8%AE%AE-bafyreifhum5siygw3zbb2qsunsbgsi4ol7kh2ylggc5q2zcvkdea7pprim<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>安装Matrix系统（Riot.im）的服务端Synapse<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC81YzQ0NWQ4Njk4YTQ=\">https://www.jianshu.com/p/5c445d8698a4<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>How to install Matrix Synapse Home Server<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly91cGNsb3VkLmNvbS9jb21tdW5pdHkvdHV0b3JpYWxzL2luc3RhbGwtbWF0cml4LXN5bmFwc2Uv\">https://upcloud.com/community/tutorials/install-matrix-synapse/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","IM","即时通讯","element"]},{"title":"你现在用什么做笔记？","url":"/2020/08/29/%E4%BD%A0%E7%8E%B0%E5%9C%A8%E7%94%A8%E4%BB%80%E4%B9%88%E5%81%9A%E7%AC%94%E8%AE%B0%EF%BC%9F/","content":"<p>大概是4~5月份的时候，小苏同学给我发了一篇文章，《<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80OTI2MzMwNg==\">我的最后一款笔记应用-Notion<i class=\"fa fa-external-link-alt\"></i></span>》，有兴趣可以去看看</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/08/29/1598680991905-1598680991943.png\" alt=\"title\"></p>\n<p><code>Notion</code> 作为一款 All-in-one的笔记，除了笔记还包含了团队wiki、文档管理、项目管理、工作流等，尤其是其漂亮的外观，在页面上可以通过拖拽、链接来组织内容，让人耳目一新，原来笔记还可以是这样的。不过虽然有免费方案，但存在诸多的限制，于是我默默看了一眼明年才到期的 wiznote。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/08/29/1598681779808-1598681779815.png\" alt=\"title\"></p>\n<p>在 <code>wiznote</code> 之前我用过 <code>Evernote</code>，而且是重度使用者，冲过几年的高级会员，其客户端采用单数据库文件，经历了几次文件损坏，虽然笔记没有丢失，但每次都需要重新同步</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/30/1598760668205-1598760668232.png\" alt=\"title\"></p>\n<p>期间还尝试过 <code>onenote</code>，功能强大还免费，但是同步时灵时不灵的要看运气，改过 <code>Hosts</code> 也翻过墙，太累了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/30/1598760747263-1598760747265.png\" alt=\"title\"></p>\n<p><code>有道云笔记</code>，一言难尽</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/30/1598761788610-1598761788612.png\" alt=\"title\"></p>\n<p>放弃不代表一无是处，留下也不见得就是完全满意， <code>wiznote</code> 这几年有很多的进步，包括私有化部署，推出 Lite 版等等，但是最后对我而言，因为只支持树状文件组织，缺乏良好的搜索，只能标注 <code>tag</code> ，最终沦为了一个信息仓库，不断的吞噬着传入的各种信息，像一个黑洞一样。易收藏是做到了，但依然难整理，如果只是收藏而不整理，是不会带来任何的知识的。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/30/1598761949163-1598761949165.png\" alt=\"title\"></p>\n<p>最近又有同事向我推荐 <code>Notion</code>，考虑到 <code>Notion</code> 已经被墙，所以我一直在寻找国内是否有类似的产品，结果还真找到了，前有 <code>寒舟</code>，后有 <code>我来</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/30/1598762364624-1598762364626.png\" alt=\"title\"></p>\n<p><code>寒舟</code>已停止开发，也停止了运营，原因就不说了，有兴趣的同学自行百度； <code>我来</code> 正在内测，不过需要邀请码才能参加，有兴趣想了解或者愿意折腾的同学，可以直接戳 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cud29sYWkuY29tL3NpZ251cD9pbnZpdGF0aW9uPVZCM0RHTjM=\">https://www.wolai.com/signup?invitation=VB3DGN3<i class=\"fa fa-external-link-alt\"></i></span>，邀请码就是：<code>VB3DGN3</code>，一个码可以注册99人，先到先得了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/30/1598762037722-1598762037724.png\" alt=\"title\"></p>\n<p>通过研究 <code>我来</code>，我才知道了 <code>双向链接</code> 和 <code>关系图谱</code>，这才是整理的正确姿势嘛，而这个功能 <code>Notion</code> 目前还不支持</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/29/p314729297-1598686561141.jpg\" alt=\"title\"><br>（上图来自：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZG91YmFuLmNvbS9ncm91cC90b3BpYy8xODU4MjI4NzIv\">https://www.douban.com/group/topic/185822872/<i class=\"fa fa-external-link-alt\"></i></span>）</p>\n<p>不少人觉得 <code>我来</code> 就是 <code>Notion</code> + <code>Roam</code> 的综合体，所以通过了解 <code>Roam Research</code>，又知道了 <code>Zettelkasten</code> 卡片盒</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/29/1598688764107-1598688764111.png\" alt=\"title\"></p>\n<p>寻寻觅觅了一圈的工具，基本上确定了后续的使用方案：</p>\n<ul>\n<li><p>线上方案：会继续用 <code>我来</code> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cud29sYWkuY29tL3NpZ251cD9pbnZpdGF0aW9uPVZCM0RHTjM=\">http://wolai.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>离线方案：将采用 <code>Obsidian</code> 来作为本地个人知识库的构建工具，数据放在自己手里还是比较安心的，先上一张图。</p>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/29/1598685648354-1598685648356.png\" alt=\"title\"></p>\n<p>当然如果你是程序员，可以考虑开源的 VScode 插件</p>\n<ul>\n<li><p><code>Foam</code>，主页在这里：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb2FtYnViYmxlLmdpdGh1Yi5pby9mb2FtLw==\">https://foambubble.github.io/foam/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p><code>Memo</code>，主页在这里：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N2c29vbC92c2NvZGUtbWVtbw==\">https://github.com/svsool/vscode-memo<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n</ul>\n<p><strong>工具只是手段，重要的还是内容，当你已经有了趁手的工具，那就赶紧行动起来吧！</strong></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>如何评价「我来 wolai.com」这个产品？<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzQwNzEzMjI3My9hbnN3ZXIvMTM1MjYzODg0OQ==\">https://www.zhihu.com/question/407132273/answer/1352638849<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>2020年了，你的笔记有 “双向链接” 吗？<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xNDA5MjkxODQ=\">https://zhuanlan.zhihu.com/p/140929184<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>秒杀传统型笔记！支持 Markdown 和双向链接的 Roam Research 为什么这么强？<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc29odS5jb20vYS8zOTg3MDU2MTJfNjAyOTk0\">https://www.sohu.com/a/398705612_602994<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Roam Research Report ——理念与功能<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zc3BhaS5jb20vcG9zdC82MDU4OA==\">https://sspai.com/post/60588<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Matrix 圆桌 | 网状结构笔记工具是一阵风吗？<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zc3BhaS5jb20vcG9zdC82MTg4Ng==\">https://sspai.com/post/61886<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>基于 Obsidian 的 Zettelkasten 卡片盒笔记法实践<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWF0YXRha2kuaW8vcC80Mjc1\">https://www.matataki.io/p/4275<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["笔记","双向链接"]},{"title":"搭建自己的聊天服务器（Mattermost篇）","url":"/2020/08/28/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E8%81%8A%E5%A4%A9%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88Mattermost%E7%AF%87%EF%BC%89/","content":"<p><strong>什么是 Mattermost ？</strong></p>\n<blockquote>\n<p>Mattermost是一套開放原始碼、可自行架設的線上聊天服務，有分享檔案、搜尋與整合其他服務等功能。它被設計成用於組織與公司的內部溝通，且主要將其作為 Slack 與 Microsoft Teams 的開放原始碼替代品。 【維基百科】</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/20/1597906242753-1597906242757.png\" alt=\"title\"></p>\n<p><strong>什么是 Webhook ？</strong></p>\n<blockquote>\n<p>網頁開發中的Webhook是一種通過自訂回呼函式來增加或更改網頁表現的方法。這些回呼可被可能與原始網站或應用相關的第三方用戶及開發者儲存、修改與管理。術語「Webhook」由傑夫·林德塞於2007年通過給電腦編程術語「掛鉤」加上字首得來。 【維基百科】</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖的 <code>Docker</code> 中搜索 <code>Mattermost</code>，选第一个，版本 <code>latest</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/20/1597904149405-1597904149407.png\" alt=\"title\"></p>\n<p>安装超级简单，只要设置几个端口即可</p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>3306 是 <code>MySQL</code> 的端口，群晖已安装了 <code>MariaDB 5</code> ，所以要规避，重新分了个未使用的端口：3336</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/20/1597909780796-1597909780803.png\" alt=\"title\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>安装完成后，在浏览器中输入  <code>http://群晖IP:8065</code> 即可</p>\n<h1 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h1><p>注册用户</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/20/1597910944391-1597910944399.png\" alt=\"title\"></p>\n<p>创建团队</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/20/1597913865453-1597913865460.png\" alt=\"title\"></p>\n<p>设置团队名称</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/20/1597911129634-1597911129637.png\" alt=\"title\"></p>\n<p>设置团队访问地址</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/20/1597911248289-1597911248297.png\" alt=\"title\"></p>\n<p>首界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/20/1597914142805-1597914142839.png\" alt=\"title\"></p>\n<blockquote>\n<p>按照系统的设计，添加到新安装的 Mattermost 系统中的第一个用户会获得系统管理员角色。</p>\n</blockquote>\n<p>默认界面是英文的，但是支持中文</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/28/1598623635692-1598623635730.png\" alt=\"title\"></p>\n<p>保存之后界面就是中文了，系统支持通过 <code>插件市场</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/28/1598623961302-1598623961324.png\" alt=\"title\"></p>\n<p>和 <code>集成</code> 来扩展功能，这可以大大丰富平台的功能，这一点值得称赞，尤其是 <code>Webhook</code>的引入</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/28/1598624034298-1598624034301.png\" alt=\"title\"></p>\n<p>具体的设置和使用，可以参考 《Mattermost 用户指南》，地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucW5hcC5jb20uY24vemgtY24vaG93LXRvL3R1dG9yaWFsL2FydGljbGUvbWF0dGVybW9zdC0lZTclOTQlYTglZTYlODglYjclZTYlOGMlODclZTUlOGQlOTcv\">https://www.qnap.com.cn/zh-cn/how-to/tutorial/article/mattermost-%e7%94%a8%e6%88%b7%e6%8c%87%e5%8d%97/<i class=\"fa fa-external-link-alt\"></i></span>，写的非常的详细。这里就不展开了。</p>\n<h1 id=\"客户端\"><a href=\"#客户端\" class=\"headerlink\" title=\"客户端\"></a>客户端</h1><p>下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXR0ZXJtb3N0LmNvbS9kb3dubG9hZC8jbWF0dGVybW9zdEFwcHM=\">https://mattermost.com/download/#mattermostApps<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/20/1597914678065-1597914678102.png\" alt=\"title\"></p>\n<p>Android移动端的GitHub下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21hdHRlcm1vc3QvbWF0dGVybW9zdC1tb2JpbGUvcmVsZWFzZXM=\">https://github.com/mattermost/mattermost-mobile/releases<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/20/1597915150146-1597915150153.png\" alt=\"title\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>團隊內的聊天工具，不可不知Mattermost<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmhlbGxvc2FudGEuY29tLnR3LyVFNyVCNiVCMiVFNyVBQiU5OSVFOCVBOCVBRCVFOCVBOCU4OC8lRTUlODUlQjYlRTQlQkIlOTYvJUU1JTlDJTk4JUU5JTlBJThBJUU1JTg1JUE3JUU3JTlBJTg0JUU4JTgxJThBJUU1JUE0JUE5JUU1JUI3JUE1JUU1JTg1JUI3JUVGJUJDJThDJUU0JUI4JThEJUU1JThGJUFGJUU0JUI4JThEJUU3JTlGJUE1bWF0dGVybW9zdA==\">https://blog.hellosanta.com.tw/%E7%B6%B2%E7%AB%99%E8%A8%AD%E8%A8%88/%E5%85%B6%E4%BB%96/%E5%9C%98%E9%9A%8A%E5%85%A7%E7%9A%84%E8%81%8A%E5%A4%A9%E5%B7%A5%E5%85%B7%EF%BC%8C%E4%B8%8D%E5%8F%AF%E4%B8%8D%E7%9F%A5mattermost<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Mattermost 用户指南<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucW5hcC5jb20uY24vemgtY24vaG93LXRvL3R1dG9yaWFsL2FydGljbGUvbWF0dGVybW9zdC0lZTclOTQlYTglZTYlODglYjclZTYlOGMlODclZTUlOGQlOTcv\">https://www.qnap.com.cn/zh-cn/how-to/tutorial/article/mattermost-%e7%94%a8%e6%88%b7%e6%8c%87%e5%8d%97/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","IM","即时通讯","Mattermost"]},{"title":"搭建自己的聊天服务器（Rocket.Chat下篇）","url":"/2020/08/25/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E8%81%8A%E5%A4%A9%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88Rocket.Chat%E4%B8%8B%E7%AF%87%EF%BC%89/","content":"<p>在各种 <code>Rocket.Chat</code> 的介绍中都有支持语音/视频聊天功能的描述，但是刚安装好的 <code>Rocket.Chat</code> 中是找不到的，需要我们进一步的安装、设置。</p>\n<p>要支持视频，有几个选择，一个是 <code>Jitsi Meet</code>，一个是 <code>RocketChat Meet</code>，还有一个 <code>BigBlueButton</code>。之前我们在《<a href=\"https://laosu.ml/2020/07/22/%E5%9C%A8%E7%BE%A4%E6%99%96%E4%B8%8A%E6%90%AD%E5%BB%BA%E4%B8%93%E5%B1%9E%E7%9A%84%E8%A7%86%E9%A2%91%E4%BC%9A%E8%AE%AE/\">在群晖上搭建专属的视频会议</a>》里已经安装过 <code>Jitsi Meet</code>，所以就先以 <code>Jitsi Meet</code> 为例看看如何设置</p>\n<h1 id=\"Jitsi-Meet\"><a href=\"#Jitsi-Meet\" class=\"headerlink\" title=\"Jitsi Meet\"></a><code>Jitsi Meet</code></h1><p>网页版进入 <code>管理</code> 模块</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/16/1597580612683-1597580612684.png\" alt=\"title\"></p>\n<p>左侧菜单项找到 <code>视频会议</code> ，展开 <code>Jitsi</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/16/1597580763324-1597580763329.png\" alt=\"title\"></p>\n<ul>\n<li>首先肯定要启用</li>\n<li>域名：填入 <code>Jitsi</code> 的域名（有端口要带上端口），当然，如果你并没有自己搭建 <code>Jitsi Meet</code>，也可以用公网的。如果准备用公网的，这项不用做任何修改</li>\n<li>SSL：因为浏览器中要使用音视频必须支持 SSL ，所以不管是你架设的 <code>Jitsi Meet</code> 服务还是公网，都必须启用</li>\n<li>总是在新窗口打开：建议启用，否则有可能会看不全</li>\n<li>在频道中启用：建议启用，这样在频道中也可以使用视频会议了</li>\n<li>JWT 认证：不建议启用，但启用了会更安全。如果启用需要在 <code>Jitsi Meet</code> 安装相应的插件并做相应的设置，具体设置过程可以参考文档： <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ppdHNpL2xpYi1qaXRzaS1tZWV0L2Jsb2IvbWFzdGVyL2RvYy90b2tlbnMubWQ=\">https://github.com/jitsi/lib-jitsi-meet/blob/master/doc/tokens.md<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<blockquote>\n<p>JSON Web Token（JWT）是一个开放的标准（RFC 7519），它定义了一个紧凑且自包含的方式，用于在各方之间作为JSON对象安全地传输信息。由于此信息是经过数字签名的，因此可以被验证和信任。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/17/1597653305651-1597653305658.png\" alt=\"title\"></p>\n<p>在 <code>Android</code> 客户端，频道中选中一个用户，会发现多了 <code>视频电话</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/16/1597581723420-1597581723425.png\" alt=\"title\"></p>\n<p>在 <code>Windows</code> 客户端也是一样的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/16/1597582112898-1597582112900.png\" alt=\"title\"></p>\n<p>开始视频呼叫</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/16/1597582165207-1597582165208.png\" alt=\"title\"></p>\n<p>对方会收到一条信息，点击后即可进入视频</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/17/1597653028583-1597653028590.png\" alt=\"title\"></p>\n<p>呼通之后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/25/1598353886290-1598353886321.png\" alt=\"title\"></p>\n<h1 id=\"BigBlueButton\"><a href=\"#BigBlueButton\" class=\"headerlink\" title=\"BigBlueButton\"></a><code>BigBlueButton</code></h1><blockquote>\n<p><code>BigBlueButton</code> 是一款专门为了「老师、学生教学需求」而设计的免费、开源的网络会议系统，支持实时共享音频、视频、幻灯片(带有白板控件)、聊天和屏幕。教师可以使用投票、表情符号、多用户白板和分会议室来远程和学生进行互动。演示者也可以记录和回放内容，供以后与他人共享。</p>\n</blockquote>\n<p>关于 <code>BigBlueButton</code> 的安装使用，简单测试了一下，网上的 Docker 镜像都是2年前的，尝试后发现存在很多错误，未能成功运行，有空再研究。</p>\n<p>网页版进入 <code>管理</code> 模块，找到 <code>视频会议</code> ，展开 <code>BigBlueButton</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/18/1597716754750-1597716754758.png\" alt=\"title\"></p>\n<p>想用 <code>https://demo.bigbluebutton.org</code> 测试，但没有 <code>Shared Secret</code>，所以启用之后可以看到按钮，但启动 <code>Start Meeting</code> 后没有任何看到任何提示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/20/1597891966310-1597891966339.png\" alt=\"title\"></p>\n<p>在管理后台的日志菜单中会能看到 <code>Exception while invoking method bbbJoin Error</code> 这类的错误。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/20/1597903170705-1597903170711.png\" alt=\"title\"></p>\n<h1 id=\"RocketChat-Meet\"><a href=\"#RocketChat-Meet\" class=\"headerlink\" title=\"RocketChat Meet\"></a><code>RocketChat Meet</code></h1><p><code>RocketChat Meet</code> 就是 <code>WebRTC</code> ，网页版进入 <code>管理</code> 模块，左侧菜单项找到 <code>WebRTC</code>，启用后在用户信息会出现 <code>开始视频对话</code> 和 <code>开始音频对话</code> 两个按钮</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/17/1597679868033-1597679868119.png\" alt=\"title\"></p>\n<p>开始视频对话</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/20/1597900818119-1597900818128.png\" alt=\"title\"></p>\n<p>对端的手机端没反应，但是网页端会弹出提示</p>\n<blockquote>\n<p>当同一个账号登录多个网页端时，都会收到通话的消息，但是接通只能是一个</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/20/1597901073110-1597901073113.png\" alt=\"title\"></p>\n<p>接受之后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/20/1597901656377-1597901656387.png\" alt=\"title\"></p>\n<p><code>chrome</code> 浏览器中，屏幕共享需要另外安装插件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/20/1597901842936-1597901842942.png\" alt=\"title\"></p>\n<p>而在 <code>Safari</code> 浏览器上并不支持屏幕共享功能</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/20/1597901938358-1597901938363.png\" alt=\"title\"></p>\n<p>如果是音频对话，本地和远端都是黑框</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/20/1597901762769-1597901762776.png\" alt=\"title\"></p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p><code>Rocket.Chat</code> 功能非常强大，能够和很多系统进行整合，而视频只是其中的一项，感兴趣的可以深入研究。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>官方文档<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnJvY2tldC5jaGF0Lw==\">https://docs.rocket.chat/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Video Conferencing<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnJvY2tldC5jaGF0L2d1aWRlcy9hZG1pbmlzdHJhdG9yLWd1aWRlcy9zZXR0aW5nLXVwLXZpZGVvLWNvbmZlcmVuY2luZw==\">https://docs.rocket.chat/guides/administrator-guides/setting-up-video-conferencing<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Voice and Video Conferencing<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnJvY2tldC5jaGF0L2d1aWRlcy91c2VyLWd1aWRlcy92b2ljZS1hbmQtdmlkZW8tY29uZmVyZW5jaW5n\">https://docs.rocket.chat/guides/user-guides/voice-and-video-conferencing<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Rocket Chat part 3: Installing Jitsi with JWT for secure video conferencing<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0BzemV3b25nL3JvY2tldC1jaGF0LXBhcnQtMy1pbnN0YWxsaW5nLWppdHNpLXdpdGgtand0LWZvci1zZWN1cmUtdmlkZW8tY29uZmVyZW5jaW5nLWI2ZjkwOWU3ZjkyYw==\">https://medium.com/@szewong/rocket-chat-part-3-installing-jitsi-with-jwt-for-secure-video-conferencing-b6f909e7f92c<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","IM","即时通讯","Rocket.Chat"]},{"title":"搭建自己的聊天服务器（Rocket.Chat上篇）","url":"/2020/08/22/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E8%81%8A%E5%A4%A9%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88Rocket.Chat%E4%B8%8A%E7%AF%87%EF%BC%89/","content":"<p>什么是 Rocket.Chat？</p>\n<blockquote>\n<p>Rocket.Chat 是特性最丰富的 Slack 开源替代品之一。主要功能：群组聊天，直接通信，私聊群，桌面通知，媒体嵌入，链接预览，文件上传，语音/视频 聊天，截图等等。</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>因为 Rocket.Chat 用了 Meteor 框架，所以需要安装 MongoDB。这次我们还是采用 Docker 方式安装，想要把 Rocket.Chat 跑起来，需要下载2个镜像，分别是 MongoDB 镜像和 Rocket.Chat 镜像。</p>\n<h2 id=\"安装-MongoDB\"><a href=\"#安装-MongoDB\" class=\"headerlink\" title=\"安装 MongoDB\"></a>安装 MongoDB</h2><p>在 Docker 的注册表中搜索 <code>mongodb</code>，选第一个 <code>mongo</code>，版本选 <code>latest</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/15/1597479748364-1597479748397.png\" alt=\"title\"></p>\n<h3 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h3><table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">your/path/to/mongodb/mongo.conf</td>\n<td align=\"center\">/etc/mongod.conf</td>\n</tr>\n<tr>\n<td align=\"center\">your/path/to/mongodb/db</td>\n<td align=\"center\">/data/db</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>以上2个均为文件夹，而不是文件</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/15/1597480704031-1597480704034.png\" alt=\"title\"></p>\n<h3 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h3><p>直接用的默认端口 27017</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/15/1597480332031-1597480332033.png\" alt=\"title\"></p>\n<h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">MONGO_INITDB_DATABASE</td>\n<td align=\"center\">db</td>\n</tr>\n<tr>\n<td align=\"center\">MONGO_INITDB_ROOT_USERNAME</td>\n<td align=\"center\">root</td>\n</tr>\n<tr>\n<td align=\"center\">MONGO_INITDB_ROOT_PASSWORD</td>\n<td align=\"center\">YourPASSWORD</td>\n</tr>\n</tbody></table>\n<p>必须要记得，在 <code>命令</code> 行中输入下面的指令</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">mongod --oplogSize 128 --replSet rs01</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>一旦容器创建成功，就不能再添加命令行，所以切记一定要在创建之前添加。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/15/1597498900708-1597498900710.png\" alt=\"title\"></p>\n<p>完成上述设置后，就可以启动了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/15/1597481566725-1597481566726.png\" alt=\"title\"></p>\n<p>直接启动容器，右键进入「详情」</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/15/1597496795183-1597496795185.png\" alt=\"title\"></p>\n<p>「终端机」 =&gt; 「新增」 =&gt; 「通过命令启动」=&gt; 「请输入一个命令」=&gt; 「sh」</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/15/1597496861985-1597496861986.png\" alt=\"title\"></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># mongo -u root -p &lt;pass&gt; --authenticationDatabase admin</span></span><br><span class=\"line\">mongo -u root -p test123 --authenticationDatabase admin</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/15/1597498591125-1597498591126.png\" alt=\"title\"></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">rs.initiate(&#123; _id: <span class=\"string\">&#x27;rs01&#x27;</span>, members: [ &#123; _id: 0, host: <span class=\"string\">&#x27;localhost:27017&#x27;</span> &#125; ]&#125;)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/15/1597498680666-1597498680668.png\" alt=\"title\"></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 切换用户</span></span><br><span class=\"line\">use admin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 新增用户</span></span><br><span class=\"line\">db.createUser(&#123;user: <span class=\"string\">&quot;admin&quot;</span>, <span class=\"built_in\">pwd</span>: passwordPrompt(), roles: [&#123;role: <span class=\"string\">&quot;readWrite&quot;</span>, db: <span class=\"string\">&quot;db&quot;</span>&#125;]&#125;)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/15/1597500116669-1597500116671.png\" alt=\"title\"></p>\n<h2 id=\"安装-Rocket-Chat\"><a href=\"#安装-Rocket-Chat\" class=\"headerlink\" title=\"安装 Rocket.Chat\"></a>安装 Rocket.Chat</h2><p>在 Docker 的注册表中搜索 <code>rocket</code>，选第二个 <code>rocketchat/rocket.chat</code>，版本选 <code>latest</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/15/1597500528568-1597500528570.png\" alt=\"title\"></p>\n<h3 id=\"端口-1\"><a href=\"#端口-1\" class=\"headerlink\" title=\"端口\"></a>端口</h3><p>直接用的默认端口 3000</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/15/1597501192888-1597501192890.png\" alt=\"title\"></p>\n<h3 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h3><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/15/1597501373724-1597501373725.png\" alt=\"title\"></p>\n<h3 id=\"环境-1\"><a href=\"#环境-1\" class=\"headerlink\" title=\"环境\"></a>环境</h3><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">MONGO_URL</td>\n<td align=\"center\">mongodb://root:yourRootPass@db:27017/db?authSource=admin​</td>\n</tr>\n<tr>\n<td align=\"center\">MONGO_OPLOG_URL</td>\n<td align=\"center\">mongodb://root:yourRootPass@db:27017/local?authSource=admin​</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/15/1597504535631-1597504535633.png\" alt=\"title\"></p>\n<p>启动容器，查看日志，已经正常启动了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/15/1597503732726-1597503732728.png\" alt=\"title\"></p>\n<p>资源占用有点高，不过还能接受</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/15/1597504637174-1597504637177.png\" alt=\"title\"></p>\n<h1 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h1><p>在浏览器中访问 <code>http://群晖IP:3000</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/15/1597503929896-1597503929897.png\" alt=\"title\"></p>\n<p>后面跟随设置向导完成一些常规设定即可，没有什么难度。设置完后就能看到聊天室界面了：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/15/1597504330671-1597504330673.png\" alt=\"title\"></p>\n<p>在管理员工作区，可以添加用户、查看系统日志等操作</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/15/1597504893751-1597504893753.png\" alt=\"title\"></p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><p>除网页版之外，在 <code>https://rocket.chat/install/</code> 可以下载桌面和移动端应用</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/16/1597546415237-1597546415273.png\" alt=\"title\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/15/1597505843326-1597505843328.png\" alt=\"title\"></p>\n<h2 id=\"Windows-客户端\"><a href=\"#Windows-客户端\" class=\"headerlink\" title=\"Windows 客户端\"></a>Windows 客户端</h2><p>输入服务器地址</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/15/1597506559117-1597506559120.png\" alt=\"title\"></p>\n<p>连接成功后需要输入账号和密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/15/1597506597299-1597506597301.png\" alt=\"title\"></p>\n<p>登录成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/15/1597506661250-1597506661251.png\" alt=\"title\"></p>\n<h2 id=\"Android-客户端\"><a href=\"#Android-客户端\" class=\"headerlink\" title=\"Android 客户端\"></a>Android 客户端</h2><p>因为国内市场需要软著，所以不管应用宝还是小米市场，肯定是没有的，但是 <code>google play</code> 又访问不到，所以只能去github下载。</p>\n<p>移动客户端的发布地址：<br> <code>https://github.com/RocketChat/Rocket.Chat.ReactNative/releases</code></p>\n<p>我们会看到有带 <code>rc</code> 和不带 <code>rc</code> 的版本</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/16/1597547894567-1597547894571.png\" alt=\"title\"></p>\n<blockquote>\n<p>RC版本含义 RC=Release Candidate,含义是”发布候选版”，它不是最终的版本，而是最终版(RTM=Release To Manufacture)之前的最后一个版本。</p>\n</blockquote>\n<p>所以一般我们要找不带 <code>rc</code> 的版本，例如这样的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/16/1597548138501-1597548138507.png\" alt=\"title\"></p>\n<p>下拉到下面的 Assets，展开前面的小三角</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/16/1597548181530-1597548181533.png\" alt=\"title\"></p>\n<p>其中 <code>apk</code>结尾的是 Android 版本，<code>ipa</code>结尾的是 iOS 版本，把链接复制到手机浏览器里下载安装</p>\n<p>开始运行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/16/1597557062335-1597557062338.png\" alt=\"title\"></p>\n<p>输入服务器地址</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/16/1597557115165-1597557115167.png\" alt=\"title\"></p>\n<p>输入账号、密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/16/1597557143591-1597557143593.png\" alt=\"title\"></p>\n<p>登录成功后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/16/1597558665257-1597558665261.png\" alt=\"title\"></p>\n<p>第一件事就是设置成中文界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/16/1597557424599-1597557424601.png\" alt=\"title\"></p>\n<p>可以切换服务器</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/16/1597557450600-1597557450601.png\" alt=\"title\"></p>\n<p>接下来可以创建频道等操作，开始进行各种花式聊天了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/16/1597558117486-1597558117488.png\" alt=\"title\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/16/1597559329658-1597559329662.png\" alt=\"title\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/16/1597559298020-1597559298022.png\" alt=\"title\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>官方文档<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnJvY2tldC5jaGF0Lw==\">https://docs.rocket.chat/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>CentOS7使用RocketChat自建即时聊天服务器<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueGllYnJ1Y2UudG9wLzExMjMuaHRtbA==\">https://www.xiebruce.top/1123.html<i class=\"fa fa-external-link-alt\"></i></span>)</p>\n<p>使用宝塔面板安装Rocket.Chat多功能团队聊天室<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubW9lcmF0cy5jb20vYXJjaGl2ZXMvOTYwLw==\">https://www.moerats.com/archives/960/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Rocket.Chat 开源 IM 系统部署<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uaW0vZW50cnkvNjg0NDkwMzUyMDEzOTczOTE0OQ==\">https://juejin.im/entry/6844903520139739149<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Rocket.Chat 开源免费企业级聊天工具<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVsdHIuY29tL3R1dG9yaWFscy9wcm94eS80MDgzLmh0bWw=\">https://www.rultr.com/tutorials/proxy/4083.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>rocket-chat使用教程<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTI3MjI2OS9hcnRpY2xlL2RldGFpbHMvMTA0ODI2Mzk2\">https://blog.csdn.net/weixin_41272269/article/details/104826396<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Install Rocket.Chat with Docker as a Slack alternative<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnNzZG5vZGVzLmNvbS9ibG9nL3R1dG9yaWFsLXJvY2tldC1jaGF0LWRvY2tlci8=\">https://blog.ssdnodes.com/blog/tutorial-rocket-chat-docker/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Docker Rocket.Chat - SLACK alternative (with MongoDB as backend)<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc3lub2ZvcnVtLmNvbS9yZXNvdXJjZXMvcm9ja2V0LWNoYXQtc2xhY2stYWx0ZXJuYXRpdmUtd2l0aC1tb25nb2RiLWFzLWJhY2tlbmQuMTkv\">https://www.synoforum.com/resources/rocket-chat-slack-alternative-with-mongodb-as-backend.19/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Rocket.Chat Installation on Synology DS415+<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZHVhbmVub2xhbmQuY29tL2hvbWUtbGFiL3JvY2tldGNoYXQtc3lub2xvZ3kv\">https://www.duanenoland.com/home-lab/rocketchat-synology/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","IM","即时通讯","Rocket.Chat"]},{"title":"开源的音乐流媒体服务器koel","url":"/2020/08/18/%E5%BC%80%E6%BA%90%E7%9A%84%E9%9F%B3%E4%B9%90%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8koel/","content":"<p><strong>什么是koel？</strong></p>\n<blockquote>\n<p>koel是一款网页版的开源个人音乐流媒体播放器，前端基于 vue , 后端基于 laravel PHP Framework 。采用了现代 Web 技术，例如 CSS 网格、音频和拖放 API 等等。遵守 MIT 开源协议。安装 PHP 环境后，可采用 MYSQL 数据库，搭建在服务器上，也可部署到 Docker 上。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/09/1596953637215-1596953637241.png\" alt=\"title\"></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>之前我们介绍并搭建过 <code>airsonic</code>， 一款基于 Java 开发的 Web 音乐应用，今天是另外一款​</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/09/1596975148546-1596975148548.png\" alt=\"title\"></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>先建好数据库</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/09/1596972977127-1596972977128.png\" alt=\"title\"></p>\n<p>接下来用 Docker 安装 koel</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/09/1596958725025-1596958725026.png\" alt=\"title\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">/docker/koel/covers</td>\n<td align=\"center\">/var/www/html/public/img/covers</td>\n</tr>\n<tr>\n<td align=\"center\">/docker/koel/music</td>\n<td align=\"center\">/music</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/09/1596972065366-1596972065391.png\" alt=\"title\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>默认是80，别冲突就可以</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/09/1596972146683-1596972146685.png\" alt=\"title\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">DB_CONNECTION</td>\n<td align=\"center\">mysql</td>\n</tr>\n<tr>\n<td align=\"center\">DB_HOST</td>\n<td align=\"center\">192.168.0.199</td>\n</tr>\n<tr>\n<td align=\"center\">DB_DATABASE</td>\n<td align=\"center\">koel</td>\n</tr>\n<tr>\n<td align=\"center\">DB_USERNAME</td>\n<td align=\"center\">koel</td>\n</tr>\n<tr>\n<td align=\"center\">DB_PASSWORD</td>\n<td align=\"center\">LALZTx6mxba7</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/09/1596974907068-1596974907070.png\" alt=\"title\"></p>\n<h1 id=\"第一次运行\"><a href=\"#第一次运行\" class=\"headerlink\" title=\"第一次运行\"></a>第一次运行</h1><p>SSH 连接到群晖，运行</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># docker exec -it &lt;container_name_for_koel&gt; bash</span></span><br><span class=\"line\">docker <span class=\"built_in\">exec</span> -it hyzual-koel1 bash</span><br></pre></td></tr></table></figure>\n\n<p>连接成功后，接着运行</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 初始化项目，包括设置账号和密码</span></span><br><span class=\"line\">php artisan koel:init</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>【已知问题】koel:init will fail at the stage where it checks front-end assets. This is known and is due to the absence of node.js and yarn. koel’s frontend assets are already built in this image so this step is not necessary.</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/09/1596977266710-1596977266712.png\" alt=\"title\"></p>\n<p>浏览器中打开 <code>http://群晖IP:2080</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/09/1596977079654-1596977079656.png\" alt=\"title\"></p>\n<p>登录成功后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/09/1596977010631-1596977010633.png\" alt=\"title\"></p>\n<h1 id=\"遇到问题\"><a href=\"#遇到问题\" class=\"headerlink\" title=\"遇到问题\"></a>遇到问题</h1><p>用 <code>https://域名</code> 访问，返回空白页面，查看网页源代码，发现均为 <code>http</code> 协议，怀疑是不支持 https 协议导致的，根据 <code>Laravel</code> 的特性，应该有单独的设置项。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># docker exec -it &lt;container_name_for_koel&gt; bash</span></span><br><span class=\"line\">docker <span class=\"built_in\">exec</span> -it hyzual-koel1 bash</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/11/1597153839744-1597153839749.png\" alt=\"title\"></p>\n<p>因为 <code>Docker</code> 中未安装 <code>vi</code>，所以需要先安装编辑器</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/11/1597149967253-1597149967259.png\" alt=\"title\"></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">apt-get install vi</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/11/1597150104653-1597150104658.png\" alt=\"title\"></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">apt-get update</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/11/1597150138920-1597150138924.png\" alt=\"title\"></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">apt-get install vim</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/11/1597150204755-1597150204757.png\" alt=\"title\"></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 编辑 .env 文件</span></span><br><span class=\"line\">vi .env</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/11/1597153234326-1597153234328.png\" alt=\"title\"></p>\n<p>重启容器后，一切正常。</p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><p>歌曲的上传</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/11/1597157118561-1597157118563.png\" alt=\"title\"></p>\n<p>临时用 XLD 转码一张孙露的专辑《一抹伤》做测试</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/12/1597218246423-1597218246426.png\" alt=\"title\"></p>\n<p>或者直接放到 <code>/music</code> 目录，再扫描</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/11/1597157235681-1597157235684.png\" alt=\"title\"></p>\n<p>播放列表</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/11/1597157280779-1597157280781.png\" alt=\"title\"></p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>颜值不错，很像 Spotify，可惜音乐格式只支持 <code>mp3</code>，这点肯定比不上 <code>airsonic</code>，但是系统占用小于 <code>airsonic</code>，如果你的收藏是 <code>mp3</code>，那这款应用值得一试。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/12/1597193888864-1597193888906.png\" alt=\"title\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>koel 官方代码<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2tvZWwva29lbA==\">https://github.com/koel/koel<i class=\"fa fa-external-link-alt\"></i></span>)</p>\n<p>Koel:一款超酷的私有音乐面板（基于larvel+vue）<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWl5dWUub25lL2FyY2hpdmVzLzExOTguaHRtbA==\">https://baiyue.one/archives/1198.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>开源音乐流媒体应用：Koel<br>地址：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zaXlhODkuY29tL2Jsb2cva29lbA==\">http://www.siya89.com/blog/koel<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","音乐","Laravel"]},{"title":"给群晖弄个漂亮的导航页（下）","url":"/2020/08/16/%E7%BB%99%E7%BE%A4%E6%99%96%E5%BC%84%E4%B8%AA%E6%BC%82%E4%BA%AE%E7%9A%84%E5%AF%BC%E8%88%AA%E9%A1%B5%EF%BC%88%E4%B8%8B%EF%BC%89/","content":"<h1 id=\"高级篇\"><a href=\"#高级篇\" class=\"headerlink\" title=\"高级篇\"></a>高级篇</h1><h2 id=\"查看后台版本\"><a href=\"#查看后台版本\" class=\"headerlink\" title=\"查看后台版本\"></a>查看后台版本</h2><figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看后台版本</span></span><br><span class=\"line\">php artisan admin</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/04/1596506082290-1596506082297.png\" alt=\"title\"></p>\n<p>可以看到这个镜像默认安装的后台 <code>Laravel-admin</code> 版本为1.6.9，右下角也有</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/05/1596607537785-1596607537791.png\" alt=\"title\"></p>\n<h2 id=\"后台版本的更新\"><a href=\"#后台版本的更新\" class=\"headerlink\" title=\"后台版本的更新\"></a>后台版本的更新</h2><p>升级主要是解决漏洞而不全是为了新的功能，所以看个人的需要。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 更新到最新版本</span></span><br><span class=\"line\">composer require encore/laravel-admin -vvv</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 更新到开发版本</span></span><br><span class=\"line\">composer require encore/laravel-admin:dev-master -vvv</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 更新指定版本</span></span><br><span class=\"line\">composer require encore/laravel-admin:1.6.15 -vvv</span><br></pre></td></tr></table></figure>\n\n<p>这里我们直接更新到最新版本，按照官方给的 <strong>「注意事项」</strong>：</p>\n<blockquote>\n<p>由于每个版本的静态资源或者语言包都有可能会有更新，所以升级版本之后最好运行下面的命令</p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 强制发布静态资源文件</span></span><br><span class=\"line\">php artisan vendor:publish --tag=laravel-admin-assets --force</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 强制发布语言包文件</span></span><br><span class=\"line\">php artisan vendor:publish --tag=laravel-admin-lang --force</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 清理视图缓存</span></span><br><span class=\"line\">php artisan view:clear</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/04/1596507644238-1596507644239.png\" alt=\"title\"></p>\n<p>重启镜像，最后不要忘记清理浏览器缓存。再次查看，版本已升级为1.8.1</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/04/1596521187248-1596521187285.png\" alt=\"title\"></p>\n<h2 id=\"数据备份\"><a href=\"#数据备份\" class=\"headerlink\" title=\"数据备份\"></a>数据备份</h2><p>上传的图片在容器内的 <code>/opt/navi/public/uploads/images</code> 目录，备份只需要备份这些图片和数据库即可。</p>\n<p>SSH 登录到群晖，在命令行执行文件拷贝操作。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">参数</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>arvon2014-webstack-laravel1</code></td>\n<td align=\"center\">容器名称</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/opt/navi/public/uploads/images</code></td>\n<td align=\"center\">容器内目录</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/volume1/docker/webstack</code></td>\n<td align=\"center\">群晖目录</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 从容器内拷贝到群晖</span></span><br><span class=\"line\">docker cp arvon2014-webstack-laravel1:/opt/navi/public/uploads/images  /volume1/docker/webstack</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"排错\"><a href=\"#排错\" class=\"headerlink\" title=\"排错\"></a>排错</h2><h3 id=\"问题1：”Failed-to-initialize-global-composer”\"><a href=\"#问题1：”Failed-to-initialize-global-composer”\" class=\"headerlink\" title=\"问题1：”Failed to initialize global composer”\"></a>问题1：”Failed to initialize global composer”</h3><p>“Failed to initialize global composer: Composer could not find the config file: / root/.composer/composer.json”</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/05/1596603912327-1596603912335.png\" alt=\"title\"></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建一个空的json object</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;&#123;&#125;&quot;</span> &gt; ~/.composer/composer.json</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"问题2：”Content-Length-mismatch”\"><a href=\"#问题2：”Content-Length-mismatch”\" class=\"headerlink\" title=\"问题2：”Content-Length mismatch”\"></a>问题2：”Content-Length mismatch”</h3><p>“Content-Length mismatch,received xxxxxx bytes out of the expected xxxxxx”</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 诊断</span></span><br><span class=\"line\">composer diagnose</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/05/1596599212921-1596599212947.png\" alt=\"title\"></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 升级 key</span></span><br><span class=\"line\">composer self-update --update-keys</span><br></pre></td></tr></table></figure>\n\n<p>在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb21wb3Nlci5naXRodWIuaW8vcHVia2V5cy5odG1s\">https://composer.github.io/pubkeys.html<i class=\"fa fa-external-link-alt\"></i></span>  能找到需要的 <code>key</code>， 按提示依次输入 <code>Dev / Snapshot Public Key</code> 和 <code>Tags Public Key</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/05/1596599534922-1596599534930.png\" alt=\"title\"></p>\n<p>再次诊断</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 诊断</span></span><br><span class=\"line\">composer diagnose</span><br></pre></td></tr></table></figure>\n\n<p>一切正常</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/05/1596599903901-1596599903908.png\" alt=\"title\"></p>\n<h3 id=\"问题3：“Carbon-1-is-deprecated”\"><a href=\"#问题3：“Carbon-1-is-deprecated”\" class=\"headerlink\" title=\"问题3：“Carbon 1 is deprecated”\"></a>问题3：“Carbon 1 is deprecated”</h3><p>“Carbon 1 is deprecated, see how to migrate to Carbon 2.”</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 升级到 Carbon 2</span></span><br><span class=\"line\">./vendor/bin/upgrade-carbon</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"修改篇\"><a href=\"#修改篇\" class=\"headerlink\" title=\"修改篇\"></a>修改篇</h1><h2 id=\"网站管理\"><a href=\"#网站管理\" class=\"headerlink\" title=\"网站管理\"></a>网站管理</h2><p>在使用中发现一个严重的问题，那就是居然不能排序。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/09/1596942603240-1596942603276.png\" alt=\"title\"></p>\n<p>前端显示的顺序始终是添加的顺序，这显然严重不符合我们的需求，我们希望的是能按我们的要求排序并显示。</p>\n<p>但是在网上查了半天也没有找到现成的解决，所以只能自己想办法:</p>\n<ul>\n<li>首先，要修改数据库，增加排序的字段</li>\n<li>其次，要安装 <code>laravel-admin-sortable</code> 插件</li>\n<li>最后，要修改前后端的代码，实现自定义的排序效果</li>\n</ul>\n<blockquote>\n<p>以下代码修改基于 1.6.9 版本，其他版本上未测试。</p>\n</blockquote>\n<h3 id=\"修改数据库\"><a href=\"#修改数据库\" class=\"headerlink\" title=\"修改数据库\"></a>修改数据库</h3><ul>\n<li>一定先要清空 <code>categories</code> 表和 <code>sites</code> 表中的数据</li>\n<li>给 <code>sites</code> 表增加排序字段 <code>status</code></li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> `status` <span class=\"keyword\">ADD</span> `sites` <span class=\"type\">INT</span> <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> AFTER `updated_at`;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h3><p>代码地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3hpYW94dWFuNi9sYXJhdmVsLWFkbWluLXNvcnRhYmxl\">https://github.com/xiaoxuan6/laravel-admin-sortable<i class=\"fa fa-external-link-alt\"></i></span></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装插件</span></span><br><span class=\"line\">composer require james.xue/laravel-admin-sortable</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/07/1596789186910-1596789186918.png\" alt=\"title\"></p>\n<h3 id=\"修改后端代码\"><a href=\"#修改后端代码\" class=\"headerlink\" title=\"修改后端代码\"></a>修改后端代码</h3><p>修改 <code>app/Site.php</code></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">James</span>\\<span class=\"title\">Sortable</span>\\<span class=\"title\">SortableTrait</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">James</span>\\<span class=\"title\">Sortable</span>\\<span class=\"title\">Sortable</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> <span class=\"keyword\">extends</span> <span class=\"title\">Model</span> <span class=\"keyword\">implements</span> <span class=\"title\">Sortable</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">use</span> <span class=\"title\">SortableTrait</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$sortable</span> = [</span><br><span class=\"line\">        <span class=\"string\">&#x27;sort_field&#x27;</span> =&gt; <span class=\"string\">&#x27;status&#x27;</span>,       <span class=\"comment\">// 排序字段</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;sort_when_creating&#x27;</span> =&gt; <span class=\"literal\">true</span>,   <span class=\"comment\">// 新增是否自增，默认自增</span></span><br><span class=\"line\">    ];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/09/1596950917898-1596950917900.png\" alt=\"title\"></p>\n<p>修改 <code>app/Admin/Controllers/SiteController.php</code> 增加2行</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这个很重要，否则页面显示顺序不正确</span></span><br><span class=\"line\"><span class=\"variable\">$grid</span>-&gt;model()-&gt;orderBy(<span class=\"string\">&#x27;status&#x27;</span>, <span class=\"string\">&#x27;asc&#x27;</span>);            </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// sortableColumn 里面必须填入当前模型的 namespace</span></span><br><span class=\"line\"><span class=\"variable\">$grid</span>-&gt;status(<span class=\"string\">&#x27;状态&#x27;</span>)-&gt;sortableColumn(<span class=\"string\">&#x27;\\App\\Site&#x27;</span>);  </span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/07/1596791936105-1596791936112.png\" alt=\"title\"></p>\n<p>这个时候，后端虽然不支持拖拽操作，但已经支持排序了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/09/1596949206841-1596949206844.png\" alt=\"title\"></p>\n<h3 id=\"修改前端代码\"><a href=\"#修改前端代码\" class=\"headerlink\" title=\"修改前端代码\"></a>修改前端代码</h3><p>但是在前端还是不行，还需要继续改造。</p>\n<p>修改 <code>resources/views/layouts/content.blade.php</code> 文件，增加下面两行</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sorted</span> = <span class=\"variable\">$sites</span>-&gt;sortBy(<span class=\"string\">&#x27;status&#x27;</span>);                             </span><br><span class=\"line\"><span class=\"variable\">$sorted</span>-&gt;values()-&gt;all(); </span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/09/1596949674625-1596949674628.png\" alt=\"title\"></p>\n<p>再刷新前端，已经和修改后的顺序一致了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/09/1596949800211-1596949800215.png\" alt=\"title\"></p>\n<h2 id=\"分类管理\"><a href=\"#分类管理\" class=\"headerlink\" title=\"分类管理\"></a>分类管理</h2><h3 id=\"后端代码\"><a href=\"#后端代码\" class=\"headerlink\" title=\"后端代码\"></a>后端代码</h3><p>本身就支持排序功能，<code>categories</code>表本身有排序字段 <code>order</code>，只是默认值均为零</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/09/1596962767919-1596962767921.png\" alt=\"title\"></p>\n<p>支持通过拖拽更改顺序</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/09/1596962924553-1596962924555.png\" alt=\"title\"></p>\n<p>保存之后，<code>order</code>字段就有值了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/09/1596963314493-1596963314496.png\" alt=\"title\"></p>\n<h3 id=\"修改前端代码-1\"><a href=\"#修改前端代码-1\" class=\"headerlink\" title=\"修改前端代码\"></a>修改前端代码</h3><p>前端显示的效果表明，其不支持后台的排序</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/09/1596966863844-1596966863846.png\" alt=\"title\"></p>\n<p>先修改 <code>resources/views/layouts/sidebar.blade.php</code></p>\n<p>将</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">foreach</span> (<span class=\"variable\">$categories</span> <span class=\"keyword\">as</span> <span class=\"variable\">$categorie</span>)</span><br></pre></td></tr></table></figure>\n<p>改为</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">foreach</span> (<span class=\"variable\">$categories</span>-&gt;sortBy(<span class=\"string\">&#x27;order&#x27;</span>) <span class=\"keyword\">as</span> <span class=\"variable\">$categorie</span>)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/09/1596966567983-1596966567985.png\" alt=\"title\"></p>\n<p>接着要修改 <code>resources/views/layouts/content.blade.php</code></p>\n<p>同样将</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">foreach</span>(<span class=\"variable\">$categories</span> <span class=\"keyword\">as</span> <span class=\"variable\">$category</span>)                             </span><br></pre></td></tr></table></figure>\n\n<p>改为</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">foreach</span>(<span class=\"variable\">$categories</span>-&gt;sortBy(<span class=\"string\">&#x27;order&#x27;</span>) <span class=\"keyword\">as</span> <span class=\"variable\">$category</span>)                             </span><br></pre></td></tr></table></figure>\n\n<p>再刷新前端，已经和修改后的顺序一致了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/09/1596967376484-1596967376486.png\" alt=\"title\"></p>\n<h1 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h1><p>更多用法可以查阅 <code>laravel-admin</code> 的帮助文档。 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYXJhdmVsLWFkbWluLm9yZy9kb2NzL3poLw==\">https://laravel-admin.org/docs/zh/<i class=\"fa fa-external-link-alt\"></i></span> </p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>WebStack-Laravel官方代码<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2h1aS1oby9XZWJTdGFjay1MYXJhdmVs\">https://github.com/hui-ho/WebStack-Laravel<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Laravel 函数手册<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYXJhdmVsLmNvbS9kb2NzLzUuNS9jb2xsZWN0aW9ucw==\">https://laravel.com/docs/5.5/collections<i class=\"fa fa-external-link-alt\"></i></span>)</p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","Laravel","WebStack"]},{"title":"给群晖弄个漂亮的导航页（上）","url":"/2020/08/14/%E7%BB%99%E7%BE%A4%E6%99%96%E5%BC%84%E4%B8%AA%E6%BC%82%E4%BA%AE%E7%9A%84%E5%AF%BC%E8%88%AA%E9%A1%B5%EF%BC%88%E4%B8%8A%EF%BC%89/","content":"<h1 id=\"部署篇\"><a href=\"#部署篇\" class=\"headerlink\" title=\"部署篇\"></a>部署篇</h1><p>还是在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>webstack-Laravel</code> ，选择 <code>arvon2014/webstack-laravel</code>，下载镜像。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/04/1596512543973-1596512543980.png\" alt=\"title\"></p>\n<p>安装比较简单，端口如果不冲突，可以直接用默认的 <code>8000</code> ，只要修改环境中的几个参数即可。</p>\n<p>参数说明</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">参数</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">INSTALL_DIR</td>\n<td align=\"center\">容器内的部署目录</td>\n</tr>\n<tr>\n<td align=\"center\">DB_HOST</td>\n<td align=\"center\">数据库地址，默认127.0.0.1</td>\n</tr>\n<tr>\n<td align=\"center\">DB_PORT</td>\n<td align=\"center\">数据库端口，默认3306</td>\n</tr>\n<tr>\n<td align=\"center\">DB_DATABASE</td>\n<td align=\"center\">数据库名称,默认homestead</td>\n</tr>\n<tr>\n<td align=\"center\">DB_USERNAME</td>\n<td align=\"center\">数据库用户名,默认homestead</td>\n</tr>\n<tr>\n<td align=\"center\">DB_PASSWORD</td>\n<td align=\"center\">数据库密码,默认secret</td>\n</tr>\n<tr>\n<td align=\"center\">LOGIN_COPTCHA</td>\n<td align=\"center\">是否启动控制台验证码，默认true</td>\n</tr>\n</tbody></table>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><p>请根据实际情况填写相应的内容，我在群晖已经安装了 <code>MariaDB 5</code>，所以可以直接用。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/03/1596438632222-1596438632223.png\" alt=\"title\"></p>\n<h2 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h2><p>直接启动容器，右键进入「详情」</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/04/1596513747566-1596513747572.png\" alt=\"title\"></p>\n<p>「终端机」 =&gt; 「新增」 =&gt; 「通过命令启动」=&gt; 「请输入一个命令」=&gt; 「sh」</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/03/1596428483404-1596428483411.png\" alt=\"title\"></p>\n<p>进入命令行模式。后文中如无特别说明，所有命令都在这个模式下执行。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/04/1596514083397-1596514083404.png\" alt=\"title\"></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#生成 KEY</span></span><br><span class=\"line\">php artisan key:generate </span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/03/1596428851677-1596428851686.png\" alt=\"title\"></p>\n<p>用 <code>phpMyAdmin</code> 在 <code>MariaDB</code> 数据库中新建用户和库，勾选「创建与用户同名的数据库并授予所有权限」</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/04/1596503924253-1596503924289.png\" alt=\"title\"></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#迁移数据</span></span><br><span class=\"line\">php artisan migrate:refresh --seed</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/03/1596433754582-1596433754585.png\" alt=\"title\"></p>\n<p>重启容器！重启容器！重启容器！否则页面会有错误信息。</p>\n<h2 id=\"前端\"><a href=\"#前端\" class=\"headerlink\" title=\"前端\"></a>前端</h2><p>前端地址：<code>http://群晖IP:8000/</code> </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/03/1596433908716-1596433908726.png\" alt=\"title\"></p>\n<h2 id=\"后台\"><a href=\"#后台\" class=\"headerlink\" title=\"后台\"></a>后台</h2><p>后台地址：<code>http://群晖IP:8000/admin</code><br>默认账号：<code>admin</code><br>默认密码：<code>admin</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/06/1596691411909-1596691411942.png\" alt=\"title\"></p>\n<h2 id=\"排错\"><a href=\"#排错\" class=\"headerlink\" title=\"排错\"></a>排错</h2><h3 id=\"问题1：数据库报错\"><a href=\"#问题1：数据库报错\" class=\"headerlink\" title=\"问题1：数据库报错\"></a>问题1：数据库报错</h3><p>类似这样的问题</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/03/1596429756119-1596429756125.png\" alt=\"title\"></p>\n<p>这需要我们先建好 <code>homestead</code> 库。</p>\n<p>其他还可能会遇到数据库权限等问题，需要我们根据提示仔细排查。</p>\n<h3 id=\"问题2：网页报错\"><a href=\"#问题2：网页报错\" class=\"headerlink\" title=\"问题2：网页报错\"></a>问题2：网页报错</h3><p>遇到下面这种情况</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/03/1596428080642-1596428080682.png\" alt=\"title\"></p>\n<p>需要执行生成 KEY 操作</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#生成 KEY</span></span><br><span class=\"line\">php artisan key:generate </span><br></pre></td></tr></table></figure>\n\n<p>这个 KEY 会写入到 <code>.env</code> 文件的 <code>APP_KEY</code> 字段</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/04/1596518949046-1596518949078.png\" alt=\"title\"></p>\n<h1 id=\"进阶篇\"><a href=\"#进阶篇\" class=\"headerlink\" title=\"进阶篇\"></a>进阶篇</h1><h2 id=\"图标显示异常\"><a href=\"#图标显示异常\" class=\"headerlink\" title=\"图标显示异常\"></a>图标显示异常</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/05/1596607378688-1596607378696.png\" alt=\"title\"></p>\n<p>后台中图片显示异常，需要我们将 <code>.env</code> 中 <code>APP_URL=</code> 后面的 <code>http://localhost</code> 删除</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 编辑环境文件</span></span><br><span class=\"line\">vi .env</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/04/1596514973420-1596514973422.png\" alt=\"title\"></p>\n<p>保存退出后，需重启容器才能生效</p>\n<h2 id=\"支持-https\"><a href=\"#支持-https\" class=\"headerlink\" title=\"支持 https\"></a>支持 https</h2><p>需要修改 <code>admin.php</code> 文件</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 编辑 config/admin.php 文件 中 &#x27;https&#x27; =&gt; env(&#x27;ADMIN_HTTPS&#x27;, true),</span></span><br><span class=\"line\">vi config/admin.php</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/04/1596511457683-1596511457690.png\" alt=\"title\"></p>\n<p>保存退出后，需重启容器才能生效</p>\n<h2 id=\"修改-composer-镜像源\"><a href=\"#修改-composer-镜像源\" class=\"headerlink\" title=\"修改 composer 镜像源\"></a>修改 composer 镜像源</h2><p>由于默认情况下执行 composer 各种命令是去国外的 composer 官方镜像源获取需要安装的具体软件信息，所以在不使用代理、不翻墙的情况下，从国内访问国外服务器的速度相对比较慢</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 更换阿里巴巴提供的 Composer 全量镜像源</span></span><br><span class=\"line\">composer config repo.packagist composer https://mirrors.aliyun.com/composer/</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"插件应用\"><a href=\"#插件应用\" class=\"headerlink\" title=\"插件应用\"></a>插件应用</h2><p>laravel-admin 支持安装扩展工具来帮助丰富你的后台功能，目前在<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYXJhdmVsLWFkbWluLm9yZy9leHRlbnNpb25z\">https://laravel-admin.org/extensions<i class=\"fa fa-external-link-alt\"></i></span> 下面已经有了几十个扩展可供安装使用。</p>\n<h3 id=\"文件管理插件\"><a href=\"#文件管理插件\" class=\"headerlink\" title=\"文件管理插件\"></a>文件管理插件</h3><p>基于web接口的本地文件管理插件，代码主页：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xhcmF2ZWwtYWRtaW4tZXh0ZW5zaW9ucy9tZWRpYS1tYW5hZ2Vy\">https://github.com/laravel-admin-extensions/media-manager<i class=\"fa fa-external-link-alt\"></i></span></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装插件</span></span><br><span class=\"line\">composer require laravel-admin-ext/media-manager -vvv</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/05/1596603782860-1596603782868.png\" alt=\"title\"></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 导入插件</span></span><br><span class=\"line\">php artisan admin:import media-manager</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/05/1596608187858-1596608187860.png\" alt=\"title\"></p>\n<p>编辑 <code>config/admin.php</code>，增加下列内容</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* media-manager */</span></span><br><span class=\"line\"><span class=\"string\">&#x27;extensions&#x27;</span> =&gt; [</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#x27;media-manager&#x27;</span> =&gt; [</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"comment\">// Select a local disk that you configured in `config/filesystem.php`</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;disk&#x27;</span> =&gt; <span class=\"string\">&#x27;public&#x27;</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n\n<p>刷新后台页面，菜单栏会多出 <code>Media manager</code> ,打开地址： <code>http://localhost/admin/media</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/05/1596608468380-1596608468387.png\" alt=\"title\"></p>\n<h3 id=\"汉化插件\"><a href=\"#汉化插件\" class=\"headerlink\" title=\"汉化插件\"></a>汉化插件</h3><p>一个将操作按钮汉化的插件</p>\n<p>代码主页：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3hpYW94dWFuNi9sYXJhdmVsLWFkbWluLWdyaWQ=\">https://github.com/xiaoxuan6/laravel-admin-grid<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>生效前</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/07/1596788238118-1596788238125.png\" alt=\"title\"></p>\n<p>生效后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/07/1596786540985-1596786540992.png\" alt=\"title\"></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装依赖</span></span><br><span class=\"line\">composer require james.xue/laravel-admin-sortable</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装插件</span></span><br><span class=\"line\">Laravel-Admin &gt;= 1.7 安装 1.2.0</span><br><span class=\"line\">composer require james.xue/laravel-admin-grid:1.2.0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Laravel-Admin &lt; 1.7 安装 1.1.0</span></span><br><span class=\"line\">composer require james.xue/laravel-admin-grid:1.1.0</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/07/1596785403585-1596785403589.png\" alt=\"title\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>WebStack-Laravel官方代码<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2h1aS1oby9XZWJTdGFjay1MYXJhdmVs\">https://github.com/hui-ho/WebStack-Laravel<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Webstack网址导航<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1dlYlN0YWNrUGFnZS9XZWJTdGFja1BhZ2UuZ2l0aHViLmlv\">https://github.com/WebStackPage/WebStackPage.github.io<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>后台框架：laravel-admin<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3otc29uZy9sYXJhdmVsLWFkbWlu\">https://github.com/z-song/laravel-admin<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>在 Synology NAS 上使用 Laravel Framework<br>地址：<span class=\"exturl\" data-url=\"aHR0cDovL3NhbW1peG9mdC5ibG9nc3BvdC5jb20vMjAxOC8wMS9zeW5vbG9neS1uYXMtbGFyYXZlbC1mcmFtZXdvcmsuaHRtbA==\">http://sammixoft.blogspot.com/2018/01/synology-nas-laravel-framework.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>laravel-admin自动生成模块，及相关基础配置<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2MTAwNzYzL2FydGljbGUvZGV0YWlscy84MzA4OTgxOA==\">https://blog.csdn.net/qq_36100763/article/details/83089818<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","Laravel","WebStack"]},{"title":"搭建自己的聊天服务器（Synology Chat篇）","url":"/2020/08/12/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E8%81%8A%E5%A4%A9%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88Synology%20Chat%E7%AF%87%EF%BC%89/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>上周M国的禁令，让很多留学生开始教父母使用 skype，毕竟那是为数不多未被两国禁用的社交类软件，但未来会如何发展尚不可知，所以我们必须未雨绸缪，开始研究私有化部署的聊天服务器，这样才能不惧怕任何的风云变化。</p>\n<p>聊天服务器的私有化的部署既能满足即时沟通的需要，也不用担心第三方平台有泄露隐私的隐患，聊天的内容都在自己的 NAS 里，更加的安全、放心。</p>\n<p>今天首先登场的，是群晖的亲儿子 Synology Chat，Synology Chat 套件是一款针对团队协作开发的沟通互动与即时通讯工具。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/12/1597196106957-1597196106991.png\" alt=\"title\"></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在「套件中心」搜索 <code>chat</code> ，就能找到「Synology Chat Server」套件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/10/1597036227271-1597036227301.png\" alt=\"title\"></p>\n<p>点击「安装套件」按钮进行安装</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/10/1597036680235-1597036680237.png\" alt=\"title\"></p>\n<p>安装完成后，「主菜单」里会多出两个图标</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/10/1597036763940-1597036763946.png\" alt=\"title\"></p>\n<p>控制台设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/10/1597037764353-1597037764360.png\" alt=\"title\"></p>\n<p>看了眼自己 <code>Drive</code> 的版本，找时间该升个级了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/10/1597037881181-1597037881188.png\" alt=\"title\"></p>\n<h1 id=\"客户端\"><a href=\"#客户端\" class=\"headerlink\" title=\"客户端\"></a>客户端</h1><h2 id=\"Web-网页版\"><a href=\"#Web-网页版\" class=\"headerlink\" title=\"Web 网页版\"></a>Web 网页版</h2><p>可以不用单独下载客户端，只要有账号即可，此举一方面保证了聊天的私密性(避免陌生人随意加入，仅管理员授权的帐号方可加入 Chat )，也降低了使用 Chat 的学习成本(管理员可以设置或邀请参与讨论的成员与帐号，团队成员仅需登陆 Chat 即可参与)。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/10/1597040342246-1597040342252.png\" alt=\"title\"></p>\n<h2 id=\"Windows-客户端\"><a href=\"#Windows-客户端\" class=\"headerlink\" title=\"Windows 客户端\"></a>Windows 客户端</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/12/1597237565887-1597237565928.png\" alt=\"title\"></p>\n<h2 id=\"Mac-客户端\"><a href=\"#Mac-客户端\" class=\"headerlink\" title=\"Mac 客户端\"></a>Mac 客户端</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/10/1597039977191-1597039977199.png\" alt=\"title\"></p>\n<h2 id=\"Android-客户端\"><a href=\"#Android-客户端\" class=\"headerlink\" title=\"Android 客户端\"></a>Android 客户端</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/10/1597040014403-1597040014407.png\" alt=\"title\"></p>\n<h2 id=\"其他客户端\"><a href=\"#其他客户端\" class=\"headerlink\" title=\"其他客户端\"></a>其他客户端</h2><p>还包括 iOS 和 Linux，只是手上没有相应的设备，通过截图可以看到，界面的一致性相当高，有利于用户降低学习的成本。</p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><h2 id=\"用户界面\"><a href=\"#用户界面\" class=\"headerlink\" title=\"用户界面\"></a>用户界面</h2><p>用户界面有三个不同的区域：</p>\n<ol>\n<li><p>顶部全局栏：包括套件标志、搜索框和配置文件图像。</p>\n</li>\n<li><p>左侧边栏：包括三个区域，即已加星标、频道和会话。</p>\n<ul>\n<li><p>已加星标：您加星标的频道和会话将出现在此列表中。</p>\n</li>\n<li><p>频道：频道是用于使类似目的人群聚在一起。频道没有成员限制。</p>\n</li>\n<li><p>会话：会话是一个私密的信息系统，您可在此与一个人或一小组人聊天。会话有九个成员的限制（包括创建者）。</p>\n</li>\n</ul>\n</li>\n<li><p>主窗口：包括进入要放入文章和书签区域的信息和选项。</p>\n</li>\n</ol>\n<h2 id=\"频道\"><a href=\"#频道\" class=\"headerlink\" title=\"频道\"></a>频道</h2><p>频道就是群组的概念，分为“公共频道”和“专用频道”，前者所有用户都能看到且不用受邀即可加入，后者只有受邀用户才能看到。</p>\n<p>两者前面的图标也不一样，专用频道为一把锁的图标。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/12/1597202129407-1597202129411.png\" alt=\"title\"></p>\n<h2 id=\"会话\"><a href=\"#会话\" class=\"headerlink\" title=\"会话\"></a>会话</h2><p>能将对话设置加密，多一层安全级别。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/12/1597202034404-1597202034408.png\" alt=\"title\"></p>\n<h2 id=\"标签\"><a href=\"#标签\" class=\"headerlink\" title=\"标签\"></a>标签</h2><p>在每个人的讨论内容旁，单击“#”添加主题标签，通过搜索就可以找到相应的主题内容。</p>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"@\"></a>@</h2><p>和微信类似，你可以通过@来找到相应的人或者直接通知所有人。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>对于个人用户而言，你可以和家人朋友用 Synology Chat 套件打造一个隐私度高的聊天环境，更多用法，可以看参考文档，有非常详细的描述。</p>\n<p>接下来我们会再找几个其他的 IM 服务器软件，最后确定最优的家庭方案​。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>給企業專注、純粹的即時溝通平台 – Synology Chat<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93YWxrZXItYS5jb20vYXJjaGl2ZXMvMzk5Ng==\">https://walker-a.com/archives/3996<i class=\"fa fa-external-link-alt\"></i></span>)</p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","IM","即时通讯","Synology Chat"]},{"title":"给hexo博客的https证书续期","url":"/2020/08/09/%E7%BB%99hexo%E5%8D%9A%E5%AE%A2%E7%9A%84https%E8%AF%81%E4%B9%A6%E7%BB%AD%E6%9C%9F/","content":"<p>题图来自：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuYWxpeXVuLmNvbS9hcnRpY2xlLzcxMDg5MA==\">https://developer.aliyun.com/article/710890<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"发现问题\"><a href=\"#发现问题\" class=\"headerlink\" title=\"发现问题\"></a>发现问题</h1><p>突然发现博客的 https 证书失效了，网站又被标记成了不安全</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/10/1597071199125-1597071199127.png\" alt=\"title\"></p>\n<p>查看证书，显示已经无效</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/10/1597067376151-1597067376188.png\" alt=\"title\"></p>\n<p>可是从时间看，还有1个多月呢</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/10/1597067515305-1597067515308.png\" alt=\"title\"></p>\n<p>进到 <code>coding.net</code> 后台设置查看，显示证书状态为<code>申请失败</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/10/1597067546952-1597067546953.png\" alt=\"title\"></p>\n<h1 id=\"解决问题\"><a href=\"#解决问题\" class=\"headerlink\" title=\"解决问题\"></a>解决问题</h1><p>从错误信息看，<code>185.199.108.153</code> 是 github的 IP 地址，根据之前 DNSPOD 设置的域名解析规则，Coding Pages 的解析线路是默认，Github Pages 解析线路是境外，所以根据域名解析规则，Let’s Encrypt 在境外只能访问到 Github Pages 的域名验证信息，而无法访问 Coding Pages 的域名验证信息。所以 Coding Pages 在帮我们申请证书时，就无法通过 Let’s Encrypt 的域名验证，证书也就申请不到了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/10/1597067649105-1597067649109.png\" alt=\"title\"></p>\n<p>这个问题在《<a href=\"https://laosu.ml/2020/05/12/%E5%9C%A8Coding%E4%B8%8A%E9%83%A8%E7%BD%B2Hexo%E5%B9%B6%E5%AE%9E%E7%8E%B0%E5%92%8CGithub%E5%8F%8C%E7%BA%BF%E8%AE%BF%E9%97%AE/\">在Coding上部署Hexo并实现和Github双线访问</a>》遇到并解决过，方法很简单：那就是在给 Coding Pages 申请证书时，需要先把 Github Pages 的解析暂停掉。果然证书状态正常了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/10/1597070519165-1597070519167.png\" alt=\"title\"></p>\n<p>再看证书，又有3个月了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/10/1597070461350-1597070461399.png\" alt=\"title\"></p>\n<p>最后要记得把 Github Pages 的解析重新启动，否则就变成单线了。</p>\n<h1 id=\"一点猜测\"><a href=\"#一点猜测\" class=\"headerlink\" title=\"一点猜测\"></a>一点猜测</h1><p>会不会是 Coding 网站支持 SSL 证书自动延期，但因为我们设置了双线导致其申请失败的？如果是这样的话就有点麻烦了，再观察观察。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>在Coding上部署Hexo并实现和Github双线访问<br>地址：<a href=\"https://laosu.ml/2020/05/12/%E5%9C%A8Coding%E4%B8%8A%E9%83%A8%E7%BD%B2Hexo%E5%B9%B6%E5%AE%9E%E7%8E%B0%E5%92%8CGithub%E5%8F%8C%E7%BA%BF%E8%AE%BF%E9%97%AE/\">https://laosu.ml/2020/05/12/%E5%9C%A8Coding%E4%B8%8A%E9%83%A8%E7%BD%B2Hexo%E5%B9%B6%E5%AE%9E%E7%8E%B0%E5%92%8CGithub%E5%8F%8C%E7%BA%BF%E8%AE%BF%E9%97%AE/</a>)</p>\n</blockquote>\n","categories":["各种折腾"],"tags":["hexo","博客","证书","https"]},{"title":"HomeAssistant设置https访问后的问题","url":"/2020/08/09/HomeAssistant%E8%AE%BE%E7%BD%AEhttps%E8%AE%BF%E9%97%AE%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/","content":"<p>之前 HomeAssistant 在浏览器中是这样打开的  <code>http://ha.xxx.ml</code></p>\n<p>最近因为测试的几个软件都需要 SSL 支持，所以准备全面升级到 https，拟定的方案是利用群晖的反代 + 内网穿透来实现。，所以升级完成后，应该是这样的 <code>https://ha.xxx.ml</code></p>\n<h1 id=\"内网穿透\"><a href=\"#内网穿透\" class=\"headerlink\" title=\"内网穿透\"></a>内网穿透</h1><p>还是用的 frp ，但之前采用的一个域名一条记录的方式显然已经不适合反向代理，frpc.ini 需要按下面这样的进行修改，也可以用到《<a href=\"https://laosu.ml/2020/07/31/%E5%85%8D%E8%B4%B9%E7%9A%84%E6%B3%9B%E5%9F%9F%E5%90%8Dhttps%E8%AF%81%E4%B9%A6%E8%87%AA%E5%8A%A8%E7%BB%AD%E6%9C%9F/\">免费的泛域名https证书自动续期</a>》里介绍的 SSL 证书自动续期。</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[http]</span></span><br><span class=\"line\"><span class=\"attr\">type</span> = http</span><br><span class=\"line\"><span class=\"attr\">local_ip</span> = <span class=\"number\">192.168</span>.<span class=\"number\">0.199</span></span><br><span class=\"line\"><span class=\"attr\">local_port</span> = <span class=\"number\">81</span></span><br><span class=\"line\"><span class=\"attr\">custom_domains</span> = *.xxsu.ml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[https]</span></span><br><span class=\"line\"><span class=\"attr\">type</span> = https</span><br><span class=\"line\"><span class=\"attr\">local_ip</span> = <span class=\"number\">192.168</span>.<span class=\"number\">0.199</span></span><br><span class=\"line\"><span class=\"attr\">local_port</span> = <span class=\"number\">444</span></span><br><span class=\"line\"><span class=\"attr\">custom_domains</span> = *.xxsu.ml</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"反向代理\"><a href=\"#反向代理\" class=\"headerlink\" title=\"反向代理\"></a>反向代理</h1><p>直接用的群晖的反向代理，这里「来源」中的端口要和 <code>frpc.ini</code> 中 <code>local_port</code> 一致</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/02/1596350538307-1596350538309.png\" alt=\"title\"></p>\n<h1 id=\"遇到问题\"><a href=\"#遇到问题\" class=\"headerlink\" title=\"遇到问题\"></a>遇到问题</h1><p>设置反代完成后，在浏览器中输入 <code>https://ha.xxx.ml</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/02/1596351283877-1596351283881.png\" alt=\"title\"></p>\n<p>但是登陆完成后，却一直连接不上</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/02/1596346985529-1596346985576.png\" alt=\"title\"></p>\n<p>开始以为是 https 的问题，所以重新反代了一次 http 协议</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/02/1596351438718-1596351438720.png\" alt=\"title\"></p>\n<p>但是结果是一样的，所以基本上可以确定是因为反代导致的，而不是因为 https</p>\n<h1 id=\"解决问题\"><a href=\"#解决问题\" class=\"headerlink\" title=\"解决问题\"></a>解决问题</h1><p>查阅了一圈资料，发现主要原因是因为群晖自带的 nginx 不支持 websocket，这个问题直到 DSM6.2.1 才解决，而我的版本还是  DSM6.1.7。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/02/1596357813026-1596357813028.png\" alt=\"title\"></p>\n<p>好在网上已经有了解决方案。Synology DSM 6 反向代理的配置修复程序项目地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL29yb2JhcmRldC9kc20tcmV2ZXJzZS1wcm94eS13ZWJzb2NrZXQ=\">https://github.com/orobardet/dsm-reverse-proxy-websocket<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/02/1596357088477-1596357088478.png\" alt=\"title\"></p>\n<p>SSH连接后打开 <code>/usr/syno/share/nginx/Portal.mustache</code></p>\n<blockquote>\n<p>切记，修改前先备份，先备份，先备份，重要的事情总是要说三遍，备份是一种好习惯</p>\n</blockquote>\n<p>在 <code>location</code> 部分中添加以下内容:</p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">proxy_set_headerUpgrade   $http_upgrade;</span><br><span class=\"line\">proxy_set_headerConnection   &quot;upgrade&quot;;</span><br><span class=\"line\">proxy_read_timeout  86400;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/02/1596357482146-1596357482150.png\" alt=\"title\"></p>\n<p>重启 httpd</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo synoservicecfg --restart nginx</span><br></pre></td></tr></table></figure>\n\n<p>再次在浏览器中输入 <code>https://ha.xxx.ml</code>，发现已经完美解决了用 https 访问后卡在登录界面的问题。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>群晖nas 修改nginx配置的问题<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2Fkay5vcmcvJUU2JTk3JUE1JUU1JUJGJTk3LzE5NzAuaHRtbA==\">https://www.sadk.org/%E6%97%A5%E5%BF%97/1970.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>[进阶教程] nginx通过https反向代理hass的配置注意事项<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYnMuaGFzc2JpYW4uY29tL3RocmVhZC00Mjc2LTEtMS5odG1s\">https://bbs.hassbian.com/thread-4276-1-1.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Nginx反向代理Home assistant<br>地址：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy55dW5zZWFuLmNvbS9uZ2lueGZhbi14aWFuZy1kYWktbGktaG9tZS8=\">http://www.yunsean.com/nginxfan-xiang-dai-li-home/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>群晖nginx反向代理处理websocket协议的方法<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2E5OTJxcDg3Lw==\">https://post.smzdm.com/p/a992qp87/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","HomeAssistant","SSL"]},{"title":"小苏同学的在线毕业秀","url":"/2020/08/06/%E5%B0%8F%E8%8B%8F%E5%90%8C%E5%AD%A6%E7%9A%84%E5%9C%A8%E7%BA%BF%E6%AF%95%E4%B8%9A%E7%A7%80/","content":"<h1 id=\"Yuyun-Su\"><a href=\"#Yuyun-Su\" class=\"headerlink\" title=\"Yuyun Su\"></a>Yuyun Su</h1><blockquote>\n<p>Master of Design in Fashion, Body and Garment</p>\n</blockquote>\n<p>Duality is always the aesthetic of my projects. Changing my major from material chemistry to fashion design, I like to embrace technology and humanity thoughts, solid and softness, masculine and femininity in my practice. My work evolves in a space where theories, concepts, the ephemeral, ideas meet with material reality and processes of work.</p>\n<p>I have been exploring shaping the construction and doing hands-on material manipulation for all time. Thinking of body and garment, but not limited to the male or female mannequin, a principle of my work is to be both wearable and playful. Garment, installation, even collaborating with performing, I am always looking for more possibilities of my work, and use it as my tool to speak my voice out loud to the world.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/06/1596713451848-1596713451854.png\" alt=\"title\"></p>\n<blockquote>\n<p>Power Tools meets Chicago Women’s Park and Garden, 2019, Second mock-up, 10 looks garment, and installation, Photo by Yuyun Su</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/06/1596713513386-1596713513390.png\" alt=\"title\"></p>\n<blockquote>\n<p>Power Tools, 2020, 10 looks garment, Photo by Sonia Jia</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/06/1596713616052-1596713616056.png\" alt=\"title\"></p>\n<blockquote>\n<p>Power Tools, 2020, 10 looks garment, Photo by Sonia Jia</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/06/1596713713168-1596713713170.png\" alt=\"title\"></p>\n<blockquote>\n<p>Power Tools, 2020, 10 looks garment, Photo by Sonia Jia</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/06/1596713744194-1596713744197.png\" alt=\"title\"></p>\n<blockquote>\n<p>Power Tools, 2020, 10 looks garment, photo by Sonia Jia</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/06/1596713793149-1596713793153.png\" alt=\"title\"></p>\n<blockquote>\n<p>Power Tools, 2020, 10 looks garment, photo by Sonia Jia</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/06/1596713826261-1596713826264.png\" alt=\"title\"></p>\n<blockquote>\n<p>Power Tools, 2020, 10 looks garment, photo by Sonia Jia</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/06/1596713878072-1596713878074.png\" alt=\"title\"></p>\n<blockquote>\n<p>Power Tools, 2020, 10 looks garment, photo by Sonia Jia</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/06/1596713916218-1596713916220.png\" alt=\"title\"></p>\n<blockquote>\n<p>Power Tools, 2020, 10 looks garment, photo by Sonia Jia</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/06/1596713959207-1596713959209.png\" alt=\"title\"></p>\n<blockquote>\n<p>Power Tools, 2020, 10 looks garment, photo by Sonia Jia</p>\n</blockquote>\n<h1 id=\"Power-Tool\"><a href=\"#Power-Tool\" class=\"headerlink\" title=\"Power Tool\"></a><em>Power Tool</em></h1><p>There are always voices around us, saying that women and men have different abilities in different fields and are born to have a distinct personality and social function. However, as Simone de Beauvoir said in The Second Sex, “One is not born, but rather becomes, women…human are born free, create our own life’s meaning.” I am always challenging the way gender stereotypes want to shape us during grown-up.</p>\n<p>For a long time, philosophers think “using tools” is a way to distinguish human and other species. In history, lots of women have been used tools. However, here, today, we are still unrespectfully treated when using power tools to create art pieces in the art school. Therefore, I took art, my most powerful tools to speak my voice out loud.</p>\n<p>Clothes, to be considered as one kind of expression of yourself, are classified into menswear and womenswear. The power-tool pattern was enlarged and then used as the templates for my thesis collection, which contained classic “female” dresses and “men” suits since I want to remove this kind of limitation. I chose pink and blue, which traditionally have represented girls and boys, to be the main colors of the collection. To reinforces my intention for a human to wear whatever they want and be whoever they want to be. Different things can be “power tools” for different people. With my collection, I aim to challenge the systems and institutions that forbid or discourage people from picking up the power tools they need just to be themselves.</p>\n<h1 id=\"gradshow-2020\"><a href=\"#gradshow-2020\" class=\"headerlink\" title=\"gradshow 2020\"></a>gradshow 2020</h1><p>小苏同学的在线毕业秀地址：<span class=\"exturl\" data-url=\"aHR0cDovL3NpdGVzLnNhaWMuZWR1L2dyYWRzaG93MjAyMC9hcnRpc3RzL3l1eXVuLXN1Lw==\">http://sites.saic.edu/gradshow2020/artists/yuyun-su/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>gradshow 2020：<span class=\"exturl\" data-url=\"aHR0cDovL3NpdGVzLnNhaWMuZWR1L2dyYWRzaG93MjAyMC8=\">http://sites.saic.edu/gradshow2020/<i class=\"fa fa-external-link-alt\"></i></span></p>\n","categories":["苏玉云作品"],"tags":["服装设计","gradshow","毕业秀"]},{"title":"在线文档系统MrDoc","url":"/2020/08/03/%E5%9C%A8%E7%BA%BF%E6%96%87%E6%A1%A3%E7%B3%BB%E7%BB%9FMrDoc/","content":"<p>什么是 MrDoc？</p>\n<blockquote>\n<p>MrDoc 是基于 Python 开发的在线文档系统，适合作为个人和小型团队的文档、知识和笔记管理工具。致力于成为全平台（Web端、桌面端、移动端）的私有化在线文档部署方案。</p>\n</blockquote>\n<p>主界面看着蛮清爽</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/01/1596253812579-1596253812620.png\" alt=\"title\"></p>\n<p>而且客户端基本上覆盖了主流</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/02/1596366083065-1596366083067.png\" alt=\"title\"></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>mrdoc</code> ，选择 <code>jonnyan404/mrdoc-nginx</code>，版本选择 <code>latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/01/1596254944479-1596254944483.png\" alt=\"title\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>添加两个文件夹</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/mrdoc/config</code></td>\n<td align=\"center\"><code>/app/MrDoc/config</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>docker//mrdoc/media</code></td>\n<td align=\"center\"><code>/app/MrDoc/media</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/01/1596265138071-1596265138074.png\" alt=\"title\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>要避免端口冲突，所以重新指定了本地端口</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">本地端口</th>\n<th align=\"center\">容器端口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">1443</td>\n<td align=\"center\">443</td>\n</tr>\n<tr>\n<td align=\"center\">1080</td>\n<td align=\"center\">80</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/01/1596259445512-1596259445514.png\" alt=\"title\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><p>注意 LISTEN_PORT 端口，需要和前面设置的容器端口一致，默认为 10086 要改成 80</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/01/1596272428746-1596272428749.png\" alt=\"title\"></p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>在 <code>/docker/mrdoc/config</code> 目录新建 <code>config.ini</code> 文件，将下面的内容粘贴进去，并根据自己的实际进行设置。</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 如果自己没有更换其它数据库的需求,请原样复制粘贴,不要乱改配置.</span></span><br><span class=\"line\"><span class=\"comment\"># mysql版本注意:需要mysql5.6及以上版本.</span></span><br><span class=\"line\"><span class=\"comment\"># mysql需要手动创建一个数据库:create database mrdoc character set utf8mb4 collate utf8_bin;</span></span><br><span class=\"line\"><span class=\"comment\">#grant all privileges on mrdoc.* to &#x27;jonnyan404&#x27;@&#x27;%&#x27; identified by &#x27;www.jonnyan404.top:8088&#x27; with grant option;</span></span><br><span class=\"line\"><span class=\"comment\">#flush privileges;</span></span><br><span class=\"line\"><span class=\"section\">[site]</span></span><br><span class=\"line\"><span class=\"comment\"># True表示开启站点调试模式，False表示关闭站点调试模式</span></span><br><span class=\"line\"><span class=\"attr\">debug</span> = <span class=\"literal\">False</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"section\">[database]</span></span><br><span class=\"line\"><span class=\"comment\"># engine，指定数据库类型，接受sqlite、mysql、oracle、postgresql</span></span><br><span class=\"line\"><span class=\"attr\">engine</span> = sqlite</span><br><span class=\"line\"><span class=\"comment\"># name表示数据库的名称</span></span><br><span class=\"line\"><span class=\"comment\"># name = mrdoc</span></span><br><span class=\"line\"><span class=\"comment\"># user表示数据库用户名</span></span><br><span class=\"line\"><span class=\"comment\"># user = jonnyan404</span></span><br><span class=\"line\"><span class=\"comment\"># password表示数据库用户密码</span></span><br><span class=\"line\"><span class=\"comment\"># password = www.jonnyan404.top:8088</span></span><br><span class=\"line\"><span class=\"comment\"># host表示数据库主机地址</span></span><br><span class=\"line\"><span class=\"comment\"># host = db_host</span></span><br><span class=\"line\"><span class=\"comment\"># port表示数据库端口</span></span><br><span class=\"line\"><span class=\"comment\"># port=3306</span></span><br><span class=\"line\"><span class=\"section\">[chromium]</span></span><br><span class=\"line\"><span class=\"comment\"># path用于指定Chromium的路径，不指定则使用默认的</span></span><br><span class=\"line\"><span class=\"attr\">path</span> = /usr/lib/chromium/chrome</span><br><span class=\"line\"><span class=\"attr\">args</span> = --<span class=\"literal\">no</span>-sandbox,--disable-gpu</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"初始化数据库\"><a href=\"#初始化数据库\" class=\"headerlink\" title=\"初始化数据库\"></a>初始化数据库</h2><p>选中容器 –&gt; 详情</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/01/1596272813576-1596272813579.png\" alt=\"title\"></p>\n<p>终端机 –&gt; 新增，输入 <code>sh</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/01/1596272925744-1596272925746.png\" alt=\"title\"></p>\n<p>现在可以在光标处输入命令了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/01/1596272972595-1596272972597.png\" alt=\"title\"></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 执行数据库迁移</span></span><br><span class=\"line\">python manage.py migrate</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/01/1596267100282-1596267100284.png\" alt=\"title\"></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建一个管理员账户来管理整个 MrDoc</span></span><br><span class=\"line\">python manage.py createsuperuser</span><br></pre></td></tr></table></figure>\n\n<p>按提示输入管理员账号邮箱密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/01/1596267236523-1596267236526.png\" alt=\"title\"></p>\n<p>config 目录下生成了 <code>db.sqlite3</code> 文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/01/1596267386641-1596267386644.png\" alt=\"title\"></p>\n<h1 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h1><p>浏览器中输入 http://群晖IP:1080</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/01/1596270701140-1596270701163.png\" alt=\"title\"></p>\n<p>管理员账号登录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/01/1596270831787-1596270831790.png\" alt=\"title\"></p>\n<p>打开菜单</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/01/1596270906497-1596270906500.png\" alt=\"title\"></p>\n<p>进入后台</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/01/1596270949580-1596270949582.png\" alt=\"title\"></p>\n<p>简单设置几个参数</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/01/1596271145465-1596271145468.png\" alt=\"title\"></p>\n<p>建个用户，去玩耍吧</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/01/1596271352366-1596271352368.png\" alt=\"title\"></p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><p>新建文档</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/01/1596271492976-1596271492978.png\" alt=\"title\"></p>\n<p>编辑界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/01/1596271577500-1596271577502.png\" alt=\"title\"></p>\n<p>把本文贴进去的效果</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/01/1596289761955-1596289761957.png\" alt=\"title\"></p>\n<p>不需要再找图床</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/01/1596289894889-1596289894891.png\" alt=\"title\"></p>\n<p>图片直接上传到了 <code>media</code> 目录中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/01/1596289961582-1596289961584.png\" alt=\"title\"></p>\n<h1 id=\"遇到的问题\"><a href=\"#遇到的问题\" class=\"headerlink\" title=\"遇到的问题\"></a>遇到的问题</h1><p>用 https 时无法正常获取大纲</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/02/1596365111271-1596365111272.png\" alt=\"title\"></p>\n<p>但是用 http 却能正常获取到大纲</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/02/1596365074831-1596365074834.png\" alt=\"title\"></p>\n<p>有可能是程序的bug，但官方提供的 demo 网站也是基于 http 协议的（ <span class=\"exturl\" data-url=\"aHR0cDovL21yZG9jLnptaXN0ZXIuY29tLw==\">http://mrdoc.zmister.com/<i class=\"fa fa-external-link-alt\"></i></span> ），所以暂时无法判断，已提交 issues。</p>\n<h1 id=\"同类产品\"><a href=\"#同类产品\" class=\"headerlink\" title=\"同类产品\"></a>同类产品</h1><h2 id=\"Gitbook\"><a href=\"#Gitbook\" class=\"headerlink\" title=\"Gitbook\"></a>Gitbook</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ2l0Ym9vay5jb20v\">https://www.gitbook.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Gitbook 是一个写作和出版的平台，他们使用的系统是开源的。支持 Markdown 和 AsciiDoc 格式，最后输出的是静态网页。还可以通过 calibre 把书转成 pdf、epub、mobi 等常用格式，方便在各种设备上阅读。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/01/1596273262983-1596273262986.png\" alt=\"title\"></p>\n<h2 id=\"ShowDoc\"><a href=\"#ShowDoc\" class=\"headerlink\" title=\"ShowDoc\"></a>ShowDoc</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2hvd2RvYy5jYy8=\">https://www.showdoc.cc/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>ShowDoc 是一个非常适合 IT 团队的在线API文档、技术文档工具。你可以使用 Showdoc 来编写在线 API 文档、技术文档、数据字典、在线手册.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/01/1596274324107-1596274324153.png\" alt=\"title\"></p>\n<h2 id=\"语雀\"><a href=\"#语雀\" class=\"headerlink\" title=\"语雀\"></a>语雀</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueXVxdWUuY29tLw==\">https://www.yuque.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>优雅高效的在线文档编辑与协同工具，让每个企业轻松拥有文档中心，主流 Office 文件全兼容，多人协同，轻松拥有团队知识库。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/01/1596274697973-1596274697975.png\" alt=\"title\"></p>\n<h2 id=\"Wizard\"><a href=\"#Wizard\" class=\"headerlink\" title=\"Wizard\"></a>Wizard</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL215bHhzdy93aXphcmQ=\">https://github.com/mylxsw/wizard<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>一款开源的文档管理工具，支持Markdown/Swagger/Table类型的文档。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/01/1596275886186-1596275886189.png\" alt=\"title\"></p>\n<h2 id=\"TopDocs\"><a href=\"#TopDocs\" class=\"headerlink\" title=\"TopDocs\"></a>TopDocs</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vcXVhemVyby90b3Bkb2Nz\">https://gitee.com/quazero/topdocs<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/08/01/1596275971877-1596275971880.png\" alt=\"title\"></p>\n<p>同类产品挺多的，有时间了一个一个搭起来试试，总归会找到最适合自己的。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>代码主页<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3ptaXN0ZXIyMDE2L01yRG9j\">https://github.com/zmister2016/MrDoc<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>mrdoc的docker版本简明使用教程<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuam9ubnlhbjQwNC50b3A6ODA4OC9hcmNoaXZlcy9tcmRvYyVFNyU5QSU4NGRvY2tlciVFNyU4OSU4OCVFNiU5QyVBQyVFNyVBRSU4MCVFNiU5OCU4RSVFNCVCRCVCRiVFNyU5NCVBOCVFNiU5NSU5OSVFNyVBOCU4Qg==\">https://www.jonnyan404.top:8088/archives/mrdoc%E7%9A%84docker%E7%89%88%E6%9C%AC%E7%AE%80%E6%98%8E%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>开源MrDoc，一个适合个人和小型团队的文档、知识、笔记在线管理系统<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xMzQxMjc4NzQ=\">https://zhuanlan.zhihu.com/p/134127874<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","笔记","markdown"]},{"title":"免费的泛域名https证书自动续期","url":"/2020/07/31/%E5%85%8D%E8%B4%B9%E7%9A%84%E6%B3%9B%E5%9F%9F%E5%90%8Dhttps%E8%AF%81%E4%B9%A6%E8%87%AA%E5%8A%A8%E7%BB%AD%E6%9C%9F/","content":"<p><strong>什么是Certbot？</strong></p>\n<blockquote>\n<p>Certbot是专门为 Let’s Encrypt 制作的一个支持 ACME 协议的证书管理工具，可以通过它来全自动化的生成、管理、更新 Let’s encrypt 证书。</p>\n</blockquote>\n<p><strong>什么是Let’s Encrypt？</strong></p>\n<blockquote>\n<p>Let’s Encrypt是一個於2015年三季度推出的數位憑證認證機構，旨在以自動化流程消除手動建立和安裝憑證的複雜流程，並推廣使全球資訊網伺服器的加密連接無所不在，為安全網站提供免費的傳輸層安全性協定憑證。 [維基百科]</p>\n</blockquote>\n<p><strong>什么是泛域名？</strong></p>\n<blockquote>\n<p>就是 <code>*.baidu.com</code> 这种，可以实现无限的二级域名。</p>\n</blockquote>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>一直用腾讯的 dnspod 为各种二级域名申请免费的 SSL 证书，一个二级域名对应一张证书，有效期1年，除了少数会留着一直用，大部分软件、镜像测试完之后，域名基本上就不再使用了，虽然管理上有点麻烦，但是毕竟免费的，还要啥自行车？直到有一天出现</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/30/1596074306601-1596074306609.png\" alt=\"title\"></p>\n<p>查了一下，从2018年起亚洲诚信品牌免费型 DV 版 SSL 证书，同一主域最多只能申请20张，要么重复循环使用，要么申请泛域名证书。</p>\n<p>但要申请一个泛域名 SSL 证书，一方面价格不菲，另一方面免费泛域名证书有效期一般只有三个月，当你的二级站点一多，难免会顾此失彼。</p>\n<p>所以我们今天要解决的问题是用 Certbot 自动化来配置 SSL 证书和定时更新。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>因为主要是在群晖上建各种站点，所以还是在群晖上以 Docker 方式安装。</p>\n<p>在注册表中搜索 <code>xzxiaoshan</code> ，选择 <code>xzxiaoshan/certbot</code>，版本选择 <code>latest</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/30/1596081068633-1596081068636.png\" alt=\"title\"></p>\n<h1 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h1><h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>添加两个文件夹</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件夹</th>\n<th align=\"center\">装载路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>docker/certbot/logs</code></td>\n<td align=\"center\"><code>/var/log/letsencrypt</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>docker/certbot/letsencrypt</code></td>\n<td align=\"center\"><code>/etc/letsencrypt</code></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/30/1596081762755-1596081762761.png\" alt=\"title\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><p>以腾讯云为例</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">可变</th>\n<th align=\"center\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>PDNS</code></td>\n<td align=\"center\"><code>txy</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>TXY_TOKEN</code></td>\n<td align=\"center\">腾讯的<code>SecretKey</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>TXY_KEY</code></td>\n<td align=\"center\">腾讯的<code>SecretId</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>CERT_PARAMS</code></td>\n<td align=\"center\"><code>--email example@qq.com -d example.com -d *.example.com</code></td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>因为都有key，开始想当然的把 SecretKey 填在了 TXY_KEY ，把 SecretId 填在了 TXY_TOKEN ，结果折腾了半天一直出错，囧~~~</p>\n</blockquote>\n<p>参数说明</p>\n<ul>\n<li>PDNS参数：阿里云aly、腾讯云txy、华为云hwy、GoDaddy godaddy</li>\n<li>ALY_KEY 和 ALY_TOKEN：阿里云 API key 和 Secrec 官方申请文档<br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZWxwLmFsaXl1bi5jb20va25vd2xlZGdlX2RldGFpbC8zODczOC5odG1s\">https://help.aliyun.com/knowledge_detail/38738.html<i class=\"fa fa-external-link-alt\"></i></span> </li>\n<li>TXY_KEY 和 TXY_TOKEN：腾讯云 API 密钥官方申请文档<br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb25zb2xlLmNsb3VkLnRlbmNlbnQuY29tL2NhbS9jYXBp\">https://console.cloud.tencent.com/cam/capi<i class=\"fa fa-external-link-alt\"></i></span> </li>\n<li>HWY_KEY 和 HWY_TOKEN: 华为云 API 密钥官方申请文档<br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdXBwb3J0Lmh1YXdlaWNsb3VkLmNvbS9kZXZnLWFwaXNpZ24vYXBpLXNpZ24tcHJvdmlkZS5odG1s\">https://support.huaweicloud.com/devg-apisign/api-sign-provide.html<i class=\"fa fa-external-link-alt\"></i></span> </li>\n<li>GODADDY_KEY 和 GODADDY_TOKEN：GoDaddy API 密钥官方申请文档<br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuZ29kYWRkeS5jb20vZ2V0c3RhcnRlZA==\">https://developer.godaddy.com/getstarted<i class=\"fa fa-external-link-alt\"></i></span> </li>\n<li>支持的域名后缀详见文件domain.ini<br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3h6eGlhb3NoYW4vY2VydGJvdC9tYXN0ZXIvY2VydGJvdC1hdS9kb21haW4uaW5p\">https://raw.githubusercontent.com/xzxiaoshan/certbot/master/certbot-au/domain.ini<i class=\"fa fa-external-link-alt\"></i></span> </li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/30/1596082642836-1596082642843.png\" alt=\"title\"></p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><h2 id=\"证书自动同步\"><a href=\"#证书自动同步\" class=\"headerlink\" title=\"证书自动同步\"></a>证书自动同步</h2><p>群晖 –&gt; “控制面板” –&gt; “计划的任务” –&gt; “用户定义的脚本” –&gt; “任务设置”</p>\n<p>脚本内容填写 </p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">/volume1/docker/certbot/letsencrypt/synology/syncSynologyCert.sh</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/30/1596088950576-1596088950583.png\" alt=\"title\"></p>\n<p>其中前面一段 <code>/volume1/docker/certbot/letsencrypt</code> 是你群晖配置容器时挂载的卷的目录的实际路径（右键文件夹属性查看）。</p>\n<p>脚本设置<code>每天执行一次</code>即可。</p>\n<h1 id=\"更换默认证书\"><a href=\"#更换默认证书\" class=\"headerlink\" title=\"更换默认证书\"></a>更换默认证书</h1><p>容器运行成功后，如果没有出现错误，会自动生成一些目录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/31/1596196319697-1596196319726.png\" alt=\"title\"></p>\n<p>下载 <code>archive</code> 文件夹里的证书</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/31/1596186910038-1596186910039.png\" alt=\"title\"></p>\n<p>新增证书</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/31/1596186705885-1596186705891.png\" alt=\"title\"></p>\n<p>导入证书</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/31/1596186175310-1596186175340.png\" alt=\"title\"></p>\n<p>将导入的证书设置为默认证书（原来默认的证书是 synology.com ）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/31/1596186301587-1596186301593.png\" alt=\"title\"></p>\n<p>有可能会需要重启网页服务器</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/31/1596187073168-1596187073169.png\" alt=\"title\"></p>\n<h1 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h1><p>在浏览器中输入 <code>https://example.com</code> ，</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/31/1596197089751-1596197089754.png\" alt=\"title\"></p>\n<p>可以在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9teXNzbC5jb20v\">https://myssl.com<i class=\"fa fa-external-link-alt\"></i></span> 继续验 SSL 安全性，现在我们又可以继续愉快的玩（折）耍（腾）了。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>免费https证书（泛域名的，自动续期）<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NhdG9vcC9hcnRpY2xlL2RldGFpbHMvMTA0OTcwNzY3\">https://blog.csdn.net/catoop/article/details/104970767<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>群晖免费HTTPS证书，泛域名+自动续期<br>地址：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5uYXN5dW4uY29tL3RocmVhZC02OTQwNy0xLTEuaHRtbA==\">http://www.nasyun.com/thread-69407-1-1.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Nginx配合Certbot自动更新，获得永久免费SSL证书<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RvdHBob2VuaXgvYXJ0aWNsZS9kZXRhaWxzLzEwNjI3MjQyMQ==\">https://blog.csdn.net/dotphoenix/article/details/106272421<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>使用 Certbot 为网站设置永久免费的 HTTPS 证书<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9qaW1teXNvbmcuaW8vYmxvZy9mcmVlLWNlcnRpZmljYXRlcy13aXRoLWNlcnRib3Qv\">https://jimmysong.io/blog/free-certificates-with-certbot/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>【原创】群晖安装并自动续期Let’s Encrypt SSL证书<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb3J1bS41MW5iLmNvbS90aHJlYWQtMTc4OTg0My0xLTEuaHRtbA==\">https://forum.51nb.com/thread-1789843-1-1.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","SSL","证书"]},{"title":"利用Cloudreve搭建自用网盘","url":"/2020/07/30/%E5%88%A9%E7%94%A8Cloudreve%E6%90%AD%E5%BB%BA%E8%87%AA%E7%94%A8%E7%BD%91%E7%9B%98/","content":"<p><strong>什么是Cloudreve?</strong></p>\n<blockquote>\n<p>Cloudreve 可以让您快速搭建起公私兼备的网盘系统。Cloudreve 在底层支持不同的云存储平台，用户在实际使用时无须关心物理存储方式。你可以使用 Cloudreve 搭建个人用网盘、文件分享系统，亦或是针对大小团体的公有云系统，早期的Cloudreve 是用 PHP 开发的，但是 v3 用 go 进行了重构。</p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>依然是在群晖中打开 Docker，在注册表中搜索 <code>cloudreve</code> ，选择 <code>xavierniu/cloudreve</code>，版本选择 <code>latest</code>，这个版本是基于最新的Cloudreve V3制作的。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/26/1595765817375-1595765817407.png\" alt=\"title\"></p>\n<p>SSH登录到群晖，假设 docker 建在 volume1 上；</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建目录和文件</span></span><br><span class=\"line\">mkdir -p /volume1/docker/cloudreve \\</span><br><span class=\"line\">    &amp;&amp; touch /volume1/docker/cloudreve/conf.ini \\</span><br><span class=\"line\">    &amp;&amp; touch /volume1/docker/cloudreve/cloudreve.db</span><br></pre></td></tr></table></figure>\n\n<p>会在 <code>docker</code> 目录中创建 <code>cloudreve</code> 目录，并在<code>cloudreve</code> 目录生成了2个空的文件。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/28/1595943586919-1595943586920.png\" alt=\"title\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p>第一行为添加文件：<code>&lt;PATH TO cloudreve.db&gt;</code> –&gt; 数据库文件<br>第二行为添加文件：<code>&lt;PATH TO conf.ini&gt;</code> –&gt; 配置文件<br>第三行是添加文件夹：<code>&lt;PATH TO UPLOADS&gt;</code> –&gt; 上传目录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/28/1595944104745-1595944104749.png\" alt=\"title\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>默认端口为5212 </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/28/1595944318942-1595944318944.png\" alt=\"title\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><p>其他默认的就可以，PUID和PGID需要在SSH登录后，运行</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 假设当前登陆用户为root</span></span><br><span class=\"line\">id root</span><br></pre></td></tr></table></figure>\n\n<p>会得到类似于下面的一段代码</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">uid=1000(root) gid=1000(root)</span><br></pre></td></tr></table></figure>\n\n<p>则PUID填入1000，PGID填入1000</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/28/1595944434472-1595944434474.png\" alt=\"title\"></p>\n<h2 id=\"高级设置\"><a href=\"#高级设置\" class=\"headerlink\" title=\"高级设置\"></a>高级设置</h2><p>勾选启用自动重新启动</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/28/1595944497978-1595944497981.png\" alt=\"title\"></p>\n<h1 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h1><p>很多功能需要 https 才能使用，比如存储策略。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/28/1595949969285-1595949969288.png\" alt=\"title\"></p>\n<h2 id=\"反向代理设置\"><a href=\"#反向代理设置\" class=\"headerlink\" title=\"反向代理设置\"></a>反向代理设置</h2><p>进入群晖的 “控制面板” –&gt; “Synology 应用程序门户” –&gt; “反向代理服务器” 页面 (找不到的话请点击高级模式) ，如图添加一条 “反向代理服务器规则”。（“来源端口” 你自己定义，“目的地端口” ）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/28/1595950375295-1595950375298.png\" alt=\"title\"></p>\n<h2 id=\"上传证书\"><a href=\"#上传证书\" class=\"headerlink\" title=\"上传证书\"></a>上传证书</h2><p>进入群晖的 “控制面板” –&gt; “安全性” –&gt; “证书” 页面，将你的域名证书文件和私钥文件导入群晖中。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/28/1595950917512-1595950917515.png\" alt=\"title\"></p>\n<h2 id=\"管理员账号\"><a href=\"#管理员账号\" class=\"headerlink\" title=\"管理员账号\"></a>管理员账号</h2><p>选中容器，右键「详情」–&gt;「日志」，可以找到初始管理员账号和密码。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/28/1595948760583-1595948760585.png\" alt=\"title\"></p>\n<blockquote>\n<p>Cloudreve 在首次启动时，会创建初始管理员账号，请注意保管管理员密码，此密码只会在首次启动时出现。如果您忘记初始管理员密码，需要删除同级目录下的cloudreve.db，重新启动主程序以初始化新的管理员账户。</p>\n</blockquote>\n<p>完成 https 设置后，在浏览器中输入 https://域名:5213，用管理员账号、密码登录，进入「管理面板」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/28/1595949379894-1595949379897.png\" alt=\"title\"></p>\n<p>进入「管理面板」</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/28/1595949480622-1595949480625.png\" alt=\"title\"></p>\n<p>「添加存储策略」</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/28/1595949896291-1595949896294.png\" alt=\"title\"></p>\n<h2 id=\"存储设置\"><a href=\"#存储设置\" class=\"headerlink\" title=\"存储设置\"></a>存储设置</h2><p>以 OneDrive 为例，前提是你得有 OneDrive for Business 账号才行。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/28/1595951592318-1595951592320.png\" alt=\"title\"></p>\n<p>按照页面提示依次执行即可。我加了2个 OneDrive，加上本地存储，总共有3个策略，想测试动态切换，但是没找到地方。但是后面介绍的清玖云盘是可以的，也许这是捐赠版才有的功能？</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/29/1595955100978-1595955101003.png\" alt=\"title\"></p>\n<p>接下来要修改「用户组」的默认的存储策略，下拉框中选择即可。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/29/1595955215811-1595955215813.png\" alt=\"title\"></p>\n<p>其他的按实际需求填写即可。</p>\n<h2 id=\"注册用户\"><a href=\"#注册用户\" class=\"headerlink\" title=\"注册用户\"></a>注册用户</h2><p>在浏览器中输入：https://域名:5213</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/28/1595944718375-1595944718378.png\" alt=\"title\"></p>\n<p>注册后就能使用了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/28/1595947509452-1595947509454.png\" alt=\"title\"></p>\n<p>支持上传文件夹</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/29/1595993037639-1595993037640.png\" alt=\"title\"></p>\n<h2 id=\"离线下载\"><a href=\"#离线下载\" class=\"headerlink\" title=\"离线下载\"></a>离线下载</h2><p>需要用到另外一个Aira2镜像</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/29/1595984626547-1595984626554.png\" alt=\"title\"></p>\n<p>我平时下载都用玩客云+智能插座，所以这里就略过了，有兴趣的朋友可以参考：【Cloudreve Docker配置方法】中的Step4. 启动Aria2服务，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9yZWdpc3RyeS5odWIuZG9ja2VyLmNvbS9yL3hhdmllcm5pdS9jbG91ZHJldmUvJUVGJUJDJThDJUU5JTg3JThDJUU5JTlEJUEyJUU2JTlDJTg5JUU4JUFGJUE2JUU3JUJCJTg2JUU3JTlBJTg0JUU5JTg1JThEJUU3JUJEJUFFJUU2JTk2JUI5JUU2JUIzJTk1JUUzJTgwJTgy\">https://registry.hub.docker.com/r/xavierniu/cloudreve/，里面有详细的配置方法。<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"市面上基于-Cloudreve-搭建的网盘\"><a href=\"#市面上基于-Cloudreve-搭建的网盘\" class=\"headerlink\" title=\"市面上基于 Cloudreve 搭建的网盘\"></a>市面上基于 Cloudreve 搭建的网盘</h1><p>如果你觉得自己搭建麻烦，也可以直接注册个网盘来用，目前基于 Cloudreve 搭建的网盘还是挺多的，但是安全性和稳定性还有待时间的验证。</p>\n<h2 id=\"清玖云盘\"><a href=\"#清玖云盘\" class=\"headerlink\" title=\"清玖云盘\"></a>清玖云盘</h2><p>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbG91ZC5xaW5nc3RvcmUuY24v\">https://cloud.qingstore.cn/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>刚注册是500G，后来不知道怎么变成了1T空间，默认支持 WebDAV 协议。有了对外接口，就可以使用 RaiDrive、ExpanDrive、CloudMounter 这类的挂载工具，也可以使用 GoodSync 、Rclone 这样的同步工具，大大提高了可玩性，也弥补了 Cloudreve 没有客户端的问题。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/27/1595836260026-1595836260035.png\" alt=\"title\"></p>\n<h2 id=\"蜂鸟云盘\"><a href=\"#蜂鸟云盘\" class=\"headerlink\" title=\"蜂鸟云盘\"></a>蜂鸟云盘</h2><p>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZmVuZ25pYW9wYW4uY29tLw==\">https://www.fengniaopan.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>注册后有2T空间。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/27/1595836138936-1595836138940.png\" alt=\"title\"></p>\n<h2 id=\"小麦云盘\"><a href=\"#小麦云盘\" class=\"headerlink\" title=\"小麦云盘\"></a>小麦云盘</h2><p>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iLm93bi1jbG91ZC5jbi8=\">https://b.own-cloud.cn/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>注册后有500G空间。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/27/1595835978272-1595835978275.png\" alt=\"title\"></p>\n<h1 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h1><p>前面我们谈到网盘支持 WebDAV 的意义，所以很有必要验证一下，可惜翻车了。</p>\n<h2 id=\"WebDAV-测试\"><a href=\"#WebDAV-测试\" class=\"headerlink\" title=\"WebDAV 测试\"></a>WebDAV 测试</h2><p>Mac 上用 CloudMounter 测试了不行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/29/1595993975221-1595993975228.png\" alt=\"title\"></p>\n<p>Windows 上用 RaiDrive 测试了也不行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/30/1596110014598-1596110014659.png\" alt=\"title\"></p>\n<p>不仅仅是我们自己搭建的不行，连清玖云盘也不行，在网上搜了一圈，有说是因为了 nginx 反代导致的，也有人说是只有用 http 才能支持 WebDAV，简单做了能想到的测试，都未能见效，不排除是软件本身的 Bug。只能先埋个坑，等有时间了再来仔细研究。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>代码主页<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2Nsb3VkcmV2ZS9DbG91ZHJldmU=\">https://github.com/cloudreve/Cloudreve<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Docker代码主页<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9yL3hhdmllcm5pdS9jbG91ZHJldmU=\">https://hub.docker.com/r/xavierniu/cloudreve<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>利用CLOUDREVE 3.0+ONEDRIVE世纪互联版搭建自己的高速云存储<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZmVpamkud29yay8yMDIwLzE1MC5odG1s\">https://www.feiji.work/2020/150.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","网盘","Cloudreve"]},{"title":"一款全能的跨平台下载工具Motrix","url":"/2020/07/27/%E4%B8%80%E6%AC%BE%E5%85%A8%E8%83%BD%E7%9A%84%E8%B7%A8%E5%B9%B3%E5%8F%B0%E4%B8%8B%E8%BD%BD%E5%B7%A5%E5%85%B7Motrix/","content":"<p><strong>什么是Motrix</strong>？</p>\n<blockquote>\n<p>Motrix 是一款采用了「Aria 2」作为核心的开源免费下载软件，可以支持下载 HTTP、FTP、BT、磁力链接以及下载百度网盘等资源。软件代码基于 Electron 构架的设计让 Motrix 能够在多平台下施展拳脚，无论是 Windows、macOS 还是 Linux 都能拥有极佳的下载体验。</p>\n</blockquote>\n<h1 id=\"产品特性\"><a href=\"#产品特性\" class=\"headerlink\" title=\"产品特性\"></a>产品特性</h1><p>🕹 简洁明了的图形操作界面<br>🦄 支持BT和磁力链任务<br>☑️ 支持选择性下载BT部分文件<br>📡 每天自动更新 Tracker 服务器列表<br>🔌 UPnP &amp; NAT-PMP 端口映射<br>🎛 最高支持 10 个任务同时下载<br>🚀 单任务最高支持 64 线程下载<br>🕶 模拟用户代理UA<br>🔔 下载完成后通知<br>💻 支持触控栏快捷键(Mac 专享)<br>🤖 常驻系统托盘，操作更加便捷<br>🌑 深色模式<br>🗑 移除任务时可同时删除相关文件<br>🌍 国际化， 查看已可支持的语言<br>🛠 更多特性开发中</p>\n<p>软件主界面：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/27/1595860773837-1595860773868.png\" alt=\"title\"></p>\n<p>软件本身的使用非常简单，实在不会在这里能找到详细的使用说明，<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueXVxdWUuY29tL21vYXBwL2hlbHA=\">https://www.yuque.com/moapp/help<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"百度云的2种下载方式\"><a href=\"#百度云的2种下载方式\" class=\"headerlink\" title=\"百度云的2种下载方式\"></a>百度云的2种下载方式</h1><h2 id=\"Motrix-插件\"><a href=\"#Motrix-插件\" class=\"headerlink\" title=\"Motrix 插件\"></a>Motrix 插件</h2><p>Motrix 曾经提供过名为「百度网盘助手」的 Chrome 浏览器扩展，但是因为某种原因已经不提供了，但是我知道你总归还是有办法的。</p>\n<p>插件安装好之后，在您的百度网盘网页上会出现「MO.app」按钮。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/28/1595867567020-1595867567024.png\" alt=\"title\"></p>\n<p>先要设置，才能使用。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/28/1595867617615-1595867617617.png\" alt=\"title\"></p>\n<p>其实都已经配好了，只要测试成功就能用了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/28/1595867665225-1595867665227.png\" alt=\"title\"></p>\n<p>另外别忘了插件要启用key</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/28/1595936377019-1595936377025.png\" alt=\"title\"></p>\n<p>这个key来自于 Motrix 的设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/28/1595899137317-1595899137319.png\" alt=\"title\"></p>\n<blockquote>\n<p>需要注意的是，在 windows 平台，用 ctrl +c 复制这个 key 实际上得到的是这样一串字符：<code>http://token:eJEPyMHltDcy@127.0.0.1:16800/jsonrpc</code>，而在 Mac 上 只有 <code>eJEPyMHltDcy</code>，需要自己补全，不然会有问题。</p>\n</blockquote>\n<p>下载前需要先启动 Motrix，选择要下载的文件，然后点「使用MO下载」即可。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/28/1595867770517-1595867770518.png\" alt=\"title\"></p>\n<h2 id=\"油猴（Tampermonkey）脚本\"><a href=\"#油猴（Tampermonkey）脚本\" class=\"headerlink\" title=\"油猴（Tampermonkey）脚本\"></a>油猴（Tampermonkey）脚本</h2><p>一个开源的脚本「百度网盘直链下载助手」，代码下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N5aHl6MTk5MC9iYWlkdXl1bg==\">https://github.com/syhyz1990/baiduyun<i class=\"fa fa-external-link-alt\"></i></span>。安装完成后，在您的百度网盘网页上会出现「下载助手」按钮。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/27/1595862832030-1595862832035.png\" alt=\"title\"></p>\n<p>要配合 Motrix 下载，我们要用 「PRC 下载」模式。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/28/1595900291772-1595900291779.png\" alt=\"title\"></p>\n<p>同样需要「配置 RPC 服务」</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/28/1595900332408-1595900332414.png\" alt=\"title\"></p>\n<blockquote>\n<p>1、这里的密钥只要填写前面 Motrix 生成的 <code>eJEPyMHltDcy</code> 即可；<br>2、端口改为16800；</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/28/1595936119011-1595936119111.png\" alt=\"title\"></p>\n<p>详细的教程（<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmFpZHV5dW4ud2lraS96aC1jbi9ycGMuaHRtbCNtb3RyaXgtJUU0JUJEJUJGJUU3JTk0JUE4JUU2JThDJTg3JUU1JThEJTk3\">https://www.baiduyun.wiki/zh-cn/rpc.html#motrix-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97<i class=\"fa fa-external-link-alt\"></i></span>）在这里能找到。</p>\n<h2 id=\"两种下载方式的对比\"><a href=\"#两种下载方式的对比\" class=\"headerlink\" title=\"两种下载方式的对比\"></a>两种下载方式的对比</h2><p>2种下载方式的下载速度，显然油猴脚本的「下载助手」中的 RPC 下载速度更好，但不确定是否具备普遍性。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/27/1595861918637-1595861918639.png\" alt=\"title\"></p>\n<h1 id=\"其他网站的下载\"><a href=\"#其他网站的下载\" class=\"headerlink\" title=\"其他网站的下载\"></a>其他网站的下载</h1><p>建议下载「Motrix Chrome Extension」插件，用来拦截 chrome 的下载器</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/27/1595863609686-1595863609687.png\" alt=\"title\"></p>\n<p>装了插件后默认会用 Motrix 下载，在「蜂鸟云盘」测试下载速度，网页直接下载大概在 7 MB/s左右，但是用 Motrix 可以达到 11 MB/s。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/27/1595863521050-1595863521053.png\" alt=\"title\"></p>\n<h1 id=\"建议\"><a href=\"#建议\" class=\"headerlink\" title=\"建议\"></a>建议</h1><p>工具用着虽然爽，但是各种云盘既然存在会员，既然存在限速，说明资源还是有限的，也许你占的就是VIP的带宽，别人可是交了钱才享受的服务，所以偶尔应应急就算了。羊毛可以撸，但是千万别撸太狠，把羊给撸没了。生存不易，网盘多的很，别总和百度较劲，且用且珍惜！</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>官网中文主页<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tb3RyaXguYXBwL3poLUNOLw==\">https://motrix.app/zh-CN/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["网盘","下载","Motrix"]},{"title":"在群晖上搭建专属的视频会议","url":"/2020/07/22/%E5%9C%A8%E7%BE%A4%E6%99%96%E4%B8%8A%E6%90%AD%E5%BB%BA%E4%B8%93%E5%B1%9E%E7%9A%84%E8%A7%86%E9%A2%91%E4%BC%9A%E8%AE%AE/","content":"<p><strong>什么是Jitsi?</strong></p>\n<blockquote>\n<p>Jitsi is a collection of Open Source projects which provide state-of-the-art video conferencing capabilities that are secure, easy to use and easy to self-host.</p>\n</blockquote>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>新冠的肆虐让视频会议系统受到关注，使得 Zoom 用户数量激增，从去年12月每日用户才1000万，到今年3月已经增长到2亿。对于许多公司而言，使用 Zoom 之类的工具是正确的做法，但是 Zoom 接连不断的爆出数据泄露事件，因此对于资金短缺或更注重信息安全的公司而言，Jitsi 可能才是远程沟通的理想手段。</p>\n<p>Jitsi Meet 采用了 Java 语言开发，是开源的视频会议系统，基于 WebRTC、React、XMPP 等成熟的开源技术。 它能够独立部署，也可以方便整合到业务系统中。</p>\n<p>最重要的是其采用了端到端的加密方式（end-to-end encryption），每个人密钥都不相同，有几个人参会就有几组密钥，视频内容都是在本地完成加密和解密，有着较高的安全性。</p>\n<p>加上</p>\n<ol>\n<li>代码开源</li>\n<li>自己搭建<br>所以理论上 Jitsi 会有更高的安全性。</li>\n</ol>\n<h2 id=\"系统架构\"><a href=\"#系统架构\" class=\"headerlink\" title=\"系统架构\"></a>系统架构</h2><p>根据官网的描述（<span class=\"exturl\" data-url=\"aHR0cHM6Ly9qaXRzaS5naXRodWIuaW8vaGFuZGJvb2svZG9jcy9hcmNoaXRlY3R1cmU=\">https://jitsi.github.io/handbook/docs/architecture<i class=\"fa fa-external-link-alt\"></i></span>），Jitsi包含一系列项目：</p>\n<p><code>Jitsi Meet</code></p>\n<blockquote>\n<p>兼容 WebRTC 的 JavaScript 前端应用程序，使用 Jitsi Videobridge 来提供高质量，可扩展的视频会议。</p>\n</blockquote>\n<p><code>Jitsi Videobridge（jvb）</code></p>\n<blockquote>\n<p>兼容WebRTC的服务器，旨在在会议参与者之间实现视频数据路由。</p>\n</blockquote>\n<p><code>Jitsi Conference Focus（jicofo）</code> </p>\n<blockquote>\n<p>Jitsi Meet会议中使用的服务器端 focus 组件，用于会议室（房间）管理，管理参与者和 jvb 之间的会话。</p>\n</blockquote>\n<p><code>Jitsi Gateway to SIP（​​jigasi）</code> </p>\n<blockquote>\n<p>服务器端应用程序，允许常规SIP客户端加入Jitsi Meet会议</p>\n</blockquote>\n<p><code>Jibri</code></p>\n<blockquote>\n<p>直播/录播的工具，基于ffmpeg实现会议画面的捕捉和编码。如果有多个会议室需要录制/直播，需要部署多台 Jibri。</p>\n</blockquote>\n<p><code>Prosody</code> </p>\n<blockquote>\n<p>XMPP信令服务器，Jitsi使用的外部软件，负责各组件间的消息交换。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/22/1595379838253-1595379838260.png\" alt=\"title\"><br>（官网的架构图）</p>\n<h2 id=\"产品特点\"><a href=\"#产品特点\" class=\"headerlink\" title=\"产品特点\"></a>产品特点</h2><ul>\n<li><p>无限用户</p>\n<blockquote>\n<p>用户或会议参与者的数量没有人为限制。服务器性能和带宽是唯一的限制因素。</p>\n</blockquote>\n</li>\n<li><p>无需帐户</p>\n<blockquote>\n<p>不用注册账号也能使用</p>\n</blockquote>\n</li>\n<li><p>会议室锁定</p>\n<blockquote>\n<p>使用密码控制对会议的访问。</p>\n</blockquote>\n</li>\n<li><p>默认加密</p>\n<blockquote>\n<p>采用了端到端的加密方式</p>\n</blockquote>\n</li>\n<li><p>高质量</p>\n<blockquote>\n<p>音频和视频以Opus和VP8的清晰度和丰富性提供。</p>\n</blockquote>\n</li>\n<li><p>无需客户端</p>\n<blockquote>\n<p>可以使用 Web 浏览器，无需下载即可加入对话。只需与其他人共享您的会议 URL 即可开始。</p>\n</blockquote>\n</li>\n<li><p>100％开源</p>\n<blockquote>\n<p>由来自世界各地的杰出社区提供支持。</p>\n</blockquote>\n</li>\n<li><p>通过URL邀请：您可以在自己喜欢的易于记忆的 <code>https://meet.mydomain.com/自定义会议室名称</code> 会议上见面（例如：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWV0Lm15ZG9tYWluLmNvbS9PdXJDb25m\">https://meet.mydomain.com/OurConf<i class=\"fa fa-external-link-alt\"></i></span> )，而不必将由数字和字母组成的随机序列加入难以记忆的房间中。</p>\n</li>\n</ul>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>首先需要下载 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ppdHNpL2RvY2tlci1qaXRzaS1tZWV0L2FyY2hpdmUvbWFzdGVyLnppcA==\"> https://github.com/jitsi/docker-jitsi-meet/archive/master.zip<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>因为我的 docker 安装在「存储空间1」，所以我把文件上传并解压到了 <code>/volume1/docker</code></p>\n<p>用SSH客户端连到群晖。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入解压出来的目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /volume1/docker/docker-jitsi-meet-master</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 拷贝环境文件</span></span><br><span class=\"line\">cp env.example .env</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 为.env 文件中的账号生成密码</span></span><br><span class=\"line\">./gen-passwords.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成存放配置文件的目录</span></span><br><span class=\"line\">mkdir /volume1/docker/docker-jitsi-config/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成子目录</span></span><br><span class=\"line\">mkdir -p /volume1/docker/docker-jitsi-config/&#123;web/letsencrypt,transcripts,prosody/config,prosody/prosody-plugins-custom,jicofo,jvb,jigasi,jibri&#125;</span><br></pre></td></tr></table></figure>\n\n<p>编辑 <code>.env</code> 文件，将 <code>CONFIG=~/.jitsi-meet-cfg</code> 修改为 <code>CONFIG=/volume1/docker/docker-jitsi-config</code></p>\n<p>取消下面几行前面的#号注释，使之生效</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 启用身份验证</span></span><br><span class=\"line\"><span class=\"attr\">ENABLE_AUTH</span>=<span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 允许访客</span></span><br><span class=\"line\"><span class=\"attr\">ENABLE_GUESTS</span>=<span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#选择认证类型: internal, jwt or ldap</span></span><br><span class=\"line\"><span class=\"attr\">AUTH_TYPE</span>=internal</span><br></pre></td></tr></table></figure>\n\n<p>并按照自己的实际设置以下内容：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 避免冲突将 80 改成了 5080</span></span><br><span class=\"line\">HTTP_PORT=5080</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 避免冲突将 443 改成了 5443</span></span><br><span class=\"line\">HTTPS_PORT=5443</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置域名</span></span><br><span class=\"line\">PUBLIC_URL=https://meet.mydomain.com</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置内网的IP，也就是群晖的IP</span></span><br><span class=\"line\">DOCKER_HOST_ADDRESS=192.168.X.X</span><br></pre></td></tr></table></figure>\n\n<p>接下来就可以产生和运行你的 docker 容器了，4个镜像差不多 1G 的大小，所以时间取决于你的网速。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n\n<p>依次会下载 <code>jitsi/web:latest</code>、 <code>jitsi/prosody:latest</code>、<code>jitsi/jicofo:latest</code>、<code>jitsi/jvb:latest</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/21/1595331997095-1595331997129.png\" alt=\"title\"></p>\n<p>回到 Docker 管理器，我们会看到这四个容器已经启动了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/22/1595380535852-1595380535860.png\" alt=\"title\"></p>\n<p>这个时候在浏览器输入 <code>http://192.168.X.X:5080</code>，可以看到下面的界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/21/1595346420531-1595346420534.png\" alt=\"title\"></p>\n<p>但是在http协议下，摄像头和麦克风是不能使用的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/21/1595346568733-1595346568735.png\" alt=\"title\"></p>\n<p>需要https才可以，在浏览器输入 <code>https://192.168.X.X:5443</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/21/1595346704342-1595346704345.png\" alt=\"title\"></p>\n<h1 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h1><h2 id=\"设置反向代理\"><a href=\"#设置反向代理\" class=\"headerlink\" title=\"设置反向代理\"></a>设置反向代理</h2><p>「控制面板」–&gt;「Synology应用程序门户」–&gt;「反向代理服务器」–&gt; 「新增」</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/22/1595347924573-1595347924576.png\" alt=\"title\"></p>\n<h2 id=\"上传ssl证书\"><a href=\"#上传ssl证书\" class=\"headerlink\" title=\"上传ssl证书\"></a>上传ssl证书</h2><p>「控制面板」–&gt;「安全性」–&gt;「证书」–&gt;「新增」</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/22/1595348024508-1595348024509.png\" alt=\"title\"></p>\n<h2 id=\"创建账号\"><a href=\"#创建账号\" class=\"headerlink\" title=\"创建账号\"></a>创建账号</h2><p>因为前面我们启用了身份验证，所以需要注册用户</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 首先exec到容器内</span></span><br><span class=\"line\">docker-compose <span class=\"built_in\">exec</span> prosody /bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建主持人账号</span></span><br><span class=\"line\">prosodyctl --config /config/prosody.cfg.lua register 用户名 meet.jitsi 密码</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除主持人账号</span></span><br><span class=\"line\">prosodyctl --config /config/prosody.cfg.lua unregister 用户名 meet.jitsi</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/22/1595350308976-1595350308979.png\" alt=\"title\"></p>\n<p>现在我们可以正式使用了，开启一个新的会议后，会提示等待主持人</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/22/1595348971304-1595348971307.png\" alt=\"title\"></p>\n<p>会议室的主界面，非常的清爽</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/22/1595379017410-1595379017471.png\" alt=\"title\"></p>\n<h1 id=\"客户端\"><a href=\"#客户端\" class=\"headerlink\" title=\"客户端\"></a>客户端</h1><p>除了网页外，官网提供了Android和iOS平台的移动客户端，如果你需要Wndows或者其他平台的桌面客户端，可以参考我之前写的《<a href=\"https://laosu.ml/2020/06/06/%E6%8A%8A%E7%BD%91%E9%A1%B5%E6%89%93%E5%8C%85%E6%88%90%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/\">把网页打包成桌面应用程序</a>》，自己打包一个。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/22/1595379280515-1595379280522.png\" alt=\"title\"></p>\n<p>在手机上收到邀请链接会要求下载客户端</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/22/1595384414391-1595384414393.png\" alt=\"title\"></p>\n<h1 id=\"后续\"><a href=\"#后续\" class=\"headerlink\" title=\"后续\"></a>后续</h1><p>如果你在后续更改了任何 <code>.env</code> 内的配置，假设不想用身份验证了想取消掉，那么要使新的配置生效的话，步骤依次是：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 停止并删除容器、网络、卷、镜像</span></span><br><span class=\"line\">docker-compose down</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除配置目录</span></span><br><span class=\"line\">rm -rf /volume1/docker/docker-jitsi-config</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重建配置目录</span></span><br><span class=\"line\">mkdir -p /volume1/docker/docker-jitsi-config/&#123;web/letsencrypt,transcripts,prosody/config,prosody/prosody-plugins-custom,jicofo,jvb,jigasi,jibri&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重新构建并在后台启动容器，-d 在后台运行服务容器</span></span><br><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>官网主页<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9qaXRzaS5vcmcv\">https://jitsi.org/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Jitsi Meet on Docker<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ppdHNpL2RvY2tlci1qaXRzaS1tZWV0\">https://github.com/jitsi/docker-jitsi-meet<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Jitsi private video conferencing on synology NAS<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudmlydHVhbGNvbmZ1c2lvbi5uZXQvaml0c2ktbWVldGluZy1jb25mZXJlbmNlLW9uLXN5bm9sb2d5LW5hcy8=\">https://www.virtualconfusion.net/jitsi-meeting-conference-on-synology-nas/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>How to install Jitsi Meet on your QNAP server<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL3N3bGgvaG93LXRvLWluc3RhbGwtaml0c2ktbWVldC1vbi15b3VyLXFuYXAtc2VydmVyLTZjYzg4MjRiOTU3Yg==\">https://medium.com/swlh/how-to-install-jitsi-meet-on-your-qnap-server-6cc8824b957b<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Jitsi Meet：开源的视频会议系统<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYWxhLmltLzcwOTIuaHRtbA==\">https://lala.im/7092.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>开源架构解析｜视频会议系统 Jitsi Meet<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9saXVsYW50YW8uY29tL2ppdHNpLW1lZXQuaHRtbA==\">https://liulantao.com/jitsi-meet.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","视频会议","jitsi"]},{"title":"用Bitwarden自建密码管理系统","url":"/2020/07/18/%E7%94%A8bitwarden%E8%87%AA%E5%BB%BA%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/","content":"<p><strong>什么是Bitwarden?</strong></p>\n<blockquote>\n<p>Bitwarden 是一款自由且开源的密码管理服务，用户可在加密的保管库中存储敏感信息（例如网站登录凭据）。Bitwarden平台提供有多种客户端应用程序，包括网页用户界面、桌面应用，浏览器扩展、移动应用以及命令行界面。Bitwarden 提供云托管服务，并支持自行部署解决方案。【维基百科】</p>\n</blockquote>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>用户信息泄露事件时有发生，连 facebook 这样的大网站也不可避免，当你多个网站使用了同一个密码，假如你使用了 chrome 浏览器自动保存填充密码时，在密码被泄露后它会给出提醒。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/13/1594570093933-1594570093937.png\" alt=\"title\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/13/1594602446840-1594602446869.png\" alt=\"title\"></p>\n<p>所以每个网站、每个应用使用独立的密码是非常必要的。那为什么不用 chrome 自带的密码管理器呢？因为它无法自主添加网站，所以还需要配合其他记录工具使用。</p>\n<p>在上一篇中我们介绍了<a href=\"https://laosu.ml/2020/07/11/%E5%85%8D%E8%B4%B9%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86%E5%99%A8KeePass/\">《免费跨平台密码管理器KeePass》</a>，其使用本地密码数据库保存，通过云盘同步的方式。属于一个去中心化的方案，也可以说是个离线版的方案。而今天要介绍的 bitwarden 正好相反，是基于服务器的一个方案，今天我们就来介绍如何在群晖上，用 bitwarden 自建密码管理服务器，来保障自己的数据安全。</p>\n<h1 id=\"为什么要自建服务器\"><a href=\"#为什么要自建服务器\" class=\"headerlink\" title=\"为什么要自建服务器\"></a>为什么要自建服务器</h1><p>Bitwarden自己的服务器安全性肯定是没问题的，但是放在别人服务器上总是有点担忧，万一服务器挂了呢？（最近onedrive for business就一直用不了），另一方面国内访问国外网站，总是不太友好，所以干脆自建。</p>\n<h1 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h1><ol>\n<li>一个公网IP；</li>\n<li>一个域名和SSL证书；</li>\n<li>支持Docker的群晖主机（黑白无所谓）；</li>\n</ol>\n<h1 id=\"服务端安装\"><a href=\"#服务端安装\" class=\"headerlink\" title=\"服务端安装\"></a>服务端安装</h1><p><code>bitwarden/setup</code> 是官方镜像，因 Bitwarden 服务器使用 .Net 开发，Docker 镜像体积过大，此外它使用 Microsoft SQL Server 数据库，这个数据库对服务器性能要求比较高。</p>\n<p>有人利用 Rust 重写了一遍，这个项目的 Docker 镜像叫做<br> <code>bitwardenrs/server</code>，这个镜像体积比较小，对服务器性能要求比较低，还可以使用 SQLite 或 MariaDB/MySQL 数据库，而无需像官方服务器那样使用专有的 Microsoft SQL Server。</p>\n<p>所以本次部署采用该镜像。代码地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2RhbmktZ2FyY2lhL2JpdHdhcmRlbl9ycw==\">https://github.com/dani-garcia/bitwarden_rs<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>打开群晖Docker — 注册表 — 搜 bitwarden ，第一个 <code>bitwardenrs/server</code> 就是，双击下载，tag选择 latest</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/12/1594540732235-1594540732239.png\" alt=\"title\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/12/1594542615497-1594542615499.png\" alt=\"title\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p>因为 80 端口被占用了，所以需要另外指定。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/12/1594542209311-1594542209315.png\" alt=\"title\"></p>\n<h2 id=\"环境变量\"><a href=\"#环境变量\" class=\"headerlink\" title=\"环境变量\"></a>环境变量</h2><p>新增四个变量</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 设置是否开启 Web 客户端。如果开启，可以通过访问你的域名来打开 Web 客户端，用户登录后即可通过网页管理密码。因为注册用户需要，所以也暂且先打开；</span></span><br><span class=\"line\"><span class=\"attr\">WEB_VAULT_ENABLED</span> = <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 控制是否开放用户注册，因为你必须先注册才能存储数据，所以暂且先打开；搭建好注册后改成false</span></span><br><span class=\"line\"><span class=\"attr\">SIGNUPS_ALLOWED</span> = <span class=\"literal\">true</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 是否开启WebSocket</span></span><br><span class=\"line\"><span class=\"attr\">WEBSOCKET_ENABLED</span> = <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 日志保存文件路径</span></span><br><span class=\"line\"><span class=\"attr\">LOG_FILE</span> = /data/bitwarden.log</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/12/1594558929684-1594558929685.png\" alt=\"title\"></p>\n<h1 id=\"服务端设置\"><a href=\"#服务端设置\" class=\"headerlink\" title=\"服务端设置\"></a>服务端设置</h1><p>虽然 <code>bitwardenrs</code> 已经可以运行起来，但是 <code>bitwardenrs</code> 必须要通过https 访问，否则无法进行注册、登陆等一系列的操作。</p>\n<h2 id=\"反向代理设置\"><a href=\"#反向代理设置\" class=\"headerlink\" title=\"反向代理设置\"></a>反向代理设置</h2><p>进入群晖的 “控制面板” - “Synology 应用程序门户” - “反向代理服务器” 页面 (找不到的话请点击高级模式) ，如图添加一条 “反向代理服务器规则”。（“来源端口” 你自己定义，“目的地端口” ）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/15/1594824175603-1594824175604.png\" alt=\"title\"></p>\n<ul>\n<li>来源处协议必须选择 https，主机名为你在外网访问群晖的域名，端口填写你想要外网访问的端口，这里假如为 9443；</li>\n<li></li>\n<li>目的地处协议选择 http，主机名填写 localhost，对应上面配置容器参数步骤中设置的本地端口 8880；</li>\n<li></li>\n<li>完成后点击确定。</li>\n</ul>\n<h2 id=\"上传证书\"><a href=\"#上传证书\" class=\"headerlink\" title=\"上传证书\"></a>上传证书</h2><p>进入群晖的 “控制面板” - “安全性” - “证书” 页面，将你的域名证书文件和私钥文件导入群晖中。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/15/1594824544185-1594824544188.png\" alt=\"title\"></p>\n<p>以 dnspod 申请的证书为例。将下载下来的证书文件压缩包解压。如图导入群晖中：</p>\n<blockquote>\n<ul>\n<li>Nginx 文件夹里的 2_域名.key 文件放入 “私钥” 中</li>\n<li>Nginx 文件夹里的 1_域名_bundle.crt 文件放入 “证书” 中</li>\n<li>“中间证书” 留空</li>\n</ul>\n</blockquote>\n<p>或者</p>\n<blockquote>\n<ul>\n<li>Apache 文件夹里的 3_域名.key 文件放入 “私钥” 中</li>\n<li>Apache 文件夹里的 2_域名.crt 文件放入 “证书” 中</li>\n<li>Apache 文件夹里的 1_域名.crt 放入 “中间证书” 中</li>\n</ul>\n</blockquote>\n<p>在” 证书 “页面设置刚才添加的反向代理服务器规则使用此证书。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/15/1594824926962-1594824926964.png\" alt=\"title\"></p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><h2 id=\"Web端\"><a href=\"#Web端\" class=\"headerlink\" title=\"Web端\"></a>Web端</h2><p>至此，Bitwarden 服务端基本就搭建好了。启动 Bitwarden 容器后，浏览器输入 https://群晖的 ip:9443，应该就可以进入登录页面了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/12/1594566250628-1594566250631.png\" alt=\"title\"></p>\n<p>然后点击注册按钮填写我们的邮箱和主密码，请务必牢记你的主密码，因为一旦遗失，你保存的密码就再也找不回来了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/15/1594785522592-1594785522644.png\" alt=\"title\"></p>\n<p>主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/12/1594567089388-1594567089390.png\" alt=\"title\"></p>\n<p>注册完成后如果不想其他用户进行注册的需要关闭注册及邀请功能。在群晖中停止一下容器，选择编辑容器</p>\n<p>添加环境变量 </p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#关闭注册</span></span><br><span class=\"line\"><span class=\"attr\">SIGNUPS_ALLOWED</span> = <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#关闭邀请</span></span><br><span class=\"line\"><span class=\"attr\">INVITATIONS_ALLOWED</span> = <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n\n<p>应用后重启容器。</p>\n<h2 id=\"chrome插件\"><a href=\"#chrome插件\" class=\"headerlink\" title=\"chrome插件\"></a>chrome插件</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/12/1594540953735-1594540953737.png\" alt=\"title\"></p>\n<p>点击左上角的齿轮图标进入服务器设置界面。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/15/1594825860759-1594825860763.png\" alt=\"title\"></p>\n<p>在服务器URL中填入服务器地址(如：https://群晖的 ip:9443)后保存。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/15/1594825962671-1594825962673.png\" alt=\"title\"></p>\n<p>返回主界面后点击登录按钮，用自己注册的账号进行登录。</p>\n<p>安装完插件后，在浏览器中鼠标右键会增加 Bitwarden 。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/15/1594828358678-1594828358682.png\" alt=\"title\"></p>\n<h2 id=\"android-app\"><a href=\"#android-app\" class=\"headerlink\" title=\"android app\"></a>android app</h2><p>“设置” - “自动填写” - “自动填充服务” - “启用”</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/15/1594785703887-1594785703894.png\" alt=\"title\"></p>\n<p>其他用法和设置可以自行探索。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><ul>\n<li>这个docker镜像对于服务器的要求不高；</li>\n<li>除了最基本的密码保存、上传附件等，官方需要付费使用的 TOTP 、密码检测等功能也都是可以直接使用的；</li>\n<li>如果之前用过其他的密码管理器，可以导入到 Bitwarden；</li>\n<li>最好启用两步登录，安全性更高一点；</li>\n<li>数据在自己手里，可能会感觉会更安全点吧。</li>\n</ul>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>官网主页<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iaXR3YXJkZW4uY29tLw==\">https://bitwarden.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>放弃付费1Password改用免费开源的bitwarden_rs自建密码管理系统-安装,使用和备份<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93emZvdS5jb20vYml0d2FyZGVuLXJzLw==\">https://wzfou.com/bitwarden-rs/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>使用群晖搭建第三方 Bitwarden 密码服务器<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5wZW5ndWFuZ3Vhbi5jb20vMTAyNzEuaHRtbA==\">https://penpenguanguan.com/10271.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>使用群晖 Docker 搭建 bitwarden_rs 密码服务器<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnd4bG9zdC5jb20vZG9ja2VyX2JpdHdhcmRlbl9ycy5odG1s\">https://blog.wxlost.com/docker_bitwarden_rs.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>群晖可以这么玩 - 自建Bitwarden服务从此告别忘记密码<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2E0d2t3dzNsLw==\">https://post.smzdm.com/p/a4wkww3l/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Installing bitwarden on Synology Diskstation<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cua2FydG9sby5kZS8yMDIwLzAyLzAzL2luc3RhbGxpbmctYml0d2FyZGVuLW9uLXN5bm9sb2d5LWRpc2tzdGF0aW9uLw==\">https://www.kartolo.de/2020/02/03/installing-bitwarden-on-synology-diskstation/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","密码","bitwarden"]},{"title":"全网音乐免费听","url":"/2020/07/15/%E5%85%A8%E7%BD%91%E9%9F%B3%E4%B9%90%E5%85%8D%E8%B4%B9%E5%90%AC/","content":"<p><strong>什么是 Listen 1</strong></p>\n<blockquote>\n<p>Listen 1 可以搜索和播放来自网易云音乐，虾米，QQ音乐，酷狗音乐，酷我音乐，Bilibili，咪咕音乐网站的歌曲，让你的曲库更全面。并支持收藏功能，方便的创建自己的歌单。<br>这是一款 Github 开源软件，感谢开源社区的开发者，为 Listen 1 贡献了精彩的代码。</p>\n</blockquote>\n<h1 id=\"跨平台的客户端\"><a href=\"#跨平台的客户端\" class=\"headerlink\" title=\"跨平台的客户端\"></a>跨平台的客户端</h1><p>除主流平台客户端外，还支持浏览器插件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/15/1594796468266-1594796468309.png\" alt=\"title\"></p>\n<h1 id=\"搜索功能\"><a href=\"#搜索功能\" class=\"headerlink\" title=\"搜索功能\"></a>搜索功能</h1><p> Listen 1 可以搜索和播放来自网易云音乐，虾米，QQ音乐，酷狗音乐，酷我音乐，Bilibili，咪咕音乐网站的歌曲，让你的曲库更全面。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/15/1594796825376-1594796825384.png\" alt=\"title\"></p>\n<h1 id=\"歌单功能\"><a href=\"#歌单功能\" class=\"headerlink\" title=\"歌单功能\"></a>歌单功能</h1><p>支持歌单功能，你可以方便的播放，收藏和创建自己的歌单。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/15/1594797231118-1594797231127.png\" alt=\"title\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/15/1594798253657-1594798253661.png\" alt=\"title\"></p>\n<h1 id=\"更换主题\"><a href=\"#更换主题\" class=\"headerlink\" title=\"更换主题\"></a>更换主题</h1><p>目前支持2种，简约白和深空灰</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/15/1594797320097-1594797320099.png\" alt=\"title\"></p>\n<h1 id=\"歌词显示\"><a href=\"#歌词显示\" class=\"headerlink\" title=\"歌词显示\"></a>歌词显示</h1><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/15/1594797426387-1594797426396.png\" alt=\"title\"></p>\n<h1 id=\"安装chrome插件\"><a href=\"#安装chrome插件\" class=\"headerlink\" title=\"安装chrome插件\"></a>安装chrome插件</h1><p>下载 Chrome 插件版压缩包，并解压缩</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/15/1594798363898-1594798363901.png\" alt=\"title\"></p>\n<p>打开 Chrome 扩展页面，勾选右上角「开发者模式」</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/15/1594798452789-1594798452791.png\" alt=\"title\"></p>\n<p>选择「加载已解压的扩展程序…」，选择刚刚解压缩的文件夹</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/15/1594798491176-1594798491184.png\" alt=\"title\"></p>\n<p>新版本的 chrome 需要打开「固定扩展程序」</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/15/1594798663675-1594798663682.png\" alt=\"title\"></p>\n<p>开始使用</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/15/1594799088828-1594799088856.png\" alt=\"title\"></p>\n<h1 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h1><p>1、如果在海外，或者挂了VPN，会出现下图的提示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/15/1594804486501-1594804486506.png\" alt=\"title\"></p>\n<p>2、还能用多久？毕竟南山必胜客岂是浪得虚名！</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/15/1594812396772-1594812396834.png\" alt=\"title\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>官网主页<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9saXN0ZW4xLmdpdGh1Yi5pby9saXN0ZW4xLw==\">https://listen1.github.io/listen1/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["音乐","listen1"]},{"title":"免费跨平台密码管理器KeePass","url":"/2020/07/11/%E5%85%8D%E8%B4%B9%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86%E5%99%A8KeePass/","content":"<p><strong>什么是KeePass</strong></p>\n<blockquote>\n<p>Keepass 是一个免费的开源密码管理器，它可以帮助您安全地管理密码。您可以将所有密码放在一个数据库中，该数据库使用一个主密钥或密钥文件锁定。所以您只需要记住一个主密码或者选择密钥文件就可以解锁整个数据库。数据库使用目前已知的最佳和最安全的加密算法（aes和twofish）进行加密。 </p>\n</blockquote>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>当今的时代您需要记住许多各种密码。例如：办公室电脑密码、笔记本密码、家里电脑密码、上网帐号密码、手机服务密码、邮箱密码、QQ 密码、银行卡查询密码、银行卡交易密码、银行卡网上支付密码……现在的我们需要记太多太多的密码。纵然我们可以使一些密码一致，但无法让所有的密码都一样，因为如果你在任何地方使用了密码，而有人得到了这个密码，你就有问题了…一个严重的问题。窃贼可以访问你的电子邮件帐户、网站等等，你的所有与之相关的文件和数据都有可能遭到泄露。</p>\n<p>可以在这个网站 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYXN0cmlsbC5jb20vemgvcGFzc3dvcmQtbGVhay10ZXN0\">https://www.astrill.com/zh/password-leak-test<i class=\"fa fa-external-link-alt\"></i></span> 检查您的密码是否曾经在网络上泄露。</p>\n<p>如果是这样的，那恭喜你了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/11/1594466237094-1594466237101.png\" alt=\"title\"></p>\n<p>如果是这样，赶紧换密码吧。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/11/1594466275274-1594466275276.png\" alt=\"title\"></p>\n<p>最好的保护是在每个网站上使用独特的密码，不要重复使用旧密码，但这样太考验我们的记忆力了，所以这个时候就需要用KeePass了。</p>\n<h1 id=\"Windows平台\"><a href=\"#Windows平台\" class=\"headerlink\" title=\"Windows平台\"></a>Windows平台</h1><p>我直接下载的便携版，只要解压到指定的目录就可以了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/11/1594467672098-1594467672102.png\" alt=\"title\"></p>\n<h2 id=\"设置中文\"><a href=\"#设置中文\" class=\"headerlink\" title=\"设置中文\"></a>设置中文</h2><p>在这个页面 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cua2VlcGFzcy5jb20uY24vbGFuZ3VhZ2Uv\">https://www.keepass.com.cn/language/<i class=\"fa fa-external-link-alt\"></i></span> 下载简体中文语言包</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/11/1594468371330-1594468371332.png\" alt=\"title\"></p>\n<p>在 keepass 的安装目录中有个 languages 文件夹，将解包的文件移到 languages 文件夹中，启动 keepass ，选择中文，按提示重启 keepass 即可。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/11/1594468844471-1594468844473.png\" alt=\"title\"></p>\n<h2 id=\"OneDrive同步插件\"><a href=\"#OneDrive同步插件\" class=\"headerlink\" title=\"OneDrive同步插件\"></a>OneDrive同步插件</h2><ul>\n<li>1、在 keepaass 主界面中点击【工具】→【插件管理器】→【打开文件夹】；</li>\n<li>2、将下载的后缀为 <code>.plgx</code> 的文件复制并粘贴到步骤 1 打开的的文件夹中（zip 包请先解压）；</li>\n<li>3、关闭然后重新打开 keepass。</li>\n</ul>\n<p>选择了用 OneDrive 来做不同平台的数据同步，所以需要安装 <code>KeePassOneDriveSync</code> 插件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/11/1594469168280-1594469168283.png\" alt=\"title\"></p>\n<p>同步</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/11/1594468118484-1594468118487.png\" alt=\"title\"></p>\n<h1 id=\"Mac-OS平台\"><a href=\"#Mac-OS平台\" class=\"headerlink\" title=\"Mac OS平台\"></a>Mac OS平台</h1><h2 id=\"MacPass\"><a href=\"#MacPass\" class=\"headerlink\" title=\"MacPass\"></a>MacPass</h2><p>这货只支持本地数据库，所以如果想要实现数据库同步，还需要借助其他软件的配合，比如 ‎OneDrive、CloudMounter、ExpanDrive 等网盘软件。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/11/1594482310581-1594482310583.png\" alt=\"title\"></p>\n<p>登录后的主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/11/1594483016293-1594483016296.png\" alt=\"title\"></p>\n<h2 id=\"KeeWeb\"><a href=\"#KeeWeb\" class=\"headerlink\" title=\"KeeWeb\"></a>KeeWeb</h2><p>其实 KeeWeb 不仅仅只支持 Mac，还有 Windows、Linux 客户端，另外还有在线网页版，是真正跨平台软件。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/12/1594486008554-1594486008557.png\" alt=\"title\"></p>\n<p>支持多种同步方式</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/12/1594485964165-1594485964192.png\" alt=\"title\"></p>\n<p>主界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/12/1594486348161-1594486348162.png\" alt=\"title\"></p>\n<h1 id=\"Chrome-插件\"><a href=\"#Chrome-插件\" class=\"headerlink\" title=\"Chrome 插件\"></a>Chrome 插件</h1><p>有两个选择，看个人喜好。</p>\n<h2 id=\"keepass-tusk\"><a href=\"#keepass-tusk\" class=\"headerlink\" title=\"keepass tusk\"></a>keepass tusk</h2><p>在chrome 网上应用店中搜索 <code>keepass tusk</code>，并安装</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/11/1594470450750-1594470450752.png\" alt=\"title\"></p>\n<p>数据库选择 OneDrive</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/11/1594470582480-1594470582482.png\" alt=\"title\"></p>\n<h2 id=\"KeePassHttp-Connector\"><a href=\"#KeePassHttp-Connector\" class=\"headerlink\" title=\"KeePassHttp-Connector\"></a>KeePassHttp-Connector</h2><p>第一步、Windows平台需要先在 keepass 中安装 <code>KeePassHttp</code> 插件；</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/12/1594525037606-1594525037690.png\" alt=\"title\"></p>\n<p>Mac平台 MacPass 需要下载 <code>MacPassHTTP</code> 插件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/11/1594482694115-1594482694118.png\" alt=\"title\"></p>\n<p>第二步、在chrome 网上应用店中搜索 <code>KeePassHttp</code>，并安装</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/11/1594471668031-1594471668035.png\" alt=\"title\"></p>\n<p>KeePassHttp-Connector 本身并不存储任何记录，所以当你在 chrome 浏览器中打开一个网页时，它就会询问 KeePassHttp（MacPassHTTP）你的数据库中有没有关于这个网址的记录；如果有 KeePassHttp（MacPassHTTP）会弹出一个对话框，点击【Allow】它就会将记录以 AES 256 算法加密然后通过 http 协议发送给 KeePassHttp-Connector 从而实现网页自动填充。</p>\n<h1 id=\"Android平台\"><a href=\"#Android平台\" class=\"headerlink\" title=\"Android平台\"></a>Android平台</h1><p>KeePass2Android 支持很多种同步盘数据库调用方式，所以当然选 KeePass2Android 了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/11/1594473620781-1594473620783.png\" alt=\"title\"></p>\n<p>刚安装完第一次运行的初始界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/11/1594473853512-1594473853514.png\" alt=\"title\"></p>\n<p>选择【打开文件】</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/11/1594477304409-1594477304412.png\" alt=\"title\"></p>\n<p>Keepass2Android 的便捷性也还挺不错，比如刚锁定数据库，短时间内解锁，会只要求输入密码后3位，还支持指纹解锁。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>官网中文主页<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cua2VlcGFzcy5jb20uY24v\">https://www.keepass.com.cn/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>密码管理软件KeePass教程 篇一：Windows端的配置和使用教程（上）<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2EyNWdkOWxwLw==\">https://post.smzdm.com/p/a25gd9lp/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>密码管理软件KeePass教程 篇二：Windows端的配置和使用教程（下）<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2Fxbmwyb3FwLw==\">https://post.smzdm.com/p/aqnl2oqp/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>免费跨平台密码管理器KeePass使用及云同步教程<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVhbmppYW56aGFpLmNvbS9rZWVwYXNzLXR1dG9yaWFsLmh0bWw=\">https://www.ruanjianzhai.com/keepass-tutorial.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>(十五)小众但好用：安卓版Keepass使用教程<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80NzYxNDg4Mg==\">https://zhuanlan.zhihu.com/p/47614882<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["密码","KeePass","MacPass","KeePass2Android","OneDrive"]},{"title":"用旧电脑做监控主机","url":"/2020/07/10/%E7%94%A8%E6%97%A7%E7%94%B5%E8%84%91%E5%81%9A%E7%9B%91%E6%8E%A7%E4%B8%BB%E6%9C%BA/","content":"<p><strong>什么是iSpy</strong></p>\n<blockquote>\n<p>iSpy 是国外的一款开源免费的视频监控，是一套相当实用的自动监控录像工具，可以同时接入、管理多个不同的摄像头、IP CAM 或者其他的影音输入设备，让我们用一台电脑就可以录下多个不同摄像头拍的画面。</p>\n</blockquote>\n<p>主要核心功能：</p>\n<ol>\n<li>把摄像头通过代码嵌入到你自己的网站；</li>\n<li>支持不同品牌摄像头，电脑usb摄像头，通过 onvif 协议，http，rtsp 等方式添加摄像头；</li>\n<li>实时监看，录像回放，电视墙功能；</li>\n<li>支持云存储，ftp 上传，上传录像到 YouTube, Dropbox 以及 Google Drive 等；</li>\n<li>各种不同的录像方式，定时，手动，报警录像等；</li>\n<li>支持Email, SMS等；</li>\n<li>支持插件扩展，车牌识别(ALPR),人脸探测(Face Detection)等；</li>\n<li>提供api,支持二次开发。</li>\n<li>支持多语言。</li>\n</ol>\n<h1 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h1><p>家里有一台女儿留下的 acer aspire p3，触摸屏已经坏了，正好可以用来做 iSpy 的主机。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/10/1594384838057-1594384838091.png\" alt=\"title\"></p>\n<p>另外还有一个朋友送的巨峰 IP CAM，需要加载 ocx ，所以只能用古老的 IE 浏览器。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/10/1594385024560-1594385024562.png\" alt=\"title\"></p>\n<h1 id=\"安装设置\"><a href=\"#安装设置\" class=\"headerlink\" title=\"安装设置\"></a>安装设置</h1><p>iSpy 软件根据需要下载32位或者64位</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/10/1594385445247-1594385445251.png\" alt=\"title\"></p>\n<p>安装比较简单，就不上图了</p>\n<h2 id=\"设置为中文\"><a href=\"#设置为中文\" class=\"headerlink\" title=\"设置为中文\"></a>设置为中文</h2><p>【option】–&gt;【setting】</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/10/1594386499576-1594386499580.png\" alt=\"title\"></p>\n<p>选择【中文】即可，不需要重启</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/10/1594386562373-1594386562375.png\" alt=\"title\"></p>\n<p>中文翻译相当的差，可能是用 google 机翻的吧 </p>\n<h2 id=\"添加本地摄像头\"><a href=\"#添加本地摄像头\" class=\"headerlink\" title=\"添加本地摄像头\"></a>添加本地摄像头</h2><p>【添加对象】–&gt;【当地拍摄器】</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/10/1594386824994-1594386824996.png\" alt=\"title\"></p>\n<p>因为笔记本支持前后摄像头，所以需要进行选择，这里用了前置摄像头</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/10/1594386770378-1594386770380.png\" alt=\"title\"></p>\n<h2 id=\"添加-IP-CAM\"><a href=\"#添加-IP-CAM\" class=\"headerlink\" title=\"添加 IP CAM\"></a>添加 IP CAM</h2><p>摄像机的 http 或者 rtsp 调用地址可以咨询摄像头厂家，可以使用iSpy提供的这个数据库 Camera Connection Database（<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaXNweWNvbm5lY3QuY29tL3NvdXJjZXMuYXNweA==\">https://www.ispyconnect.com/sources.aspx<i class=\"fa fa-external-link-alt\"></i></span>） 查询到收录的各大品牌摄像机的 rtsp 连接地址。知道地址后可以直接用【IP拍摄器】添加，如果不知道怎么设，可以尝试【使用向导的IP摄像机】，支持的设备列表相当丰富。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/10/1594388460255-1594388460257.png\" alt=\"title\"></p>\n<p>我试了下向导，比较容易崩溃，而且需要自己用 VLC 测试是否能出图像。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/10/1594387851335-1594387851338.png\" alt=\"title\"></p>\n<p>我的巨峰是这样的：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">rtsp:&#x2F;&#x2F;192.168.0.81&#x2F;user&#x3D;admin&amp;password&#x3D;&amp;channel&#x3D;1&amp;stream&#x3D;0.sdp?</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"添加-ONVIF-摄像头\"><a href=\"#添加-ONVIF-摄像头\" class=\"headerlink\" title=\"添加 ONVIF 摄像头\"></a>添加 ONVIF 摄像头</h2><p>可以通过 onvif 工具(ONVIF Device Manager)获取到网络地址。软件下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zb3VyY2Vmb3JnZS5uZXQvcHJvamVjdHMvb252aWZkbS8=\">https://sourceforge.net/projects/onvifdm/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"移动侦测\"><a href=\"#移动侦测\" class=\"headerlink\" title=\"移动侦测\"></a>移动侦测</h1><p>在图像上右键–&gt;【编辑】–&gt;【移动侦测】，画一个矩形的检测区域即可。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/10/1594390669310-1594390669311.png\" alt=\"title\"></p>\n<p>当这个区域中有物体移动时，可以触发自动录像。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/10/1594392218848-1594392218851.png\" alt=\"title\"></p>\n<h1 id=\"录像存储\"><a href=\"#录像存储\" class=\"headerlink\" title=\"录像存储\"></a>录像存储</h1><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/10/1594392022977-1594392022980.png\" alt=\"title\"></p>\n<h1 id=\"Web访问\"><a href=\"#Web访问\" class=\"headerlink\" title=\"Web访问\"></a>Web访问</h1><p>广域网的访问需要注册账号，这部分的功能是收费功能，但我们可以在局域网实现 web 访问，然后通过内网穿透实现远程访问，或者将其集成到 HomeAssistant 中，目前我采用的是后者。不仅能远程访问，还能用手机访问。</p>\n<p>采用了两种不同的方法来接入巨峰 IPC，一种是通过 rtsp 协议直连 IPC 获取巨峰 IPC 的图像，另一种是连 iSpy 服务器来获取巨峰 IPC 的图像。</p>\n<p>记得需要设置 ip 白名单，方可通过Homeassistant，或浏览器访问摄像头。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/10/1594394580202-1594394580204.png\" alt=\"title\"></p>\n<p>在 <code>configuration.yaml</code> 中增加以下内容：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">camera:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">platform:</span> <span class=\"string\">generic</span></span><br><span class=\"line\">      <span class=\"attr\">name:</span> <span class=\"string\">jufeng</span></span><br><span class=\"line\">      <span class=\"attr\">stream_source:</span> <span class=\"string\">rtsp://192.168.0.81/user=admin&amp;password=&amp;channel=1&amp;stream=0.sdp?</span></span><br><span class=\"line\">      <span class=\"attr\">still_image_url:</span> <span class=\"string\">http://192.168.0.81/webcapture.jpg?command=snap&amp;channel=1</span></span><br><span class=\"line\">      <span class=\"attr\">verify_ssl:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">      <span class=\"attr\">username:</span> <span class=\"string\">admin</span> </span><br><span class=\"line\">      <span class=\"attr\">authentication:</span> <span class=\"string\">basic</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">platform:</span> <span class=\"string\">mjpeg</span></span><br><span class=\"line\">      <span class=\"attr\">mjpeg_url:</span> <span class=\"string\">http://192.168.0.203:8080/mjpegfeed?oid=3&amp;full</span></span><br><span class=\"line\">      <span class=\"attr\">name:</span> <span class=\"string\">acer_ispy_jufeng</span></span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">platform:</span> <span class=\"string\">mjpeg</span></span><br><span class=\"line\">      <span class=\"attr\">mjpeg_url:</span> <span class=\"string\">http://192.168.0.203:8080/mjpegfeed?oid=2&amp;full</span></span><br><span class=\"line\">      <span class=\"attr\">name:</span> <span class=\"string\">acer_ispy_front</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/10/1594393909407-1594393909410.png\" alt=\"title\"></p>\n<p>打开前置摄像头</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/07/10/1594393986811-1594393986814.png\" alt=\"title\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>官网主页<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaXNweWNvbm5lY3QuY29tLw==\">https://www.ispyconnect.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>[新奇玩法] Ispy【PC摄像头】【接入HA】【mjpeg】<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYnMuaGFzc2JpYW4uY29tL3RocmVhZC00ODQzLTEtMS5odG1s\">https://bbs.hassbian.com/thread-4843-1-1.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["监控","rtsp","iSpy","onvif"]},{"title":"如何收藏微信内容到为知笔记","url":"/2020/06/30/%E5%A6%82%E4%BD%95%E6%94%B6%E8%97%8F%E5%BE%AE%E4%BF%A1%E5%86%85%E5%AE%B9%E5%88%B0%E4%B8%BA%E7%9F%A5%E7%AC%94%E8%AE%B0/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>买了很多年的为知笔记，一直用来做个人的知识管理工具，对于微信中的好文章，无论是公众帐号推送的，还是朋友圈中分享的，都能一键保存到为知笔记，原本一直蛮顺手的，但是经过微信几次的接口调整，使用已经变的越来越麻烦了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/30/1593516073900-1593516073906.png\" alt=\"title\"></p>\n<p>4月份调整之后，在文章右上角的「…」弹出的分享菜单中，取消了所有公众号一键保存到第三方笔记的接口，使得我只能用「邮件」发送来保存。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/30/1593499220256-1593499220289.png\" alt=\"title\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/30/1593499291765-1593499291774.png\" alt=\"title\"></p>\n<p>与调整之前比，需要多两个步骤：选联系人，发送确认。</p>\n<p>但昨晚发现微信又调整了接口，这次连「邮件」都没有了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/30/1593499506819-1593499506829.png\" alt=\"title\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/30/1593499543488-1593499543497.png\" alt=\"title\"></p>\n<p>除了 「在浏览器打开」 外，清一色的全是腾讯自家产品。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/30/1593505015204-1593505015210.png\" alt=\"title\"></p>\n<p>既然微信不能不用，笔记不能不记，那就只有再想办法咯。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/30/1593516272758-1593516272760.png\" alt=\"title\"></p>\n<h1 id=\"方法一：「在浏览器打开」\"><a href=\"#方法一：「在浏览器打开」\" class=\"headerlink\" title=\"方法一：「在浏览器打开」\"></a>方法一：「在浏览器打开」</h1><p>以下操作在小米手机上验证通过。</p>\n<ul>\n<li>「在浏览器打开」</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/30/1593518873637-1593518873640.png\" alt=\"title\"></p>\n<ul>\n<li>打开浏览器的菜单</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/30/1593499839194-1593499839204.png\" alt=\"title\"></p>\n<ul>\n<li>选择分享</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/30/1593499914888-1593499914897.png\" alt=\"title\"></p>\n<ul>\n<li>选择更多</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/30/1593499979722-1593499979727.png\" alt=\"title\"></p>\n<ul>\n<li>「保存到为知笔记」</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/30/1593500074543-1593500074553.png\" alt=\"title\"></p>\n<p>如果你用其他的笔记，道理应该是一样的。</p>\n<p>这个方法虽然步骤较多，但不会中断目前的阅读，</p>\n<h1 id=\"方案二：「复制链接」\"><a href=\"#方案二：「复制链接」\" class=\"headerlink\" title=\"方案二：「复制链接」\"></a>方案二：「复制链接」</h1><ul>\n<li>复制文章链接</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/30/1593501144162-1593501144167.png\" alt=\"title\"></p>\n<ul>\n<li>向为知笔记服务号发送复制的链接</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/30/1593501177851-1593501177863.png\" alt=\"title\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/30/1593501238626-1593501238637.png\" alt=\"title\"></p>\n<p>这个方法看起来步骤不多，但是因为都在微信中切换，所以会打断阅读，体验不好。</p>\n<h1 id=\"方法三：「浮窗」\"><a href=\"#方法三：「浮窗」\" class=\"headerlink\" title=\"方法三：「浮窗」\"></a>方法三：「浮窗」</h1><p>利用微信「浮窗」功能，长期保存一篇含有「为知笔记」服务号二维码的文章.<br>如果你找不到的话，就用这篇吧。<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cud2l6LmNuL3poLWNuL3dlY2hhdGNsaXBwZXItd2VjaGF0aW50cm8=\">https://www.wiz.cn/zh-cn/wechatclipper-wechatintro<i class=\"fa fa-external-link-alt\"></i></span></p>\n<ul>\n<li>复制公众号文章链接后，点开浮窗。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/30/1593504412601-1593504412639.png\" alt=\"title\"></p>\n<ul>\n<li>点出长期保存的带有「为知笔记」公众号二维码的文章，长按识别二维码进入「为知笔记」公众号</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/30/1593504517823-1593504517833.png\" alt=\"title\"></p>\n<ul>\n<li>再后面就和方法二一样了。</li>\n</ul>\n<p>比方法二强的地方在于不用切来切去。但是需要长按啥的，尤其是长期有个浮窗，反正我觉得很不爽，也许这就是强迫症吧。</p>\n<h1 id=\"方法四：「收藏」\"><a href=\"#方法四：「收藏」\" class=\"headerlink\" title=\"方法四：「收藏」\"></a>方法四：「收藏」</h1><ul>\n<li>先用微信「收藏」按钮来收藏内容</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/30/1593502327119-1593502327123.png\" alt=\"title\"></p>\n<ul>\n<li>当我们收藏了几篇文章以后，然后在「为知笔记」服务号，点击「加号」按钮，然后选择「收藏」按钮，把之前收藏的公众号文章发送给「为知笔记」。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/30/1593502567727-1593502567732.png\" alt=\"title\"></p>\n<ul>\n<li>选中要发送的文章，点击「发送」即可</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/30/1593502636042-1593502636053.png\" alt=\"title\"></p>\n<h1 id=\"方法五：微信双开\"><a href=\"#方法五：微信双开\" class=\"headerlink\" title=\"方法五：微信双开\"></a>方法五：微信双开</h1><p>再注册一个微信，重新将「为知笔记」服务号绑定到另一个微信，每次复制链接后切换到另一个双开微信里面去。</p>\n<h1 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h1><p>暂时找到的方法就这些，相比较而言个人认为：</p>\n<p>方法四 –&gt; 方法一 –&gt; 方法五 –&gt; 方法三 –&gt; 方法二</p>\n<p>如果你有更好的方法，请告诉我！</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>更简单的收藏方法来了！快学起来<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvME5MY1JrclMyS3p2ZnRKUE83aVpMdw==\">https://mp.weixin.qq.com/s/0NLcRkrS2KzvftJPO7iZLw<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["微信","为知笔记","WizNote"]},{"title":"超好用的Mac截图软件iShot","url":"/2020/06/27/%E8%B6%85%E5%A5%BD%E7%94%A8%E7%9A%84Mac%E6%88%AA%E5%9B%BE%E8%BD%AF%E4%BB%B6iShot/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>因为日常写文档经常要截图，所以一款好的截图软件对于提升工作效率有很大的帮助，之前一直用的腾讯的截图（Jietu），虽然只有一个简单的选框截图模式，但具备丰富的标注功能，完全可以胜任工作需要，只是自从升级到最新版本后，遇到了包括热键不响应等各种问题，老的安装包又找不到了，所以只能重新寻找新的替代方案。</p>\n<p>网上有各种推荐，但从介绍看功能大同小异，最终我选择了 iShot，因为免费，因为体积小巧，因为支持截长图。</p>\n<h1 id=\"iShot-功能简介\"><a href=\"#iShot-功能简介\" class=\"headerlink\" title=\"iShot 功能简介\"></a>iShot 功能简介</h1><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/27/1593246810177-1593246810217.png\" alt=\"title\"></p>\n<blockquote>\n<ul>\n<li>区域截图、窗口截图、快捷键截图。智能识别窗口，自动倒圆角、可自定义快捷键快速截图</li>\n<li>长截图、滚动截图</li>\n<li>延时全屏截图，支持倒计时声音播放，截取不易选取的窗口</li>\n<li>快捷键快速标注，可根据习惯自定义截图标注工具快捷键</li>\n<li>标注功能：矩形、圆形、横线、箭头、画笔、马赛克、文字标记、序号标签、局部高亮</li>\n<li>自定义配色，标注工具默认提供5种颜色，另外提供自定义调色板，可自定义配色</li>\n<li>标注工具提供多种样式选择：箭头、马赛克等标注工具，提供多款样式选择，让你的标注不再单一</li>\n<li>支持高清、标清两种图像质量</li>\n<li>支持jpg、png、tiff截图保存格式</li>\n<li>支持隐藏菜单栏图标</li>\n</ul>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>直接在 App Store 中搜索 <code>ishot</code> 安装即可。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/27/1593260644354-1593260644366.png\" alt=\"title\"></p>\n<p>安装完成后，需要在【系统偏好设置】 –&gt; 【安全性与隐私】 –&gt; 【隐私】 –&gt; 【屏幕录制】 中勾选 ishot</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/27/1593261908347-1593261908354.png\" alt=\"title\"></p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><p>打开 <code>偏好设置</code> 进行设置，这里我都用的默认值。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/27/1593261276504-1593261276510.png\" alt=\"title\"></p>\n<p>菜单栏菜单</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/27/1593262248875-1593262248881.png\" alt=\"title\"></p>\n<p>截图功能菜单比较丰富，包括标注线框、箭头、文字、打码等等，而且都可以用快捷键操作。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/27/1593262956124-1593262956128.png\" alt=\"title\"></p>\n<p>上图中红框为 <code>长截图</code> 按钮，第一次尝试未成功，查阅了官方文档，有3个原因：</p>\n<ol>\n<li>框选区域有不可滚动部分</li>\n<li>滚动截图的部分包含动图、动态表情、动画等动态部分</li>\n<li>下滚动过程中，产生了左右滚动</li>\n</ol>\n<p>避免上面提到的情况，多尝试几次就知道怎么回事了。其他的截图功能留给大家慢慢研究吧！</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>官网<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmV0dGVyMzY1LmNuLw==\">https://www.better365.cn/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["Mac","截图"]},{"title":"给路由器加个风扇","url":"/2020/06/22/%E7%BB%99%E8%B7%AF%E7%94%B1%E5%99%A8%E5%8A%A0%E4%B8%AA%E9%A3%8E%E6%89%87/","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>家里的老路由日常温度一般都在80°朝上，据说温度太高会导致网络卡顿、断线，但是说实话平时没啥感觉，可能主要是因为没打游戏，实时性要求不高吧。但是不管怎么样，高温容易导致老化，为了让它能寿命长一点，撸了一个 12cm 的 USB 静音风扇，毕竟马上就要天热了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/22/1592828575232-1592828575274.png\" alt=\"title\"></p>\n<p>之所以选 USB 风扇，是因为路由器本身有2个 USB 接口，3.0 的接了 U 盘用于跑 Entware ，侧面还有个 2.0 的空闲着。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/22/1592834034877-1592834034879.png\" alt=\"title\"></p>\n<h2 id=\"吹风还是吸气？\"><a href=\"#吹风还是吸气？\" class=\"headerlink\" title=\"吹风还是吸气？\"></a>吹风还是吸气？</h2><p>网上有人说吹风效果好，有人说吸气效果好，这还真是个问题，买之前根本没想那么多，以为装上有风就行了。但是这难不倒我们爱折腾的人，毕竟实践才是检验真理的唯一办法。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/22/1592832489943-1592832489947.png\" alt=\"title\"></p>\n<h2 id=\"吹风测试\"><a href=\"#吹风测试\" class=\"headerlink\" title=\"吹风测试\"></a>吹风测试</h2><p>先按吹气的方式，为了保证效果，模拟了实际使用的情景，用自锁式尼龙扎带做了固定。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/22/1592831703491-1592831703494.png\" alt=\"title\"></p>\n<p>光记着拍照忘记截图了，直接说结论，最终温度稳定在65°左右。</p>\n<h2 id=\"吸气测试\"><a href=\"#吸气测试\" class=\"headerlink\" title=\"吸气测试\"></a>吸气测试</h2><p>把扎带剪了重新安装，这回只记得截图忘记拍照了，补了一张已经把铁网装上了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/22/6-1592835788703.png\" alt=\"title\"></p>\n<p>不到2分钟，温度降到了70°</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/22/1592828592120-1592828592123.png\" alt=\"title\"></p>\n<p>再过了2分多钟，温度降到了60°</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/22/1592828626786-1592828626789.png\" alt=\"title\"></p>\n<p>最终基本稳定在55°左右</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/22/1592828695079-1592828695082.png\" alt=\"title\"></p>\n<h2 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h2><p>不管吸气或者吹风，估计都和实际空间、接触面等等很多因素有关，很难说哪种更有效，但是在我这，显然是吸气的效果更好一些，相比吹风温度低了将近10°，而且个人感觉吸气的话可能路由器里的积灰会少一点。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>R6300V2 路由器无痛改装风扇<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9haXNrLm1lL2FkZC1jcHUtZmFuLW9uLXI2MzAwdjItcm91dGVyLw==\">https://aisk.me/add-cpu-fan-on-r6300v2-router/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["路由器","R6300v2","USB风扇"]},{"title":"轻量级内网穿透代理服务器nps试用","url":"/2020/06/21/%E8%BD%BB%E9%87%8F%E7%BA%A7%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8nps%E8%AF%95%E7%94%A8/","content":"<p><strong>什么是 nps</strong></p>\n<blockquote>\n<p>一款轻量级、高性能、功能强大的内网穿透代理服务器，几乎支持所有协议，支持内网http代理、内网socks5代理、p2p等，简洁但功能强大的WEB管理界面，支持服务端、客户端同时控制，扩展功能强大，全平台兼容，一键注册为服务。【官网中文说明：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9laGFuZy1pby5naXRodWIuaW8vbnBzLyMvP2lkPW5wcw==\">https://ehang-io.github.io/nps/#/?id=nps<i class=\"fa fa-external-link-alt\"></i></span>】</p>\n</blockquote>\n<h1 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h1><p>1、一台具有公网IP的服务器，系统可以是Windows、Linux。<br>2、根据自己服务器和客户端的系统，下载对应的源码、安装包或者镜像文件；<br>3、准备一个有效的域名，国内主机可能需要备案。</p>\n<h1 id=\"服务端\"><a href=\"#服务端\" class=\"headerlink\" title=\"服务端\"></a>服务端</h1><h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>官方提供了三种安装方式，包括用安装包安装、源码安装和docker安装。我们用最省事的安装包，下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NubGgvbnBzL3JlbGVhc2Vz\">https://github.com/cnlh/nps/releases<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>因为是 VPS 是 CentOS 7，所以下载了 <code>linux_amd64_server.tar.gz</code>，目前最新的版本是v0.26.8</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/21/1592712013620-1592712013672.png\" alt=\"title\"></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载安装包</span></span><br><span class=\"line\">https://github.com/ehang-io/nps/releases/download/v0.26.8/linux_amd64_server.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 新建目录</span></span><br><span class=\"line\">mkdir /usr/<span class=\"built_in\">local</span>/nps</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解压缩</span></span><br><span class=\"line\">tar -zxvf  linux_amd64_server.tar.gz -C /usr/<span class=\"built_in\">local</span>/nps/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入 nps 目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/nps/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 注册为服务</span></span><br><span class=\"line\">./npc install</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/21/1592714295496-1592714295502.png\" alt=\"title\"></p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>上图显示配置文件在 <code>/etc/nps</code>。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">vi /etc/nps/conf/nps.conf</span><br></pre></td></tr></table></figure>\n\n<p>关于服务端配置文件，在<span class=\"exturl\" data-url=\"aHR0cHM6Ly9laGFuZy1pby5naXRodWIuaW8vbnBzLyMvc2VydmVyX2NvbmZpZz9pZD0lRTYlOUMlOEQlRTUlOEElQTElRTclQUIlQUYlRTklODUlOEQlRTclQkQlQUU=\">官网文档<i class=\"fa fa-external-link-alt\"></i></span>有详细的注释，这里只针对几个要改的做了简单说明</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 因为云主机还有 web 服务，所以 80 和 443 端口已经被占用了，</span></span><br><span class=\"line\"><span class=\"comment\"># 所以域名代理监听端口不能使用默认的 80 和 443，而是改成了 8080 和 8443 端口。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#HTTP(S) proxy port, no startup if empty</span></span><br><span class=\"line\"><span class=\"attr\">http_proxy_ip</span>=<span class=\"number\">0.0</span>.<span class=\"number\">0.0</span></span><br><span class=\"line\"><span class=\"attr\">http_proxy_port</span>=<span class=\"number\">8080</span></span><br><span class=\"line\"><span class=\"attr\">https_proxy_port</span>=<span class=\"number\">8443</span></span><br><span class=\"line\"><span class=\"attr\">https_just_proxy</span>=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\">#default https certificate setting</span></span><br><span class=\"line\"><span class=\"attr\">https_default_cert_file</span>=conf/server.pem</span><br><span class=\"line\"><span class=\"attr\">https_default_key_file</span>=conf/server.key</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 这段是关于 web 管理页面的设置，同样不能用已占用的端口，所以改成了 8081。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#web</span></span><br><span class=\"line\"><span class=\"attr\">web_host</span>=laosu.ml</span><br><span class=\"line\"><span class=\"attr\">web_username</span>=admin</span><br><span class=\"line\"><span class=\"attr\">web_password</span>=<span class=\"number\">1111111</span></span><br><span class=\"line\"><span class=\"attr\">web_port</span> = <span class=\"number\">8081</span></span><br><span class=\"line\"><span class=\"attr\">web_ip</span>=<span class=\"number\">0.0</span>.<span class=\"number\">0.0</span></span><br><span class=\"line\">web_base_url=</span><br><span class=\"line\"><span class=\"attr\">web_open_ssl</span>=<span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">web_cert_file</span>=conf/server.pem</span><br><span class=\"line\"><span class=\"attr\">web_key_file</span>=conf/server.key</span><br><span class=\"line\"><span class=\"comment\"># if web under proxy use sub path. like http://host/nps need this.</span></span><br><span class=\"line\"><span class=\"comment\">#web_base_url=/nps</span></span><br></pre></td></tr></table></figure>\n\n<p>其他的根据需要修改，比如 <code>public_vkey</code> 等。</p>\n<h2 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h2><figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 启动 nps</span></span><br><span class=\"line\">nps start</span><br></pre></td></tr></table></figure>\n\n<p>这个时候在浏览器中输入 <code>http://laosu.ml:8081</code>，就可以看到 web 管理界面了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/21/1592719175374-1592719175376.png\" alt=\"title\"></p>\n<p>第一次建议不带 <code>start</code> 参数，可以进到 console 模式，实时显示运行状态。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/21/1592719764128-1592719764132.png\" alt=\"title\"></p>\n<h2 id=\"web-设置\"><a href=\"#web-设置\" class=\"headerlink\" title=\"web 设置\"></a>web 设置</h2><p>新增客户端</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/21/1592719828417-1592719828420.png\" alt=\"title\"></p>\n<p>先用 nas 试试</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/21/1592723368417-1592723368419.png\" alt=\"title\"></p>\n<p>添加成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/21/1592723486512-1592723486517.png\" alt=\"title\"></p>\n<p>因为还没有安装客户端，所以添加完成后，连接显示还是 <code>离线</code> 的。</p>\n<h1 id=\"客户端\"><a href=\"#客户端\" class=\"headerlink\" title=\"客户端\"></a>客户端</h1><h2 id=\"安装-1\"><a href=\"#安装-1\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>这次我们下载群晖的版本</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/21/1592723959630-1592723959633.png\" alt=\"title\"></p>\n<p>打开 <code>套件中心</code>，选择 <code>手动安装</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/21/1592724340683-1592724340686.png\" alt=\"title\"></p>\n<p>选择刚才下载的 <code>npc_syno.spk</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/21/1592724392925-1592724392927.png\" alt=\"title\"></p>\n<p>安装完成后，运行 nps 客户端</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/21/1592724048862-1592724048864.png\" alt=\"title\"></p>\n<p>返回 web 管理界面。可以看到客户端已经在线了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/21/1592724174737-1592724174741.png\" alt=\"title\"></p>\n<h2 id=\"配置-1\"><a href=\"#配置-1\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>添加隧道，把 nas 的后台管理界面映射到公网</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/21/1592725120087-1592725120091.png\" alt=\"title\"></p>\n<p>填写 nas 后台管理页面的端口 5000</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/21/1592725481508-1592725481512.png\" alt=\"title\"></p>\n<p>添加成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/21/1592725602665-1592725602667.png\" alt=\"title\"></p>\n<p>在浏览器中输入 <code>http://laosu.ml:5000</code> 就可以看到 nas的后台了，效果和我们在局域网中访问<br> <code>192.168.0.199:5000</code> 是一样的。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/21/1592725777524-1592725777528.png\" alt=\"title\"></p>\n<h1 id=\"卸载-nps\"><a href=\"#卸载-nps\" class=\"headerlink\" title=\"卸载 nps\"></a>卸载 nps</h1><figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 停止 nps 服务</span></span><br><span class=\"line\">nps stop</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 搜索 nps 目录</span></span><br><span class=\"line\">whereis nps</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除相关目录</span></span><br><span class=\"line\">rm -rf /usr/bin/nps</span><br><span class=\"line\">rm -rf /etc/nps</span><br><span class=\"line\">rm -rf /usr/<span class=\"built_in\">local</span>/nps</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/21/1592713556221-1592713556224.png\" alt=\"title\"></p>\n<h1 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h1><p>具备可视化操作界面，而且增加隧道只要在服务器端操作即可，这些都比 frp 强，但是感觉目前还没有 frp 成熟，文档也不多，遇到问题有点抓瞎。等有空了再慢慢研究其他功能。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>nps官网<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9laGFuZy1pby5naXRodWIuaW8vbnBzLyMv\">https://ehang-io.github.io/nps/#/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>IT男的VPS系列教程 篇七：超强内网穿透nps 解决所有无公网IP问题（上）<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2EwN21kMm5yLw==\">https://post.smzdm.com/p/a07md2nr/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","内网穿透","nps","nas"]},{"title":"跨平台的工具箱uTools","url":"/2020/06/17/%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%9A%84%E5%B7%A5%E5%85%B7%E7%AE%B1uTools/","content":"<p><strong>什么是uTools？</strong></p>\n<blockquote>\n<p>uTools 是一个极简、插件化、跨平台的现代化桌面软件。通过自由选配丰富的插件，打造你得心应手的工具集合。<br>通过快捷键（默认 alt+space ）就可以快速呼出这个搜索框。它相当聪明，可以支持输入、拖拽、自动粘贴等作为输入源，相应的插件也早已准备就绪，统一的设计风格和操作方式，助你高效的得到结果。</p>\n</blockquote>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>第一次接触 uTools 应该是在一年多之前，因为搜索内网穿透软件找到了它，功能简单好用，让我印象非常深刻。时隔一年，插件中心已经有了上百个，功能也已经涵盖了方方面面。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/17/1592398983061-1592398983093.png\" alt=\"title\"></p>\n<p>目前已经支持的客户端版本涵盖了主流的 Windows、Linux 和 MacOS，顺便提一下，uTools 是基于 electron 开发的。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/17/1592399196029-1592399196033.png\" alt=\"title\"></p>\n<h1 id=\"功能简介\"><a href=\"#功能简介\" class=\"headerlink\" title=\"功能简介\"></a>功能简介</h1><h2 id=\"界面\"><a href=\"#界面\" class=\"headerlink\" title=\"界面\"></a>界面</h2><h3 id=\"主界面\"><a href=\"#主界面\" class=\"headerlink\" title=\"主界面\"></a>主界面</h3><p>uTools 作为一个快速的程序启动器，界面非常简单，和 Mac 上的 Spotlight 、Alfred 非常相似，当然 Windows 下也有类似的应用，比如 Wox 、 Listary 等。</p>\n<p>默认 alt+space 就可以快速呼出这个搜索框</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/17/1592399937316-1592399937321.png\" alt=\"title\"></p>\n<h3 id=\"状态栏图标\"><a href=\"#状态栏图标\" class=\"headerlink\" title=\"状态栏图标\"></a>状态栏图标</h3><p>工具栏上 uTools 图标上鼠标右键</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/17/1592400446491-1592400446494.png\" alt=\"title\"></p>\n<p>最上面是微信账号，通过微信登录后可以同步一些使用数据到云端，非常方便。</p>\n<h2 id=\"快速启动\"><a href=\"#快速启动\" class=\"headerlink\" title=\"快速启动\"></a>快速启动</h2><p>在没有安装任何插件的情况下，uTools 和 Mac 上的 Spotlight 很像，强大的快速启动，支持首字母检索等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/17/1592401324638-1592401324640.png\" alt=\"title\"></p>\n<h2 id=\"插件中心\"><a href=\"#插件中心\" class=\"headerlink\" title=\"插件中心\"></a>插件中心</h2><p>可以从工具条的右键菜单进，也可以呼出主界面输入 <code>cj</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/17/1592401432429-1592401432435.png\" alt=\"title\"></p>\n<p>一开始是空空如也的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/17/1592401522853-1592401522856.png\" alt=\"title\"></p>\n<p>先试试我们之前提到的内外穿透，在插件中心搜索 <code>内网</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/17/1592401610163-1592401610165.png\" alt=\"title\"></p>\n<p>点击会弹出插件的简介</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/17/1592401656579-1592401656580.png\" alt=\"title\"></p>\n<p>点右上方蓝色的 <code>下载</code> 按钮，安装完成后会变成红色 <code>移除</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/17/1592402040543-1592402040545.png\" alt=\"title\"></p>\n<p>点红框中的 <code>NAT</code> 或者 <code>内网穿透</code> 进入插件的设置界面。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/17/1592402156235-1592402156236.png\" alt=\"title\"></p>\n<p>设置好之后点 <code>连接</code> 即可。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/17/1592402242685-1592402242687.png\" alt=\"title\"></p>\n<p>接下来我们在浏览器中输入 <code>http://mynas.utools.club/</code> 就可以访问了，非常适合web开发的远程演示，小程序开发等。当然这个插件不仅仅可以穿透web服务，也可以用于远程调试。</p>\n<p>打开连接方式，我们可以看到除了http外，还有本地目录和 tcp 服务<br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/17/1592402493861-1592402493864.png\" alt=\"title\"></p>\n<h2 id=\"自定义插件\"><a href=\"#自定义插件\" class=\"headerlink\" title=\"自定义插件\"></a>自定义插件</h2><p>uTools 一切皆插件的设计，使得我们可以开发属于自己的插件，官方提供了 【<span class=\"exturl\" data-url=\"aHR0cHM6Ly91LnRvb2xzL2RvY3MvZGV2ZWxvcGVyL3dlbGNvbWUuaHRtbA==\">开发文档<i class=\"fa fa-external-link-alt\"></i></span>】</p>\n<h2 id=\"数据同步\"><a href=\"#数据同步\" class=\"headerlink\" title=\"数据同步\"></a>数据同步</h2><p>微信登录后可一键开启，便于在不同设备之间共享数据，或是预防重装系统造成数据丢失，目前是免费的。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>插件非常多，需要根据各人的需要慢慢摸索，当你熟悉之后，它会成为你专属的生产力工具集！</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>uTools官网<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly91LnRvb2xzLw==\">https://u.tools/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["工具","electron","utool","效率"]},{"title":"R6300v2上安装zerotier（修订）","url":"/2020/06/09/R6300v2%E4%B8%8A%E5%AE%89%E8%A3%85zerotier%EF%BC%88%E4%BF%AE%E8%AE%A2%EF%BC%89/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>之前写的「 <a href=\"https://laosu.ml/2020/05/29/R6300v2%E4%B8%8A%E5%AE%89%E8%A3%85zerotier/\">R6300v2上安装zerotier</a> 」当时一切正常，但是发现在R6300v2重启之后，还是存在问题，估计问题主要是出在防火墙的设置上。</p>\n<p>现在把重做的过程做个记录。</p>\n<h1 id=\"问题1：PORT-ERROR错误\"><a href=\"#问题1：PORT-ERROR错误\" class=\"headerlink\" title=\"问题1：PORT_ERROR错误\"></a>问题1：<code>PORT_ERROR</code>错误</h1><p>putty登录到R6300v2，执行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">zerotier-cli listnetworks</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/07/1591514832631-1591514832682.png\" alt=\"title\"></p>\n<p>显示出现了 <code>PORT_ERROR</code>错误。 </p>\n<p>初步判断是TUN出了问题，执行 <code>ifconfig</code>，确实没发现zt开头的网卡设备</p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/07/1591517016597-1591517016600.png\" alt=\"title\"></p>\n<h2 id=\"重启\"><a href=\"#重启\" class=\"headerlink\" title=\"重启\"></a>重启</h2><p>重启zerotier</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">killall zerotier-one</span><br><span class=\"line\">modprobe tun</span><br><span class=\"line\">zerotier-one -d</span><br></pre></td></tr></table></figure>\n\n<p>再次执行 <code>ifconfig</code> ，有了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/07/1591517148128-1591517148131.png\" alt=\"title\"></p>\n<p>再看看是否正常？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">zerotier-cli listnetworks</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/07/1591517408587-1591517408591.png\" alt=\"title\"></p>\n<p>显示 <code>OK</code></p>\n<h2 id=\"可能的原因\"><a href=\"#可能的原因\" class=\"headerlink\" title=\"可能的原因\"></a>可能的原因</h2><p>虽然在 <code>/jffs/scripts/nat-start</code> 中有 <code>modprobe tun</code>，但是可能存在加载顺序等问题，所以导致在执行 <code>zerotier-one -d</code> 没成功，所以在 <code>/opt/etc/init.d/S90zerotier-one.sh</code> 新加一段，用于解决 <code>PORT_ERROR</code> 问题。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> lsmod | grep -q tun ;</span><br><span class=\"line\"><span class=\"keyword\">then</span> <span class=\"built_in\">echo</span> <span class=\"string\">&quot;mod tun ready&quot;</span> ;</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    modprobe tun;</span><br><span class=\"line\">    logger -t <span class=\"string\">&quot;zerotier&quot;</span> -c <span class=\"string\">&quot;modprobe tun started, zerotier-one should start in one minute&quot;</span> -p user.notice ;</span><br><span class=\"line\"><span class=\"built_in\">exit</span> 0;</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n\n<p>完整的 <code>/opt/etc/init.d/S90zerotier-one.sh</code>脚本</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#! /bin/sh</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"string\">&quot;<span class=\"variable\">$1</span>&quot;</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">  start)</span><br><span class=\"line\">       <span class=\"comment\"># 新增开始</span></span><br><span class=\"line\">       <span class=\"keyword\">if</span> lsmod | grep -q tun ;</span><br><span class=\"line\">       <span class=\"keyword\">then</span> <span class=\"built_in\">echo</span> <span class=\"string\">&quot;mod tun ready&quot;</span> ;</span><br><span class=\"line\">       <span class=\"keyword\">else</span></span><br><span class=\"line\">           modprobe tun;</span><br><span class=\"line\">           logger -t <span class=\"string\">&quot;zerotier&quot;</span> -c <span class=\"string\">&quot;modprobe tun started, zerotier-one should start in one minute&quot;</span> -p user.notice ;</span><br><span class=\"line\">       <span class=\"built_in\">exit</span> 0;</span><br><span class=\"line\">       <span class=\"keyword\">fi</span></span><br><span class=\"line\">       <span class=\"comment\"># 新增结束</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( pidof zerotier-one )</span><br><span class=\"line\">    <span class=\"keyword\">then</span> <span class=\"built_in\">echo</span> <span class=\"string\">&quot;ZeroTier-One is already running.&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">&quot;Starting ZeroTier-One&quot;</span> ;</span><br><span class=\"line\">        /opt/bin/zerotier-one -d ;</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"subst\">$(date)</span> Started ZeroTier-One&quot;</span> &gt;&gt; /opt/var/<span class=\"built_in\">log</span>/zerotier-one.log ;</span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  stop)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( pidof zerotier-one )</span><br><span class=\"line\">    <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">&quot;Stopping ZeroTier-One&quot;</span>;</span><br><span class=\"line\">        killall zerotier-one</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"subst\">$(date)</span> Stopped ZeroTier-One&quot;</span> &gt;&gt; /opt/var/<span class=\"built_in\">log</span>/zerotier-one.log</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">&quot;ZeroTier-One was not running&quot;</span> ;</span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  status)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( pidof zerotier-one )</span><br><span class=\"line\">    <span class=\"keyword\">then</span> <span class=\"built_in\">echo</span> <span class=\"string\">&quot;ZeroTier-One is running.&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"built_in\">echo</span> <span class=\"string\">&quot;ZeroTier-One is NOT running&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  *)</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;Usage: /etc/init.d/zerotier-one &#123;start|stop|status&#125;&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">    ;;</span><br><span class=\"line\"><span class=\"keyword\">esac</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">exit</span> 0</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"问题2：访问不到内网设备\"><a href=\"#问题2：访问不到内网设备\" class=\"headerlink\" title=\"问题2：访问不到内网设备\"></a>问题2：访问不到内网设备</h1><p>将路由加入到 <code>Zerotier</code> 网络是为了在外网访问到家庭局域网中的设备，但是之前的设置只是能够让我们通过zt网地址 <code>192.168.191.10</code> 访问到R6300v2，而不是通过 <code>192.168.0.1</code></p>\n<h2 id=\"zerotier-com上设置路由\"><a href=\"#zerotier-com上设置路由\" class=\"headerlink\" title=\"zerotier.com上设置路由\"></a>zerotier.com上设置路由</h2><p>比如192.168.0.0/24是我的内网网段，后面那个地址是我R6300v2里面zerotier获取的zt地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/08/1591629176545-1591629176569.png\" alt=\"title\"></p>\n<h2 id=\"增加-iptables-rules\"><a href=\"#增加-iptables-rules\" class=\"headerlink\" title=\"增加 iptables rules\"></a>增加 iptables rules</h2><p>先运行</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">iptables -v -L -n --line-numbers</span><br></pre></td></tr></table></figure>\n\n<p>先接受zerotier的所有数据</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">iptables -I INPUT -i zt+ -j ACCEPT</span><br></pre></td></tr></table></figure>\n<p><strong>【备注：】</strong> all “zt0, zt1, ztzlgf7vul” can be replaced by zt+ for wild matching in iptables only!   所以后面 <code>ztyqb3hz7p</code> 都将写成 <code>zt+</code> ，这使得脚本有了很大的通用性</p>\n<h2 id=\"重启zerotier\"><a href=\"#重启zerotier\" class=\"headerlink\" title=\"重启zerotier\"></a>重启zerotier</h2><p>先停止</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">/opt/etc/init.d/S90zerotier-one.sh stop</span><br></pre></td></tr></table></figure>\n\n<p>或者</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">killall zerotier-one</span><br></pre></td></tr></table></figure>\n\n<p>再启动</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">zerotier-one -d</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ping\"><a href=\"#ping\" class=\"headerlink\" title=\"ping\"></a>ping</h2><p>测试网络</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">ping 192.168.191.10 -c 4</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/08/1591623069478-1591623069524.png\" alt=\"title\"></p>\n<h2 id=\"Allow-FTP-SSH-WEBUI\"><a href=\"#Allow-FTP-SSH-WEBUI\" class=\"headerlink\" title=\"Allow FTP, SSH, WEBUI\"></a>Allow FTP, SSH, WEBUI</h2><figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">iptables -t nat -A PREROUTING -d 192.168.191.10 -p tcp -m multiport --dport 21,22,80 -j DNAT --to-destination 192.168.0.1</span><br></pre></td></tr></table></figure>\n\n<p>或者替代方案</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">iptables -t nat -I PREROUTING -i zt+ -d 192.168.191.0/24 -p tcp -m multiport --dport 21,22,80 -j DNAT --to-destination `nvram get lan_ipaddr`</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"修改脚本\"><a href=\"#修改脚本\" class=\"headerlink\" title=\"修改脚本\"></a>修改脚本</h2><p>修改 <code>/jffs/scripts/firewall-start</code></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\"></span><br><span class=\"line\">logger -t <span class=\"string\">&quot;custom iptables&quot;</span> <span class=\"string\">&quot;Enter&quot;</span> -p user.notice</span><br><span class=\"line\"></span><br><span class=\"line\">iptables -C INPUT -i zt+ -j ACCEPT</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ $? != 0 ]; <span class=\"keyword\">then</span></span><br><span class=\"line\"></span><br><span class=\"line\">  iptables -I INPUT -i zt+ -j ACCEPT</span><br><span class=\"line\">  iptables -t nat -I PREROUTING -i zt+ -d 192.168.191.0/24 -p tcp -m multiport --dport 21,22,80 -j DNAT --to-destination `nvram get lan_ipaddr`</span><br><span class=\"line\"></span><br><span class=\"line\">  logger -t <span class=\"string\">&quot;custom iptables&quot;</span> <span class=\"string\">&quot;rules added&quot;</span> -p user.notice</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">  logger -t <span class=\"string\">&quot;custom iptables&quot;</span> <span class=\"string\">&quot;rules existed skip&quot;</span> -p user.notice</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"手机测试\"><a href=\"#手机测试\" class=\"headerlink\" title=\"手机测试\"></a>手机测试</h2><p>手机上打开zerotier，用4G上网，记得勾选 <code>Use Cellular Data</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/08/1591630322505-1591630322507.png\" alt=\"title\"></p>\n<p>在浏览器中访问192.168.0.1（ 就是我们的路由器R6300v2的局域网地址 ） ，已经可以访问了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/08/1591630477952-1591630477956.png\" alt=\"title\"></p>\n<p>但是直接访问192.168.0.199 （ NAS的局域网地址 ）还是不行</p>\n<h2 id=\"再次修改脚本\"><a href=\"#再次修改脚本\" class=\"headerlink\" title=\"再次修改脚本\"></a>再次修改脚本</h2><p>在 <code>/jffs/scripts/firewall-start</code>中增加下面三行就直接可以访问到内网的设备；</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">iptables -I FORWARD -i zt+ -j ACCEPT</span><br><span class=\"line\">iptables -I FORWARD -o zt+ -j ACCEPT</span><br><span class=\"line\">iptables -t nat -I POSTROUTING -o zt+ -j MASQUERADE</span><br></pre></td></tr></table></figure>\n\n<p>完整的 <code>/jffs/scripts/firewall-start</code>脚本</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\"></span><br><span class=\"line\">logger -t <span class=\"string\">&quot;custom iptables&quot;</span> <span class=\"string\">&quot;Enter&quot;</span> -p user.notice</span><br><span class=\"line\"></span><br><span class=\"line\">iptables -C INPUT -i zt+ -j ACCEPT</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ $? != 0 ]; <span class=\"keyword\">then</span></span><br><span class=\"line\"></span><br><span class=\"line\">  iptables -I INPUT -i zt+ -j ACCEPT</span><br><span class=\"line\">  iptables -t nat -I PREROUTING -i zt+ -d 192.168.191.0/24 -p tcp -m multiport --dport 21,22,80 -j DNAT --to-destination `nvram get lan_ipaddr`</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># 2020.06.09 参考 https://blog.urusai.me/2019/using-zerotier-to-combine-gateways/</span></span><br><span class=\"line\">  iptables -I FORWARD -i zt+ -j ACCEPT</span><br><span class=\"line\">  iptables -I FORWARD -o zt+ -j ACCEPT</span><br><span class=\"line\">  iptables -t nat -I POSTROUTING -o zt+ -j MASQUERADE</span><br><span class=\"line\"></span><br><span class=\"line\">  logger -t <span class=\"string\">&quot;custom iptables&quot;</span> <span class=\"string\">&quot;rules added&quot;</span> -p user.notice</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">  logger -t <span class=\"string\">&quot;custom iptables&quot;</span> <span class=\"string\">&quot;rules existed skip&quot;</span> -p user.notice</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n\n<p>在手机浏览器中直接访问192.168.0.199 （ NAS的局域网地址 ）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/09/1591713001408-1591713001465.png\" alt=\"title\"></p>\n<h1 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h1><p>终于达成所愿！但是从测试看，依然有2个问题：</p>\n<ol>\n<li>速度并不稳定，有时快有时慢，取决于相连的两侧能否P2P打洞（NAT穿越）成功，如果不成功还是会走服务器中转，这个就会比较影响速度</li>\n<li>在外网访问，需要启动zerotier客户端，这一点不如frp方便</li>\n</ol>\n<p>但不管怎么说可以和frp互为补充，做个双保险。</p>\n<h1 id=\"附录\"><a href=\"#附录\" class=\"headerlink\" title=\"附录\"></a>附录</h1><p>为防止和避免拷贝脚本出错，作为附件提供参考</p>\n<h2 id=\"jffs-scripts-firewall-start\"><a href=\"#jffs-scripts-firewall-start\" class=\"headerlink\" title=\"/jffs/scripts/firewall-start\"></a><code>/jffs/scripts/firewall-start</code></h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3dic3UyMDAzL2dpdG5vdGUtaW1hZ2VzL21hc3Rlci9teW5vdGUvMjAyMC8wNi8wOS8tMTU5MTcxMzkzMzg1OA==\">firewall-start<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"jffs-scripts-nat-start\"><a href=\"#jffs-scripts-nat-start\" class=\"headerlink\" title=\"/jffs/scripts/nat-start\"></a><code>/jffs/scripts/nat-start</code></h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3dic3UyMDAzL2dpdG5vdGUtaW1hZ2VzL21hc3Rlci9teW5vdGUvMjAyMC8wNi8wOS8tMTU5MTcxNDA1NTM0MA==\">nat-start<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"jffs-scripts-post-mount\"><a href=\"#jffs-scripts-post-mount\" class=\"headerlink\" title=\"/jffs/scripts/post-mount\"></a><code>/jffs/scripts/post-mount</code></h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3dic3UyMDAzL2dpdG5vdGUtaW1hZ2VzL21hc3Rlci9teW5vdGUvMjAyMC8wNi8wOS8tMTU5MTcxNDE1ODcxMw==\">post-mount<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"jffs-scripts-wan-start\"><a href=\"#jffs-scripts-wan-start\" class=\"headerlink\" title=\"/jffs/scripts/wan-start\"></a><code>/jffs/scripts/wan-start</code></h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3dic3UyMDAzL2dpdG5vdGUtaW1hZ2VzL21hc3Rlci9teW5vdGUvMjAyMC8wNi8wOS8tMTU5MTcxNDMwMzg3NA==\">wan-start<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"opt-etc-init-d-S90zerotier-one-sh\"><a href=\"#opt-etc-init-d-S90zerotier-one-sh\" class=\"headerlink\" title=\"/opt/etc/init.d/S90zerotier-one.sh\"></a><code>/opt/etc/init.d/S90zerotier-one.sh</code></h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3dic3UyMDAzL2dpdG5vdGUtaW1hZ2VzL21hc3Rlci9teW5vdGUvMjAyMC8wNi8wOS9TOTB6ZXJvdGllci1vbmUtMTU5MTcxNDg3NzYxNy5zaA==\">S90zerotier-one.sh<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>[教程] LEDE旁路由中安装zerotier，内网穿透，访问局域网，极简教程<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9rb29sc2hhcmUuY24vdGhyZWFkLTE1MjU2MS0xLTEuaHRtbA==\">https://koolshare.cn/thread-152561-1-1.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>A Guide About Installing ZeroTier on ASUS AC68U Router<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc25iZm9ydW1zLmNvbS90aHJlYWRzL2EtZ3VpZGUtYWJvdXQtaW5zdGFsbGluZy16ZXJvdGllci1vbi1hc3VzLWFjNjh1LXJvdXRlci40MjY0OC8=\">https://www.snbforums.com/threads/a-guide-about-installing-zerotier-on-asus-ac68u-router.42648/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["netgear","路由器","R6300V2","zerotier"]},{"title":"把网页打包成桌面应用程序","url":"/2020/06/06/%E6%8A%8A%E7%BD%91%E9%A1%B5%E6%89%93%E5%8C%85%E6%88%90%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>现在的应用一般都需要多端，Android 端、iOS 端、PC 端、Web 端，PC 端还包括了3个不同的操作系统平台，所以要想降低开发成本和开发难度，就需要寻找成熟的跨平台方案。Electron 可以让你使用纯 JavaScript 调用丰富的原生 APIs 来创造跨平台的桌面应用。软件开发者只需一次编写程序，即可在 Windows、Linux、Mac 等平台运行，不仅大大降低了程序员的工作量，也大大降低了开发难度（相比QT），使公司的产品可以快速迭代。Android端和iOS端作为两种不同的移动端技术，可以考虑用Flutter，暂且不表，今天我们只讨论Electron。</p>\n<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>Electron 是由 Github 开发，用 HTML，CSS 和 JavaScript 来构建跨平台桌面应用程序的一个开源库。通过将 Chromium 和 Node.js 合并到同一个运行时环境中，并将其打包为 Mac ， Windows 和 Linux 系统下的应用。</p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/05/components-1591367317059.png\" alt=\"title\"><br>（ 图片来自于：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9qbG9yZC51cy9lc3NlbnRpYWwtZWxlY3Ryb24v\">https://jlord.us/essential-electron/<i class=\"fa fa-external-link-alt\"></i></span> ）</p>\n<p>如上图所示，Electron 结合了 Chromium、Node.js 和用于调用操作系统本地功能的 API。</p>\n<h1 id=\"Electron开发环境配置\"><a href=\"#Electron开发环境配置\" class=\"headerlink\" title=\"Electron开发环境配置\"></a>Electron开发环境配置</h1><h2 id=\"安装最新版本的Node-js\"><a href=\"#安装最新版本的Node-js\" class=\"headerlink\" title=\"安装最新版本的Node.js\"></a>安装最新版本的Node.js</h2><p>按官方的建议，推荐您安装最新的 <code>长期支持版本</code> 或者 <code>当前发行版本</code>，去 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub2RlanMub3JnL2VuL2Rvd25sb2FkLw==\">nodejs.org<i class=\"fa fa-external-link-alt\"></i></span> 下载相应平台的安装包即可。</p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/02/1591074602452-1591074602460.png\" alt=\"title\"></p>\n<p>安装完成后执行如下命令确保正常展示版本号即可。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">node -v</span><br><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"用-npm-安装-electron\"><a href=\"#用-npm-安装-electron\" class=\"headerlink\" title=\"用 npm 安装 electron\"></a>用 npm 安装 electron</h2><p>一般网上建议全局安装，但是局部安装可以让你在不同的 app 中使用不同的 Electron 版本，所以根据个人需要，在「<a href=\"https://laosu.ml/2020/06/02/%E8%87%AA%E5%B7%B1%E7%BC%96%E8%AF%91ntfstool/\">自己编译ntfstool</a>」 一文中，我们强调过，国内用户建议先更换 electron 源，不然有可能会比较慢。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"built_in\">set</span> electron_mirror https://cdn.npm.taobao.org/dist/electron/ </span><br></pre></td></tr></table></figure>\n\n<p>或者</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"built_in\">set</span> electron_mirror https://npm.taobao.org/mirrors/electron/</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"全局安装\"><a href=\"#全局安装\" class=\"headerlink\" title=\"全局安装\"></a>全局安装</h3><figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 全局安装 需要的话追加上 --registry=&#x27;http://registry.npm.taobao.org&#x27; 使用淘宝npm源安装</span></span><br><span class=\"line\">sudo npm install electron -g --allow-root -unsafe-perm=<span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Windows使用下面语句 64位32位机器都是--win32</span></span><br><span class=\"line\">npm install electron -g --platform=win32</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 验证安装</span></span><br><span class=\"line\">electron -v</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"局部安装\"><a href=\"#局部安装\" class=\"headerlink\" title=\"局部安装\"></a>局部安装</h3><p>建议新建个文件夹，然后进入到该文件夹进行操作</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 局部安装 需要的话追加上 --registry=&#x27;http://registry.npm.taobao.org&#x27; 使用淘宝npm源安装</span></span><br><span class=\"line\">npm install electron --save-dev</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Windows使用下面语句 64位32位机器都是--win32</span></span><br><span class=\"line\">npm install electron --save-dev --platform=win32</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 验证安装</span></span><br><span class=\"line\">node_modules/.bin/electron -v</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"文件准备\"><a href=\"#文件准备\" class=\"headerlink\" title=\"文件准备\"></a>文件准备</h1><p>为你的新Electron应用创建一个新的空文件夹。 打开你的命令行工具，然后从该文件夹运行</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm init</span><br></pre></td></tr></table></figure>\n\n<p>会根据你的输入生成 <code>package.json</code> 文件，也可以自己新建。</p>\n<p>你的项目目录/<br>└── package.json</p>\n<p>新建 main.js、index.html 三个文件（注：其中的 index.html 是你的网页首页）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">你的项目目录&#x2F;</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── main.js</span><br><span class=\"line\">└── index.html</span><br></pre></td></tr></table></figure>\n\n<p>如果是打算局部安装，继续运行下面的命令：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install --save-dev electron</span><br></pre></td></tr></table></figure>\n\n<p>你的项目目录/<br>├── node_modules<br>├── package-lock.json<br>├── package.json<br>├── main.js<br>└── index.html</p>\n<h2 id=\"package-json\"><a href=\"#package-json\" class=\"headerlink\" title=\"package.json\"></a>package.json</h2><p>如果你是自建，可以在 package.json 中添加如下内容</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;name&quot;</span>    : <span class=\"string\">&quot;app-name&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">&quot;version&quot;</span> : <span class=\"string\">&quot;0.1.0&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">&quot;main&quot;</span>    : <span class=\"string\">&quot;main.js&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"main-js\"><a href=\"#main-js\" class=\"headerlink\" title=\"main.js\"></a>main.js</h2><p>package.json 中 <code>&quot;main&quot;</code> 指定的入口点文件，即程序主文件，可根据需要修改</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123;app, BrowserWindow&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;electron&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> mainWindow</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建主窗口，设置了宽高等信息</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createWindow</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  mainWindow = <span class=\"keyword\">new</span> BrowserWindow(&#123;</span><br><span class=\"line\">    width: <span class=\"number\">1000</span>,</span><br><span class=\"line\">    height: <span class=\"number\">600</span>,</span><br><span class=\"line\">    webPreferences: &#123;</span><br><span class=\"line\">      <span class=\"comment\">// node集成，即是否注入node能力</span></span><br><span class=\"line\">      nodeIntegration: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 加载主页面内容 index.html</span></span><br><span class=\"line\">  mainWindow.loadFile(<span class=\"string\">&#x27;index.html&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  mainWindow.on(<span class=\"string\">&#x27;closed&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    mainWindow = <span class=\"literal\">null</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">app.on(<span class=\"string\">&#x27;ready&#x27;</span>, createWindow)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"index-html\"><a href=\"#index-html\" class=\"headerlink\" title=\"index.html\"></a>index.html</h2><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 此title会覆盖package.json中设置的name，作为应用顶部名称 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>my-app<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    Hello World!</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"启动app\"><a href=\"#启动app\" class=\"headerlink\" title=\"启动app\"></a>启动app</h1><h2 id=\"全局安装时\"><a href=\"#全局安装时\" class=\"headerlink\" title=\"全局安装时\"></a>全局安装时</h2><figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 进入到包含 package.json 文件的目录，别忽略了后面的点</span><br><span class=\"line\">electron .</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"局部安装时\"><a href=\"#局部安装时\" class=\"headerlink\" title=\"局部安装时\"></a>局部安装时</h2><figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 进入到包含 package.json 文件的目录</span><br><span class=\"line\">npm <span class=\"built_in\">start</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 或者直接使用脚本启动，别忽略了后面的点</span><br><span class=\"line\">node_modules/.bin/electron .</span><br></pre></td></tr></table></figure>\n\n<p>正常启动的话会出现如下界面代表成功，页面内容显示的就是index.html定义的页面</p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/06/1591430690284-1591430690335.png\" alt=\"title\"></p>\n<h1 id=\"打包网站\"><a href=\"#打包网站\" class=\"headerlink\" title=\"打包网站\"></a>打包网站</h1><h2 id=\"修改-main-js\"><a href=\"#修改-main-js\" class=\"headerlink\" title=\"修改 main.js\"></a>修改 main.js</h2><p>让我们来试试把 draw.io 打包成桌面 app，只要将 <code>main.js</code> 中的 <code>mainWindow.loadFile(&#39;index.html&#39;)</code> 改成 <code> mainWindow.loadURL(&#39;https://app.diagrams.net/&#39;)</code>就行。</p>\n<p>完整的 main.js 如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123;app, BrowserWindow&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;electron&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> mainWindow</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建主窗口，设置了宽高等信息</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createWindow</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  mainWindow = <span class=\"keyword\">new</span> BrowserWindow(&#123;</span><br><span class=\"line\">    width: <span class=\"number\">1000</span>,</span><br><span class=\"line\">    height: <span class=\"number\">600</span>,</span><br><span class=\"line\">    webPreferences: &#123;</span><br><span class=\"line\">      <span class=\"comment\">// node集成，即是否注入node能力</span></span><br><span class=\"line\">      nodeIntegration: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 加载主页面内容 index.html</span></span><br><span class=\"line\">  <span class=\"comment\">// 改为使用loadURL加载 draw.io 的url地址</span></span><br><span class=\"line\">  mainWindow.loadURL(<span class=\"string\">&#x27;https://app.diagrams.net/&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  mainWindow.on(<span class=\"string\">&#x27;closed&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    mainWindow = <span class=\"literal\">null</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">app.on(<span class=\"string\">&#x27;ready&#x27;</span>, createWindow)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"重新启动app\"><a href=\"#重新启动app\" class=\"headerlink\" title=\"重新启动app\"></a>重新启动app</h2><figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 全局安装</span><br><span class=\"line\">electron .</span><br><span class=\"line\"></span><br><span class=\"line\"># 局部安装</span><br><span class=\"line\">node_modules/.bin/electron .</span><br><span class=\"line\"># or</span><br><span class=\"line\">npm <span class=\"built_in\">start</span></span><br></pre></td></tr></table></figure>\n\n<p>第一次运行可能有点慢，毕竟是国外网站</p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/06/1591431030553-1591431030560.png\" alt=\"title\"></p>\n<h1 id=\"程序打包发布\"><a href=\"#程序打包发布\" class=\"headerlink\" title=\"程序打包发布\"></a>程序打包发布</h1><h2 id=\"安装electron-builder\"><a href=\"#安装electron-builder\" class=\"headerlink\" title=\"安装electron-builder\"></a>安装electron-builder</h2><figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install --save-dev electron-builder</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"开始打包\"><a href=\"#开始打包\" class=\"headerlink\" title=\"开始打包\"></a>开始打包</h2><p>以Mac为例</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 在Mac环境下执行</span><br><span class=\"line\">node_modules&#x2F;.bin&#x2F;electron-builder -m dmg</span><br></pre></td></tr></table></figure>\n\n<p>打包好的程序在当前目录dist文件夹下</p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/06/1591433294803-1591433294822.png\" alt=\"title\"></p>\n<p>如果你担心源代码泄漏，可以用 asar 来进行简单的加密，更复杂的还是要靠对代码进行加密混淆才行。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Electron 文档<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZWxlY3Ryb25qcy5vcmcvZG9jcw==\">https://www.electronjs.org/docs<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Electron入门指南 | 一篇文章看懂Electron封装网页并打包应用<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xaWk0MDQubWUvMjAxOS8wNy8xMC9lbGVjdHJvbi5odG1s\">https://qii404.me/2019/07/10/electron.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>【最简单】Electron 怎么将网页打包成桌面应用（web前端页面怎么生成exe可执行文件）<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2E3Mjc5MTE0MzgvYXJ0aWNsZS9kZXRhaWxzLzcwODM0NDY3\">https://blog.csdn.net/a727911438/article/details/70834467<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["Github","Electron"]},{"title":"蜗牛星际C单的网路唤醒（续）","url":"/2020/06/05/%E8%9C%97%E7%89%9B%E6%98%9F%E9%99%85C%E5%8D%95%E7%9A%84%E7%BD%91%E8%B7%AF%E5%94%A4%E9%86%92%EF%BC%88%E7%BB%AD%EF%BC%89/","content":"<p>在<a href=\"https://laosu.ml/2020/05/30/%E8%9C%97%E7%89%9B%E6%98%9F%E9%99%85C%E5%8D%95%E7%9A%84%E7%BD%91%E8%B7%AF%E5%94%A4%E9%86%92/\">上一篇</a>中，尝试用 Android 网络唤醒工具进行远程唤醒时没成功。所以今天从原理上开始研究。</p>\n<p><strong>什么是网络唤醒</strong></p>\n<blockquote>\n<ul>\n<li>网络唤醒（Wake-on-LAN，WOL）是一种计算机局域网唤醒技术，使局域网内处于关机或休眠状态的计算机，将状态转换成引导（Boot Loader）或运行状态。</li>\n<li>网络唤醒在一般的局域网环境里使用有限广播地址（255.255.255.255）即可，由于路由器都不转发目的地址为有限广播地址的数据报，因此在复杂网络情况下通常使用子网定向广播地址。</li>\n<li>魔法数据包是一个广播帧，包含目标计算机的MAC地址。由于 MAC 地址的唯一性，使数据包可以在网络中被唯一的识别。魔法数据包发送通常使用无连接的传输协议，如 UDP ，发送端口为 7 或 9 ，这只是通常做法，没有限制。</li>\n<li>在魔法数据包内，每次都会先有连续6个”FF”（十六进制，换算成二进制即：11111111）的数据，即：FF FF FF FF FF FF，在连续6个”FF”后则开始带出MAC地址信息，有时还会带出4字节或6字节的密码，一旦经由网卡侦测、解读、研判（广播）魔法数据包的内容，内容中的MAC地址、密码若与电脑自身的地址、密码吻合，就会引导唤醒、引导的程序。</li>\n</ul>\n</blockquote>\n<p>考虑到 LAN 模式下是OK的，先看看。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/31/1590920333622-1590920333626.png\" alt=\"title\"></p>\n<p>点击边上的魔术棒，能看到广播地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/31/1590920373468-1590920373470.png\" alt=\"title\"></p>\n<p>既然 LAN 模式没问题，接下来我们要做的就是想办法把广播地址给映射到外网去。</p>\n<p>第一步：在 <code>frpc.ini</code> 中，增加一段，</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[wol_wn]</span></span><br><span class=\"line\"><span class=\"attr\">type</span> = udp</span><br><span class=\"line\"><span class=\"attr\">local_ip</span> = <span class=\"number\">192.168</span>.<span class=\"number\">0.255</span></span><br><span class=\"line\"><span class=\"attr\">local_port</span> = <span class=\"number\">9</span></span><br><span class=\"line\"><span class=\"attr\">remote_port</span> = <span class=\"number\">20495</span></span><br><span class=\"line\"><span class=\"attr\">use_encryption</span> = <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">use_compression</span> = <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n\n<p>第二步：在 WolOn app 中 进行设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/31/1590918052034-1590918052036.png\" alt=\"title\"></p>\n<p>当然填域名也是可以的，只要是指向 frps 公网 IP 的域名都行。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>网络唤醒（WOL）全解指南：原理篇<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly95cS5hbGl5dW4uY29tL2FydGljbGVzLzY0MDg5OQ==\">https://yq.aliyun.com/articles/640899<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>网络唤醒<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU3JUI2JUIyJUU4JUI3JUFGJUU1JTk2JTlBJUU5JTg2JTky\">https://zh.wikipedia.org/wiki/%E7%B6%B2%E8%B7%AF%E5%96%9A%E9%86%92<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>如何远程开启你的电脑：WoL的原理和陷阱<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8yODg1OTYyMA==\">https://zhuanlan.zhihu.com/p/28859620<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","蜗牛星际","WOL"]},{"title":"自己编译ntfstool","url":"/2020/06/02/%E8%87%AA%E5%B7%B1%E7%BC%96%E8%AF%91ntfstool/","content":"<blockquote>\n<p><strong>什么是 ntfstool</strong><br>一群热爱生活热爱编程的软件技术从业者，利用零散时间，针对 Mac 电脑无法很好的支持 NTFS 格式的硬盘和 USB 而开发的免费的 NTFS Tool for Mac 工具。支持 NTFS 磁盘读写、挂载，推出、管理等功能。需 FUSE for macOS 支持。</p>\n</blockquote>\n<blockquote>\n<p><strong>什么是 FUSE</strong><br>FUSE for Mac 是 MacFUSE 的继承者，基于FUSE为MacOS用户提供除系统外的第三方文件系统的支持。</p>\n</blockquote>\n<blockquote>\n<p><strong>什么是 Electron</strong><br>Electron 是 GitHub 開發的一個開源框架。它允許使用 Node.js 和 Chromium 完成桌面 GUI 應用程式的開發。Electron 現已被多個開源 Web 應用程式用於前端與後端的開發，著名專案包括 GitHub 的 Atom 和微軟的 Visual Studio Code。 【維基百科】</p>\n</blockquote>\n<h1 id=\"Mac-OS-平台-NTFS-读写软件\"><a href=\"#Mac-OS-平台-NTFS-读写软件\" class=\"headerlink\" title=\"Mac OS 平台 NTFS 读写软件\"></a>Mac OS 平台 NTFS 读写软件</h1><h2 id=\"Tuxera-NTFS-for-Mac\"><a href=\"#Tuxera-NTFS-for-Mac\" class=\"headerlink\" title=\"Tuxera NTFS for Mac\"></a>Tuxera NTFS for Mac</h2><p>商业软件，能够在Mac上对所有 Windows 格式化的移动硬盘进行完全读写操作。</p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/02/1591099316069-1591099316070.png\" alt=\"title\"></p>\n<h2 id=\"Paragon-NTFS-for-Mac\"><a href=\"#Paragon-NTFS-for-Mac\" class=\"headerlink\" title=\"Paragon NTFS for Mac\"></a>Paragon NTFS for Mac</h2><p>商业软件，是 Mac 上最知名的一款 NTFS 读写工具，能够让我们读写 NTFS 分区，完全兼容 Windows NTFS 文件，让我们简单自如读写 NTFS 外置存储文件。</p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/02/1591099282316-1591099282354.png\" alt=\"title\"></p>\n<h2 id=\"Mounty-for-NTFS\"><a href=\"#Mounty-for-NTFS\" class=\"headerlink\" title=\"Mounty for NTFS\"></a>Mounty for NTFS</h2><p>完全免费，但据不少网友反馈，Mounty 的稳定性，准确来说是 Mac 隐藏的 ntfs 原生读写功能的稳定性和性能都不算特别的好，有过一些出问题丢数据的例子。<code>这一点非常致命，果断放弃。</code></p>\n<h2 id=\"FUSE-for-Mac\"><a href=\"#FUSE-for-Mac\" class=\"headerlink\" title=\"FUSE for Mac\"></a>FUSE for Mac</h2><p>完全免费，是一款开源软件，允许你通过第三方文件系统来扩展 macOS。需要敲命令把苹果原来的 NTFS 挂载工具替换为 NTFS-3g 提供的，易用性有点差。</p>\n<h2 id=\"ntfstool\"><a href=\"#ntfstool\" class=\"headerlink\" title=\"ntfstool\"></a>ntfstool</h2><p>完全免费，是一款 MacOS 下的免费开源 NTFS 磁盘格式读写工具，需 FUSE for macOS 支持，提供一个简单易用的磁盘管理界面。</p>\n<p>我们可以直接下载官方编译好的版本，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL250ZnN0b29sL250ZnN0b29sL3JlbGVhc2Vz\">GitHub Releases<i class=\"fa fa-external-link-alt\"></i></span>，现在的最新版本是v2.3.2</p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/18/1589792613895-1589792613901.png\" alt=\"title\"></p>\n<h1 id=\"自己动手，丰衣足食\"><a href=\"#自己动手，丰衣足食\" class=\"headerlink\" title=\"自己动手，丰衣足食\"></a>自己动手，丰衣足食</h1><p>除了直接下载编译好的版本外，我们也可以尝试自己编译。</p>\n<h2 id=\"开发环境安装\"><a href=\"#开发环境安装\" class=\"headerlink\" title=\"开发环境安装\"></a>开发环境安装</h2><p>比较简单的办法就是从 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub2RlanMub3JnLw==\">nodejs.org<i class=\"fa fa-external-link-alt\"></i></span> 下载 MacOS<br> 安装包</p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/02/1591074602452-1591074602460.png\" alt=\"title\"></p>\n<p>最新的版本已经是14.3.0</p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/02/1591075832661-1591075832668.png\" alt=\"title\"></p>\n<p>检查一下安装是否成功，<code>终端</code> 中依次输入可以看到版本号</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">node -v</span><br><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/18/1589786699474-1589786699481.png\" alt=\"title\"></p>\n<h2 id=\"下载源代码\"><a href=\"#下载源代码\" class=\"headerlink\" title=\"下载源代码\"></a>下载源代码</h2><p>在 <code>终端模式</code> 下输入：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> git@github.com:ntfstool/ntfstool.git </span><br></pre></td></tr></table></figure>\n\n<p>或者直接打包下载源代码</p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/18/1589792907225-1589792907231.png\" alt=\"title\"></p>\n<h2 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h2><figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ntfstool</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n\n<p>下载的各种包在 <code>node_modules</code> 目录中</p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/02/1591088847070-1591088847119.png\" alt=\"title\"></p>\n<h2 id=\"调试模式\"><a href=\"#调试模式\" class=\"headerlink\" title=\"调试模式\"></a>调试模式</h2><figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm run dev</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/02/1591089358970-1591089358973.png\" alt=\"title\"></p>\n<h2 id=\"发布模式\"><a href=\"#发布模式\" class=\"headerlink\" title=\"发布模式\"></a>发布模式</h2><p>国内用户建议先更换 electron 源，不然有可能会比较慢</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"built_in\">set</span> electron_mirror https://cdn.npm.taobao.org/dist/electron/ </span><br></pre></td></tr></table></figure>\n\n<p>或者</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"built_in\">set</span> electron_mirror https://npm.taobao.org/mirrors/electron/</span><br></pre></td></tr></table></figure>\n\n<p>接着执行</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm run build</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/18/1589787487804-1589787487807.png\" alt=\"title\"></p>\n<p>会安装 electron-builder  </p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/02/1591077850276-1591077850284.png\" alt=\"title\"></p>\n<p>过程中会生成 <code>build</code> 和 <code>dist</code> 目录</p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/02/1591090348903-1591090348915.png\" alt=\"title\"></p>\n<h2 id=\"开始运行程序\"><a href=\"#开始运行程序\" class=\"headerlink\" title=\"开始运行程序\"></a>开始运行程序</h2><p>运行 <code>build</code> 目录下生成的安装包 <code>NTFSool-2.3.3.dmg</code> 进行安装</p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/02/1591090613669-1591090613676.png\" alt=\"title\"></p>\n<p>运行 <code>NTFSTool</code></p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/18/1589786803079-1589786803088.png\" alt=\"title\"></p>\n<h2 id=\"第一次运行会提示安装FUSE\"><a href=\"#第一次运行会提示安装FUSE\" class=\"headerlink\" title=\"第一次运行会提示安装FUSE\"></a>第一次运行会提示安装FUSE</h2><p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/18/1589786711420-1589786711426.png\" alt=\"title\"></p>\n<p>一路按图执行</p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/18/1589786724367-1589786724374.png\" alt=\"title\"></p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/18/1589786736666-1589786736675.png\" alt=\"title\"></p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/18/1589786748283-1589786748284.png\" alt=\"title\"></p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/18/1589786759671-1589786759674.png\" alt=\"title\"></p>\n<p>需要设置一下权限，这里需要我们 <code>允许</code></p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/18/1589786771459-1589786771468.png\" alt=\"title\"></p>\n<p>安装完成</p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/18/1589786782795-1589786782804.png\" alt=\"title\"></p>\n<p>第一次可能会需要权限</p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/02/1591090835448-1591090835449.png\" alt=\"title\"></p>\n<p>接入一块250G的移动硬盘，被识别到了</p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/18/1589786814886-1589786814894.png\" alt=\"title\"></p>\n<p>不过这块硬盘不是 ntfs 格式的</p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/18/1589786827713-1589786827720.png\" alt=\"title\"></p>\n<p>工具栏上</p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/18/1589786838242-1589786838249.png\" alt=\"title\"></p>\n<p>退出前先卸载</p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/18/1589786849388-1589786849395.png\" alt=\"title\"></p>\n<p>换一个 ntfs 格式的 U 盘</p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/02/1591079278757-1591079278769.png\" alt=\"title\"></p>\n<p>软件的功能，自己慢慢发掘吧。</p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/02/1591092240270-1591092240325.png\" alt=\"title\"></p>\n<p>动动手就省了100多块，是不是很开心呢？</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>ntfstool源代码<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL250ZnN0b29sL250ZnN0b29s\">https://github.com/ntfstool/ntfstool<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>FUSE for macOS源代码<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL29zeGZ1c2Uvb3N4ZnVzZS8=\">https://github.com/osxfuse/osxfuse/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>MacOS下开启NTFS读写 - FUSE for Mac<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9hNzcwYzY2YmRkZGY=\">https://www.jianshu.com/p/a770c66bdddf<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Mac os catalina使用FUSE for macOS开启ntfs<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2J5dGlnZS9hcnRpY2xlL2RldGFpbHMvMTAzNTM1MTg0\">https://blog.csdn.net/bytige/article/details/103535184<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["ntfs","ntfstool","FUSE","electron"]},{"title":"神奇的WeChatTweak","url":"/2020/06/01/%E7%A5%9E%E5%A5%87%E7%9A%84WeChatTweak/","content":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>WeChatTweak 是偶然在 github 上找到的神奇软件，除了在Mac上支持多开，还支持免认证登陆、消息防撤回。先看看官网的整体效果图：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/01/1591002382459-1591002382465.png\" alt=\"title\"></p>\n<p>( 图片来自：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1N1bm55eW91bmcvV2VDaGF0VHdlYWstbWFjT1M=\">https://github.com/Sunnyyoung/WeChatTweak-macOS<i class=\"fa fa-external-link-alt\"></i></span> )</p>\n<p>似乎现在功能又有增强哦</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/01/1591002520308-1591002520310.png\" alt=\"title\"></p>\n<p>已经在最新版本下测试成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/01/1591003838394-1591003838399.png\" alt=\"title\"></p>\n<p>作者的 releases 中只提供了源代码的下载，需要我们自己编译</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/01/1591002762398-1591002762404.png\" alt=\"title\"></p>\n<h1 id=\"拉代码\"><a href=\"#拉代码\" class=\"headerlink\" title=\"拉代码\"></a>拉代码</h1><p>打开系统自带「终端」，用系统自带搜索 <strong>终端</strong> 即可；</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/01/1591003013086-1591003013092.png\" alt=\"title\"></p>\n<p>在 <strong>终端</strong> 中拉取最新的源码：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/Sunnyyoung/WeChatTweak-macOS.git</span><br></pre></td></tr></table></figure>\n\n<p>进入插件目录</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> WeChatTweak-macOS</span><br></pre></td></tr></table></figure>\n\n<p>然后在源码目录中进行编译、安装</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo make install</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"安装开发环境\"><a href=\"#安装开发环境\" class=\"headerlink\" title=\"安装开发环境\"></a>安装开发环境</h1><p>如果没有安装开发环境，会有提示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/01/1591004378337-1591004378339.png\" alt=\"title\"></p>\n<p>同时会弹出提示框</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/01/1591004466516-1591004466518.png\" alt=\"title\"></p>\n<p>当然要点 <strong>安装</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/01/1591004546495-1591004546502.png\" alt=\"title\"></p>\n<p>点 <strong>同意</strong> 开始安装</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/01/1591004603712-1591004603718.png\" alt=\"title\"></p>\n<p>安装时间要看网络的情况</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/01/1591004733850-1591004733856.png\" alt=\"title\"></p>\n<p>反正我这里挺快的，前后也就10多分钟</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/01/1591004937101-1591004937102.png\" alt=\"title\"></p>\n<h1 id=\"编译代码\"><a href=\"#编译代码\" class=\"headerlink\" title=\"编译代码\"></a>编译代码</h1><p>安装完了开发环境，再编译一次，编译完成后重启微信即可启用插件。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/01/1591005142351-1591005142355.png\" alt=\"title\"></p>\n<h1 id=\"多开登录\"><a href=\"#多开登录\" class=\"headerlink\" title=\"多开登录\"></a>多开登录</h1><p>登录第一个是一样的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/01/1591005245143-1591005245149.png\" alt=\"title\"></p>\n<p>再次在微信图标上右键，多了 <strong>登录新的账号</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/01/1591005338797-1591005338803.png\" alt=\"title\"></p>\n<p>打开微信的偏好设置，会发现多了一个新的 Tweak 选项卡</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/01/1591002520308-1591002520310.png\" alt=\"title\"></p>\n<h1 id=\"查看撤回消息\"><a href=\"#查看撤回消息\" class=\"headerlink\" title=\"查看撤回消息\"></a>查看撤回消息</h1><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/01/1591010141839-1591010141868.png\" alt=\"title\"></p>\n<h1 id=\"卸载WeChatTweak插件\"><a href=\"#卸载WeChatTweak插件\" class=\"headerlink\" title=\"卸载WeChatTweak插件\"></a>卸载WeChatTweak插件</h1><figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo make uninstall</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"失效时的处理\"><a href=\"#失效时的处理\" class=\"headerlink\" title=\"失效时的处理\"></a>失效时的处理</h1><p>有网友说更新微信后，插件功能会失效，理论上只需要重新安装一次 WeChatTweak，也就是在 <strong>终端</strong> 里再次执行</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo make install</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"卸载开发环境\"><a href=\"#卸载开发环境\" class=\"headerlink\" title=\"卸载开发环境\"></a>卸载开发环境</h1><p>如果你真的要卸载，可以在 <strong>访达</strong> –&gt; 前往 –&gt; 前往文件夹 中输入</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">/Library/Developer/</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/01/1591006231628-1591006231635.png\" alt=\"title\"></p>\n<p>删除 <code>CommandLineTools</code> 文件夹 即可。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/06/01/1591006176260-1591006176260.png\" alt=\"title\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>WeChatTweak-macOS源代码主页<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1N1bm55eW91bmcvV2VDaGF0VHdlYWstbWFjT1M=\">https://github.com/Sunnyyoung/WeChatTweak-macOS<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>在 Mac 上多开微信，还能看到朋友撤回的信息：WeChatTweak<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zc3BhaS5jb20vcG9zdC80MDc4NQ==\">https://sspai.com/post/40785<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["微信","WeChatTweak"]},{"title":"蜗牛星际C单的网路唤醒","url":"/2020/05/30/%E8%9C%97%E7%89%9B%E6%98%9F%E9%99%85C%E5%8D%95%E7%9A%84%E7%BD%91%E8%B7%AF%E5%94%A4%E9%86%92/","content":"<h1 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h1><blockquote>\n<p>网路都说需要用把蜗牛真实 MAC 地址写到引导盘的 grub.cfg 中，但从实际测试看并不需要，因为无论是 Synology Assistant 还是路由器中识别的蜗牛的 MAC 地址，都和 grub.cfg 中的是一致的。</p>\n</blockquote>\n<h2 id=\"主板的设置\"><a href=\"#主板的设置\" class=\"headerlink\" title=\"主板的设置\"></a>主板的设置</h2><p>BIOS设置Advanced –&gt; ACPI Settings –&gt; Resume By Onboard LAN –&gt; Enabled</p>\n<p>忘记拍照了，囧~~</p>\n<h2 id=\"群晖的设置\"><a href=\"#群晖的设置\" class=\"headerlink\" title=\"群晖的设置\"></a>群晖的设置</h2><p>控制面板 –&gt; 硬件和电源 –&gt; 常规 –&gt; 电源自动回复</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/30/1590840044831-1590840044858.png\" alt=\"title\"></p>\n<h1 id=\"局域网唤醒\"><a href=\"#局域网唤醒\" class=\"headerlink\" title=\"局域网唤醒\"></a>局域网唤醒</h1><h2 id=\"用-Synology-Assistant\"><a href=\"#用-Synology-Assistant\" class=\"headerlink\" title=\"用 Synology Assistant\"></a>用 Synology Assistant</h2><p>首先要绑定群晖的MAC。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/30/1590850708234-1590850708235.png\" alt=\"title\"></p>\n<p>唤醒时只要选中需要唤醒的设备，右键选 WOL –&gt; 唤醒即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/31/1590900153275-1590900153278.png\" alt=\"title\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/30/1590851045065-1590851045068.png\" alt=\"title\"></p>\n<p>唤醒成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/30/1590850411818-1590850411820.png\" alt=\"title\"></p>\n<h2 id=\"用路由器\"><a href=\"#用路由器\" class=\"headerlink\" title=\"用路由器\"></a>用路由器</h2><p>网络工具 –&gt; 通过网络（LAN）唤醒</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/30/1590850947122-1590850947125.png\" alt=\"title\"></p>\n<p>如果不想每次输入MAC地址，可以把要蜗牛加到离线列表中。</p>\n<h1 id=\"远程唤醒\"><a href=\"#远程唤醒\" class=\"headerlink\" title=\"远程唤醒\"></a>远程唤醒</h1><h2 id=\"群晖管家APP\"><a href=\"#群晖管家APP\" class=\"headerlink\" title=\"群晖管家APP\"></a>群晖管家APP</h2><p>群晖管家APP支持局域网和远程唤醒，白裙通过 QuickConnect 连接，黑裙需要先用 frp 将端口 5000 映射到域名，再通过域名连到群晖。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/31/1590854795867-1590854795871.png\" alt=\"title\"></p>\n<p><strong>要确保以前成功登陆过。</strong></p>\n<p>选中需要唤醒的离线设备</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/31/1590854980536-1590854980540.png\" alt=\"title\"></p>\n<p>局域网唤醒（WOL）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/31/1590855195202-1590855195203.png\" alt=\"title\"></p>\n<p>发送成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/31/1590855165367-1590855165368.png\" alt=\"title\"></p>\n<h2 id=\"Android网络唤醒工具\"><a href=\"#Android网络唤醒工具\" class=\"headerlink\" title=\"Android网络唤醒工具\"></a>Android网络唤醒工具</h2><p>同样支持局域网和远程唤醒，局域网测试OK</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/31/1590898111757-1590898111797.png\" alt=\"title\"></p>\n<p>广域网用 frp 映射的方式没成功，尝试了zerotier也没搞定，<strong>需要注意的是zerotier中的MAC和路由器中识别到的MAC是不同的</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/31/1590900396930-1590900396931.png\" alt=\"title\"></p>\n<p>先埋个坑，等有闲心了再来研究，反正有群晖管家APP也就够了。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>群辉相关 篇二：实现群辉Nas的外网远程唤醒，以手机外网唤醒群晖Nas为例<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2EzZ3Zrd3Y1Lw==\">https://post.smzdm.com/p/a3gvkwv5/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","蜗牛星际","WOL"]},{"title":"R6300v2上安装zerotier","url":"/2020/05/29/R6300v2%E4%B8%8A%E5%AE%89%E8%A3%85zerotier/","content":"<h1 id=\"过程回顾\"><a href=\"#过程回顾\" class=\"headerlink\" title=\"过程回顾\"></a>过程回顾</h1><h2 id=\"安装-opkg-软件源\"><a href=\"#安装-opkg-软件源\" class=\"headerlink\" title=\"安装 opkg 软件源\"></a>安装 opkg 软件源</h2><p>winscp + putty 登录到路由器上。先要在路由器中设置允许ssh登录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/23/1590203251195-1590203251197.png\" alt=\"title\"></p>\n<h3 id=\"创建软件安装目录\"><a href=\"#创建软件安装目录\" class=\"headerlink\" title=\"创建软件安装目录\"></a>创建软件安装目录</h3><p>依次执行命令：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /jffs</span><br><span class=\"line\">mkdir /jffs/opt</span><br><span class=\"line\">ln -nsf /jffs/opt /tmp/opt</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"安装-opkg\"><a href=\"#安装-opkg\" class=\"headerlink\" title=\"安装 opkg\"></a>安装 opkg</h3><ul>\n<li>下载脚本</li>\n</ul>\n<p>执行命令：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">wget http://qnapware.zyxmon.org/binaries-armv7/installer/entware_install_arm.sh</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/23/1590166646192-1590166646246.png\" alt=\"title\"></p>\n<ul>\n<li>然后运行脚本：</li>\n</ul>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">sh ./entware_install_arm.sh</span><br></pre></td></tr></table></figure>\n\n<p>等待脚本运行完毕，看到 Congratulations! 就说明安装成功了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/23/1590167344866-1590167344868.png\" alt=\"title\"></p>\n<h3 id=\"自动挂载opt分区\"><a href=\"#自动挂载opt分区\" class=\"headerlink\" title=\"自动挂载opt分区\"></a>自动挂载opt分区</h3><p>在/jffs/scripts位置建立文件，可以先在电脑上建立文本文件，再用WinSCP传进去文件名: <code>post-mount</code></p>\n<p>内容如下：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\"></span><br><span class=\"line\">ln -nsf /jffs/opt /tmp/opt</span><br></pre></td></tr></table></figure>\n\n<p>最后获取脚本文件的权限，命令：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">chmod a+rx /jffs/scripts/post-mount</span><br></pre></td></tr></table></figure>\n\n<p>到这里 opkg 软件源就算安装完毕了。</p>\n<h2 id=\"安装、配置-zerotier\"><a href=\"#安装、配置-zerotier\" class=\"headerlink\" title=\"安装、配置 zerotier\"></a>安装、配置 zerotier</h2><h3 id=\"安装-zerotier\"><a href=\"#安装-zerotier\" class=\"headerlink\" title=\"安装 zerotier\"></a>安装 zerotier</h3><p>依次执行命令：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">opkg update</span><br><span class=\"line\">opkg install zerotier</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/23/1590168332375-1590168332377.png\" alt=\"title\"></p>\n<h3 id=\"运行-zerotier\"><a href=\"#运行-zerotier\" class=\"headerlink\" title=\"运行 zerotier\"></a>运行 zerotier</h3><p>依次执行命令：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">modprobe tun</span><br><span class=\"line\">zerotier-one -d</span><br><span class=\"line\">zerotier-cli info</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/23/1590168486543-1590168486546.png\" alt=\"title\"></p>\n<p>居然是offline？</p>\n<h3 id=\"加入申请到的网络ID\"><a href=\"#加入申请到的网络ID\" class=\"headerlink\" title=\"加入申请到的网络ID\"></a>加入申请到的网络ID</h3><p>执行命令：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">zerotier-cli join 8b***********9</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/23/1590168884793-1590168884794.png\" alt=\"title\"></p>\n<h3 id=\"获取-ip-值\"><a href=\"#获取-ip-值\" class=\"headerlink\" title=\"获取 ip 值\"></a>获取 ip 值</h3><figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">zerotier-cli listnetworks</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/23/1590202519667-1590202519727.png\" alt=\"title\"></p>\n<p>显示 <code>REQUESTING_CONFIGURATION PRIVATE zt0 -</code> 而不是IP，进入zerotier的后台设置界面，也没看到需要授权的设备，所以可以肯定存在问题。</p>\n<p>仔细翻看原帖子的跟帖，也有不少人和我遇到同样的问题。接下来开始各种尝试。</p>\n<h3 id=\"开启从互联网设置\"><a href=\"#开启从互联网设置\" class=\"headerlink\" title=\"开启从互联网设置\"></a>开启从互联网设置</h3><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/23/1590203097622-1590203097624.png\" alt=\"title\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/23/1590203068306-1590203068309.png\" alt=\"title\"></p>\n<p>故障依旧</p>\n<p>查了很多文档后发现 Entware 还可以安装到 U盘，虽然会让路由器后面带个小辫子，但是总归还是要尝试一下的。</p>\n<h2 id=\"将-Entware-装到-U盘\"><a href=\"#将-Entware-装到-U盘\" class=\"headerlink\" title=\"将 Entware 装到 U盘\"></a>将 Entware 装到 U盘</h2><p>梅林固件自带一个entware.sh的安装脚本，但是要求必须插上一个 ext4 等 linux 文件系统的 U盘。可以找个 U盘，用 DiskGenius 可以格式化成 ext4 格式。</p>\n<p>执行命令：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">df -h</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/23/1590205045828-1590205045831.png\" alt=\"title\"></p>\n<p>可以看到 U盘 挂载成功，netgear是 U盘的卷标，接下来执行。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">entware-setup.sh</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/23/1590205205693-1590205205695.png\" alt=\"title\"></p>\n<p>安装 zerotier</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/23/1590205562115-1590205562117.png\" alt=\"title\"></p>\n<p>依次运行：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">modprobe tun</span><br><span class=\"line\">zerotier-one -d</span><br><span class=\"line\">zerotier-cli info</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/23/1590206488931-1590206488932.png\" alt=\"title\"></p>\n<p>成功上线，而且是最新的1.4.6版本</p>\n<p>执行命令：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">zerotier-cli join 8b***********9</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/23/1590207762304-1590207762307.png\" alt=\"title\"></p>\n<p>这次居然是加入网络ID失败，在执行一次，很莫名其妙的又ok了，接下来执行命令：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">zerotier-cli listnetworks</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/23/1590208320717-1590208320723.png\" alt=\"title\"></p>\n<p>显示 <code>ACCESS_DENIED PRIVATE</code>，这是需要在zerotier后台页面授权，</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/23/1590208451665-1590208451668.png\" alt=\"title\"></p>\n<p>勾选之后，再次执行：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">zerotier-cli listnetworks</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/23/1590208598768-1590208598772.png\" alt=\"title\"></p>\n<p>可以看到已经获取到了后台分配的IP地址。先查询下所有iptables情况：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">iptables -v -L INPUT -n --line-numbers </span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/23/1590209134536-1590209134539.png\" alt=\"title\"></p>\n<p>添加一条 <code>iptables</code>:</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">iptables -I INPUT 1 -i ztyqb3hz7p -j ACCEPT</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/23/1590209538703-1590209538706.png\" alt=\"title\"></p>\n<p>如果你不确定虚拟网卡的名词，可以用 <code>ifconfig</code> 查一下。我这里的虚拟网卡名即为: <code>ztyqb3hz7p</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/23/1590211715737-1590211715740.png\" alt=\"title\"></p>\n<p>重启zerotier</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">killall zerotier-one</span><br><span class=\"line\">zerotier-one -d</span><br></pre></td></tr></table></figure>\n\n<p>设置开机加载tun驱动并检测脚本是否运行：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;modprobe tun&quot;</span> &gt;&gt; /jffs/scripts/nat-start</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;cru a ZeroTierDaemon &quot;</span>/opt/etc/init.d/S90zerotier-one.sh start<span class=\"string\">&quot;&quot;</span> &gt;&gt; /jffs/scripts/wan-start</span><br></pre></td></tr></table></figure>\n\n<p>端口映射，添加/jffs/scripts/nat-start内容，并设置开机启动</p>\n<blockquote>\n<p>192.168.191.10 为 zerotier 分配的 IP<br>192.168.0.1 为路由器的 IP</p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;iptables -t nat -A PREROUTING -d 192.168.191.10 -p tcp --dport 80 -j DNAT --to-destination 192.168.0.1:80&quot;</span> &gt;&gt; /jffs/scripts/nat-start</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;/opt/etc/init.d/S90zerotier-one.sh&quot;</span> &gt;&gt; /jffs/scripts/nat-start</span><br><span class=\"line\">chmod a+rx /jffs/scripts/*</span><br></pre></td></tr></table></figure>\n\n<p>启动脚本放到相应目录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/23/1590212628810-1590212628814.png\" alt=\"title\"></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">chmod 755 /opt/etc/init.d/S90zerotier-one.sh</span><br></pre></td></tr></table></figure>\n\n<p>S90zerotier-one.sh 脚本内容：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#! /bin/sh</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"string\">&quot;<span class=\"variable\">$1</span>&quot;</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">  start)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( pidof zerotier-one )</span><br><span class=\"line\">    <span class=\"keyword\">then</span> <span class=\"built_in\">echo</span> <span class=\"string\">&quot;ZeroTier-One is already running.&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">&quot;Starting ZeroTier-One&quot;</span> ;</span><br><span class=\"line\">        /opt/bin/zerotier-one -d ;</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"subst\">$(date)</span> Started ZeroTier-One&quot;</span> &gt;&gt; /opt/var/<span class=\"built_in\">log</span>/zerotier-one.log ;</span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  stop)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( pidof zerotier-one )</span><br><span class=\"line\">    <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">&quot;Stopping ZeroTier-One&quot;</span>;</span><br><span class=\"line\">        killall zerotier-one</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"subst\">$(date)</span> Stopped ZeroTier-One&quot;</span> &gt;&gt; /opt/var/<span class=\"built_in\">log</span>/zerotier-one.log</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">&quot;ZeroTier-One was not running&quot;</span> ;</span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  status)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( pidof zerotier-one )</span><br><span class=\"line\">    <span class=\"keyword\">then</span> <span class=\"built_in\">echo</span> <span class=\"string\">&quot;ZeroTier-One is running.&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"built_in\">echo</span> <span class=\"string\">&quot;ZeroTier-One is NOT running&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  *)</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;Usage: /etc/init.d/zerotier-one &#123;start|stop|status&#125;&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">    ;;</span><br><span class=\"line\"><span class=\"keyword\">esac</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">exit</span> 0</span><br></pre></td></tr></table></figure>\n\n<p>添加防火墙规则（没有开启防火墙这个无所谓），在/jffs/scripts位置建立文件，可以先在电脑上建立文本文件，再用WinSCP传进去文件名: <code>firewall-start</code></p>\n<p>文件内容如下</p>\n<p>注意：</p>\n<ul>\n<li>请将脚本中的 192.168.191.10 换成你自己 zerotier 的 IP</li>\n<li>请将脚本中的 192.168.0.1 换成你自己路由器的内网 IP</li>\n</ul>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\"></span><br><span class=\"line\">logger -t <span class=\"string\">&quot;custom iptables&quot;</span> <span class=\"string\">&quot;Enter&quot;</span> -p user.notice</span><br><span class=\"line\">iptables -C INPUT -i ztyqb3hz7p -j ACCEPT</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ $? != 0 ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">  <span class=\"comment\">#iptables -I INPUT -i ztyqb3hz7p -j ACCEPT</span></span><br><span class=\"line\">  <span class=\"comment\">#iptables -I INPUT -i ztyqb3hz7p -p icmp -j ACCEPT</span></span><br><span class=\"line\">  iptables -I INPUT 1 -i ppp0 -p icmp -j DROP</span><br><span class=\"line\">  iptables -t nat -A PREROUTING -d 192.168.191.10 -p tcp --dport 80 -j DNAT --to-destination 192.168.0.1:80</span><br><span class=\"line\">  logger -t <span class=\"string\">&quot;custom iptables&quot;</span> <span class=\"string\">&quot;rules added&quot;</span> -p user.notice</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">  logger -t <span class=\"string\">&quot;custom iptables&quot;</span> <span class=\"string\">&quot;rules existed skip&quot;</span> -p user.notice</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n\n<p>获取脚本文件的权限，命令：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">chmod a+rx /jffs/scripts/firewall-start</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/23/1590213979104-1590213979107.png\" alt=\"title\"></p>\n<h2 id=\"设置entware开机生效\"><a href=\"#设置entware开机生效\" class=\"headerlink\" title=\"设置entware开机生效\"></a>设置entware开机生效</h2><p>重启后在日志中看到 <code>admin: Could not start Entware</code></p>\n<p>在/jffs/scripts位置建立文件<code>post-mount</code> , 把u盘中的 entware 挂载到 opt，内容如下：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">&quot;<span class=\"variable\">$1</span>&quot;</span> = <span class=\"string\">&quot;/tmp/mnt/netgear&quot;</span> ] ; <span class=\"keyword\">then</span></span><br><span class=\"line\">  ln -nsf <span class=\"variable\">$1</span>/entware /tmp/opt</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n\n<p>获取脚本文件的权限，命令：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">chmod a+rx /jffs/scripts/post-mount</span><br></pre></td></tr></table></figure>\n\n<p>最后就是重启设备，可以享受局域网的快乐了~~</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>需要带个 U 盘小辫子，总觉得不是很完美，等有心情了再研究吧。</p>\n<h1 id=\"附录\"><a href=\"#附录\" class=\"headerlink\" title=\"附录\"></a>附录</h1><h2 id=\"jffs-scripts目录\"><a href=\"#jffs-scripts目录\" class=\"headerlink\" title=\"/jffs/scripts目录\"></a>/jffs/scripts目录</h2><p>里面的脚本名固定不可以随便修改，但是可以加自己的内容。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">脚本名</th>\n<th align=\"center\">作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">post-mount</td>\n<td align=\"center\">在挂载磁盘后调用</td>\n</tr>\n<tr>\n<td align=\"center\">nat-start</td>\n<td align=\"center\">在nat配置后调用</td>\n</tr>\n<tr>\n<td align=\"center\">services-start</td>\n<td align=\"center\">在系统服务启动后调用</td>\n</tr>\n<tr>\n<td align=\"center\">services-stop</td>\n<td align=\"center\">在系统服务器停止前调用</td>\n</tr>\n<tr>\n<td align=\"center\">wan-start</td>\n<td align=\"center\">在wan网卡启动后调用</td>\n</tr>\n<tr>\n<td align=\"center\">firewall-start</td>\n<td align=\"center\">防火墙规则的配置文件</td>\n</tr>\n</tbody></table>\n<h3 id=\"nat-start的相关内容\"><a href=\"#nat-start的相关内容\" class=\"headerlink\" title=\"nat-start的相关内容\"></a>nat-start的相关内容</h3><p>注意：</p>\n<p>请将脚本中的 192.168.191.10 换成你自己 zerotier 的 IP<br>请将脚本中的 192.168.0.1 换成你自己路由器的内网 IP</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\"></span><br><span class=\"line\">modprobe tun</span><br><span class=\"line\">iptables -t nat -A PREROUTING -d 192.168.191.10 -p tcp --dport 80 -j DNAT --to-destination 192.168.0.1:80</span><br><span class=\"line\">/opt/etc/init.d/S90zerotier-one.sh</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"wan-start的相关内容\"><a href=\"#wan-start的相关内容\" class=\"headerlink\" title=\"wan-start的相关内容\"></a>wan-start的相关内容</h3><figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\"></span><br><span class=\"line\">cru a ZeroTierDaemon <span class=\"string\">&quot;/opt/etc/init.d/S90zerotier-one.sh start&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>[网络] r6300v2 梅林固件装Opkg、Transmission<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY2hpcGhlbGwuY29tL3RocmVhZC0xMzQ3ODU2LTEtMS5odG1s\">https://www.chiphell.com/thread-1347856-1-1.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>[其他插件] 梅林安装zerotier实现内网穿透<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9rb29sc2hhcmUuY24vdGhyZWFkLTEzNDkzMC0xLTEuaHRtbA==\">https://koolshare.cn/thread-134930-1-1.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>[教程] 将entware装入jffs分区<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9rb29sc2hhcmUuY24vdGhyZWFkLTE2MzE5Mi0xLTEuaHRtbA==\">https://koolshare.cn/thread-163192-1-1.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>在梅林上使用 Entware<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8yNTU5YzI1NmRjZGU=\">https://www.jianshu.com/p/2559c256dcde<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>entware嵌入到移动硬盘，在路由器重启后不生效<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d5b25ncWluZy9hcnRpY2xlL2RldGFpbHMvODUzMTQzMzc=\">https://blog.csdn.net/wyongqing/article/details/85314337<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>A Guide About Installing ZeroTier on ASUS AC68U Router<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc25iZm9ydW1zLmNvbS90aHJlYWRzL2EtZ3VpZGUtYWJvdXQtaW5zdGFsbGluZy16ZXJvdGllci1vbi1hc3VzLWFjNjh1LXJvdXRlci40MjY0OC8=\">https://www.snbforums.com/threads/a-guide-about-installing-zerotier-on-asus-ac68u-router.42648/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>使用Zerotier为Syncthing打洞<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaGVhcnRubi5jb20vMjAxOC8wNC8wMy9pbnN0YWxsLWFuZC1jb25maWctemVyb3RpZXItZm9yLXN5bmN0aGluZy8=\">https://www.heartnn.com/2018/04/03/install-and-config-zerotier-for-syncthing/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>梅林固件安装Zerotier<br>地址：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5xLXNlcnZlci5jbi9pbmRleC5waHAvYXJjaGl2ZXMvMy8=\">http://www.q-server.cn/index.php/archives/3/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["netgear","路由器","R6300V2","zerotier"]},{"title":"frp基础设置示例详解","url":"/2020/05/28/frp%E5%9F%BA%E7%A1%80%E8%AE%BE%E7%BD%AE%E7%A4%BA%E4%BE%8B%E8%AF%A6%E8%A7%A3/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>当初开始用 frp 走了一些弯路，主要原因还是对 frp 的工作原理理解不透彻，所以在设置时才会出现各种错误，导致不成功，所以下面我们以实例来做详细的说明。</p>\n<h1 id=\"frp-工作原理\"><a href=\"#frp-工作原理\" class=\"headerlink\" title=\"frp 工作原理\"></a>frp 工作原理</h1><p>官网的架构图比较抽象，不便于描述</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/28/1590643008214-1590643008248.png\" alt=\"title\"></p>\n<p>所以我重绘了一张，结合实例来进行说明</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/28/1590644061456-1590644061464.png\" alt=\"title\"></p>\n<h2 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h2><ol>\n<li>frps 需要有公网 IP，例如：IP 是 <code>10.146.0.3</code></li>\n<li>frps 要绑定域名，例如：绑定到 <code>laosu.ml</code></li>\n<li>根据需要访问的内容，在 dns 解析中绑定二级域名，所有的域名均指向 <code>10.146.0.3</code></li>\n</ol>\n<ul>\n<li>为NAS管理页面绑定了：nas.laosu.ml</li>\n<li>为Jellyfin绑定了域名：movie.laosu.ml</li>\n<li>为airsonic绑定了域名：music.laosu.ml</li>\n<li>为R6300v2绑定了域名：router.laosu.ml</li>\n</ul>\n<h2 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h2><p>当我在浏览器中输入： <span class=\"exturl\" data-url=\"aHR0cDovL21vdmllLmxhb3N1Lm1sLw==\">http://movie.laosu.ml<i class=\"fa fa-external-link-alt\"></i></span> 时，dns 服务会将其解析到 IP：<code>10.146.0.3</code> 上，也就是跳转到了我们安装了 frps 的主机上，frps 会根据用户输入的域名向 frpc 发起查询，如果存在该服务，则返回 jellyfin 的web 页面。</p>\n<p>而当我输入了错误的二级域名，或者该二级域名没有被解析、绑定，又或者是 frps 和 frpc 之间的网络出现了问题，也就是服务不存在时，则会返回下面的错误界面。</p>\n<p>例如在浏览器中输入了：<span class=\"exturl\" data-url=\"aHR0cDovL21vdmllMS5sYW9zdS5tbC8=\">http://movie1.laosu.ml<i class=\"fa fa-external-link-alt\"></i></span> 之后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/28/1590644807478-1590644807482.png\" alt=\"title\"></p>\n<h1 id=\"frps-ini-说明\"><a href=\"#frps-ini-说明\" class=\"headerlink\" title=\"frps.ini 说明\"></a>frps.ini 说明</h1><p>frps 服务器有了一键安装包之后，变得简单多了，可以输入frps config 来查看 /usr/local/frps/frps.ini 的内容，下面的 frps.ini 是一路默认设置生成的内容：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># [common] is integral section</span></span><br><span class=\"line\"><span class=\"section\">[common]</span></span><br><span class=\"line\"><span class=\"comment\"># A literal address or host name for IPv6 must be enclosed</span></span><br><span class=\"line\"><span class=\"comment\"># in square brackets, as in &quot;[::1]:80&quot;, &quot;[ipv6-host]:http&quot; or &quot;[ipv6-host%zone]:80&quot;</span></span><br><span class=\"line\"><span class=\"attr\">bind_addr</span> = <span class=\"number\">0.0</span>.<span class=\"number\">0.0</span></span><br><span class=\"line\"><span class=\"attr\">bind_port</span> = <span class=\"number\">5443</span></span><br><span class=\"line\"><span class=\"comment\"># udp port used for kcp protocol, it can be same with &#x27;bind_port&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># if not set, kcp is disabled in frps</span></span><br><span class=\"line\"><span class=\"attr\">kcp_bind_port</span> = <span class=\"number\">5443</span></span><br><span class=\"line\"><span class=\"comment\"># if you want to configure or reload frps by dashboard, dashboard_port must be set</span></span><br><span class=\"line\"><span class=\"attr\">dashboard_port</span> = <span class=\"number\">6443</span></span><br><span class=\"line\"><span class=\"comment\"># dashboard assets directory(only for debug mode)</span></span><br><span class=\"line\"><span class=\"attr\">dashboard_user</span> = admin</span><br><span class=\"line\"><span class=\"attr\">dashboard_pwd</span> = xxxxxxxx</span><br><span class=\"line\"><span class=\"comment\"># assets_dir = ./static</span></span><br><span class=\"line\"><span class=\"attr\">vhost_http_port</span> = <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"attr\">vhost_https_port</span> = <span class=\"number\">443</span></span><br><span class=\"line\"><span class=\"comment\"># console or real logFile path like ./frps.log</span></span><br><span class=\"line\"><span class=\"attr\">log_file</span> = ./frps.log</span><br><span class=\"line\"><span class=\"comment\"># debug, info, warn, error</span></span><br><span class=\"line\"><span class=\"attr\">log_level</span> = info</span><br><span class=\"line\"><span class=\"attr\">log_max_days</span> = <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"comment\"># auth token</span></span><br><span class=\"line\"><span class=\"attr\">token</span> = yyyyyyyyyyyyyyyy</span><br><span class=\"line\"><span class=\"comment\"># It is convenient to use subdomain configure for http、https type when many people use one frps server together.</span></span><br><span class=\"line\"><span class=\"attr\">subdomain_host</span> = <span class=\"number\">10.146</span>.<span class=\"number\">0.3</span></span><br><span class=\"line\"><span class=\"comment\"># only allow frpc to bind ports you list, if you set nothing, there won&#x27;t be any limit</span></span><br><span class=\"line\"><span class=\"comment\">#allow_ports = 1-65535</span></span><br><span class=\"line\"><span class=\"comment\"># pool_count in each proxy will change to max_pool_count if they exceed the maximum value</span></span><br><span class=\"line\"><span class=\"attr\">max_pool_count</span> = <span class=\"number\">50</span></span><br><span class=\"line\"><span class=\"comment\"># if tcp stream multiplexing is used, default is true</span></span><br><span class=\"line\"><span class=\"attr\">tcp_mux</span> = <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<p>这里比较关键的信息：</p>\n<ul>\n<li>子域名主机和 frps 服务器的公网IP是同一个</li>\n</ul>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">subdomain_host</span> = <span class=\"number\">10.146</span>.<span class=\"number\">0.3</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>管理页面</li>\n</ul>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># if you want to configure or reload frps by dashboard, dashboard_port must be set</span></span><br><span class=\"line\"><span class=\"attr\">dashboard_port</span> = <span class=\"number\">6443</span></span><br><span class=\"line\"><span class=\"comment\"># dashboard assets directory(only for debug mode)</span></span><br><span class=\"line\"><span class=\"attr\">dashboard_user</span> = admin</span><br><span class=\"line\"><span class=\"attr\">dashboard_pwd</span> = xxxxxxxx</span><br></pre></td></tr></table></figure>\n\n<p>你可以在浏览器中输入：<span class=\"exturl\" data-url=\"aHR0cDovLzEwLjE0Ni4wLjM6NjQ0My8=\">http://10.146.0.3:6443<i class=\"fa fa-external-link-alt\"></i></span> ，输入用户名、密码后，可以查看实时的服务状态是否在线等信息。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/28/1590646590390-1590646590393.png\" alt=\"title\"></p>\n<ul>\n<li>token</li>\n</ul>\n<p>frpc 登录到 frps 时的认证凭证，在 <code>frpc.ini</code> 要用到的。</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># auth token</span></span><br><span class=\"line\"><span class=\"attr\">token</span> = yyyyyyyyyyyyyyyy</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"frpc-ini-说明\"><a href=\"#frpc-ini-说明\" class=\"headerlink\" title=\"frpc.ini 说明\"></a>frpc.ini 说明</h1><p>先上实例 <code>frpc.ini</code>，后面再做说明。</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[common]</span></span><br><span class=\"line\"><span class=\"attr\">server_addr</span> = <span class=\"number\">10.146</span>.<span class=\"number\">0.3</span></span><br><span class=\"line\"><span class=\"attr\">server_port</span> = <span class=\"number\">5443</span></span><br><span class=\"line\"><span class=\"attr\">token</span> = yyyyyyyyyyyyyyyy</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[nas]</span></span><br><span class=\"line\"><span class=\"attr\">type</span> = http</span><br><span class=\"line\"><span class=\"attr\">local_ip</span> = <span class=\"number\">192.168</span>.<span class=\"number\">0.199</span></span><br><span class=\"line\"><span class=\"attr\">local_port</span> = <span class=\"number\">5000</span></span><br><span class=\"line\"><span class=\"attr\">custom_domains</span> = nas.laosu.ml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[movie]</span></span><br><span class=\"line\"><span class=\"attr\">type</span> = http</span><br><span class=\"line\"><span class=\"attr\">local_ip</span> = <span class=\"number\">192.168</span>.<span class=\"number\">0.199</span></span><br><span class=\"line\"><span class=\"attr\">local_port</span> = <span class=\"number\">8096</span></span><br><span class=\"line\"><span class=\"attr\">custom_domains</span> = movie.laosu.ml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[music]</span></span><br><span class=\"line\"><span class=\"attr\">type</span> = http</span><br><span class=\"line\"><span class=\"attr\">local_ip</span> = <span class=\"number\">192.168</span>.<span class=\"number\">0.199</span></span><br><span class=\"line\"><span class=\"attr\">local_port</span> = <span class=\"number\">4040</span></span><br><span class=\"line\"><span class=\"attr\">custom_domains</span> = music.laosu.ml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[router]</span></span><br><span class=\"line\"><span class=\"attr\">type</span> = http</span><br><span class=\"line\"><span class=\"attr\">local_ip</span> = <span class=\"number\">192.168</span>.<span class=\"number\">0.1</span></span><br><span class=\"line\"><span class=\"attr\">local_port</span> = <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"attr\">custom_domains</span> = router.laosu.ml</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"客户端-token-认证\"><a href=\"#客户端-token-认证\" class=\"headerlink\" title=\"客户端 token 认证\"></a>客户端 token 认证</h2><p>frpc.ini 中，在 <code>[common]</code>节：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">token</span> = yyyyyyyyyyyyyyyy</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"开启kcp协议\"><a href=\"#开启kcp协议\" class=\"headerlink\" title=\"开启kcp协议\"></a>开启kcp协议</h2><p>kcp协议虽然会有额外的流量消耗，但在弱网环境下传输效率提升明显。关于kcp协议，有兴趣的可以自己度娘。</p>\n<p>首先在 <code>frps.ini</code> 中启用 kcp 协议支持，指定一个 udp 端口用于接收客户端请求：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">bind_addr</span> = <span class=\"number\">0.0</span>.<span class=\"number\">0.0</span></span><br><span class=\"line\"><span class=\"attr\">bind_port</span> = <span class=\"number\">5443</span></span><br><span class=\"line\"><span class=\"comment\"># udp port used for kcp protocol, it can be same with &#x27;bind_port&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># if not set, kcp is disabled in frps</span></span><br><span class=\"line\"><span class=\"attr\">kcp_bind_port</span> = <span class=\"number\">5443</span></span><br></pre></td></tr></table></figure>\n\n<p>其次在 <code>frpc.ini</code> 中，在 <code>[common]</code>节：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">server_addr</span> = <span class=\"number\">10.146</span>.<span class=\"number\">0.3</span></span><br><span class=\"line\"><span class=\"attr\">server_port</span> = <span class=\"number\">5443</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">protocol</span> = kcp</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"节的名称不能重复\"><a href=\"#节的名称不能重复\" class=\"headerlink\" title=\"节的名称不能重复\"></a>节的名称不能重复</h2><p>在示例 frpc.ini 中，一共有5个节，名称分别是 <code>[common]</code> 、 <code>[nas]</code> 、<code>[movie]</code> 、<code>[music]</code> 、 <code>[router]</code> ；</p>\n<p><strong>【重要说明】</strong></p>\n<blockquote>\n<ul>\n<li>这些节的名称是不可以重复的，否则会报错，尤其是一台 frps 服务器对应多台 frpc 客户端，这个错就会比较难发现</li>\n<li>个人习惯将节的名称和二级域名的前缀保持一致，这样便于管理</li>\n</ul>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/28/1590649156365-1590649156373.png\" alt=\"title\"></p>\n<h2 id=\"加密与压缩\"><a href=\"#加密与压缩\" class=\"headerlink\" title=\"加密与压缩\"></a>加密与压缩</h2><p>这个是将 frpc 与 frps 之间的通信内容加密与压缩传输</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">use_encryption</span> = <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">use_compression</span> = <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<p>优点：</p>\n<ul>\n<li>加密可以有效防止 frpc 与 frps 之间流量被拦截</li>\n<li>压缩可以有效减小 frpc 与 frps 之间的网络流量</li>\n</ul>\n<p>缺点：</p>\n<ul>\n<li>会额外消耗一些 cpu 资源</li>\n</ul>\n<p>以 <code>[nas]</code> 为例：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[nas]</span></span><br><span class=\"line\"><span class=\"attr\">type</span> = http</span><br><span class=\"line\"><span class=\"attr\">local_ip</span> = <span class=\"number\">192.168</span>.<span class=\"number\">0.199</span></span><br><span class=\"line\"><span class=\"attr\">local_port</span> = <span class=\"number\">5000</span></span><br><span class=\"line\"><span class=\"attr\">use_encryption</span> = <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">use_compression</span> = <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">custom_domains</span> = nas.laosu.ml</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"增加密码保护\"><a href=\"#增加密码保护\" class=\"headerlink\" title=\"增加密码保护\"></a>增加密码保护</h2><p>对于一些没有安全保护的页面，需要输入账号、密码才能访问</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">http_user</span> = abc</span><br><span class=\"line\"><span class=\"attr\">http_pwd</span> = abc</span><br></pre></td></tr></table></figure>\n\n<p>以 <code>[nas]</code> 为例：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[nas]</span></span><br><span class=\"line\"><span class=\"attr\">type</span> = http</span><br><span class=\"line\"><span class=\"attr\">local_ip</span> = <span class=\"number\">192.168</span>.<span class=\"number\">0.199</span></span><br><span class=\"line\"><span class=\"attr\">local_port</span> = <span class=\"number\">5000</span></span><br><span class=\"line\"><span class=\"attr\">use_encryption</span> = <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">use_compression</span> = <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">http_user</span> = abc</span><br><span class=\"line\"><span class=\"attr\">http_pwd</span> = abc</span><br><span class=\"line\"><span class=\"attr\">custom_domains</span> = nas.laosu.ml</span><br></pre></td></tr></table></figure>\n\n<p>当你在浏览器中输入： <span class=\"exturl\" data-url=\"aHR0cDovL25hcy5sYW9zdS5tbC8=\">http://nas.laosu.ml<i class=\"fa fa-external-link-alt\"></i></span> 时，浏览器中会弹出用户号、密码的输入窗口，需要输入配置的用户名和密码才能继续访问。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>frp官网<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ZhdGVkaWVyL2ZycA==\">https://github.com/fatedier/frp<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","frp","kcp协议"]},{"title":"全面升级frp","url":"/2020/05/26/%E5%85%A8%E9%9D%A2%E5%8D%87%E7%BA%A7frp/","content":"<blockquote>\n<p>题图来自：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xMTM2NzI2NTI=\">https://zhuanlan.zhihu.com/p/113672652<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<p><strong>什么是 frp</strong></p>\n<blockquote>\n<p>frp 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp 协议，为 http 和 https 应用协议提供了额外的能力，且尝试性支持了点对点穿透。【官网中文说明：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ZhdGVkaWVyL2ZycC9ibG9iL21hc3Rlci9SRUFETUVfemgubWQ=\">https://github.com/fatedier/frp/blob/master/README_zh.md<i class=\"fa fa-external-link-alt\"></i></span>】</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/26/1590492748211-1590492748244.png\" alt=\"title\"><br>（图片来自官网）</p>\n<p>这张架构图清晰的显示了 frp 的工作原理，外网的用户 User 通过域名访问到内网提供 tcp 或者 http 服务的设备。</p>\n<ul>\n<li><strong>frps</strong> 是具有公网 IP 地址的frp服务器，一般我们都是购买 VPS ；</li>\n<li><strong>tcp or http service</strong> 是指内网提供 http 或者 tcp 服务的设备，可以是群晖，也可以是安装了各种服务的Windows、Linux主机，像我们之前介绍过的多媒体服务 jellyfin、图书库 Calibre-Web 等等都是跨平台、能够对外提供 http服务的软件；</li>\n<li><strong>frpc</strong> 是指 frp 客户端，可以安装在 windows电脑上，也可以安装在群晖，甚至是路由器上，建议安装的一直开机的设备上，这样能保证随时都可以访问内网；当然作为7*24小时开始的设备，要考虑功耗、噪音等等问题。</li>\n</ul>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>升级前一直用 0.20 版本，也一直蛮稳定的，之所以要升级是因为 0.20 之后的版本带来了一些新的特性，比如：0.25 版本之后 frpc 和 frps 之间支持通过 TLS 协议加密传输，安全性会更高一些；还有诸如服务器插件等等；当然最重要的原因还是喜欢折腾。</p>\n<h1 id=\"VPS-上卸载-0-20-版\"><a href=\"#VPS-上卸载-0-20-版\" class=\"headerlink\" title=\"VPS 上卸载 0.20 版\"></a>VPS 上卸载 0.20 版</h1><p>0.20 版本是用的《<span class=\"exturl\" data-url=\"aHR0cHM6Ly9rb29sc2hhcmUuY24vdGhyZWFkLTY1Mzc5LTEtMS5odG1s\">内网穿透利器Frp一键安装脚本及设置教程<i class=\"fa fa-external-link-alt\"></i></span>》里的脚本安装的</p>\n<p>首先我们在VPS服务器上看看是否有更新</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">./install-frps.sh update</span><br></pre></td></tr></table></figure>\n\n<p>发现依然还是 0.20，说明这个脚本的作者已经弃坑了，只能卸载了</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">./install-frps.sh uninstall</span><br></pre></td></tr></table></figure>\n\n<p>整个过程非常简单，所以就不上图了。</p>\n<h1 id=\"停用路由器上的-0-20-版-frpc\"><a href=\"#停用路由器上的-0-20-版-frpc\" class=\"headerlink\" title=\"停用路由器上的 0.20 版 frpc\"></a>停用路由器上的 0.20 版 frpc</h1><p>frpc 客户端当时是安装在netgear的R6300v2，刷了梅林固件，从软件中心进去已安装中可以找到 frpc 穿透</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/26/1590499866859-1590499866861.png\" alt=\"title\"></p>\n<p>先停用</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/26/1590499976846-1590499976847.png\" alt=\"title\"></p>\n<p>鼠标移上去会显示卸载</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/26/1590499930762-1590499930763.png\" alt=\"title\"></p>\n<h1 id=\"VPS上安装-0-33-版-frps\"><a href=\"#VPS上安装-0-33-版-frps\" class=\"headerlink\" title=\"VPS上安装 0.33 版 frps\"></a>VPS上安装 0.33 版 frps</h1><p>我们在万能的 github 上找到了另一个提供一键安装脚本的大神，安装脚本已支持跟随到最新的服务版本，这正是我们需要的。</p>\n<p>在VPS上依次执行：</p>\n<ul>\n<li><p>下载 sh 脚本</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">wget https://raw.githubusercontent.com/MvsCode/frps-onekey/master/install-frps.sh -O ./install-frps.sh</span><br></pre></td></tr></table></figure></li>\n<li><p>修改权限</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">chmod 700 ./install-frps.sh</span><br></pre></td></tr></table></figure></li>\n<li><p>执行脚本安装 frps</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">./install-frps.sh install</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><strong>除了密码外，一路无脑回车</strong>，所以也不上过程图了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/26/1590496171230-1590496171231.png\" alt=\"title\"></p>\n<h1 id=\"群晖上安装-0-33-版-frpc\"><a href=\"#群晖上安装-0-33-版-frpc\" class=\"headerlink\" title=\"群晖上安装 0.33 版 frpc\"></a>群晖上安装 0.33 版 frpc</h1><h2 id=\"版本选择\"><a href=\"#版本选择\" class=\"headerlink\" title=\"版本选择\"></a>版本选择</h2><p>还是继续用 docker 镜像的方式安装，在注册表中搜索 frpc，排在第一的 <code>oldiy/frpc</code>,因为之前我们我们用的就是它，但是它的最新版本只到 0.26</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/26/1590496890276-1590496890279.png\" alt=\"title\"></p>\n<p>所以这次我们选了红框中的 <code>stilleshan/frpc</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/26/1590496869650-1590496869651.png\" alt=\"title\"></p>\n<p>因为这个版本的镜像支持 0.33 版本</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/26/1590497020692-1590497020693.png\" alt=\"title\"></p>\n<h2 id=\"安装设置\"><a href=\"#安装设置\" class=\"headerlink\" title=\"安装设置\"></a>安装设置</h2><h3 id=\"创建容器\"><a href=\"#创建容器\" class=\"headerlink\" title=\"创建容器\"></a>创建容器</h3><p>还是用的默认名称</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/26/1590497170077-1590497170078.png\" alt=\"title\"></p>\n<h3 id=\"高级设置\"><a href=\"#高级设置\" class=\"headerlink\" title=\"高级设置\"></a>高级设置</h3><ul>\n<li>勾选启用自动重新启动</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/26/1590497354380-1590497354382.png\" alt=\"title\"></p>\n<ul>\n<li>卷</li>\n</ul>\n<p>添加文件，根据你存放的 frpc.ini 添加，后面的装载路径必须是 <code>/frp/frpc.ini</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/26/1590497660747-1590497660748.png\" alt=\"title\"></p>\n<p>下面是镜像的作者提供的frpc.ini格式内容参考，请根据自己的实际进行修改。</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[common]</span></span><br><span class=\"line\"><span class=\"attr\">server_addr</span> = free.frp.ioiox.com</span><br><span class=\"line\"><span class=\"attr\">server_port</span> = <span class=\"number\">7007</span></span><br><span class=\"line\"><span class=\"attr\">token</span> = www.ioiox.com</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[web1]</span></span><br><span class=\"line\"><span class=\"attr\">type</span> = http</span><br><span class=\"line\"><span class=\"attr\">local_ip</span> = <span class=\"number\">192.168</span>.<span class=\"number\">1.2</span></span><br><span class=\"line\"><span class=\"attr\">local_port</span> = <span class=\"number\">5000</span></span><br><span class=\"line\"><span class=\"attr\">custom_domains</span> = yourdomain.com</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[web2]</span></span><br><span class=\"line\"><span class=\"attr\">type</span> = https</span><br><span class=\"line\"><span class=\"attr\">local_ip</span> = <span class=\"number\">192.168</span>.<span class=\"number\">1.2</span></span><br><span class=\"line\"><span class=\"attr\">local_port</span> = <span class=\"number\">5001</span></span><br><span class=\"line\"><span class=\"attr\">custom_domains</span> = yourdomain.com</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[tcp1]</span></span><br><span class=\"line\"><span class=\"attr\">type</span> = tcp</span><br><span class=\"line\"><span class=\"attr\">local_ip</span> = <span class=\"number\">192.168</span>.<span class=\"number\">1.2</span></span><br><span class=\"line\"><span class=\"attr\">local_port</span> = <span class=\"number\">22</span></span><br><span class=\"line\"><span class=\"attr\">remote_port</span> = <span class=\"number\">22222</span></span><br><span class=\"line\"><span class=\"attr\">custom_domains</span> = yourdomain.com</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>网络</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/26/1590498683867-1590498683868.png\" alt=\"title\"></p>\n<ul>\n<li>端口</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/26/1590498725028-1590498725029.png\" alt=\"title\"></p>\n<ul>\n<li>链接</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/26/1590498781478-1590498781479.png\" alt=\"title\"></p>\n<ul>\n<li>环境</li>\n</ul>\n<p>可以添加个时区，左边<code>可变</code>输入 TZ ，右边<code>值</code> 输入 Asia/Shanghai，不加也不影响使用。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/26/1590498838936-1590498838937.png\" alt=\"title\"></p>\n<p>稍等一会儿就可以访问了。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>frp官网<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ZhdGVkaWVyL2ZycA==\">https://github.com/fatedier/frp<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>内网穿透利器Frp一键安装脚本及设置教程<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9rb29sc2hhcmUuY24vdGhyZWFkLTY1Mzc5LTEtMS5odG1s\">https://koolshare.cn/thread-65379-1-1.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Frps服务端一键配置脚本，Frp最新版本：0.33.0<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL012c0NvZGUvZnJwcy1vbmVrZXk=\">https://github.com/MvsCode/frps-onekey<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>stilleshan/frpc项目<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N0aWxsZXNoYW4vZnJwYw==\">https://github.com/stilleshan/frpc<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","frp","VPS"]},{"title":"群晖上用docker安装homeassistant","url":"/2020/05/24/%E7%BE%A4%E6%99%96%E4%B8%8A%E7%94%A8docker%E5%AE%89%E8%A3%85homeassistant/","content":"<p><strong>什么是Home Assistant？</strong></p>\n<blockquote>\n<p>Home Assistant 是一个基于Python 3开发的开源家庭自动化平台。可以跟踪和控制家庭中的所有设备，并实现自动化控制。后面简称为HA。</p>\n</blockquote>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>最早安装的是0.82版，后来升级到了0.93版，正好遇到HA进行了一次较大的调整，导致很多插件无法使用，所以后来基本上不再主动升级，目前最新docker版本好像已经到了0.99版。</p>\n<p>这篇是大概一年前写的安装记录，做了一些调整，图片全部是重新截取的。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在注册表中搜索 <code>homeassistant</code>，第一个就是我们要安装的。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/24/1590325699443-1590325699446.png\" alt=\"title\"></p>\n<p>双击下载，选择标签也就是版本，如果你有选择困难症，建议直接选 <code>latest</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/24/2-1590326402698.png\" alt=\"title\"></p>\n<p>这个docker镜像比较大，约2G，如果你没有修改成国内源的话，可能要等待的时间会非常长。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/24/1590326564593-1590326564595.png\" alt=\"title\"></p>\n<h1 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h1><h2 id=\"常规设置\"><a href=\"#常规设置\" class=\"headerlink\" title=\"常规设置\"></a>常规设置</h2><p>容器名称随意，一般都用的默认的。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/24/1590326787591-1590326787592.png\" alt=\"title\"></p>\n<h2 id=\"卷\"><a href=\"#卷\" class=\"headerlink\" title=\"卷\"></a>卷</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/24/1590326896505-1590326896507.png\" alt=\"title\"></p>\n<p>初始化后，会在 <code>config</code> 目录中存储配置文件、日志文件等</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/24/1590327043067-1590327043068.png\" alt=\"title\"></p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/24/1590327200325-1590327200326.png\" alt=\"title\"></p>\n<h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/24/1590327253144-1590327253145.png\" alt=\"title\"></p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/24/1590327851525-1590327851527.png\" alt=\"title\"></p>\n<p>这里需要我们点 <code>+</code> 号，左边 <code>可变</code> 输入 TZ（Time Zone，也就是时区），右边 <code>值</code> 输入 Asia/Shanghai。</p>\n<h1 id=\"访问\"><a href=\"#访问\" class=\"headerlink\" title=\"访问\"></a>访问</h1><p>在浏览器中打开 http://群晖IP:8123即可。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/24/1590328555243-1590328555245.png\" alt=\"title\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>智能家居从新出发： 第一篇 群晖docker安装homeassistant<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2F2N2s5cDVuLw==\">https://post.smzdm.com/p/av7k9p5n/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>智能家居探索 篇八：nas群晖套件直接安装hassio/homeassistant<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2E4Mzkya2w2Lw==\">https://post.smzdm.com/p/a8392kl6/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","智能家居","homeassistant","HA"]},{"title":"百兆升千兆家庭组网方案（续1）","url":"/2020/05/21/%E7%99%BE%E5%85%86%E5%8D%87%E5%8D%83%E5%85%86%E5%AE%B6%E5%BA%AD%E7%BB%84%E7%BD%91%E6%96%B9%E6%A1%88%EF%BC%88%E7%BB%AD1%EF%BC%89/","content":"<h1 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h1><p><a href=\"https://laosu.ml/2020/05/16/%E7%99%BE%E5%85%86%E5%8D%87%E5%8D%83%E5%85%86%E5%AE%B6%E5%BA%AD%E7%BB%84%E7%BD%91%E6%96%B9%E6%A1%88/\">上一篇</a> 中讲到买了一对 Netgear PLP1200S 有线版，因为网上介绍 Netgear PLP1200 采用了美国高通 QCA7500+AR1450 芯片组，有线端口能到到千兆，当时我的预期是能达到百兆就行，毕竟原来埋的网线也就这样了。</p>\n<p>等了两天收到了，送了两根六类线</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/21/3941590041289_.pic-1590041349685.jpg\" alt=\"title\"></p>\n<p>网上只搜到一本 PLP1200 的说明书，从外观看基本一样，估计也就 iphone6 和 iphone 6S 的区别吧？所以带不带 S 个人觉得功能应该是一样的。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3dic3UyMDAzL2dpdG5vdGUtaW1hZ2VzQG1hc3Rlci9teW5vdGUvMjAyMC8wNS8yMS8yMDItMTE1NjYtMDFwb3dlcmxpbmVfMTIwMF91c2VyX21hbnVhbDEzSmFuMjAxNS0xNTkwMDQzMjg0NzkxLnBkZg==\">PLP1200操作手册（英文版）<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>手册中比较关键的就是下面这张图，第三个灯红色，连接速度 &lt; 50Mbps，只有绿色才会 &gt; 80Mbps。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/21/1590043441077-1590043441080.png\" alt=\"title\"></p>\n<p>测试时，电力猫都是直接插墙上的插座，而不是通过接线板，这样可以最大限度的避免干扰。</p>\n<p>但从我的测试情况看，只有在一个房间的时候第三个灯才会是绿色的，其他时候都是红色，红灯时实测的速度在 20Mbps 左右。</p>\n<p>不停的排列组合，但是无论插在哪个墙插，距离只要超过3米，只要不是一个房间，基本上就是红灯，所以测了两天还是跟老板商量给退了。</p>\n<h1 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h1><p>从网友关于电力猫的使用看，估计速率上不去的原因可能是这几条：</p>\n<ul>\n<li>跟家庭布线有很大关系，可能是不同的房间过了空气开关</li>\n<li>可能使用了带有滤波、防浪涌功能的插座，比如防雷插座</li>\n<li>线路上有大功率的电器</li>\n</ul>\n<h1 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h1><p>下回再试试WDS，带宽应该问题不大，就看能否长时间稳定运行。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>理想很丰满，现实很骨感—腾达/TP-LINK千兆电力猫使用手记<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2F4MDh3d3oyLw==\">https://post.smzdm.com/p/ax08wwz2/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["路由器","千兆","电力猫","WDS"]},{"title":"PVE安装win10集显直通","url":"/2020/05/21/PVE%E5%AE%89%E8%A3%85win10%E9%9B%86%E6%98%BE%E7%9B%B4%E9%80%9A/","content":"<p><strong>什么是PVE</strong></p>\n<blockquote>\n<p>Proxmox VE 全称是 Proxmox Virtual Environment (Proxmox 虚拟环境)，通常简称为 Proxmox或PVE，Proxmox VE 是一个功能强大的完全开源的虚拟化平台。通过内置的Web管理界面，你能够轻易地管理多个虚拟机和容器, 也可以轻松地管理存储和网络，甚至是管理高可用性集群。</p>\n</blockquote>\n<p><strong>为什么要显卡直通</strong></p>\n<blockquote>\n<p>简单来说，显卡直通就是希望虚拟机能直接用显卡的GPU，来获得更高的性能。理论上包括网卡、声卡等硬件设备都是可以直通（PassThorugh）的。</p>\n</blockquote>\n<h1 id=\"安装-PVE\"><a href=\"#安装-PVE\" class=\"headerlink\" title=\"安装 PVE\"></a>安装 PVE</h1><h2 id=\"下载-PVE-ISO-文件\"><a href=\"#下载-PVE-ISO-文件\" class=\"headerlink\" title=\"下载 PVE ISO 文件\"></a>下载 PVE ISO 文件</h2><p>官方网站下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucHJveG1veC5jb20vZW4vZG93bmxvYWRz\">https://www.proxmox.com/en/downloads<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"制作启动-U-盘\"><a href=\"#制作启动-U-盘\" class=\"headerlink\" title=\"制作启动 U 盘\"></a>制作启动 U 盘</h2><p>用 UltraISO 写入 U 盘；</p>\n<p>【注意】：</p>\n<blockquote>\n<ol>\n<li>可能会存在U盘兼容性问题，但我没遇到，用的 kingstone DT101 G2 的 4G；</li>\n<li>在写入格式时，开始选的 USB-HDD，但可能跟主板有关系，也可能是设置关系，不能正常启动，后改为 RAW 后正常；</li>\n</ol>\n</blockquote>\n<h2 id=\"开始安装\"><a href=\"#开始安装\" class=\"headerlink\" title=\"开始安装\"></a>开始安装</h2><p>BIOS 中设置 U 盘启动；</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%201-1590034607684.png\" alt=\"title\"></p>\n<p>自检画面，等待几秒</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%202-1590034644701.png\" alt=\"title\"></p>\n<p>同意协议，点击 “I agree”</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%203-1590034687395.png\" alt=\"title\"></p>\n<p>选择硬盘，点击 “Next”</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%204-1590034714141.png\" alt=\"title\"></p>\n<p>【注意】：</p>\n<blockquote>\n<p>注意要选择你要安装 pve 系统的盘符，会格式化掉硬盘里的所有东西。保险起见把不用的硬盘先拔掉。</p>\n</blockquote>\n<p>设定国家、时区和键盘，Country 输入 China 即可，点击 “Next”</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%205-1590034752844.png\" alt=\"title\"></p>\n<p>设置管理员 root 账号密码和邮箱</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%206-1590034782949.png\" alt=\"title\"></p>\n<p>【注意】：</p>\n<blockquote>\n<p>密码要牢记</p>\n</blockquote>\n<p>设定主机名，IP，网关，掩码和 DNS，在安装过程中这里的IP等信息自动获取了（上述2步骤会自动检查网络，固定IP可以自己设定）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%207-1590034858836.png\" alt=\"title\"></p>\n<p>安装中，等待几分钟</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%208-1590034920244.png\" alt=\"title\"></p>\n<p>安装完提示重启</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%209-1590034945702.png\" alt=\"title\"></p>\n<p>【注意】：</p>\n<blockquote>\n<p>重启前请先移除U盘，或者关闭U盘启动；</p>\n</blockquote>\n<p>启动完成后的控制台，会提示控制台访问URL</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2010-1590034990755.png\" alt=\"title\"></p>\n<p>【注意】</p>\n<blockquote>\n<p>1、是 https，不是 http；<br>2、因为证书问题，尽量不要用 ie 和 edge 浏览器，chrome 浏览器的效果比较好；</p>\n</blockquote>\n<h1 id=\"运行PVE\"><a href=\"#运行PVE\" class=\"headerlink\" title=\"运行PVE\"></a>运行PVE</h1><p>输入URL， <span class=\"exturl\" data-url=\"aHR0cHM6Ly9pcDo4MDA2Lw==\">https://IP:8006<i class=\"fa fa-external-link-alt\"></i></span> ， 语言可以选择中文，对于中文支持不错；</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2011-1590035049330.png\" alt=\"title\"></p>\n<p>进入 PVE UI 的截图</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2012-1590035069746.png\" alt=\"title\"></p>\n<h1 id=\"虚拟化设置\"><a href=\"#虚拟化设置\" class=\"headerlink\" title=\"虚拟化设置\"></a>虚拟化设置</h1><h2 id=\"修改BIOS\"><a href=\"#修改BIOS\" class=\"headerlink\" title=\"修改BIOS\"></a>修改BIOS</h2><p>在 BIOS 中要开启跟虚拟化相关的选项，比如VD-T等；</p>\n<h2 id=\"修改PVE内核\"><a href=\"#修改PVE内核\" class=\"headerlink\" title=\"修改PVE内核\"></a>修改PVE内核</h2><p>PVE 的内核开启支持 VD-T 直通的 IOMMU 及相关模块；</p>\n<ul>\n<li>修改/etc/default/grub文件中的内容</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2014-1590035396165.png\" alt=\"title\"></p>\n<p>【注意】：</p>\n<blockquote>\n<p>后面所有的操作都在 WEB GUI 的 shell 中进行</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2013-1590035381302.png\" alt=\"title\"></p>\n<p>把原内容中：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">GRUB_CMDLINE_LINUX_DEFAULT=<span class=\"string\">&quot;quiet&quot;</span> </span><br></pre></td></tr></table></figure>\n\n<p>改为：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">GRUB_CMDLINE_LINUX_DEFAULT=<span class=\"string\">&quot;quiet intel_iommu=on video=efifb:off&quot;</span> </span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2015-1590035456671.png\" alt=\"title\"></p>\n<p>执行 <code>update-grub</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2016-1590035511541.png\" alt=\"title\"></p>\n<p>立即更新 grub</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2017-1590035521808.png\" alt=\"title\"></p>\n<ul>\n<li>找到文件 <code>/etc/modules</code>（如果系统没有此文件，则自己建立一个）</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2018-1590035572512.png\" alt=\"title\"></p>\n<p>加上以下代码，每个一行：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">Vfio</span><br><span class=\"line\">vfio_iommu_type1</span><br><span class=\"line\">vfio_pci</span><br><span class=\"line\">vfio_virqfd</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2019-1590035663580.png\" alt=\"title\"></p>\n<ul>\n<li>建立驱动黑名单，依次输入以下命令：</li>\n</ul>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;blacklist snd_hda_intel&quot;</span>&gt;&gt; /etc/modprobe.d/pve-blacklist.conf</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;blacklist snd_hda_codec_hdmi&quot;</span>&gt;&gt; /etc/modprobe.d/pve-blacklist.conf</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;blacklist i915&quot;</span>&gt;&gt; /etc/modprobe.d/pve-blacklist.confupdate-initramfs –u</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2020-1590035762619.png\" alt=\"title\"></p>\n<ul>\n<li>GPU 信息确认：<br>输入命令 <code>lspci</code> ，确定核显编号，一般集显是 <code>00:02</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2021-1590035874624.png\" alt=\"title\"></p>\n<p>再输入命令 <code>lspci -n -s 00:02</code>  得到 <code>vendor IDs</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2022-1590037422736.png\" alt=\"title\"></p>\n<p>把集显指定到 VFIO 模块</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;options vfio-pci ids=8086:1616&quot;</span> &gt; /etc/modprobe.d/vfio.conf </span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2023-1590037450012.png\" alt=\"title\"></p>\n<h1 id=\"创建-Win10-虚拟机\"><a href=\"#创建-Win10-虚拟机\" class=\"headerlink\" title=\"创建 Win10 虚拟机\"></a>创建 Win10 虚拟机</h1><h2 id=\"下载-win10-的-iso-包；\"><a href=\"#下载-win10-的-iso-包；\" class=\"headerlink\" title=\"下载 win10 的 iso 包；\"></a>下载 win10 的 iso 包；</h2><p>我相信你一定有，就是没有你也能找得到；</p>\n<h2 id=\"下载-virtio-win-的-iso-驱动包；\"><a href=\"#下载-virtio-win-的-iso-驱动包；\" class=\"headerlink\" title=\"下载 virtio-win 的 iso 驱动包；\"></a>下载 virtio-win 的 iso 驱动包；</h2><p>下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9mZWRvcmFwZW9wbGUub3JnL2dyb3Vwcy92aXJ0L3ZpcnRpby13aW4vZGlyZWN0LWRvd25sb2Fkcy9hcmNoaXZlLXZpcnRpby8=\">https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/archive-virtio/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>【注意】：</p>\n<blockquote>\n<p>建议下日期最新的版本</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2024-1590037534614.png\" alt=\"title\"></p>\n<h2 id=\"上传ISO文件\"><a href=\"#上传ISO文件\" class=\"headerlink\" title=\"上传ISO文件\"></a>上传ISO文件</h2><p>上述的 iso 包都上传到下图目录中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2025-1590037579769.png\" alt=\"title\"></p>\n<h2 id=\"设置虚拟机参数\"><a href=\"#设置虚拟机参数\" class=\"headerlink\" title=\"设置虚拟机参数\"></a>设置虚拟机参数</h2><p>参数设置不同的机器是不一样的，需要根据不同的机器进行验证；</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2026-1590037624180.png\" alt=\"title\"></p>\n<p>【注意】：以下说法不一定准确，需要进一步验证：</p>\n<blockquote>\n<p>1、处理器需要为 HOST 模式；<br>2、Win10 系统要放在 ide0，否则有可能不会启动；<br>3、机器要选 q35，据说 PCI-e 的性能更好；<br>4、网上都说装 win10 时 BIOS 要选 OVMF（UEFI），但在我的机器上就是死活起不来；<br>5、显示选默认就可以，但是一定要分显存；<br>6、安装 win10 过程中，如果找不到磁盘，可以在 virtio-win 的 ISO 上找 virscsi 驱动；<br>7、安装完成后，检查【设备管理器】中的驱动情况，除显卡外其他都可以用 virtio-win 的 ISO<br>8、显卡可以直接下载对应版本的集显驱动；</p>\n</blockquote>\n<h2 id=\"连接win10虚拟机\"><a href=\"#连接win10虚拟机\" class=\"headerlink\" title=\"连接win10虚拟机\"></a>连接win10虚拟机</h2><ul>\n<li>1、虚拟机安装完成后，建议启用远程桌面，配置 RDP 访问；</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2027-1590037678865.png\" alt=\"title\"></p>\n<ul>\n<li>2、修改/etc/pve/qemu-server/100.conf（Win10 在 PVE 顺序是 100）</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2028-1590037714502.png\" alt=\"title\"></p>\n<p>输入：<code>vi /etc/pve/qemu-server/100.conf</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2029-1590037773452.png\" alt=\"title\"></p>\n<p>在第一行插入：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">args: -device vfio-pci,host=00:02.0,addr=0x18,x-igd-opregion=on</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2030-1590037807483.png\" alt=\"title\"></p>\n<p>【注意】：</p>\n<blockquote>\n<p>1、据说这一步骤是直通核显 GPU 的关键步骤；<br>2、需要注意的是：host=00:02.0这个 00:02.0 需要与前面 lspic 显示的核显编号对应上；<br>3、PVE 主机的 HDMI 接口接到显示器；<br>4、当 win10 认到双显示器时，改为复制模式；</p>\n</blockquote>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>接下来就可以安装显卡驱动愉快的玩耍了。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>PVE的安装，中文手册及GPU独显核显直通、万兆内网的那些事<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9rb29sc2hhcmUuY24vdGhyZWFkLTE1ODkzOS0xLTEuaHRtbA==\">https://koolshare.cn/thread-158939-1-1.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>PVE直通核显搭建虚拟Win10 HTPC避坑指南<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuMTBiZXN0cy5jb20vd2luMTAtaHRwYy1vbi1wdmUv\">https://www.10bests.com/win10-htpc-on-pve/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["PVE","显卡直通","GPU"]},{"title":"将 Draw.io 集成到 VS Code","url":"/2020/05/17/%E5%B0%86%20Draw.io%20%E9%9B%86%E6%88%90%E5%88%B0%20VS%20Code/","content":"<p>之前我们在《<a href=\"https://laosu.ml/2020/05/10/%E5%85%8D%E8%B4%B9%E5%9C%A8%E7%BA%BF%E6%B5%81%E7%A8%8B%E5%9B%BEDraw.io/\">免费在线流程图Draw.io</a>》中介绍过Draw.io，今天要介绍的插件 <code>Draw.io Integration</code> 可以将 <code>Draw.io</code> 集成到 <code>VS Code</code> 中。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"从网页安装\"><a href=\"#从网页安装\" class=\"headerlink\" title=\"从网页安装\"></a>从网页安装</h2><ul>\n<li>在浏览器中输入 <code>https://marketplace.visualstudio.com/items?itemName=hediet.vscode-drawio</code></li>\n<li>点击 <code>install</code></li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/17/1589700492041-1589700492044.png\" alt=\"网页安装\"></p>\n<ul>\n<li>点击 <code>打开Visual Studio Code</code></li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/17/1589700542017-1589700542019.png\" alt=\"打开应用\"></p>\n<ul>\n<li>点击 <code>安装</code></li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/17/1589700680356-1589700680363.png\" alt=\"开始安装\"></p>\n<h2 id=\"在VS-Code中安装\"><a href=\"#在VS-Code中安装\" class=\"headerlink\" title=\"在VS Code中安装\"></a>在VS Code中安装</h2><ul>\n<li>从VS Code左侧进入【扩展】，或用快捷键 <code>ctrl+shift+x</code></li>\n<li>搜索draw，第一个 <code>Draw.io Integration</code> 就是。</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/17/1589701398663-1589701398667.png\" alt=\"title\"></p>\n<h1 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h1><ul>\n<li>在【扩展】中找到 <code>Draw.io Integration</code></li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/17/1589700813314-1589700813318.png\" alt=\"扩展设置菜单\"></p>\n<ul>\n<li>进入【扩展设置】</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/17/1589700910625-1589700910630.png\" alt=\"设置界面\"></p>\n<ul>\n<li><p>默认情况下使用 <code>Draw.io</code> 的脱机版本</p>\n</li>\n<li><p>支持更换主题</p>\n</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/17/1589703506111-1589703506113.png\" alt=\"title\"></p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><h2 id=\"新建\"><a href=\"#新建\" class=\"headerlink\" title=\"新建\"></a>新建</h2><ul>\n<li>只要新建扩展名为 <code>.drawio</code>、<code>.dio</code> 、<code>.drawio.svg</code> 文件即可进入编辑 </li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/17/demo-1589701737138.gif\" alt=\"编辑文档\"></p>\n<h2 id=\"编辑\"><a href=\"#编辑\" class=\"headerlink\" title=\"编辑\"></a>编辑</h2><ul>\n<li>支持同一个 <code>*.drawio</code> 文件同时用 <code>Draw.io</code> 编辑器和 <code>xml</code> 编辑器打开，不仅是同步的，而且可以根据需要在编辑器间进行切换。</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/17/drawio-xml-1589702652016.gif\" alt=\"同时编辑\"></p>\n<h2 id=\"保存\"><a href=\"#保存\" class=\"headerlink\" title=\"保存\"></a>保存</h2><ul>\n<li>要将 Draw.io 文件从转换 <code>.drawio</code> 为 <code>.drawio.svg</code> ，请使用 <code>文件: 另存为</code> 命令</li>\n</ul>\n<h1 id=\"后续\"><a href=\"#后续\" class=\"headerlink\" title=\"后续\"></a>后续</h1><p>直接编辑 <code>.drawio.png</code> 文件的功能尚未发布，原因是使用了不稳定的VS Code API。</p>\n<p><img src=\"https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/17/drawio-png-1589702313563.gif\" alt=\"未发布的新功能\"></p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>想想以后可以直接在VS Code中绘制流程图、脑图、UML图，是不是很拉风~~</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>vscode-drawio代码<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hlZGlldC92c2NvZGUtZHJhd2lv\">https://github.com/hediet/vscode-drawio<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>vscode插件drawio安装主页<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXJrZXRwbGFjZS52aXN1YWxzdHVkaW8uY29tL2l0ZW1zP2l0ZW1OYW1lPWhlZGlldC52c2NvZGUtZHJhd2lv\">https://marketplace.visualstudio.com/items?itemName=hediet.vscode-drawio<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["draw.io","VS Code"]},{"title":"百兆升千兆家庭组网方案","url":"/2020/05/16/%E7%99%BE%E5%85%86%E5%8D%87%E5%8D%83%E5%85%86%E5%AE%B6%E5%BA%AD%E7%BB%84%E7%BD%91%E6%96%B9%E6%A1%88/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>下午接到中国电信的客服电话，让我把带宽从100M升到300M，每月好像只要增加20元，这才想起多年前墙里埋的还是五类线，难怪之前玩客云到顶了也就8M左右的下载速度，今天我们先从理论上来研究下怎么把百兆的家庭网络升级成千兆的家庭网络。</p>\n<h1 id=\"家庭网络的组成\"><a href=\"#家庭网络的组成\" class=\"headerlink\" title=\"家庭网络的组成\"></a>家庭网络的组成</h1><p>家庭网络涉及到的主要组成包括：光猫、路由器、网线、网卡，一般来说光猫是运营商提供的，而路由器和网线则是需要我们自己准备的。当然有些套餐也会提供路由器，但对路由器的性能不要有太大的期待。</p>\n<h2 id=\"光猫\"><a href=\"#光猫\" class=\"headerlink\" title=\"光猫\"></a>光猫</h2><p>运营商会根据你的套餐进行更换，我印象中已经更换过3次，从中兴的到华为的，现在用的是Nokia的，对了现在已经改叫电信SDN网关了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/16/1589633647537-1589633647539.png\" alt=\"title\"></p>\n<blockquote>\n<p><strong>什么是SDN？</strong><br>軟體定義網路 (Software-defined networking)是一種新型網路架構。它利用OpenFlow協定將路由器的控制平面從資料平面中分離，改以軟體方式實作。該架構可使網路管理員在不更動硬體裝置的前提下，以中央控制方式用程式重新規劃網路，為控制網路流量提供了新方案，也為核心網路和應用創新提供了良好平台。 【維基百科】</p>\n</blockquote>\n<h2 id=\"网线\"><a href=\"#网线\" class=\"headerlink\" title=\"网线\"></a>网线</h2><p>最好的办法是在装修的时候就预先铺设好，但是技术的发展飞快，就像我这样，虽然预埋了能支持100Mbps的五类线，而当时的ADSL才几兆而已，也才几年功夫现在已经不够用了。</p>\n<p>理论上超五类（CAT5e）的传输速率可达到250Mbps，六类线（CAT6）的传输速率可达到1Gbps，七类线（CAT7）的传输速率可达10Gbps，但从网上很多人的测试效果看，超五类（CAT5e）不仅能上千兆，万兆似乎也不是没可能。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/16/1589631764532-1589631764534.png\" alt=\"title\"></p>\n<p>（图片来自： <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWN3aWZpLm5ldC82MTkwLmh0bWw=\">https://www.acwifi.net/6190.html<i class=\"fa fa-external-link-alt\"></i></span> ）</p>\n<p>当然你不差钱，也可以直接上八类线。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/16/1589632645267-1589632645271.png\" alt=\"title\"></p>\n<p>（图片来自： 淘宝 ）</p>\n<p>现在这种情况下重新布线显然不可能，但是如果走明线又实在太难看，所以暂时不考虑。</p>\n<h2 id=\"路由器\"><a href=\"#路由器\" class=\"headerlink\" title=\"路由器\"></a>路由器</h2><p>从20M升到100M时，电信送了个千兆的路由，还算比较稳定，但是一个无线路由覆盖不到房间的边边角角，所以在淘宝上又淘了2个二手的，组成了一个低成本的无缝漫游方案。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/16/1589634936336-1589634936339.png\" alt=\"title\"></p>\n<p>因这货支持黑科技802.11k/v/r协议，解决了 AP 切换的问题，但房间之间的拷贝速度始终受到五类网线的限制。</p>\n<p>在没有NAS以前，这都不是事，但是现在必须要考虑了。</p>\n<h2 id=\"网卡\"><a href=\"#网卡\" class=\"headerlink\" title=\"网卡\"></a>网卡</h2><p>网卡现在一般都是千兆的，但是无线网卡就未必了，这个看需要吧。</p>\n<h1 id=\"无线解决方案\"><a href=\"#无线解决方案\" class=\"headerlink\" title=\"无线解决方案\"></a>无线解决方案</h1><h2 id=\"使用无线桥接\"><a href=\"#使用无线桥接\" class=\"headerlink\" title=\"使用无线桥接\"></a>使用无线桥接</h2><p>最先想到的办法就是WDS桥接，一般来说桥接最好是同一品牌的，但从个人经验看，无线网桥接并不稳定，丢包比较多，这是最大的问题。</p>\n<blockquote>\n<p><strong>什么是WDS？</strong><br>WDS是无线分布式系统（Wireless Distribution System）的英文缩写，無線分散系統指的是一個能讓無線區域網路中的存取點透過無線方式互相連結的一套系統。它可以讓多個存取點無需傳統的有線骨幹連接需求即可延伸一個無線網路。相較於其他解決方案，WDS值得注意的優點是它在各個存取點傳遞中仍能儲存客戶端的MAC位址，每個存取點可以為三個角色之一：主要、中繼或是遠端基地台： 【維基百科】</p>\n</blockquote>\n<h2 id=\"使用Mesh路由器\"><a href=\"#使用Mesh路由器\" class=\"headerlink\" title=\"使用Mesh路由器\"></a>使用Mesh路由器</h2><p>很早就开始关注，但是价格太喜人了，尤其是WIFI 6 Mesh路由，所有产品中个人觉得<strong>华为AX3 Pro WiFi 6+</strong> 最值得关注，关注的理由只有一个，那就是便宜，但是目前还没看到用这款产品Mesh组网的案例，也许是因为上市时间短的缘故吧。</p>\n<blockquote>\n<p><strong>什么是WIFI 6？</strong><br>WIFI 6 其实就是 802.11ax，也就是 802.11ac 的升级版标准。WiFi 6 又被称为 AX WiFi 或<br> 802.11ax WiFi。</p>\n</blockquote>\n<blockquote>\n<p><strong>什么是Mesh路由器？</strong><br>Mesh路由器除了具有传统的无线路由器的网关、中继功能外，还具有支持 Mesh 网络互连的路由功能，可以通过无线多跳通信，以低得多的发射功率获得同样的无线覆盖范围。 客户端 Mesh 结构是由<br> Mesh 用户端之间互连构成一个小型对等通信网络，在用户设备间提供点到点的服务。</p>\n</blockquote>\n<h2 id=\"使用电力猫\"><a href=\"#使用电力猫\" class=\"headerlink\" title=\"使用电力猫\"></a>使用电力猫</h2><p>这个玩意一直没用过，据说容易受大电器设备的干扰，看着看着手一滑在咸鱼上买了一对 Netgear PLP1200S 有线版，等到手了测测看效果如何。</p>\n<blockquote>\n<p><strong>什么是电力猫？</strong><br>电力猫全称为电力猫路由器，是通过电线传输网络信号的。 电力猫一套为2只，一主为路由，一扩展器。 电力猫用的传输技术是正交频分复用(OFDM)，简单点说就是把互联网信号和电力信号叠加到一起。 主路由器插上电，接上网线，此时主路由已经把网络信号传输到了电信中。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/16/1589642760585-1589642760588.png\" alt=\"title\"></p>\n<p>（图片来自： 淘宝 ）</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><ul>\n<li>家庭网络如果要升级到千兆，网线，路由器，网卡全部都需要升级到千兆。任何一个环节没跟上，都会影响到网络的速度。</li>\n<li>有线永远比无线稳定，没办法的情况下，无线也是一种选择。</li>\n</ul>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>也许是性价比最高的家用路由无缝漫游方案<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYnMubmdhLmNuL3JlYWQucGhwP3RpZD0xMzAxNTI0MiZyYW5kPTczMg==\">https://bbs.nga.cn/read.php?tid=13015242&amp;rand=732<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>可能是最便宜的WiFi无缝漫游方案<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2FrbXJkZDdrLw==\">https://post.smzdm.com/p/akmrdd7k/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>华为路由AX3 Pro评测：Wi-Fi 6+加持 300元价位最超值<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub3RlYm9vay5wY29ubGluZS5jb20uY24vMTMzOS8xMzM5OTUwNC5odG1s\">https://notebook.pconline.com.cn/1339/13399504.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>WiFi6 路由器推荐汇总<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xMDY3MzE4NjQ=\">https://zhuanlan.zhihu.com/p/106731864<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>地上最强电力猫——NETGEAR 网件 PLW1010 千兆电力猫 使用体验 兼谈家庭组网<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wLzQzNjQwOS8=\">https://post.smzdm.com/p/436409/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["路由器","千兆","电力猫","Mesh路由","wifi6","光猫","WDS"]},{"title":"在Coding上部署Hexo并实现和Github双线访问","url":"/2020/05/12/%E5%9C%A8Coding%E4%B8%8A%E9%83%A8%E7%BD%B2Hexo%E5%B9%B6%E5%AE%9E%E7%8E%B0%E5%92%8CGithub%E5%8F%8C%E7%BA%BF%E8%AE%BF%E9%97%AE/","content":"<p>之前在Netlify上折腾过一次，但是结果不理想，原本以为Netlify自带CDN，会对速度的提升带来帮助，但是结果却让人大跌眼镜。</p>\n<p>虽然上一次的折腾失败了，详见《<a href=\"https://laosu.ml/2020/05/06/%E5%9C%A8Netlify%E4%B8%8A%E9%83%A8%E7%BD%B2Hexo/\">在Netlify上部署Hexo</a>》，但并没有放弃，一直在寻找替代的方案，最终不负众望找到了Coding，因为官网改版较大，参考文档中的一些过程需要重新说明，避免走弯路。</p>\n<h1 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h1><ul>\n<li>首先是<strong>注册团队</strong></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/12/1589285768968-1589285768971.png\" alt=\"title\"></p>\n<ul>\n<li>登录方式有点特别，先输入团队，再用账号、密码登录</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/12/1589285835067-1589285835070.png\" alt=\"title\"></p>\n<ul>\n<li>接下来就可以新建项目了</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/12/1589285945328-1589285945329.png\" alt=\"title\"></p>\n<h1 id=\"配置SSH公钥\"><a href=\"#配置SSH公钥\" class=\"headerlink\" title=\"配置SSH公钥\"></a>配置SSH公钥</h1><ul>\n<li>点右上角的头像，选择<strong>个人设置</strong></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/12/1589286100597-1589286100602.png\" alt=\"title\"></p>\n<ul>\n<li>在左边菜单选择 <strong>SSH公钥</strong>，配置方法和Github是一样的，具体如何生成秘钥，如何配置可以看看参考文档《<strong>超详细Hexo+Github博客搭建小白教程</strong>》，里面的介绍非常详细。</li>\n</ul>\n<h1 id=\"配置-config-yml\"><a href=\"#配置-config-yml\" class=\"headerlink\" title=\"配置 _config.yml\"></a>配置 _config.yml</h1><ul>\n<li>打开你本地博客根目录的 _config.yml 文件，找到 deployment</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Deployment</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: </span><br><span class=\"line\">    github: https://github.com/wbsu2003/wbsu2003.github.io.git</span><br><span class=\"line\">    coding: git@e.coding.net:laosu/blog/blog.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"代码部署\"><a href=\"#代码部署\" class=\"headerlink\" title=\"代码部署\"></a>代码部署</h1><ul>\n<li>添加完成后先执行命令 <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo clean </span><br><span class=\"line\">hexo g -d </span><br></pre></td></tr></table></figure></li>\n<li>将博客双线部署到 Coding Pages 和 GitHub Pages，如下图所示表示部署成功：</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/12/1589286884028-1589286884034.png\" alt=\"title\"></p>\n<h1 id=\"开启-Coding-Pages\"><a href=\"#开启-Coding-Pages\" class=\"headerlink\" title=\"开启 Coding Pages\"></a>开启 Coding Pages</h1><p>这一步折腾了半天，后来才发现，新建的项目默认项目的<strong>持续部署</strong>是不打开的，而我们需要的Coding Page（现在叫<strong>静态页面</strong>）就在这里面。</p>\n<ul>\n<li>在我们新建的项目界面，找到左下角的<strong>项目设置</strong>，并进入<strong>功能开关</strong>，打开<strong>持续部署</strong></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/12/1589287172069-1589287172071.png\" alt=\"title\"></p>\n<ul>\n<li>再次回到项目界面，左边菜单就会多出<strong>持续集成</strong>，进入后会看到<strong>静态页面</strong></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/12/1589287281291-1589287281293.png\" alt=\"title\"></p>\n<ul>\n<li>进入<strong>静态页面</strong>，会看到生成的默认访问地址，现在拿到的域名是 <span class=\"exturl\" data-url=\"aHR0cHM6Ly94eHh4eC5jb2RpbmctcGFnZXMuY29tLw==\">https://xxxxx.coding-pages.com<i class=\"fa fa-external-link-alt\"></i></span> 这样的格式。</li>\n</ul>\n<h1 id=\"绑定自定义域名\"><a href=\"#绑定自定义域名\" class=\"headerlink\" title=\"绑定自定义域名\"></a>绑定自定义域名</h1><ul>\n<li>从右上角的<strong>设置</strong>进入</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/12/1589287543769-1589287543774.png\" alt=\"title\"></p>\n<ul>\n<li>找到<strong>自定义域名</strong>，最多可以绑5个自定义域名</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/12/1589287863082-1589287863083.png\" alt=\"title\"></p>\n<h1 id=\"设置双线访问\"><a href=\"#设置双线访问\" class=\"headerlink\" title=\"设置双线访问\"></a>设置双线访问</h1><p>用的dnspod免费域名解析，首先在你的域名 DNS 设置中添加一条 CNAME 记录指向 xxxxx.coding-pages.com，解析路线选择** 默认**，将 GitHub 的解析路线改为 <strong>境外</strong>，这样境外访问就会走 GitHub，境内就会走 Coding</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/12/1589288920873-1589288920878.png\" alt=\"title\"></p>\n<h1 id=\"证书问题\"><a href=\"#证书问题\" class=\"headerlink\" title=\"证书问题\"></a>证书问题</h1><p>相信大家前面注意到， <strong>自定义域名</strong> 中首选域名的证书状态是<strong>申请失败</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/12/1589289282375-1589289282377.png\" alt=\"title\"></p>\n<p>这是因为我们之前把域名绑定到了 GitHub Pages 并开启了 HTTPS，在验证域名所有权时会定位到 Github Pages 的主机上导致 SSL 证书申请失败，所以需要先暂停dnspod中对 GitHub Pages 的解析</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/12/1589289222588-1589289222590.png\" alt=\"title\"></p>\n<p>然后再次申请，等一会儿就会显示成功了！</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/12/1589289393822-1589289393824.png\" alt=\"title\"></p>\n<h1 id=\"测速\"><a href=\"#测速\" class=\"headerlink\" title=\"测速\"></a>测速</h1><p>因为laosu.ml绑了双线，所以这次测速主要对比Netlify和Coding，对应的域名分别是laosu.tk和laosu.gq</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/12/1589289958694-1589289958697.png\" alt=\"title\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/12/1589289987235-1589289987236.png\" alt=\"title\"></p>\n<p>虽然还是有些地方依然不理想，但是相比而言已经好了很多了。</p>\n<h1 id=\"带来的问题\"><a href=\"#带来的问题\" class=\"headerlink\" title=\"带来的问题\"></a>带来的问题</h1><p>因为是双线，所以虽然访问的都是laosu.ml，但是实际上是不同的网站，所以在计数上会存在不一致。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Coding官网<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RpbmcubmV0Lw==\">https://coding.net/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Hexo 双线部署到 Coding Pages 和 GitHub Pages 并实现全站 HTTPS<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaXRyaHguY29tLzIwMTkvMDkvMTYvQTQ3LWhleG8tZGVwbG95ZWQtdG8tZ2l0aHViLWFuZC1jb2Rpbmcv\">https://www.itrhx.com/2019/09/16/A47-hexo-deployed-to-github-and-coding/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>超详细Hexo+Github博客搭建小白教程<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zNTY2ODIzNw==\">https://zhuanlan.zhihu.com/p/35668237<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["Hexo","blog","Coding","Github"]},{"title":"自带过滤功能的Hexo首页生成器插件","url":"/2020/05/10/%E8%87%AA%E5%B8%A6%E8%BF%87%E6%BB%A4%E5%8A%9F%E8%83%BD%E7%9A%84Hexo%E9%A6%96%E9%A1%B5%E7%94%9F%E6%88%90%E5%99%A8%E6%8F%92%E4%BB%B6/","content":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>带过滤功能的Hexo首页生成器插件。在官方的首页生成器基础上添加了过滤指定分类/标签的功能。比如，在首页只显示指定分类下面的文章列表。 除此之外，它还在指定的目录下生成指定类型的文章，比如在web目录下生成Web相关的文章。</p>\n<h1 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h1><p>先卸载官方的插件，不然会引起一些冲突。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>在博客目录下打开终端（windows下cmd模式），输入以下命令：</p>\n<blockquote>\n<p>$ npm install hexo-generator-index2 –save<br>$ npm uninstall hexo-generator-index –save</p>\n</blockquote>\n<h1 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h1><p>打开hexo博客根目录下的<code>_config.yml</code>，添加以下内容，过滤分类或者标签为hide的文章。</p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># index2 generator是否包含官方的hexo-generator-index，默认true（包含）</span></span><br><span class=\"line\">index2_include_index: true # defult is true</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置index2 generator，可以是数组或对象</span></span><br><span class=\"line\">index2_generator:</span><br><span class=\"line\">  per_page: 10</span><br><span class=\"line\">  order_by: -date # 按发布时间排序</span><br><span class=\"line\">  exclude:</span><br><span class=\"line\">    - tag  hide # 不包含标签为hide的文章</span><br><span class=\"line\">    - category hide # 不包含分类为hide的文章</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"测试结论\"><a href=\"#测试结论\" class=\"headerlink\" title=\"测试结论\"></a>测试结论</h1><p>确实也就只能隐藏首页，但是你可以通过tags标签中的hide来找到所有隐藏的文档。所以实用价值不大。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>hexo-generator-index官网<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvLWdlbmVyYXRvci1pbmRleA==\">https://github.com/hexojs/hexo-generator-index<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>hexo-generator-index2官网<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0phbWxpbmcvaGV4by1nZW5lcmF0b3ItaW5kZXgy\">https://github.com/Jamling/hexo-generator-index2<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["hexo"]},{"title":"适合小团队的Kanboard项目管理软件","url":"/2020/05/10/%E9%80%82%E5%90%88%E5%B0%8F%E5%9B%A2%E9%98%9F%E7%9A%84Kanboard%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E8%BD%AF%E4%BB%B6/","content":"<p><strong>什么是kanban？</strong></p>\n<blockquote>\n<p>看板管理(Kanban)，常作「Kanban管理」，是豐田生產模式中的重要概念，指為了達到及時生產方式控制現場生產流程的工具。及時生產方式中的拉式生產系統可以使信息的流程縮短，並配合定量、固定裝貨容器等方式，而使生產過程中的物料流動順暢。 在看板標示系統中常將塑料或紙製成薄板，將產品名稱及數量寫於其上，故此得名。 【維基百科】</p>\n</blockquote>\n<p><strong>什么是Kanboard？</strong></p>\n<blockquote>\n<p>Kanboard专注于看板管理的项目管理软件。</p>\n</blockquote>\n<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>Kanboard是一个php的开源看板web程序，非常适合异地办公的小型团队使用。</p>\n<h1 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h1><p>没有用代码部署方式，而是继续采用了Docker部署的方式。</p>\n<ul>\n<li>在docker注册表中搜索“kanboard”，第一个即为官方提供的image文件。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/05/10/1589094844528-1589094844529.png\" alt=\"title\"></p>\n<ul>\n<li>双击开始安装，选“latest”</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/05/10/1589094926401-1589094926404.png\" alt=\"title\"></p>\n<h1 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h1><ul>\n<li>先建好需要用的文件夹</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/05/10/1589095223433-1589095223434.png\" alt=\"title\"></p>\n<ul>\n<li>进【高级设置】，【卷】的设置</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/10/1589095278692-1589095278694.png\" alt=\"title\"></p>\n<ul>\n<li>【端口】的设置，只要避免冲突就可以</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/05/10/1589095325676-1589095325679.png\" alt=\"title\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 http://群晖IP:9080，默认的账号/密码是：admin/admin</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/05/10/1589095579595-1589095579597.png\" alt=\"title\"></p>\n<p>Kanboard 是一个简单的可视化任务板 Web 应用程序，它能使你的项目管理更加简单有效。直观清晰的任务概览看板是视觉上了解项目当前状态的最佳方法。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/05/10/1589096078814-1589096078818.png\" alt=\"title\"></p>\n<p>Kanboard还能通过安装一些plugins扩展来扩展Kanboard的功能。插件下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9rYW5ib2FyZC5vcmcvcGx1Z2lucy5odG1s\">https://kanboard.org/plugins.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/05/10/1589096806531-1589096806532.png\" alt=\"title\"></p>\n<p>目前Kanboard已经支持超过30种语言，其中包括了简体中文，基本上不需要培训就会使用。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Kanboard官网<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9rYW5ib2FyZC5vcmcv\">https://kanboard.org/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Kanboard代码<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2thbmJvYXJkL2thbmJvYXJk\">https://github.com/kanboard/kanboard<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>KANBOARD：免费开源项目管理工具<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaGVzaHVpLm1lL2RvY3Mva2FuYm9hcmQtcHJvamVjdC1tYW5hZ2VtZW50\">https://sheshui.me/docs/kanboard-project-management<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>open source软件：kanboard介绍(项目看板）<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p1bm1pbmdfemhhby9hcnRpY2xlL2RldGFpbHMvOTAyOTUzNTQ=\">https://blog.csdn.net/junming_zhao/article/details/90295354<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","看板","项目管理软件","Kanboard","kanban"]},{"title":"免费在线流程图Draw.io","url":"/2020/05/10/%E5%85%8D%E8%B4%B9%E5%9C%A8%E7%BA%BF%E6%B5%81%E7%A8%8B%E5%9B%BEDraw.io/","content":"<p>除了office外，我们用的比较多的办公软件应该就是visio了，所以除了在线office外，是否也有免费的在线的visio呢？</p>\n<p>在研究了ProcessOn（ <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucHJvY2Vzc29uLmNvbS8=\">https://www.processon.com/<i class=\"fa fa-external-link-alt\"></i></span> ）、Freedgo Design（ <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZnJlZWRnby5jb20v\">https://www.freedgo.com/<i class=\"fa fa-external-link-alt\"></i></span> ）、bullmind（ <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYnVsbG1pbmQuY29tLw==\">https://www.bullmind.com/<i class=\"fa fa-external-link-alt\"></i></span> ）、Draw.io（ <span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcHAuZGlhZ3JhbXMubmV0Lw==\">https://app.diagrams.net/<i class=\"fa fa-external-link-alt\"></i></span> ）等线上绘图软件之后，我发现Draw.io不仅功能强大，没有保存文件数量限制，内置的图库还很丰富，源代码开源能够本地部署，非常厚道，因此成为我们的首选。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><ul>\n<li>在docker注册表中搜索“onlyoffice”，第一个即为官方提供的image文件。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/05/10/1589088450552-1589088450553.png\" alt=\"title\"></p>\n<ul>\n<li>双击开始安装，选“latest”</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/05/10/1589088530648-1589088530649.png\" alt=\"title\"></p>\n<h1 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h1><ul>\n<li>习惯性的限制下资源的使用</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/05/10/1589088826340-1589088826343.png\" alt=\"title\"></p>\n<ul>\n<li><p>【卷】不用设置</p>\n</li>\n<li><p>【端口】的设置，只要避免冲突就可以</p>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/05/10/1589088895467-1589088895468.png\" alt=\"title\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 http://群晖IP:8081</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/05/10/1589089216157-1589089216160.png\" alt=\"title\"></p>\n<p>显示更多网盘</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/05/10/1589089708915-1589089708919.png\" alt=\"title\"></p>\n<p>如果你不需要网盘，可以在浏览器中输入 http://群晖IP:8081/?offline=1</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/05/10/1589089264415-1589089264419.png\" alt=\"title\"></p>\n<h1 id=\"新建\"><a href=\"#新建\" class=\"headerlink\" title=\"新建\"></a>新建</h1><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/05/10/1589089603439-1589089603442.png\" alt=\"title\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/05/10/1589089584334-1589089584335.png\" alt=\"title\"></p>\n<h1 id=\"编辑\"><a href=\"#编辑\" class=\"headerlink\" title=\"编辑\"></a>编辑</h1><p>来画个网络图</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/05/10/1589089844093-1589089844095.png\" alt=\"title\"></p>\n<p>支持的图库非常丰富</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/05/10/1589089939950-1589089939952.png\" alt=\"title\"></p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><ul>\n<li>免注册</li>\n<li>支持中文</li>\n<li>丰富的内置图库</li>\n<li>多种存储格式</li>\n<li>支持云盘存储</li>\n<li>有独立的桌面客户端，支持Windows、Mac OS、Linux</li>\n</ul>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Draw.io官网<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcHAuZGlhZ3JhbXMubmV0Lw==\">https://app.diagrams.net/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Draw.io代码<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2pncmFwaA==\">https://github.com/jgraph<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","云盘","visio","draw.io"]},{"title":"在群晖上实现在线Office文档编辑","url":"/2020/05/08/%E5%9C%A8%E7%BE%A4%E6%99%96%E4%B8%8A%E5%AE%9E%E7%8E%B0%E5%9C%A8%E7%BA%BFOffice%E6%96%87%E6%A1%A3%E7%BC%96%E8%BE%91/","content":"<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><ul>\n<li>在docker注册表中搜索“onlyoffice”，第一个即为官方提供的image文件。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/08/1-1588925796082.png\" alt=\"title\"></p>\n<ul>\n<li>双击开始安装，选“latest”</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/08/2-1588925921227.png\" alt=\"title\"></p>\n<ul>\n<li>下载速度还可以</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/08/3-1588926050168.png\" alt=\"title\"></p>\n<h1 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h1><ul>\n<li>先建好需要用的文件夹</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/08/4-1588926631369.png\" alt=\"title\"></p>\n<ul>\n<li>习惯性的限制下资源的使用</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/08/4-1588926371568.png\" alt=\"title\"></p>\n<ul>\n<li>进【高级设置】，【卷】的设置</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/08/6-1588929123790.png\" alt=\"title\"></p>\n<ul>\n<li>【端口】的设置</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/08/7-1588929135279.png\" alt=\"title\"></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>在浏览器中输入 http://群晖IP:6080，当你看到下面这个界面，说明已经运行正常了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/08/8-1588929147086.png\" alt=\"title\"></p>\n<h1 id=\"集成\"><a href=\"#集成\" class=\"headerlink\" title=\"集成\"></a>集成</h1><p>接下来你可以继续在Docker中安装communityserver来搭建门户网站，将群晖变身成为集成了文档、电子邮件、事件、任务和客户关系管理工具的开源在线办公套件。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/08/83cbe-007rd8E4ly1g1ee0e0vjgj30mo0fsjxd-1588930691663.jpg\" alt=\"title\"><br>（图片来自：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWl5dWUub25lL2FyY2hpdmVzLzQ1NS5odG1sJUVGJUJDJTg5\">https://baiyue.one/archives/455.html）<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>也可以搭配云盘服务，比如nextcloud、owncloud、seafile、kodexplorer，实现office文档的在线预览和编辑。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/08/2500x1000-win-1588930210849.jpg\" alt=\"title\"></p>\n<p>onlyoffice提供的在线创建，编辑和协作业务文档的方式，对于协同办公还是很有用的。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p> 群晖在线编辑文档方案-onlyoffice<br>地址：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5nZWJpMS5jbi90aHJlYWQtMjc4OTQ4LTEtMS5odG1s\">http://www.gebi1.cn/thread-278948-1-1.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>折腾NAS 篇四：群晖Docker安装nextcloud私有云，以及onlyoffice、流程图和思维导图插件<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wLzczNTg3OS8=\">https://post.smzdm.com/p/735879/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Docker快速搭建onlyoffice开源在线办公套件<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWl5dWUub25lL2FyY2hpdmVzLzQ1NS5odG1s\">https://baiyue.one/archives/455.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Seafile服务器手册中文版–OnlyOffice 集成<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYW51YWwtY24tb3JpZ2luLnNlYWZpbGUuY29tL2RlcGxveV9wcm8vb2ZmaWNlLXdlbi1qaWFuLXl1LWxhbi1oZS1iaWFuLWppL29ubHlfb2ZmaWNl\">https://manual-cn-origin.seafile.com/deploy_pro/office-wen-jian-yu-lan-he-bian-ji/only_office<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>使用可道云kodexplorer和ONLYOFFICE创建您的WebOffice云办公系统<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDAxMDk4Ni9hcnRpY2xlL2RldGFpbHMvODUwNTIwNTQ=\">https://blog.csdn.net/weixin_44010986/article/details/85052054<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","docker","onlyoffice","nextcloud","seafile","owncloud","kodexplorer"]},{"title":"在Netlify上部署Hexo","url":"/2020/05/06/%E5%9C%A8Netlify%E4%B8%8A%E9%83%A8%E7%BD%B2Hexo/","content":"<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>整个安装过程比较简单，仔细阅读参考文档就可。</p>\n<h1 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h1><p>在站长之家（ <span class=\"exturl\" data-url=\"aHR0cDovL3Rvb2wuY2hpbmF6LmNvbS8=\">http://tool.chinaz.com<i class=\"fa fa-external-link-alt\"></i></span> ）–&gt;【网站测速】，分别输入原生的二级域名和自定义域名进行测试。</p>\n<ul>\n<li>Github原生域名：wbsu2003.github.io</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/05/9a4c0cec7613ef0a26d15f7b8b753f6-1588685964469.png\" alt=\"title\"></p>\n<ul>\n<li>自定义域名：laosu.ml</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/05/ad4e50dc85d907733371cd9c16f4d5a-1588685562397.png\" alt=\"title\"></p>\n<ul>\n<li>Netlify原生域名：laosu.netlify.app</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/05/f65ecc7bc1fd8346db408228a161c97-1588686229553.png\" alt=\"title\"></p>\n<ul>\n<li>自定义域名：laosu.tk</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/05/56d579185980d254200090020640746-1588685618068.png\" alt=\"title\"></p>\n<h1 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h1><p>先当备用网站吧。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Github Pages访问太慢？通过Netlify免费加速<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vMzdZMzcvcC8xMjU1MTgzOS5odG1s\">https://www.cnblogs.com/37Y37/p/12551839.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>部署 Hexo 静态博客 (下) - 偶遇 Netlify, 优雅地持续部署你的博客<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaGFuZ2NoZW4ubWUvYmxvZy8yMDE4MDgxOS9kZXBsb3ktaGV4by1ibG9nLXRvLW5ldGxpZnkv\">https://changchen.me/blog/20180819/deploy-hexo-blog-to-netlify/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["Hexo","blog","Netlify"]},{"title":"复旦大学的藤月开了","url":"/2020/05/06/%E5%A4%8D%E6%97%A6%E5%A4%A7%E5%AD%A6%E7%9A%84%E8%97%A4%E6%9C%88%E5%BC%80%E4%BA%86/","content":"<p>自从去年复旦大学把藤月种下去，我就一直挺好奇的，到底开花的时候会是什么样呢？</p>\n<h1 id=\"五一节前\"><a href=\"#五一节前\" class=\"headerlink\" title=\"五一节前\"></a>五一节前</h1><p>当时路过还是一个一个的花骨朵。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/06/WechatIMG4074-1588740269573.jpeg\" alt=\"title\"></p>\n<p>但也有的已经含苞待放了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/06/WechatIMG4073-1588740436193.jpeg\" alt=\"黄色的\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/06/WechatIMG4076-1588740455075.jpeg\" alt=\"红色的\"></p>\n<h1 id=\"今天（5月6日）\"><a href=\"#今天（5月6日）\" class=\"headerlink\" title=\"今天（5月6日）\"></a>今天（5月6日）</h1><p>今天路过时发现，一小半都已经开放了，而且姹紫嫣红，分外好看。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/06/WechatIMG4082-1588740697074.jpeg\" alt=\"title\"></p>\n<p>估计等过几天都开了，会更好看。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/06/WechatIMG4071-1588740745690.jpeg\" alt=\"title\"></p>\n<p>大游行？</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/06/WechatIMG4072-1588740768724.jpeg\" alt=\"title\"></p>\n<p>甜梦？</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/06/WechatIMG4075-1588740908887.jpeg\" alt=\"title\"></p>\n<p>紫袍玉带？</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/06/WechatIMG4077-1588740948926.jpeg\" alt=\"title\"></p>\n<p>藤冰山？</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/06/WechatIMG4078-1588740989713.jpeg\" alt=\"title\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/06/WechatIMG4079-1588741007305.jpeg\" alt=\"title\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/06/WechatIMG4080-1588741031040.jpeg\" alt=\"title\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/06/WechatIMG4081-1588741064243.jpeg\" alt=\"title\"></p>\n<p>我的心？</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/06/WechatIMG4083-1588741092150.jpeg\" alt=\"title\"></p>\n<p>玛格丽特王妃？</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/06/WechatIMG4084-1588741118387.jpeg\" alt=\"title\"></p>\n<p>自由精神？</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/06/WechatIMG4085-1588741131409.jpeg\" alt=\"title\"></p>\n<p>埃格兰泰恩？塞西尔布朗纳？</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/06/WechatIMG4086-1588741145227.jpeg\" alt=\"title\"></p>\n<p>麦金？</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/06/WechatIMG4087-1588741163758.jpeg\" alt=\"title\"></p>\n<p>粉色达芬奇？</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/06/WechatIMG4088-1588741187607.jpeg\" alt=\"title\"></p>\n<p>沃勒顿老庄园？</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/06/WechatIMG4089-1588741222125.jpeg\" alt=\"title\"></p>\n<p>欢迎?</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/06/WechatIMG4090-1588741242501.jpeg\" alt=\"title\"></p>\n<p>粉团蔷薇?</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/06/WechatIMG4091-1588741276861.jpeg\" alt=\"title\"></p>\n<p>权杖之岛?</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/06/WechatIMG4092-1588741297897.jpeg\" alt=\"title\"></p>\n<p>克莱尔奥斯汀？</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/06/WechatIMG4093-1588741309981.jpeg\" alt=\"title\"></p>\n<p>藤冰山？粉妆楼？</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/06/WechatIMG4094-1588741330994.jpeg\" alt=\"title\"></p>\n<p>抓破美人脸？</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/06/WechatIMG4095-1588741354003.jpeg\" alt=\"title\"></p>\n<p>先是用形色app对着花儿一顿识别，可这人工智能有时候也掉链子，所有的结果都是月季，只能自己对着图片研究，也不知道到底有没有哪一张是蒙对了的，但起码有一点，我已经绝对打败了AI。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/06/%E4%B8%8B%E8%BD%BD-1588771007288.jpg\" alt=\"title\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>藤本月季网<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudGVuZ2Jlbnl1ZWppLmNvbS8=\">https://www.tengbenyueji.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["美好生活"],"tags":["藤本月季","复旦大学","国帆路","AI"]},{"title":"遇到“Error spawn failed”错误","url":"/2020/05/05/%E9%81%87%E5%88%B0%E2%80%9CError%20spawn%20failed%E2%80%9D%E9%94%99%E8%AF%AF/","content":"<h1 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h1><p>昨晚在修改_config.yml后，执行hexo g -d时遇到了错误：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Error</span>: Spawn failed</span><br><span class=\"line\">at ChildProcess. (D:\\develop\\hexo-home\\node_modules\\hexo-util\\lib\\spawn.js:<span class=\"number\">52</span>:<span class=\"number\">19</span>)</span><br><span class=\"line\">at ChildProcess.emit (events.js:<span class=\"number\">198</span>:<span class=\"number\">13</span>)</span><br><span class=\"line\">at ChildProcess.cp.emit (D:\\develop\\hexo-home\\node_modules\\cross-spawn\\lib\\enoent.js:<span class=\"number\">40</span>:<span class=\"number\">29</span>)</span><br><span class=\"line\">at Process.ChildProcess._handle.onexit (internal/child_process.js:<span class=\"number\">248</span>:<span class=\"number\">12</span>)</span><br></pre></td></tr></table></figure>\n\n<p>开始以为是改配置文件导致的，回退后发现问题并没有得到有效的解决，问了度娘才知道，原因可能是因为上传中断，导致本地blog和远端blog的版本不一致，解决办法是删除blog根目录下的 <code>.deploy_git</code>文件夹，然后再依次执行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo  g</span><br><span class=\"line\">hexo  d</span><br></pre></td></tr></table></figure>\n\n<p>问题解决了，不过忘记了截图，在网上找了一张。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/05/20190404135506907-1588655512017.png\" alt=\"title\"></p>\n<p>（图片来源：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25qY19zZWMvYXJ0aWNsZS9kZXRhaWxzLzg5MDIxMDgzJUVGJUJDJTg5\">https://blog.csdn.net/njc_sec/article/details/89021083）<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>hexo 踩过的坑<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly95YW5pc3lvdW5nLmNvbS8yMDE5LzA5LzIxL2hleG8tJUU4JUI4JUE5JUU4JUJGJTg3JUU3JTlBJTg0JUU1JTlEJTkxLw==\">https://yanisyoung.com/2019/09/21/hexo-%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Error spawn failed<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sc3R5Lnh5ei8yMDE5LzEwLzAxL0Vycm9yJTIwc3Bhd24lMjBmYWlsZWQv\">https://lsty.xyz/2019/10/01/Error%20spawn%20failed/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>hexo 搭建个人博客部署环节spawn failed及解决<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25qY19zZWMvYXJ0aWNsZS9kZXRhaWxzLzg5MDIxMDgz\">https://blog.csdn.net/njc_sec/article/details/89021083<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>hexo发生error：spawn failed错误的解决方法<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly8xMTg3MTAwNTQ2LmdpdGh1Yi5pby8yMDE5LzExLzI0L3NwYXduLWZhaWxlZC8=\">https://1187100546.github.io/2019/11/24/spawn-failed/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["Hexo","blog","deploy_git"]},{"title":"个人专属的音乐库","url":"/2020/05/04/%E4%B8%AA%E4%BA%BA%E4%B8%93%E5%B1%9E%E7%9A%84%E9%9F%B3%E4%B9%90%E5%BA%93/","content":"<p>虽然国内已经有了虾米音乐、QQ音乐、网易云音乐等，国外也有Spotify、SoundCloud和Google Play Music等数字音乐服务，但是对于那些拥有大量本地音乐文件的用户，怎么才能不浪费这些资源呢？</p>\n<span id=\"more\"></span>\n\n<p>之前我们专门讨论过家庭多媒体中心，这些流媒体服务软件，包括Plex、Emby、Jellyfin等，尤其是Plex不仅有出色的视频播放，而且在音乐方面也同样出色，除此之外还有Ampache，但今天我们要讨论的是sonic系列。</p>\n<h1 id=\"Subsonic\"><a href=\"#Subsonic\" class=\"headerlink\" title=\"Subsonic\"></a>Subsonic</h1><p>Subsonic由挪威人Sindre Mehus采用Java语言编写而成。它具有一个强大的自动转换格式引擎，可通过将其即时转换为MP3来流式传输各种有损和无损格式。提供28种语言（包括中文），30种不同主题以及高度可配置的用户界面。</p>\n<p>群晖上安装可以通过导入第三方源后在【套件中心】安装，也可以通过Docker安装。界面效果：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/04/QQ%E6%88%AA%E5%9B%BE20181014181418-1588561466060.png\" alt=\"title\"></p>\n<p>通过购买Subsonic Premium版本，您可以使用视频流功能，无广告体验以及流式传输到Chromecast和Sonos设备。</p>\n<h1 id=\"Madsonic\"><a href=\"#Madsonic\" class=\"headerlink\" title=\"Madsonic\"></a>Madsonic</h1><p>Madsonic是具有自动点唱机功能的基于Web的媒体库和媒体流媒体。Madsonic基于Java技术，可在大多数平台上运行，包括Windows，MacOS，OSX，Linux和Unix变体。</p>\n<p>群晖上可以通过Docker安装，界面效果：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/04/Madsonic-Linux-Media-Server-1588562333873.png\" alt=\"title\"></p>\n<h1 id=\"Libresonic\"><a href=\"#Libresonic\" class=\"headerlink\" title=\"Libresonic\"></a>Libresonic</h1><p>这个基于Web的个人音乐服务器可以轻松处理大量收藏。此外Libresonic几乎可以与您使用的所有文件格式兼容。但是这个开源项目已经停止更新了。界面效果：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/04/LibreSonic-Music-Server-Software-1588563025909.jpg\" alt=\"title\"></p>\n<h1 id=\"Airsonic\"><a href=\"#Airsonic\" class=\"headerlink\" title=\"Airsonic\"></a>Airsonic</h1><p>Airsonic，一个自由和开源社区驱动的媒体服务器，虽然是Subsonic和Libresonic的分支，但是AirSonic仍然是免费和开源的，而不是Subsonic和Madsonic的闭源模型。界面效果：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/04/screenshot-1588563012761.png\" alt=\"title\"></p>\n<h1 id=\"选择的依据\"><a href=\"#选择的依据\" class=\"headerlink\" title=\"选择的依据\"></a>选择的依据</h1><p>一个主要因素是开放源代码与封闭源代码，我个人倾向于开源的Libresonic或Airsonic，考虑到持久的更新和维护，最终我选择了Airsonic。</p>\n<h1 id=\"客户端播放\"><a href=\"#客户端播放\" class=\"headerlink\" title=\"客户端播放\"></a>客户端播放</h1><p>除了在Web上直接播放音乐外，Airsonic也支持用客户端来播放，因为Airsonic提供和Subsonic相同的API，所以也意味着所有Subsonic应用程序都应该与Airsonic兼容，起码理论上是这样的。</p>\n<p>在这个页面（ <span class=\"exturl\" data-url=\"aHR0cHM6Ly9haXJzb25pYy5naXRodWIuaW8vZG9jcy9hcHBzLw==\">https://airsonic.github.io/docs/apps/<i class=\"fa fa-external-link-alt\"></i></span> ），详细列举了各种应用，基本上涵盖了所有的主流系统平台，总归有适合你的。</p>\n<p>最后给个Android手机上Subsonic Music Streamer的效果图：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/04/nexusae0_225-1588572892955.png\" alt=\"title\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>Subsonic官网<br>地址：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zdWJzb25pYy5vcmcvcGFnZXMvaW5kZXguanNw\">http://www.subsonic.org/pages/index.jsp<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Subsonic：在浏览器内欣赏本地音乐<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cud2FlcmZhLmNvbS9zdWJzb25pYw==\">https://www.waerfa.com/subsonic<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Madsonic官网<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iZXRhLm1hZHNvbmljLm9yZy9wYWdlcy9pbmRleC5qc3A=\">https://beta.madsonic.org/pages/index.jsp<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Airsonic官网<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FpcnNvbmljL2FpcnNvbmlj\">https://github.com/airsonic/airsonic<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>【阿文菌】airsonic，用docker搭建属于自己的在线音乐平台。<br>地址：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5qdW53ZW4uYmlkOjU4MDAvYXdlbi8xOS5odG1s\">http://www.junwen.bid:5800/awen/19.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["subsonic","airsonic","plex","Emby","jellyfin","madsonic","libresonic","Spotify","Ampache","SoundCloud","Google Play Music"]},{"title":"打造一个可以随身携带的“藏书阁”","url":"/2020/05/03/%E6%89%93%E9%80%A0%E9%9A%8F%E8%BA%AB%E6%90%BA%E5%B8%A6%E7%9A%84%E2%80%9C%E8%97%8F%E4%B9%A6%E9%98%81%E2%80%9D/","content":"<p><strong>什么是calibre？</strong></p>\n<blockquote>\n<p>calibre是一個自由開源的電子書軟體套裝，可以用來組織、存放、以及管理電子書，支援大多數的電子書格式。同時也支援與許多流行的電子書閱讀器進行同步，並可能在DRM的限制下轉換電子書的格式。 【維基百科】</p>\n</blockquote>\n<p><strong>什么是Calibre-Web？</strong></p>\n<blockquote>\n<p>Calibre-Web is a web app providing a clean interface for browsing, reading and downloading eBooks <strong>using an existing Calibre database</strong>.</p>\n</blockquote>\n<p><strong>什么是OPDS？</strong></p>\n<blockquote>\n<p>OPDS全称是Open Publication Distribution System开放式出版发布系统，使用 Atom 格式，意在为电子书在线目录建立一个公开标准。<br>OPDS 将 RSS 信息源，替换为电子书目录，包括链接到书籍封面和简短摘要的可选链接。使用 OPDS，用户无需到处点击链接，通过电子书应用程序，只需订阅并搜索这些目录，然后就可以将电子书下载到 ebook 阅读器中，不需要再使用浏览器或其他应用程序。<br>OPDS 标准核心功能是支持 EPUB 标准和基于 Atom XML 的目录格式。【百度百科】</p>\n</blockquote>\n<h1 id=\"构建本地图书库\"><a href=\"#构建本地图书库\" class=\"headerlink\" title=\"构建本地图书库\"></a>构建本地图书库</h1><p>Calibre是一个“一站式”的电子书解决方案，它可以全面满足你的电子书需求。Calibre是免费的，源代码开放，拥有跨平台的设计，可在Linux，OS X和Windows操作系统中运行。</p>\n<p>它是一个完整的电子图书馆，包括图书馆管理，格式转换，新闻，将材料转换为电子书，以及电子书阅读器同步功能、整合进电子图书阅读器。</p>\n<p>Calibre是电子书管理软件，支持Amazon、Apple、Bookeen、Ectaco、Endless Ideas、Google/HTC、Hanlin Song设备及格式，功能十分强大。它可以将你书库中的电子书非常方便地“发送”或同步导入到这些设备上进行阅读。</p>\n<p>已经不记得是哪一年开始使用Calibre来管理我的电子书的，反正这些年也存了不少书。电脑、硬盘已经不记得换了几个，但是电子书库还一直保存着，毕竟是花了时间下载、整理。</p>\n<p>用了这么多年也逐渐发现了一些Calibre的缺点：体积庞大、速度慢。最重要的是不利于多设备的共享，虽然calibre本身提供共享服务器服务，但不是我想要的，毕竟要开着电脑，还要开着calibre，既然我们有了7*24小时的群晖NAS，能不能让calibre在群晖上运行呢？</p>\n<h1 id=\"打造Web书库\"><a href=\"#打造Web书库\" class=\"headerlink\" title=\"打造Web书库\"></a>打造Web书库</h1><p>经过一番调研，我们找到了Calibre-Web和calibre-webserver，不仅提供web界面，更重要的是可以使用已经存在的Calibre的数据库，这意味着我们原来的电子书库可以直接通过Web访问，这实在是个好消息，毕竟书库的整理是件非常花时间的事情。</p>\n<p>目前尝试过这两个版本的Docker，功能上大同小异，但是界面差异较大。</p>\n<h2 id=\"oldiy-my-calibre-webserver-docker\"><a href=\"#oldiy-my-calibre-webserver-docker\" class=\"headerlink\" title=\"oldiy/my-calibre-webserver-docker\"></a>oldiy/my-calibre-webserver-docker</h2><p>calibre-webserver是国人开发的，基于calibre-webserver做这个Docker镜像也是国人。</p>\n<p>打开群晖Docker—注册表—搜 oldiy 找到 my-calibre-webserver-docker 双击下载，tag选择 latest</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/03/1-12-1588492282423.jpg\" alt=\"title\"></p>\n<p>（图片来自：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9vZGNuLnRvcC8yMDE5LzAyLzI2LzI3MzQvJUU3JUJFJUE0JUU2JTk5JTk2ZG9ja2VyJUU1JUFFJTg5JUU4JUEzJTg1JUU0JUI4JTgwJUU0JUI4JUFBJUU1JUJDJTgwJUU2JUJBJTkwJUU3JTlBJTg0JUU3JUJFJThFJUU4JUE3JTgyY2FsaWJyZS13ZWJzZXJ2ZXIlRTQlQjglQUQlRTYlOTYlODclRTclQkQlOTElRTklQTElQjUlRTclODklODglRUYlQkMlOEMlRTclQUUlQTElRTclOTAlODYvJUVGJUJDJTg5\">https://odcn.top/2019/02/26/2734/%E7%BE%A4%E6%99%96docker%E5%AE%89%E8%A3%85%E4%B8%80%E4%B8%AA%E5%BC%80%E6%BA%90%E7%9A%84%E7%BE%8E%E8%A7%82calibre-webserver%E4%B8%AD%E6%96%87%E7%BD%91%E9%A1%B5%E7%89%88%EF%BC%8C%E7%AE%A1%E7%90%86/）<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>安装完成后的界面效果：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/03/6-7-1588492302725.jpg\" alt=\"title\"></p>\n<p>（图片来自：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9vZGNuLnRvcC8yMDE5LzAyLzI2LzI3MzQvJUU3JUJFJUE0JUU2JTk5JTk2ZG9ja2VyJUU1JUFFJTg5JUU4JUEzJTg1JUU0JUI4JTgwJUU0JUI4JUFBJUU1JUJDJTgwJUU2JUJBJTkwJUU3JTlBJTg0JUU3JUJFJThFJUU4JUE3JTgyY2FsaWJyZS13ZWJzZXJ2ZXIlRTQlQjglQUQlRTYlOTYlODclRTclQkQlOTElRTklQTElQjUlRTclODklODglRUYlQkMlOEMlRTclQUUlQTElRTclOTAlODYvJUVGJUJDJTg5\">https://odcn.top/2019/02/26/2734/%E7%BE%A4%E6%99%96docker%E5%AE%89%E8%A3%85%E4%B8%80%E4%B8%AA%E5%BC%80%E6%BA%90%E7%9A%84%E7%BE%8E%E8%A7%82calibre-webserver%E4%B8%AD%E6%96%87%E7%BD%91%E9%A1%B5%E7%89%88%EF%BC%8C%E7%AE%A1%E7%90%86/）<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"linuxserver-calibre-web\"><a href=\"#linuxserver-calibre-web\" class=\"headerlink\" title=\"linuxserver/calibre-web\"></a>linuxserver/calibre-web</h2><p>打开群晖Docker—注册表—搜 calibre-web 找到 calibre-web 双击下载，tag选择 latest</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/03/54533fc73c8f0235e303fa5538f4ff0-1588492697150.png\" alt=\"title\"></p>\n<p>安装完成后的界面效果：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/03/3-1588492779826.png\" alt=\"title\"></p>\n<h1 id=\"导入本地书库\"><a href=\"#导入本地书库\" class=\"headerlink\" title=\"导入本地书库\"></a>导入本地书库</h1><p>将本地书库中的library目录，也就是包含了metadata.db的目录，拷贝到calibre-web或者my-calibre-webserver-docker的相应目录即可，拷贝前先停止Docker，等拷贝完成后再启动Docker。</p>\n<h1 id=\"书库的维护\"><a href=\"#书库的维护\" class=\"headerlink\" title=\"书库的维护\"></a>书库的维护</h1><p>不管是my-calibre-webserver-docker还是calibre-web，都可以只使用Web进行管理，包括增、删、改、查操作，但是有时候涉及到批量等，还是可以用Calibre客户端，毕竟客户端的功能更丰富、也更强大，我们只需要将远程书库的目录用Samba协议共享出来即可，对于Calibre客户端来说，映射的目录和本地目录操作起来是一样的。</p>\n<h1 id=\"远程访问\"><a href=\"#远程访问\" class=\"headerlink\" title=\"远程访问\"></a>远程访问</h1><p>如果要远程访问，还需要用frp把内网映射到我们的域名上了，修改frpc.ini文件：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[calibre-webserver]</span></span><br><span class=\"line\"><span class=\"attr\">type</span> = http</span><br><span class=\"line\"><span class=\"attr\">local_ip</span> = <span class=\"number\">192.168</span>.<span class=\"number\">0.199</span></span><br><span class=\"line\"><span class=\"attr\">local_port</span> = <span class=\"number\">8001</span></span><br><span class=\"line\"><span class=\"attr\">custom_domains</span> = book.abc.xy</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[calibre-web]</span></span><br><span class=\"line\"><span class=\"attr\">type</span> = http</span><br><span class=\"line\"><span class=\"attr\">local_ip</span> = <span class=\"number\">192.168</span>.<span class=\"number\">0.199</span></span><br><span class=\"line\"><span class=\"attr\">local_port</span> = <span class=\"number\">8083</span></span><br><span class=\"line\"><span class=\"attr\">custom_domains</span> = novel.abc.xy</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"OPDS订阅\"><a href=\"#OPDS订阅\" class=\"headerlink\" title=\"OPDS订阅\"></a>OPDS订阅</h1><p>my-calibre-webserver-docker和calibre-web均支持OPDS，以Android平台静读天下（Moon+ Reader）为例</p>\n<p>左侧菜单【网上书库】–&gt;右上角【增加新书库】，可以输入calibre书库的IP，也可以输入域名。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/03/14134c4cdafb657213b9c2d1e80ae4f-1588496692241.jpg\" alt=\"title\"></p>\n<p>许墨茗书桌（ <span class=\"exturl\" data-url=\"aHR0cDovL3p1cmUuZnVuL2Jvb2svb3Bkcw==\">http://zure.fun/book/opds<i class=\"fa fa-external-link-alt\"></i></span> ）opds源添加的效果图：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/03/38dc84274076c3e9c1d7b5073fe2223-1588500681004.jpg\" alt=\"title\"></p>\n<p>夜读客（ <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueWVkdWsuY29tLw==\">https://www.yeduk.com<i class=\"fa fa-external-link-alt\"></i></span> ）网站添加的效果图：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/03/f93a5a3c8faa278bada58c4cfe831b1-1588496993633.jpg\" alt=\"title\"></p>\n<h2 id=\"可用的OPDS源\"><a href=\"#可用的OPDS源\" class=\"headerlink\" title=\"可用的OPDS源\"></a>可用的OPDS源</h2><blockquote>\n<ul>\n<li>许墨茗书桌   <span class=\"exturl\" data-url=\"aHR0cDovL3p1cmUuZnVuL2Jvb2svb3Bkcw==\">http://zure.fun/book/opds<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>cbeta电子佛典   <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jYmV0YS5vcmcvb3Bkcy8=\">http://www.cbeta.org/opds/<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n</blockquote>\n<h2 id=\"推荐几个书库\"><a href=\"#推荐几个书库\" class=\"headerlink\" title=\"推荐几个书库\"></a>推荐几个书库</h2><p>最后推荐几个可用的书库作为福利吧。如果你用静读天下（Moon+ Reader）的话，也可以直接和OPDS源一样，加到【网上书库】中。</p>\n<blockquote>\n<ul>\n<li>夜读客   <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueWVkdWsuY29tLw==\">https://www.yeduk.com<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>天涯客   <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY2hpbmp1YS5jb20v\">https://www.chinjua.com<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>文渊阁   <span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZW55dWFuZ2Uub3JnLw==\">https://wenyuange.org<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>kindle推送小站   <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYXp3My50ay8=\">https://www.azw3.tk<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>螺丝丁报告   <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaHVnaGxpYi5jbi8=\">https://www.hughlib.cn<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>书伴   <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ib29rZmVyZS5jb20vYm9va3M=\">https://bookfere.com/books<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>内酷网    <span class=\"exturl\" data-url=\"aHR0cDovL25laWt1dy5jb20v\">http://neikuw.com<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>ePUBw    <span class=\"exturl\" data-url=\"aHR0cHM6Ly9lcHVidy54eXov\">https://epubw.xyz<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>雅读    <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5haXlhZHUuY29tLw==\">http://www.aiyadu.com<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>雅书    <span class=\"exturl\" data-url=\"aHR0cHM6Ly95YWJvb2sub3JnLw==\">https://yabook.org<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n</blockquote>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><blockquote>\n<p>calibre官网<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jYWxpYnJlLWVib29rLmNvbS8=\">https://calibre-ebook.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>最强大的本地电子书管理工具：Calibre 使用指南<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zc3BhaS5jb20vcG9zdC80Mzg0Mw==\">https://sspai.com/post/43843<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>calibre-web官网<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2phbmVjemt1L2NhbGlicmUtd2Vi\">https://github.com/janeczku/calibre-web<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>calibre-webserver官网<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RhbGVib29rL2NhbGlicmUtd2Vic2VydmVy\">https://github.com/talebook/calibre-webserver<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>群晖Docker安装一个开源的美观calibre-webserver中文网页版，管理你的图书，推送到Kindle<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9vZGNuLnRvcC8yMDE5LzAyLzI2LzI3MzQvJUU3JUJFJUE0JUU2JTk5JTk2ZG9ja2VyJUU1JUFFJTg5JUU4JUEzJTg1JUU0JUI4JTgwJUU0JUI4JUFBJUU1JUJDJTgwJUU2JUJBJTkwJUU3JTlBJTg0JUU3JUJFJThFJUU4JUE3JTgyY2FsaWJyZS13ZWJzZXJ2ZXIlRTQlQjglQUQlRTYlOTYlODclRTclQkQlOTElRTklQTElQjUlRTclODklODglRUYlQkMlOEMlRTclQUUlQTElRTclOTAlODYv\">https://odcn.top/2019/02/26/2734/%E7%BE%A4%E6%99%96docker%E5%AE%89%E8%A3%85%E4%B8%80%E4%B8%AA%E5%BC%80%E6%BA%90%E7%9A%84%E7%BE%8E%E8%A7%82calibre-webserver%E4%B8%AD%E6%96%87%E7%BD%91%E9%A1%B5%E7%89%88%EF%BC%8C%E7%AE%A1%E7%90%86/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>折腾NAS 篇三：群晖Docker搭建网页版Calibre书库<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2E2bDhvdnhlLw==\">https://post.smzdm.com/p/a6l8ovxe/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["Calibre","Calibre-Web","calibre-webserver","my-calibre-webserver-docker","OPDS"]},{"title":"家庭多媒体中心（5）：查询篇","url":"/2020/05/02/%E5%AE%B6%E5%BA%AD%E5%A4%9A%E5%AA%92%E4%BD%93%E4%B8%AD%E5%BF%83%EF%BC%885%EF%BC%89%EF%BC%9A%E6%9F%A5%E8%AF%A2%E7%AF%87/","content":"<p>Kodi（以前叫XBMC）是一款强大的开源媒体播放器软件，支持 MacOS、Windows、Linux、Android等多系统平台。Kodi 的局域网视频播放功能异常强大；默认情况下 Kodi 的资料库是独立的，这就带来一个很大的问题，当家里有多个Kodi终端的话，资料的同步是个很大的问题。</p>\n<blockquote>\n<ol>\n<li>综合篇</li>\n<li>管理篇</li>\n<li>播放篇</li>\n<li>流媒体服务</li>\n<li>查询篇（本文）</li>\n</ol>\n</blockquote>\n<h1 id=\"提出问题\"><a href=\"#提出问题\" class=\"headerlink\" title=\"提出问题\"></a>提出问题</h1><p>Kodi 刮削的内容默认都是存在设备本地存储上的，而电影都是统一存储在 NAS 里的，如果想要每台安装了 Kodi 的设备都显示一样的资料库该怎么办？</p>\n<h1 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h1><p>首先我们想到的就是能不能用数据库来统一管理？结果还真是可行的，只需要我们在群晖上安装数据库和共享刮削资料的文件夹即可。具体的步骤略过，只要仔细阅读参考文档即可。这里只提示关键的步骤。</p>\n<blockquote>\n<ul>\n<li>从【套件中心】安装MariaDB数据库；<br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/02/f8a3e8aa9c7485c1714e77cc02f2bdf-1588402683571.png\" alt=\"title\"></li>\n<li>从【套件中心】安装PHPMyAdmin，用于管理MariaDB数据库；<br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/02/99fdd953b382d4ed4dae5b41b9ae658-1588402708642.png\" alt=\"title\"></li>\n<li>为Kodi注册一个数据库用户，当然你也可以用root，但从安全性考虑，强烈不建议这么做。</li>\n<li>如果你已经用了Kodi，选择具有最新库的机器，打开Kodi并进入设置&gt;媒体设置&gt;导出库。</li>\n<li>创建advancedsettings.xml文件</li>\n</ul>\n</blockquote>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot; ?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">advancedsettings</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">services</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">esallinterfaces</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">esallinterfaces</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">webserver</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">webserver</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">zeroconf</span>&gt;</span>false<span class=\"tag\">&lt;/<span class=\"name\">zeroconf</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">services</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">videodatabase</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">type</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">type</span>&gt;</span>                //数据库类型mysql</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">host</span>&gt;</span>192.168.0.199<span class=\"tag\">&lt;/<span class=\"name\">host</span>&gt;</span>        //数据库所在设备IP地址</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">port</span>&gt;</span>3306<span class=\"tag\">&lt;/<span class=\"name\">port</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">user</span>&gt;</span>kodi<span class=\"tag\">&lt;/<span class=\"name\">user</span>&gt;</span>                 //数据库用户名</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">pass</span>&gt;</span>123456<span class=\"tag\">&lt;/<span class=\"name\">pass</span>&gt;</span>               //数据库密码</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">videodatabase</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">musicdatabase</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">type</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">type</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">host</span>&gt;</span>192.168.0.199<span class=\"tag\">&lt;/<span class=\"name\">host</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">port</span>&gt;</span>3306<span class=\"tag\">&lt;/<span class=\"name\">port</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">user</span>&gt;</span>kodi<span class=\"tag\">&lt;/<span class=\"name\">user</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">pass</span>&gt;</span>123456<span class=\"tag\">&lt;/<span class=\"name\">pass</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">musicdatabase</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">videolibrary</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">importwatchedstate</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">importwatchedstate</span>&gt;</span>      //导入观看状态</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">importresumepoint</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">importresumepoint</span>&gt;</span>        //导入播放记录点</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">videolibrary</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">pathsubstitution</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">substitute</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">from</span>&gt;</span>special://profile/Thumbnails/<span class=\"tag\">&lt;/<span class=\"name\">from</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">to</span>&gt;</span>smb://192.168.0.199/kodi/XBMCData/Thumbnails/<span class=\"tag\">&lt;/<span class=\"name\">to</span>&gt;</span> //替换刮削所得图片保存路径</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">substitute</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">pathsubstitution</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">pathsubstitution</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">substitute</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">from</span>&gt;</span>special://profile/sources.xml/<span class=\"tag\">&lt;/<span class=\"name\">from</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">to</span>&gt;</span>smb://192.168.0.199/kodi/XBMCData/sources.xml/<span class=\"tag\">&lt;/<span class=\"name\">to</span>&gt;</span> //源文件的设置</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">substitute</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">pathsubstitution</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">pathsubstitution</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">substitute</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">from</span>&gt;</span>special://profile/mediasources.xml/<span class=\"tag\">&lt;/<span class=\"name\">from</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">to</span>&gt;</span>smb://192.168.0.199/kodi/XBMCData/mediasources.xml/<span class=\"tag\">&lt;/<span class=\"name\">to</span>&gt;</span> //源文件的设置</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">substitute</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">pathsubstitution</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">pathsubstitution</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">substitute</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">from</span>&gt;</span>special://profile/passwords.xml/<span class=\"tag\">&lt;/<span class=\"name\">from</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">to</span>&gt;</span>smb://192.168.0.199/kodi/XBMCData/passwords.xml/<span class=\"tag\">&lt;/<span class=\"name\">to</span>&gt;</span> //源文件的设置</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">substitute</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">pathsubstitution</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">cache</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">memorysize</span>&gt;</span>52428800<span class=\"tag\">&lt;/<span class=\"name\">memorysize</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">buffermode</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">buffermode</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">readfactor</span>&gt;</span>10<span class=\"tag\">&lt;/<span class=\"name\">readfactor</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">cache</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">advancedsettings</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<ul>\n<li>拷贝advancedsettings.xml文件到相应的目录。对于Windows系统，按win+r，输入%APPDATA%\\kodi\\userdata，回车。</li>\n<li>一旦advancedsettings.xml文件准备就绪，请在该机器上打开Kodi导入之前备份的库（从设置&gt;媒体设置&gt;导入库）</li>\n<li>其他Kodi终端只要拷贝advancedsettings.xml到相应的目录（参见下表）即可。</li>\n</ul>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th align=\"center\">系统</th>\n<th align=\"center\">目录</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Android</td>\n<td align=\"center\">Android/data/org.xbmc.kodi/files/.kodi/userdata/</td>\n</tr>\n<tr>\n<td align=\"center\">iOS</td>\n<td align=\"center\">/private/var/mobile/Library/Preferences/Kodi/userdata/</td>\n</tr>\n<tr>\n<td align=\"center\">Linux</td>\n<td align=\"center\">~/.kodi/userdata/</td>\n</tr>\n<tr>\n<td align=\"center\">Mac</td>\n<td align=\"center\">/Users/<your_user_name>/Library/Application Support/Kodi/userdata/</td>\n</tr>\n<tr>\n<td align=\"center\">LibreELEC/OpenELEC</td>\n<td align=\"center\">/storage/.kodi/userdata/</td>\n</tr>\n<tr>\n<td align=\"center\">Windows</td>\n<td align=\"center\">Start - type %APPDATA%\\kodi\\userdata - press <Enter></td>\n</tr>\n</tbody></table>\n<p>至此我们已经实现了全屋Kodi终端的同步，不仅仅是刮削的图片及信息，还包括了播放状态。</p>\n<h1 id=\"进阶应用\"><a href=\"#进阶应用\" class=\"headerlink\" title=\"进阶应用\"></a>进阶应用</h1><p>我们现在已经可以在任何一台Kodi终端上进行查询，但是Kodi的查询不太好用，而且也不可能为了查询而打开Kodi，再说有时候我们会需要远程查询，所以能基于Web是最理想的。</p>\n<h2 id=\"软件安装\"><a href=\"#软件安装\" class=\"headerlink\" title=\"软件安装\"></a>软件安装</h2><p>MariaDB数据库、和PHPMyAdmin前面已经安装了，接下来需要从【套件中心】安装PHP和Web Station。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/02/816c05d5313a68e99234695ebf78a6f-1588402805299.png\" alt=\"title\"><br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/02/fe636d2f5f8971058ed3f8bfade9a87-1588402810188.png\" alt=\"title\"></p>\n<h2 id=\"网站设置\"><a href=\"#网站设置\" class=\"headerlink\" title=\"网站设置\"></a>网站设置</h2><p>只勾选了几个和数据库相关的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/02/6a842f85a55830b598617b20cb5a80f-1588403067065.png\" alt=\"title\"></p>\n<h2 id=\"下载代码\"><a href=\"#下载代码\" class=\"headerlink\" title=\"下载代码\"></a>下载代码</h2><p>在github上找到一个叫KodiWebPortal的项目，据介绍可以用于浏览，显示，搜索并最终下载已编入索引的Kodi多媒体内容。此Web应用程序非常轻巧，没有框架（JQuery除外）和依赖项。</p>\n<p>非常符合我的需求，源代码地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3lhbm5jYW0vS29kaVdlYlBvcnRhbCVFMyU4MCU4Mg==\">https://github.com/yanncam/KodiWebPortal。<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/02/853e05544ae0e66946ed7e91543d5c9-1588403790202.png\" alt=\"title\"></p>\n<h2 id=\"代码部署\"><a href=\"#代码部署\" class=\"headerlink\" title=\"代码部署\"></a>代码部署</h2><p>把下载的 KodiWebPortal-master.zip，解压后拷贝到群晖的 web 目录，并修改目录中的config.php中数据库相关部分</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/02/f1d7de9ded895589c0449da92bbbe58-1588404859631.png\" alt=\"title\"></p>\n<h3 id=\"取消强制https\"><a href=\"#取消强制https\" class=\"headerlink\" title=\"取消强制https\"></a>取消强制https</h3><p>打开index.php，找到</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;Content-Security-Policy&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;upgrade-insecure-requests&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>将其注释掉</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- meta http-equiv=&quot;Content-Security-Policy&quot; content=&quot;upgrade-insecure-requests&quot; / --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>直接删掉也可以</p>\n<h3 id=\"界面汉化\"><a href=\"#界面汉化\" class=\"headerlink\" title=\"界面汉化\"></a>界面汉化</h3><p>在 \\i18n 目录中的lang_en.php 复制一份并重新命名为 lang_cn.php，用百度翻译一下。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/02/1c9c34307d96ba6228c040a34bf3d67-1588405228352.png\" alt=\"title\"></p>\n<p>在config.php中，将121行的 lang_en.php ，改成 lang_cn.php 即可。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/02/3f214214eef410972765867bac25a43-1588407528986.png\" alt=\"title\"></p>\n<h3 id=\"适应手机\"><a href=\"#适应手机\" class=\"headerlink\" title=\"适应手机\"></a>适应手机</h3><p>偶尔我们会在手机上打开查询页面，但原始的界面在手机上没法看，所以需要做个简单的适配，在前面注释掉的代码后面加一行。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=0.95&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>最后上个效果图</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/02/0-1588409261368.jpg\" alt=\"title\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/27/Jietu20200427-135747-1587967110918.jpg\" alt=\"title\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a><strong>参考文档</strong></h1><blockquote>\n<p>如何利用MySQL数据库让多个XBMC客户端显示一样的媒体库资料<br>地址：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5oZHBmYW5zLmNvbS90aHJlYWQtNjAwMTM5LTEtMS5odG1s\">http://www.hdpfans.com/thread-600139-1-1.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>如何使用MySQL在多个设备上同步Kodi库<br>地址：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ob3d0b2lwLmNvbS9ob3ctdG8tc3luYy15b3VyLW1lZGlhLWFjcm9zcy15b3VyLWVudGlyZS1ob3VzZS13aXRoLXhibWMv\">http://www.howtoip.com/how-to-sync-your-media-across-your-entire-house-with-xbmc/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>多个XBMC终端利用MariaDB数据库共享媒体库刮削资料<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY2hpcGhlbGwuY29tL3RocmVhZC0xMzc0MTkzLTEtMS5odG1s\">https://www.chiphell.com/thread-1374193-1-1.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>KodiWebPortal主页<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3lhbm5jYW0vS29kaVdlYlBvcnRhbA==\">https://github.com/yanncam/KodiWebPortal<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["Kodi","NAS","KodiWebPortal","MariaDB"]},{"title":"家庭多媒体中心（4）：流媒体服务器篇","url":"/2020/05/01/%E5%AE%B6%E5%BA%AD%E5%A4%9A%E5%AA%92%E4%BD%93%E4%B8%AD%E5%BF%83%EF%BC%884%EF%BC%89%EF%BC%9A%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AF%87/","content":"<p>如果需要远程播放，上一篇提到的Samba协议也是可以的，但只能用Zerotier组网方式了，如果我们还想通过Web上观看电影的话就只能在群晖上搭建流媒体服务了。</p>\n<blockquote>\n<ol>\n<li>综合篇</li>\n<li>管理篇</li>\n<li>播放篇</li>\n<li>流媒体服务（本文）</li>\n<li>查询篇</li>\n</ol>\n</blockquote>\n<p>群晖上搭建媒体服务器的选择主要有自带的Video Station、Plex、Emby、Jellyfin等，除了Web方式外，还支持手机、TV等多种客户端方式。</p>\n<p>网上别人总结的一些优缺点：</p>\n<blockquote>\n<ul>\n<li><p>DS Video：群晖自带的Video Station支持的格式没有其他软件的多。比如群晖没有取得 DTS 音效格式的授权，导致很多格影片格式不能看。</p>\n</li>\n<li><p>Plex：1）专业版收费。2）免费版不支持硬件解码。3）不支持蓝光原盘。</p>\n</li>\n<li><p>Emby：Emby从3.6开始闭源后，越来越多的设置需要使用收费了。当然也包括硬件解码。</p>\n</li>\n<li><p>Jellyfin：Jellyfin和Emby是类似的，（原emby的部分社区开发者fork了emby 3.5.2的存储库，新建了jellyfin项目），目前所有功能都是免费的，而且支持硬件解码。</p>\n</li>\n</ul>\n</blockquote>\n<h1 id=\"软件\"><a href=\"#软件\" class=\"headerlink\" title=\"软件\"></a>软件</h1><h2 id=\"DS-Video\"><a href=\"#DS-Video\" class=\"headerlink\" title=\"DS Video\"></a>DS Video</h2><p>DS Video可以在群晖的【套件中心】中找到并安装，安装设置都比较简单，界面效果图：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/01/2020-02-21_221218-1588338398920.jpg\" alt=\"title\"></p>\n<p>至于格式少的问题，可以通过安装第三方插件来解决，如果你在【套件中心】添加了第三方源【 <span class=\"exturl\" data-url=\"aHR0cDovL3BhY2thZ2VzLnN5bm9jb21tdW5pdHkuY29tLw==\">http://packages.synocommunity.com<i class=\"fa fa-external-link-alt\"></i></span> 】，就可以直接搜索ffmpeg，安装完成后，Video Station将可以支持更多格式。</p>\n<h2 id=\"Plex\"><a href=\"#Plex\" class=\"headerlink\" title=\"Plex\"></a>Plex</h2><p>在群晖上Plex可以通过【套件中心】安装，官方支持的版本相对较低，如果想要高版本的也可以通过Docker来安装，界面效果图：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/01/plex-full-library-500x500-1588340022437.jpg\" alt=\"title\"></p>\n<h2 id=\"Emby\"><a href=\"#Emby\" class=\"headerlink\" title=\"Emby\"></a>Emby</h2><p>在群晖上Emby需要通过Docker来安装，当然也可以通过给【套件中心】增加第三方源的方式</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/01/5c124c17ba3232683.png_e680-1588340165884.png\" alt=\"title\"></p>\n<p>界面效果图：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/01/unnamed-1588340581645.jpg\" alt=\"title\"></p>\n<h2 id=\"Jellyfin\"><a href=\"#Jellyfin\" class=\"headerlink\" title=\"Jellyfin\"></a>Jellyfin</h2><p>个人推荐使用Jellyfin，主要是因为它是开源软件，所有功能都是免费的，界面效果图：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/01/38650d9efcdc7b0bf3cfccd2de83ef6-1588340701890.png\" alt=\"title\"></p>\n<h1 id=\"远程访问\"><a href=\"#远程访问\" class=\"headerlink\" title=\"远程访问\"></a>远程访问</h1><p>以Jellyfin为例，来看看Docker的设置，端口默认是8096。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/01/fa7f1efca6ff367f2c42ea5814a8530-1588341241086.png\" alt=\"title\"></p>\n<ul>\n<li>如果你是有公网IP的幸运儿，只要在路由器中将8096映射出去即可；</li>\n<li>如果你和我一样用frp，需要在frpc.ini中增加一段设置：</li>\n</ul>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[movie]</span></span><br><span class=\"line\"><span class=\"attr\">type</span> = http</span><br><span class=\"line\"><span class=\"attr\">local_ip</span> = <span class=\"number\">192.168</span>.<span class=\"number\">0.200</span></span><br><span class=\"line\"><span class=\"attr\">local_port</span> = <span class=\"number\">8096</span></span><br><span class=\"line\"><span class=\"attr\">custom_domains</span> = movie.abc.ml</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a><strong>参考文档</strong></h1><blockquote>\n<p>[NAS] 如何安裝 FFmpeg 套件，解決 DS Video 電影格式不支援的問題<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hbWJlcjEwMDIucGl4bmV0Lm5ldC9ibG9nL3Bvc3QvMzQ2NDY4ODEtJTVCbmFzJTVELSVFNSVBNiU4MiVFNCVCRCU5NSVFNSVBRSU4OSVFOCVBMyU5RC1mZm1wZWctJUU1JUE1JTk3JUU0JUJCJUI2JUVGJUJDJThDJUU4JUE3JUEzJUU2JUIxJUJBLWRzLXZpZGVvLSVFOSU5QiVCQiVFNSVCRCVCMSVFNiVBMCVCQw==\">https://amber1002.pixnet.net/blog/post/34646881-%5Bnas%5D-%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%9D-ffmpeg-%E5%A5%97%E4%BB%B6%EF%BC%8C%E8%A7%A3%E6%B1%BA-ds-video-%E9%9B%BB%E5%BD%B1%E6%A0%BC<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>推荐-群晖第三方套件如何安装-第三方套件推荐等<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmlwYW5zaXIuY29tLzEyMDkuaHRtbA==\">https://i.ipansir.com/1209.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>群晖NAS搭建Plex影音中心<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC83NTk2YjllNTM4OTk=\">https://www.jianshu.com/p/7596b9e53899<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>折腾笔记 篇二：群晖+Kodi+emby一步一步打造家庭多媒体中心<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2FvbzZ6dms2Lw==\">https://post.smzdm.com/p/aoo6zvk6/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>群晖使用docker安装&amp;使用EMBY全流程教程-长文<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zbGVlbGUuY29tLzIwMjAvMDIvMTUvZW1ieS8=\">https://sleele.com/2020/02/15/emby/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>手把手教你搭建群晖系统下影音软件Jellyfin<br>地址：<span class=\"exturl\" data-url=\"aHR0cDovL3pob25nY2Uuc2luYS5jb20uY24vYXJ0aWNsZS92aWV3LzM3Mjg1Lw==\">http://zhongce.sina.com.cn/article/view/37285/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["Emby","Plex","流媒体服务器","Jellyfin","威动影音"]},{"title":"家庭多媒体中心（3）：播放篇","url":"/2020/05/01/%E5%AE%B6%E5%BA%AD%E5%A4%9A%E5%AA%92%E4%BD%93%E4%B8%AD%E5%BF%83%EF%BC%883%EF%BC%89%EF%BC%9A%E6%92%AD%E6%94%BE%E7%AF%87/","content":"<p><strong>什么是Samba</strong></p>\n<blockquote>\n<p>Samba是一套使用SMB(Server Message Block)协议的应用程序, 通过支持这个协议, Samba允许Linux服务器与Windows系统之间进行通信,使跨平台的互访成为可能。Samba采用C/S模式, 其工作机制是让NetBIOS( Windows 网上邻居的通信协议)和SMB两个协议运行于TCP/IP通信协议之上,并且用NetBEUI协议让Windows在“网上邻居”中能浏览Linux服务器。</p>\n</blockquote>\n<p>既然是家庭多媒体中心，主要的应用场景就是局域网，需求就是要能实现多屏幕的播放，包括：电视、机顶盒、PC电脑、Mac电脑、平板电脑、手机等。这些设备的操作系统涵盖了主流的Windows、Mac OS、Android和iOS。</p>\n<blockquote>\n<ol>\n<li>综合篇</li>\n<li>管理篇</li>\n<li>播放篇（本文）</li>\n<li>流媒体服务</li>\n<li>查询篇</li>\n</ol>\n</blockquote>\n<h1 id=\"协议\"><a href=\"#协议\" class=\"headerlink\" title=\"协议\"></a>协议</h1><p>目前常见的媒体共享方式主要有以下几种：Samba、ftp、upnp（DLNA）、NFS等，对于我们使用来说并不用关心具体的协议及其实现原理，只要简单好用就行。建议用Samba协议，需要在群晖中启用。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/01/7f7f0928e434e1601c44c74ebaad622-1588313906643.png\" alt=\"title\"></p>\n<h1 id=\"软件\"><a href=\"#软件\" class=\"headerlink\" title=\"软件\"></a>软件</h1><table>\n<thead>\n<tr>\n<th align=\"center\">设备</th>\n<th align=\"center\">系统</th>\n<th align=\"center\">推荐的播放器</th>\n<th align=\"center\">主要操作方式</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">机顶盒</td>\n<td align=\"center\">Android平台</td>\n<td align=\"center\">小白文件管理器</td>\n<td align=\"center\">遥控器</td>\n</tr>\n<tr>\n<td align=\"center\">台式机、笔记本</td>\n<td align=\"center\">Windows平台</td>\n<td align=\"center\">PotPlayer</td>\n<td align=\"center\">鼠标+快捷键</td>\n</tr>\n<tr>\n<td align=\"center\">Mac电脑</td>\n<td align=\"center\">Mac OS平台</td>\n<td align=\"center\">IINA</td>\n<td align=\"center\">触控板+快捷键</td>\n</tr>\n<tr>\n<td align=\"center\">android手机或平板</td>\n<td align=\"center\">Android平台</td>\n<td align=\"center\">MX Player</td>\n<td align=\"center\">触控屏</td>\n</tr>\n<tr>\n<td align=\"center\">iOS手机或iPAD平板</td>\n<td align=\"center\">iOS平台</td>\n<td align=\"center\">nPlayer</td>\n<td align=\"center\">触控屏</td>\n</tr>\n</tbody></table>\n<h2 id=\"小白文件管理器\"><a href=\"#小白文件管理器\" class=\"headerlink\" title=\"小白文件管理器\"></a>小白文件管理器</h2><p>小白文件管理器是完全针对电视进行设计、开发的，因此出色地适配了电视的各种操作方式，用电视遥控器也能快速完成文件管理操作。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/01/a8b893088d7386e8c21ba9952e190e3-1588315234306.jpg\" alt=\"title\"></p>\n<p>只要选择左边的【家庭网络】，就能看到smb共享的影片了。</p>\n<h2 id=\"PotPlayer\"><a href=\"#PotPlayer\" class=\"headerlink\" title=\"PotPlayer\"></a>PotPlayer</h2><p>PotPlayer 是 KMPlayer 的原作者姜勇囍進入 Daum 公司后的新一代作品，内置了解码器，支持支援 DXVA（DirectX Video Acceleration）、CUDA（Compute Unified Device Architecture）和 QSV（QuickSync Video Acceleratio）等硬件加速技术，也就是能够使用 GPU 来协助解码并播放影片。PotPlayer 启动迅速、功耗低、解码能力强大，所以在 Windows 平台上本人再没用过其他的播放器。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/01/scrNsaKUe-1588316745355.png\" alt=\"title\"></p>\n<h2 id=\"IINA\"><a href=\"#IINA\" class=\"headerlink\" title=\"IINA\"></a>IINA</h2><p>IINA 是一款基于 mpv 的自由及开源的媒体播放器。从框架到界面、用户体验，都是非常与 MacOS 系统最搭的视频播放器，处处融入了 MacOS 的设计语言：简洁的画面、大量的毛玻璃元素、功能上可以结合Force Touch, Touch Bar等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/01/sc-sky-1588316723371.png\" alt=\"title\"></p>\n<h2 id=\"MX-Player\"><a href=\"#MX-Player\" class=\"headerlink\" title=\"MX Player\"></a>MX Player</h2><p>作为Android平台上最强悍的视频播放器，MX Player以超强的解码性能以及兼容性闻名，对字幕的支持更是堪称一绝，能够兼容特效字幕，支持在线字幕匹配，看外语片无需自己找字幕！强力的硬件加速，可以轻松的更改解码模式，安装后会根据CPU型号安装对应的解码包。如果你需要更多功能可以选择MX Player Pro。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/01/15081256088254927-1588317546356.jpg\" alt=\"title\"></p>\n<h2 id=\"nPlayer\"><a href=\"#nPlayer\" class=\"headerlink\" title=\"nPlayer\"></a>nPlayer</h2><p>nPlayer 支持视频格式众多，支持WebDAV，FTP，SFTP，HTTP，SMB / CIFS，UPnP / DLNA（流媒体和下载）。支持与各种NAS设备同步。IOS端一共有三个版本：nPlayer Lite、nPlayer、nPlayer Plus。Lite免费版，基本使用没有问题，只是主界面底部有广告。后两者在产品使用上没有任何区别。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/01/570d01c0ce90ae898d44b06098879fd-1588318912746.jpg\" alt=\"title\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a><strong>参考文档</strong></h1><blockquote>\n<p>小白文件管理器<br>地址：<span class=\"exturl\" data-url=\"aHR0cDovL2FwcC5zaGFmYS5jb20vYXBrL3hpYW9iYWl3ZW5qaWFuZ3VhbmxpcWkuaHRtbA==\">http://app.shafa.com/apk/xiaobaiwenjianguanliqi.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>PotPlayer：最强播放器，无边框+4款简约皮肤<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zNTc1NzE3Ng==\">https://zhuanlan.zhihu.com/p/35757176<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>IINA官网<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9paW5hLmlvLw==\">https://iina.io/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>软件分享 篇十二：MXplayer Pro —— 安卓最强万能格式播放器<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2FyMDhyOTlxLw==\">https://post.smzdm.com/p/ar08r99q/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>nPlayer - 手机全能格式视频播放器<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaHJvbWVjai5jb20vaW9zLzIwMTktMDIvMTg4Ni5odG1s\">https://chromecj.com/ios/2019-02/1886.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["Potplayer","IINA","nplayer","MX Player","小白文件管理器","samba"]},{"title":"家庭多媒体中心（2）：管理篇","url":"/2020/05/01/%E5%AE%B6%E5%BA%AD%E5%A4%9A%E5%AA%92%E4%BD%93%E4%B8%AD%E5%BF%83%EF%BC%882%EF%BC%89%EF%BC%9A%E7%AE%A1%E7%90%86%E7%AF%87/","content":"<p><strong>什么是Kodi</strong></p>\n<blockquote>\n<p>Kodi (formerly XBMC) is a free and open source media player application developed by the XBMC/Kodi Foundation, a non-profit technology consortium. Kodi is available for multiple operating-systems and hardware platforms, featuring a 10-foot user interface for use with televisions and remote controls. It allows users to play and view most videos, music, podcasts, and other digital media files from local and network storage media and the internet.</p>\n</blockquote>\n<p><strong>什么是MediaElch</strong></p>\n<blockquote>\n<p>MediaElch is a free MediaManager for movies and tv shows. It supports generating of nfo files and also directly manipulating XBMCs database (SQLite). Posters, thumbnails, screenshots and actor images will be stored along movies and tv shows (when using nfos) or directly in XMBCs thumbnail folder. Built with Qt MediaElch is available for Mac OS X, Windows and Linux.</p>\n</blockquote>\n<p><strong>什么是tinyMediaManager</strong></p>\n<blockquote>\n<p>tinyMediaManager is a media management tool written in Java/Swing. It is written to provide metadata for the Kodi Media Center (formerly known as XBMC), MediaPortal and Plex media server. Due to the fact that it is written in Java, tinyMediaManager will run on Windows, Linux and macOS (and possible more OS).</p>\n</blockquote>\n<p><strong>什么是ZogVM</strong></p>\n<blockquote>\n<p>ZogVM 是一款专门针对大量音频、视频进行管理的工具，支持多硬盘、局域网 NAS、设备离线检索、匹配字幕并下载等功能。</p>\n</blockquote>\n<p><strong>什么是极影派</strong></p>\n<blockquote>\n<p>极影派是一款本地视频管理工具，能够帮你管理本地电脑上的视频、电影，并且可以自动获取电影信息，包括类型、导演、主演、简介、海报图片等资料，用来创建属于自己的电影视频库。</p>\n</blockquote>\n<p>电影下多了之后，会存在重复下载，或者同一个片源有多个格式、分辨率，这个比较浪费空间，也不利于查找，今天我们就聊聊电影的管理。</p>\n<blockquote>\n<ol>\n<li>综合篇</li>\n<li>管理篇（本文）</li>\n<li>播放篇</li>\n<li>流媒体服务</li>\n<li>查询篇</li>\n</ol>\n</blockquote>\n<h1 id=\"命名格式\"><a href=\"#命名格式\" class=\"headerlink\" title=\"命名格式\"></a>命名格式</h1><p>资料的组织和存放，必然要按照一定的规则，否则肯定乱糟糟的，不利于查找，所以Kodi给出了电影的命名规则( <span class=\"exturl\" data-url=\"aHR0cHM6Ly9rb2RpLndpa2kvdmlldy9OYW1pbmdfdmlkZW9fZmlsZXMvTW92aWVz\">https://kodi.wiki/view/Naming_video_files/Movies<i class=\"fa fa-external-link-alt\"></i></span> )，我个人倾向于采用文件夹命名这样的结构：<br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/01/Video-Movie_Folder_File_Structure-1588298537860.jpg\" alt=\"title\"></p>\n<p>电视剧的命名规则（ <span class=\"exturl\" data-url=\"aHR0cHM6Ly9rb2RpLndpa2kvdmlldy9OYW1pbmdfdmlkZW9fZmlsZXMvVFZfc2hvd3M=\">https://kodi.wiki/view/Naming_video_files/TV_shows<i class=\"fa fa-external-link-alt\"></i></span> ）</p>\n<h1 id=\"管理软件\"><a href=\"#管理软件\" class=\"headerlink\" title=\"管理软件\"></a>管理软件</h1><h2 id=\"Kodi\"><a href=\"#Kodi\" class=\"headerlink\" title=\"Kodi\"></a>Kodi</h2><p>刮削器首选Kodi，功能强大、扩展性强、界面漂亮，为了电视等大屏设备做了特别优化，在家庭影音系统中倍受青睐。然而 Kodi 的劣势也很明显：比如默认情况下无法在不同设备上同步数据，这个我们放到查询篇再说。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/01/kodi-media-center-vulnerability-exposes-users-to-man-in-the-middle-attacks-600x315-1588300797866.png\" alt=\"title\"></p>\n<p>界面效果展示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/01/3536d9c54417375d82823002d2a3303-1588300950052.png\" alt=\"title\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/01/290fc0ece9c21758514fffef1573d78-1588308178290.png\" alt=\"title\"></p>\n<h2 id=\"MediaElch\"><a href=\"#MediaElch\" class=\"headerlink\" title=\"MediaElch\"></a>MediaElch</h2><p>这是目前本人日常用的刮削器，感觉用的人不是很多，但是官方的文档还比较详细，主要是支持和Kodi同步，意味着可以共享媒体库，这一点对我来说很重要。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/27/icon-1587952393579.png\" alt=\"title\"></p>\n<p>界面效果展示：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/27/a7289ec6269856496b1be887ae3545f-1587995862868.png\" alt=\"title\"></p>\n<p>同步设置界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/01/15fa93859f1e9326157980b4bcbe7b7-1588306523428.png\" alt=\"title\"></p>\n<h2 id=\"tinyMediaManager\"><a href=\"#tinyMediaManager\" class=\"headerlink\" title=\"tinyMediaManager\"></a>tinyMediaManager</h2><p>这个软件用的人比较多，网上教程也很多。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/01/images-1588301699586.jpg\" alt=\"title\"></p>\n<p>界面效果展示：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/27/703e264d7d24a7da30834de23079124-1587998438949.png\" alt=\"title\"></p>\n<p>看设置也支持和Kodi共享媒体库，但本人没实践过。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/01/image-5-1588305127636.png\" alt=\"title\"></p>\n<p>（图片来自：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9rb2Z6aGFuZ2FuZ3VvLmhvbWUuYmxvZy8yMDE5LzA2LzA0LyVFNyVBQyVBQyVFNCVCOCU4MCVFNSVCQyVCOS10aW55bWVkaWFtYW5hZ2VyLSVFNSU5RiVCQSVFNiU5QyVBQyVFOCVBRSVCRSVFNyVCRCVBRSVFNyVBRiU4Ny8lRUYlQkMlODk=\">https://kofzhanganguo.home.blog/2019/06/04/%E7%AC%AC%E4%B8%80%E5%BC%B9-tinymediamanager-%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE%E7%AF%87/）<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"ZogVM\"><a href=\"#ZogVM\" class=\"headerlink\" title=\"ZogVM\"></a>ZogVM</h2><p>这个软件最大的特点就是搜索速度极快，据说可以媲美EveryThing，可惜 ZogVM2已经停止更新了，但是 ZogVM3 又跳票了几年了。界面效果展示：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/01/zogvm2.0-1588303329930.jpg\" alt=\"title\"></p>\n<p>（图片来自：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3pvZ3ZtL3pvZ3ZtJUVGJUJDJTg5\">https://github.com/zogvm/zogvm）<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"极影派\"><a href=\"#极影派\" class=\"headerlink\" title=\"极影派\"></a>极影派</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/01/logo-2-1588302621835.png\" alt=\"title\"></p>\n<p>界面效果展示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/05/01/006D2KSdjw1fatuz0vokrj31e00nmne6-1588302889531.jpg\" alt=\"title\"></p>\n<p>（图片来自：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cud3V6dW93ZWkubmV0LzU1NzcuaHRtbCVFRiVCQyU4OQ==\">https://www.wuzuowei.net/5577.html）<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>这些软件都很优秀，总会有一款适合你的需求。</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a><strong>参考文档</strong></h1><blockquote>\n<p>Kodi官网<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9rb2RpLnR2Lw==\">https://kodi.tv/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>MediaElch官网<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cua3ZpYmVzLmRlL21lZGlhZWxjaC8=\">https://www.kvibes.de/mediaelch/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>MediaElch官方文档<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpYWVsY2guZ2l0aHViLmlvL21lZGlhZWxjaC1kb2Mv\">https://mediaelch.github.io/mediaelch-doc/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>tinyMediaManager官网<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudGlueW1lZGlhbWFuYWdlci5vcmcv\">https://www.tinymediamanager.org/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>ZogVM – 支持多硬盘、NAS 的本地音/视频库管理工具[Win]<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYXBwaW5uLmNvbS96b2d2bS8=\">https://www.appinn.com/zogvm/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>ZogVM 电影视频管理软件 - 影迷必备利器！整理/收集/管理硬盘 NAS 大量影音资源<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaXBsYXlzb2Z0LmNvbS96b2d2bS5odG1s\">https://www.iplaysoft.com/zogvm.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>极影派官网<br>地址：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5qZWVucGkuY29tLw==\">http://www.jeenpi.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>极影派 – 帮你管理本地电影视频库[Windows]<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYXBwaW5uLmNvbS9qZWVucGkv\">https://www.appinn.com/jeenpi/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["刮削器","ZogVM","极影派","Kodi","MediaElch","tinyMediaManager"]},{"title":"家庭多媒体中心（1）：综合篇","url":"/2020/05/01/%E5%AE%B6%E5%BA%AD%E5%A4%9A%E5%AA%92%E4%BD%93%E4%B8%AD%E5%BF%83%EF%BC%881%EF%BC%89%EF%BC%9A%E7%BB%BC%E5%90%88%E7%AF%87/","content":"<p><strong>什么是刮削器（Scrapers）</strong></p>\n<blockquote>\n<p>是指能够从以下受支持的站点收集电影的信息：IMDb，themoviedb.org，Rutten Tomatoes，OFDb.de，fanart.tv，port.hu、豆瓣等；</p>\n</blockquote>\n<p>这是一个系列，为了避免篇幅过长，准备分五个部分：</p>\n<blockquote>\n<ol>\n<li>综合篇（本文）</li>\n<li>影片的管理</li>\n<li>影片的播放</li>\n<li>流媒体服务</li>\n<li>离线查询</li>\n</ol>\n</blockquote>\n<p>以群晖为核心，从下载到播放，整个流程基本上实现了一个完整的闭环。</p>\n<h1 id=\"离线查询：\"><a href=\"#离线查询：\" class=\"headerlink\" title=\"离线查询：\"></a><strong>离线查询</strong>：</h1><p>首先要有个管理系统，能查到某一部电影有没有下载过，如果是下载过的片源，能查到它的格式、分辨率等信息。<br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/27/Jietu20200427-135747-1587967110918.jpg\" alt=\"title\"></p>\n<h1 id=\"下载片源：\"><a href=\"#下载片源：\" class=\"headerlink\" title=\"下载片源：\"></a><strong>下载片源</strong>：</h1><p>如果是没有下载过的片源，可以用迅雷、BT、PT等各类下载软件去下；</p>\n<h1 id=\"影片管理：\"><a href=\"#影片管理：\" class=\"headerlink\" title=\"影片管理：\"></a><strong>影片管理</strong>：</h1><ul>\n<li>少量的电影无所谓管理，但是当数量多了就需要管理，不仅仅是方便查找；</li>\n<li>如果电影都只在本机上，Windows平台上可以用极影派、zogvm2来管理，Mac上没研究过；</li>\n<li>如果你和我一样可能要用到Kodi、Jellyfin、Emby、Plex等，建议用MediaElch、tinyMediaManager来做刮削器，可以生成漂亮的海报墙。下图是jellyfin上的显示效果。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/27/0-1587966853645.png\" alt=\"title\"></p>\n<h1 id=\"影片播放：\"><a href=\"#影片播放：\" class=\"headerlink\" title=\"影片播放：\"></a><strong>影片播放</strong>：</h1><ul>\n<li>局域网中，虽然Kodi是个神器，而且支持各种平台，但是我还是更喜欢用各平台最常用的播放器，比如Windows下用PotPlayer，Mac下用IINA，Android手机上用MX Player，ios上用nPlayer。</li>\n<li>如果有远程播放的需求，可以试试Emby、jellyfin、Plex等，其实对我来说这是个伪需求。</li>\n</ul>\n<h1 id=\"流媒体服务：\"><a href=\"#流媒体服务：\" class=\"headerlink\" title=\"流媒体服务：\"></a><strong>流媒体服务</strong>：</h1><ul>\n<li>Plex、Emby是收费软件，按月付费提供 premium 服务，jellyfin是免费的，这几个软件都是跨平台的，哪怕是在windows电脑上，也是瞬间就可以变成流媒体服务器的。</li>\n<li>国产软件，也可以考虑威动影音，支持移动端，虽然好像已经不再维护，但还是可以使用的。</li>\n</ul>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a><strong>参考文档</strong></h1><blockquote>\n<p>Add-on:Universal Movie Scraper<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9rb2RpLndpa2kvdmlldy9BZGQtb246VW5pdmVyc2FsX01vdmllX1NjcmFwZXI=\">https://kodi.wiki/view/Add-on:Universal_Movie_Scraper<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>极影派 – 帮你管理本地电影视频库[Windows]<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYXBwaW5uLmNvbS9qZWVucGkv\">https://www.appinn.com/jeenpi/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>ZogVM – 支持多硬盘、NAS 的本地音/视频库管理工具[Win]<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYXBwaW5uLmNvbS96b2d2bS8=\">https://www.appinn.com/zogvm/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Linux下电影管理软件的简单比较<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmJnbWUubWUvcG9zdHMvdGhlLWxpbnV4LW1vdmllLWNvbGxlY3Rpb24tbWFuYWdlcnMtY29tcGFyZWQvI21lZGlhZWxjaA==\">https://blog.bgme.me/posts/the-linux-movie-collection-managers-compared/#mediaelch<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>手把手教您用tMM刮削影片信息，让KODI、Jellyfin、PLEX、使用本地媒体电影墙！<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2E0d2txdzM3Lw==\">https://post.smzdm.com/p/a4wkqw37/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>KODI使用心得（界面改中文、插件安装、设置媒体库）<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9kZjQ3NTc1NGFjYzE=\">https://www.jianshu.com/p/df475754acc1<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["Emby","jellyfin","刮削器","Scrapers","Plex","ZogVM","极影派","Kodi"]},{"title":"GitNote的简单使用记录","url":"/2020/04/29/GitNote%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/","content":"<p><strong>什么是GitHub</strong></p>\n<blockquote>\n<p>GitHub 是透過 Git 進行版本控制的軟體原始碼代管服務平台，由 GitHub 公司的開發者 Chris Wanstrath、PJ Hyett 和 Tom Preston-Werner 使用 Ruby on Rails 編寫而成。 GitHub 同時提供付費帳戶和免費帳戶。 【維基百科】</p>\n</blockquote>\n<p><strong>什么是git</strong></p>\n<blockquote>\n<p>git是一個分散式版本控制軟體，最初由林納斯·托瓦茲創作，於2005年以 GPL<br> 釋出。最初目的是為更好地管理 Linux 核心開發而設計。應注意的是，這與 GNU Interactive Tools 不同。 git 最初的開發動力來自於 BitKeeper 和Monotone。 【維基百科】</p>\n</blockquote>\n<p><strong>什么是Markdown</strong></p>\n<blockquote>\n<p>Markdown是一種輕量級標記式語言，創始人為約翰·格魯伯。它允許人們使用易讀易寫的純文字格式編寫文件，然後轉換成有效的XHTML文件。這種語言吸收了很多在電子郵件中已有的純文字標記的特性。【維基百科】</p>\n</blockquote>\n<p><strong>什么是GitNote</strong></p>\n<blockquote>\n<p>GitNote 是一款基于 git 的现代笔记软件，不需要依赖本地 git 环境。支持 Windows、macOS、Linux，使用 Git 仓库作为数据保存，如 GitHub、GitLab 等，内置 Git 支持，依托 Git 仓库的特性，拥有历史版本、私密笔记、无限空间等特点。</p>\n<p>官网地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRub3RlYXBwLmNvbS8=\">https://gitnoteapp.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<p>看到<strong>历史版本</strong>、<strong>私密笔记</strong>、<strong>无限空间</strong>是不是有些心动？再往下看，还支持<strong>脑图</strong>、支持<strong>流程图</strong>、支持<strong>多图床</strong>，更重要的是支持markdown，是不是已经按奈不住了？</p>\n<p>本文只是粗略描述了过程，详细的安装和配置，请阅读参考文档部分。</p>\n<h1 id=\"1、申请GitHub账号\"><a href=\"#1、申请GitHub账号\" class=\"headerlink\" title=\"1、申请GitHub账号\"></a>1、申请GitHub账号</h1><p>先要去 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tLw==\">https://github.com/<i class=\"fa fa-external-link-alt\"></i></span> 注册账号，注册完登陆 Github 看起来应该是这样：<br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/17/github-1587137114658.jpg\" alt=\"title\"></p>\n<h1 id=\"2、建私有仓库，存放笔记\"><a href=\"#2、建私有仓库，存放笔记\" class=\"headerlink\" title=\"2、建私有仓库，存放笔记\"></a>2、建私有仓库，存放笔记</h1><p>访问 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25ldw==\">https://github.com/new<i class=\"fa fa-external-link-alt\"></i></span> 创建仓库。 填写 Repository name，推荐将仓库命名为 xxnote，一目了然。</p>\n<p><strong>特别注意：</strong></p>\n<p>除非你打算公开所有笔记，否则，务必选择 Private。<br>勾选 Initialize this repository with a README，省去我们自己初始化仓库的工作。<br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/17/repo-1587137248312.jpg\" alt=\"title\"></p>\n<p>点击 Create repository 完成创建</p>\n<h1 id=\"3、建公有仓库，存放图片\"><a href=\"#3、建公有仓库，存放图片\" class=\"headerlink\" title=\"3、建公有仓库，存放图片\"></a>3、建公有仓库，存放图片</h1><p>编写笔记的时候，会用到图片，我们将所有图片也托管到 Github 上。类似上一步，再创建一个仓库。 填写 Repository name，推荐将仓库命名为gitnote-images之类，一目了然。<br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/17/pic-1587137364240.jpg\" alt=\"title\"></p>\n<p><strong>特别注意：</strong></p>\n<p>务必选择 Public，否则在笔记中无法引用图片。<br>勾选 Initialize this repository with a README，省去我们自己初始化仓库的工作。<br>点击 Create repository 完成创建</p>\n<h1 id=\"4、下载、配置Gitnote\"><a href=\"#4、下载、配置Gitnote\" class=\"headerlink\" title=\"4、下载、配置Gitnote\"></a>4、下载、配置Gitnote</h1><p>前往 GitNote 下载对应版本的安装包，并安装。 第一次打开，应该是这样的。<br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/17/%E4%B8%BB%E7%95%8C%E9%9D%A2-1587136969998.PNG\" alt=\"title\"></p>\n<h2 id=\"4-1、-添加本地已经-GIT-仓库\"><a href=\"#4-1、-添加本地已经-GIT-仓库\" class=\"headerlink\" title=\"4.1、 添加本地已经 GIT 仓库\"></a>4.1、 添加本地已经 GIT 仓库</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/27/import-1587956373130.gif\" alt=\"title\"><br>【以上动图来自官网：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRub3RlYXBwLmNvbS96aC9kb2NzL3NldHVwLmh0bWwlRTMlODAlOTE=\">https://gitnoteapp.com/zh/docs/setup.html】<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"4-2、-克隆一个仓库\"><a href=\"#4-2、-克隆一个仓库\" class=\"headerlink\" title=\"4.2、 克隆一个仓库\"></a>4.2、 克隆一个仓库</h2><p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/27/clone-1587956400202.gif\" alt=\"title\"><br>【以上动图来自官网：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRub3RlYXBwLmNvbS96aC9kb2NzL3NldHVwLmh0bWwlRTMlODAlOTE=\">https://gitnoteapp.com/zh/docs/setup.html】<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"5、安装图床插件\"><a href=\"#5、安装图床插件\" class=\"headerlink\" title=\"5、安装图床插件\"></a>5、安装图床插件</h1><h2 id=\"5-1、从插件市场\"><a href=\"#5-1、从插件市场\" class=\"headerlink\" title=\"5.1、从插件市场\"></a>5.1、从插件市场</h2><p>一直出错，显示无文字的红色xx，只能另找办法。</p>\n<h2 id=\"5-2、gitnote-手动插件安装方式\"><a href=\"#5-2、gitnote-手动插件安装方式\" class=\"headerlink\" title=\"5.2、gitnote 手动插件安装方式\"></a>5.2、gitnote 手动插件安装方式</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aGFvcGVuZy5tZS9pbmRleC5waHAvYXJjaGl2ZXMvZ2l0bm90ZS1pbnN0YWxsLXBsdWdpbi5odG1s\">这是作者的博客推荐的方法<i class=\"fa fa-external-link-alt\"></i></span><br><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aGFvcGVuZy5tZS9pbmRleC5waHAvYXJjaGl2ZXMvZ2l0bm90ZS1pbnN0YWxsLXBsdWdpbi5odG1s\">https://zhaopeng.me/index.php/archives/gitnote-install-plugin.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<ol>\n<li><p>到 github 下载插件<br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3poYW9wZW5nbWUvZ2l0bm90ZS1leHRlbnNpb25z\">https://github.com/zhaopengme/gitnote-extensions<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>解压到 {user}/.gitnote/plugins 目录</p>\n</li>\n<li><p>{user} 用户的根目录,windows是 c:/users/{用户名}</p>\n</li>\n<li><p>重启 GitNote</p>\n</li>\n</ol>\n<h1 id=\"6、几个坑\"><a href=\"#6、几个坑\" class=\"headerlink\" title=\"6、几个坑\"></a>6、几个坑</h1><h2 id=\"6-1、github图床问题\"><a href=\"#6-1、github图床问题\" class=\"headerlink\" title=\"6.1、github图床问题\"></a>6.1、github图床问题</h2><ul>\n<li>不要用菜单栏的插入图片，这个不会上传；</li>\n<li>拖拽图片或者附件到gitnote界面时，会弹出上面一个十字架和下面一个方框，一定要放到方框中，因为下面写着“上传到github”，如果不在方框内，会提示“不支持附件，仅支持上传第三方”，搞得一度以为自己设置有问题；</li>\n</ul>\n<h2 id=\"6-2、网页剪藏问题\"><a href=\"#6-2、网页剪藏问题\" class=\"headerlink\" title=\"6.2、网页剪藏问题\"></a>6.2、网页剪藏问题</h2><p>点开左上角的图标</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/18/1587172157-1587172234746.png\" alt=\"title\"></p>\n<p>记得要先注册</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/18/1587172463(1)-1587172504793.png\" alt=\"title\"></p>\n<p>因为这个账号不是github的账号，而是gitnote的账号，用于分享和收藏用的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/18/%E4%BC%9A%E5%91%98-1587173880450.png\" alt=\"title\"></p>\n<h2 id=\"6-3、各种莫名错误\"><a href=\"#6-3、各种莫名错误\" class=\"headerlink\" title=\"6.3、各种莫名错误\"></a>6.3、各种莫名错误</h2><ul>\n<li>网络错误：</li>\n</ul>\n<p>比如上传github图床时，时不时出现的网络错误</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/18/%E7%BD%91%E7%BB%9C%E9%94%99%E8%AF%AF-1587173935850.jpg\" alt=\"title\"></p>\n<ul>\n<li>预览问题：</li>\n</ul>\n<p>上传成功的图片不显示，而只是显示一个title</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/18/%E4%B8%8D%E6%98%BE%E7%A4%BA-1587174417113.png\" alt=\"title\"></p>\n<p>而实际上在github的网页上应该是这样的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/18/1587175163(1)-1587175194527.png\" alt=\"title\"></p>\n<ul>\n<li>文档历史</li>\n</ul>\n<p>不知道什么原因，一直没有文档的编辑历史</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/18/1587175317(1)-1587175333780.jpg\" alt=\"title\"></p>\n<p>个人觉得如果你不是程序员，还是用EverNote、为知笔记、有道云笔记吧~~<br>【备注：之所以不提OneNote是因为国内同步总有各种问题，龟速甚至无法同步，所以不提也罢】</p>\n<p>有句话叫“免费的其实是最贵的”！虽然不花钱，可是得花时间。</p>\n<p>当然你有兴趣、有时间，还是可以折腾折腾的，毕竟也是一种乐趣不是？</p>\n<p><strong>参考文档</strong></p>\n<blockquote>\n<p>GitNote帮助文档 ：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRub3RlYXBwLmNvbS96aC9kb2NzLw==\">https://gitnoteapp.com/zh/docs/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>数据交给你，我放心！开源笔记软件 GitNote 配置及试用：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC84MDMwNTQ2NQ==\">https://zhuanlan.zhihu.com/p/80305465<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>程序员笔记利器gitNote：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RoZV9wb3dlci9hcnRpY2xlL2RldGFpbHMvMTAzMTI1MTc1\">https://blog.csdn.net/the_power/article/details/103125175<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["GitHub","笔记","Markdown","git","GitNote"]},{"title":"在GitHub上搭建Blog","url":"/2020/04/29/%E5%9C%A8GitHub%E4%B8%8A%E6%90%AD%E5%BB%BABlog/","content":"<p><strong>什么是Hexo</strong></p>\n<blockquote>\n<p>Hexo是一款基于Node.js的静态博客框架，依赖少、易于安装使用，使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。可以方便的托管在GitHub和Heroku上，是搭建博客的首选框架。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/29/WechatIMG4019-1588127705678.png\" alt=\"title\"></p>\n<p>之前我们聊过GitNote的简单使用记录，一款使用Git仓库来保存数据的笔记软件。</p>\n<p>但笔记并不都适宜公开，像我的笔记中还有很多跟工作相关的内容，比如待办事项等，所以我们在创建笔记仓库时，建议选择的是Private属性。如果我们有想要公开分享的内容时怎么办呢？这就要用到我们今天介绍的Hexo。</p>\n<p>具体的安装步骤，仔细阅读参考文档即可。</p>\n<p>这里给大家看看效果：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93YnN1MjAwMy5naXRodWIuaW8v\">https://wbsu2003.github.io/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><strong>介绍下一篇文章的发布流程：</strong></p>\n<ol>\n<li><strong>编辑</strong><blockquote>\n<p>在GitNote中编写Markdown笔记（图床建议使用GitHub）；</p>\n</blockquote>\n</li>\n<li><strong>拷贝</strong><blockquote>\n<p>将MD文档，复制到blog\\source_poster\\目录下；</p>\n</blockquote>\n</li>\n<li><strong>预览</strong><blockquote>\n<p>在blog目录中，cmd模式下依次运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/29/WechatIMG4022-1588129251266.png\" alt=\"title\"></p>\n</blockquote>\n</li>\n</ol>\n<blockquote>\n<p>在浏览器中打开网址：<span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdDo0MDAw5Y2z5Y+v55yL5Yiw6aKE6KeI5pWI5p6c\">http://localhost:4000即可看到预览效果<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<ol start=\"4\">\n<li><strong>发布到Hexo</strong><blockquote>\n<p>在blog目录中，cmd模式下运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo d -g</span><br></pre></td></tr></table></figure>\n<p>然后在浏览器中打开网址：https://用户名.github.io</p>\n</blockquote>\n</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/29/WechatIMG4023-1588130305246.png\" alt=\"title\"></p>\n<ol start=\"5\">\n<li><strong>发布到微信公众号</strong><blockquote>\n<p>微信公众号并不支持MD，所以我们只能复制右侧的预览界面</p>\n</blockquote>\n</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/29/Jietu20200429-112742-1588130920726.jpg\" alt=\"title\"></p>\n<blockquote>\n<p>微信公众号不支持第三方图床，直接粘贴过来会显示图片错误，所以需要重新上传图片</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/29/Jietu20200429-113036-1588131074459.jpg\" alt=\"title\"></p>\n<blockquote>\n<p>稍微再调整下字体、格式等等就可以发布了。</p>\n</blockquote>\n<p><strong>参考文档</strong></p>\n<blockquote>\n<p>官方文档<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3Mv\">https://hexo.io/zh-cn/docs/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>GitHub+Hexo 搭建个人网站详细教程<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8yNjYyNTI0OQ==\">https://zhuanlan.zhihu.com/p/26625249<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["Blog","Hexo","GitHub","Markdown","GitNote","博客","微信公众号"]},{"title":"Hexo-theme-next主题","url":"/2020/04/28/Hexo-theme-next%E4%B8%BB%E9%A2%98/","content":"<p><strong>什么是NexT</strong></p>\n<blockquote>\n<p>«NexT» is a high quality elegant Hexo theme. It is crafted from scratch with love.</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/29/63487983-da41b080-c4df-11e9-951c-64883a8a5e9b-1588135737833.png\" alt=\"title\"></p>\n<h1 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1. 前言\"></a>1. 前言</h1><p>Hexo安装完成后，默认的主题是landscape，个人不是很喜欢，所以我们要更换。<br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/29/Jietu20200429-130211-1588137107672.jpg\" alt=\"title\"></p>\n<p>随便搜搜你就会发现，Next是排名最靠前的主题了，也是目前教程最多的主题，所以我们决定换成Next试试看，先上个效果。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/29/WechatIMG4023-1588130305246.png\" alt=\"title\"></p>\n<p>粗看差别也不是特别大对不对？仔细看还是有一些区别的：</p>\n<blockquote>\n<ul>\n<li>去掉了顶部的banner</li>\n<li>对Markdown的引用显示的更友好</li>\n<li>没有全部居中显示</li>\n</ul>\n</blockquote>\n<p>其实好看不好的不重要，说白了就是想折腾一下。</p>\n<h1 id=\"2-安装\"><a href=\"#2-安装\" class=\"headerlink\" title=\"2. 安装\"></a>2. 安装</h1><h2 id=\"2-1-NexT的版本\"><a href=\"#2-1-NexT的版本\" class=\"headerlink\" title=\"2.1 NexT的版本\"></a>2.1 NexT的版本</h2><p>v6之前的版本，已不再维护。<br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2lpc3NuYW4vaGV4by10aGVtZS1uZXh0\">https://github.com/iissnan/hexo-theme-next<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>v6之后的版本<br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by10aGVtZS1uZXh0\">https://github.com/theme-next/hexo-theme-next<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"2-2-安装NexT\"><a href=\"#2-2-安装NexT\" class=\"headerlink\" title=\"2.2 安装NexT\"></a>2.2 安装NexT</h2><p>在<code>blog</code>目录，cmd模式下运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-theme-next themes&#x2F;next</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>网上的教程基本上都是安装的v5.1.4之前的版本，可以用，但是会遇到各种奇葩的问题，所以建议用v6以上的版本。</strong></p>\n</blockquote>\n<p>进入<code>blog\\themes</code>目录，你会发现，除了<code>landscape</code>目录外，还多了一个<code>next</code>目录。</p>\n<h2 id=\"2-3-切换主题\"><a href=\"#2-3-切换主题\" class=\"headerlink\" title=\"2.3 切换主题\"></a>2.3 切换主题</h2><p>回到<code>blog</code>目录，编辑<code>_config.yml</code>文件，将<code>theme：</code>后面的<code>landscape</code>改成<code>next</code>，保存并退出。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/29/WechatIMG4028-1588138154211.png\" alt=\"title\"></p>\n<p>回到<code>blog</code>目录，cmd模式下运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo d -g</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"3-修改\"><a href=\"#3-修改\" class=\"headerlink\" title=\"3. 修改\"></a>3. 修改</h1><h2 id=\"3-1-修改Scheme\"><a href=\"#3-1-修改Scheme\" class=\"headerlink\" title=\"3.1 修改Scheme\"></a>3.1 修改Scheme</h2><p>进入<code>blog\\themes\\next</code>目录，打开<code>_config.yml</code>文件。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/29/WechatIMG4029-1588138855093.png\" alt=\"title\"></p>\n<h2 id=\"3-1-修改菜单\"><a href=\"#3-1-修改菜单\" class=\"headerlink\" title=\"3.1 修改菜单\"></a>3.1 修改菜单</h2><p>默认只有2个菜单<br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/29/Jietu20200429-134353-1588139151630.jpg\" alt=\"title\"></p>\n<p>再打开3个，去掉前面的#号就行<br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/29/WechatIMG4030-1588139208209.png\" alt=\"title\"></p>\n<p>在编译发布一次</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo d -g</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/29/Jietu20200429-134520-1588139278556.jpg\" alt=\"title\"></p>\n<p>已经变成了5个菜单了，但是新增的菜单如果你什么都不做，点击后就会显示404错误。<br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/29/WechatIMG4031-1588139439421.png\" alt=\"title\"></p>\n<p>需要创建相应的文件夹，比如标签：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new page &quot;tags&quot;</span><br></pre></td></tr></table></figure>\n\n<p>至于我们要改成什么样，给你看看官方的demo，让我们一起努力吧！<br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/29/WechatIMG4033-1588140211540.png\" alt=\"title\"></p>\n<p><strong>参考文档</strong></p>\n<blockquote>\n<p>官网<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by10aGVtZS1uZXh0\">https://github.com/theme-next/hexo-theme-next<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Hexo-NexT配置超炫网页效果<br>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC85ZjBlOTBjYzMyYzI=\">https://www.jianshu.com/p/9f0e90cc32c2<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["Hexo","GitHub","NexT"]},{"title":"RaiDrive挂载frp映射的WebDAV网盘","url":"/2020/04/28/RaiDrive%E6%8C%82%E8%BD%BDfrp%E6%98%A0%E5%B0%84%E7%9A%84WebDAV%E7%BD%91%E7%9B%98/","content":"<p><strong>RaiDrive是什么？</strong></p>\n<blockquote>\n<p>RaiDrive 是一款能够将一些网盘映射为本地网络磁盘的工具，支持 Google Drive、Google Photos、Dropbox、OneDrive、FTP、SFTP、WebDAV。</p>\n</blockquote>\n<p><strong>frp是什么？</strong></p>\n<blockquote>\n<p>frp 是一个高性能的反向代理应用，可以帮助您轻松地进行内网穿透，对外网提供服务，支持tcp, http, https 等协议类型，并且web 服务支持根据域名进行路由转发。</p>\n</blockquote>\n<p><strong>WebDAV是什么？</strong></p>\n<blockquote>\n<p>WebDAV是一组HTTP的扩展协议，支持用户直接对远程Web服务器上的文件进行编辑和管理。 它是一种标准协议，大多数操作系统都支持，比如Windows、Mac和Linux。您可以将WebDAV服务器上的一个文件夹映射成一个网络驱动器。</p>\n</blockquote>\n<p>在群晖上开启WebDAV，只要在<strong>套件中心</strong>安装WebDAV Server即可，剩下的只是一些简单的设置。</p>\n<p>暂时未启用https，如果需要的话勾选即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/25/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20200425103339-1587782369660.png\" alt=\"title\"></p>\n<p>在电脑上打开RaiDrive，按下图设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/25/c4a40fe28c7c2903037bff96010779b-1587782608503.png\" alt=\"title\"></p>\n<p>确定之后</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/25/4edca9758e42ca3a58951a9c466e0c4-1587782670948.png\" alt=\"title\"></p>\n<p>在资源管理器中打开<br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/25/36fe38fbe78e2e38dc2a925a479b7a5-1587782702646.png\" alt=\"title\"></p>\n<p>是不是很简单？接下来我们把它映射到外网，方便从远程进行访问。</p>\n<p>首先要在frpc.ini增加下面的内容</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[webdav]</span></span><br><span class=\"line\"><span class=\"attr\">type</span> = http</span><br><span class=\"line\"><span class=\"attr\">local_ip</span> = <span class=\"number\">192.168</span>.<span class=\"number\">0.199</span></span><br><span class=\"line\"><span class=\"attr\">local_port</span> = <span class=\"number\">5005</span></span><br><span class=\"line\"><span class=\"attr\">use_encryption</span> = <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">use_gzip</span> = <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">custom_domains</span> = webdav.abc.ml</span><br></pre></td></tr></table></figure>\n\n<p>我是在docker中安装的frpc容器，设置好之后重启一下以便设置生效。</p>\n<p>在电脑上打开RaiDrive，端口是必填的，所以还是和局域网一样填了5005。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/25/2564299304a703440e7df7564292e03-1587783865197.png\" alt=\"title\"></p>\n<p>可是这一次没成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/25/4a9ce9e2e46414ef353878e274b2e33-1587783976746.png\" alt=\"title\"></p>\n<p>在网上找了一圈，也没找到解决办法。直到有一天无意中把端口改成了80</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/25/8c58c72442bfb7626ef29cdd1b20a0a-1587784272628.png\" alt=\"title\"></p>\n<p>见证奇迹的时刻到了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/25/c68ac1e782f5f089d0894fd114b2dff-1587784987298.png\" alt=\"title\"></p>\n<p>收工~~</p>\n","categories":["各种折腾"],"tags":["docker","WebDAV","RaiDrive","frp"]},{"title":"在GCP上安装Zerotier的Moon服务器","url":"/2020/04/28/%E5%9C%A8GCP%E4%B8%8A%E5%AE%89%E8%A3%85Zerotier%E7%9A%84Moon%E6%9C%8D%E5%8A%A1%E5%99%A8/","content":"<p>原本速度虽然不快，但是好歹也有1M左右的传输速度，但是架不住时常抽风，今天开始又完全不通了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/22/Jietu20200422-125540-1587531353984.jpg\" alt=\"title\"></p>\n<p>而之前是这样的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/22/Jietu20200422-130750-1587532105407.jpg\" alt=\"title\"></p>\n<p>查阅文档后发现，moon的搭建是为了补充根节点在国外，速度慢，且不稳定的一个补充方案，以便使zerotier能在各种情况都能稳定运行的一种保障. </p>\n<p>GCP有公网地址，直接就它了。</p>\n<p><strong>1. 在GCP上安装Zerotier</strong></p>\n<p>用官网上提供的命令行：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">curl -s https://install.zerotier.com | sudo bash </span><br></pre></td></tr></table></figure>\n\n<p>开始安装：<br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/22/38901587517414_.pic_hd-1587534791827.jpg\" alt=\"title\"></p>\n<p>安装完成：<br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/22/WechatIMG3891-1587534849922.png\" alt=\"title\"></p>\n<p><strong>2. 加入网络</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/22/WechatIMG3897-1587536175663.png\" alt=\"title\"></p>\n<p><strong>3. 获取网络情况</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/22/WechatIMG3899-1587536235890.png\" alt=\"title\"></p>\n<p><strong>4. 生成moon.json</strong><br>进入 /var/lib/zerotier-one 文件夹<br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/22/WechatIMG3893-1587534932410.png\" alt=\"title\"></p>\n<p>运行下面的语句</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">zerotier-idtool initmoon identity.public &gt;&gt;moon.json</span><br></pre></td></tr></table></figure>\n\n<p>会在当前目录下产生一个新文件 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3dic3UyMDAzL2dpdG5vdGUtaW1hZ2VzQG1hc3Rlci9teW5vdGUvMjAyMC8wNC8yMi9tb29uLTE1ODc1MzU3MDYyMDMuanNvbg==\">moon.js<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>直接运行<code>vi moon.js</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/22/WechatIMG3895-1587535338523.png\" alt=\"title\"></p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"> <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;3648b35427&quot;</span>,</span><br><span class=\"line\"> <span class=\"attr\">&quot;objtype&quot;</span>: <span class=\"string\">&quot;world&quot;</span>,</span><br><span class=\"line\"> <span class=\"attr\">&quot;roots&quot;</span>: [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">   <span class=\"attr\">&quot;identity&quot;</span>: <span class=\"string\">&quot;3648b35427:0:49fbcc3fb665ac07dbbf5825a63d771d38dcc37f94393de88766d3a39a488156e02f6d816e3a3a3684af5d2385b7401944ce54651fd8de6b2a13f4d8d0ec9a5c&quot;</span>,</span><br><span class=\"line\">   <span class=\"attr\">&quot;stableEndpoints&quot;</span>: []</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> ],</span><br><span class=\"line\"> <span class=\"attr\">&quot;signingKey&quot;</span>: <span class=\"string\">&quot;3475482010c71caf78bf00573552ebcd53cd83b2e09572374eaeae2383c9773d9d0c697e4ee0b3ae4a74e20abd04651c9fe6a339a1077f47bbeedce2a10d44f1&quot;</span>,</span><br><span class=\"line\"> <span class=\"attr\">&quot;signingKey_SECRET&quot;</span>: <span class=\"string\">&quot;294e4d31e71847eeea842aa60c2aba603f95666263970bb39e21eb4c349ee77c265bf903fce3b1870f9825346b87de7861b1538f24006d93e20b90f1a9bd9913&quot;</span>,</span><br><span class=\"line\"> <span class=\"attr\">&quot;updatesMustBeSignedBy&quot;</span>: <span class=\"string\">&quot;3475482010c71caf78bf00573552ebcd53cd83b2e09572374eaeae2383c9773d9d0c697e4ee0b3ae4a74e20abd04651c9fe6a339a1077f47bbeedce2a10d44f1&quot;</span>,</span><br><span class=\"line\"> <span class=\"attr\">&quot;worldType&quot;</span>: <span class=\"string\">&quot;moon&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>5. 需要修改stableEndpoints</strong></p>\n<p>增加做moon机器的IP地址信息如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"> <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;3648b35427&quot;</span>,</span><br><span class=\"line\"> <span class=\"attr\">&quot;objtype&quot;</span>: <span class=\"string\">&quot;world&quot;</span>,</span><br><span class=\"line\"> <span class=\"attr\">&quot;roots&quot;</span>: [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">   <span class=\"attr\">&quot;identity&quot;</span>: <span class=\"string\">&quot;3648b35427:0:49fbcc3fb665ac07dbbf5825a63d771d38dcc37f94393de88766d3a39a488156e02f6d816e3a3a3684af5d2385b7401944ce54651fd8de6b2a13f4d8d0ec9a5c&quot;</span>,</span><br><span class=\"line\">   <span class=\"attr\">&quot;stableEndpoints&quot;</span>: [<span class=\"string\">&quot;34.84.xxx.xxx/9993&quot;</span>,<span class=\"string\">&quot;192.168.191.1/9993&quot;</span>]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> ],</span><br><span class=\"line\"> <span class=\"attr\">&quot;signingKey&quot;</span>: <span class=\"string\">&quot;3475482010c71caf78bf00573552ebcd53cd83b2e09572374eaeae2383c9773d9d0c697e4ee0b3ae4a74e20abd04651c9fe6a339a1077f47bbeedce2a10d44f1&quot;</span>,</span><br><span class=\"line\"> <span class=\"attr\">&quot;signingKey_SECRET&quot;</span>: <span class=\"string\">&quot;294e4d31e71847eeea842aa60c2aba603f95666263970bb39e21eb4c349ee77c265bf903fce3b1870f9825346b87de7861b1538f24006d93e20b90f1a9bd9913&quot;</span>,</span><br><span class=\"line\"> <span class=\"attr\">&quot;updatesMustBeSignedBy&quot;</span>: <span class=\"string\">&quot;3475482010c71caf78bf00573552ebcd53cd83b2e09572374eaeae2383c9773d9d0c697e4ee0b3ae4a74e20abd04651c9fe6a339a1077f47bbeedce2a10d44f1&quot;</span>,</span><br><span class=\"line\"> <span class=\"attr\">&quot;worldType&quot;</span>: <span class=\"string\">&quot;moon&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>其中<br>34.84.xxx.xxx 为公网地址<br>192.168.191.1 为zerotier分配的地址，后台设置时已经取消了自动分配；</p>\n<p><strong>6. 建立私有网络的zerotier标志性文件</strong></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">zerotier-idtool genmoon moon.json</span><br></pre></td></tr></table></figure>\n\n<p>运行上面的命令以后，就会在该文件夹下生成类似这样的一个新文件：0000003648b35427.moon。然后把他们拷贝到做 moon 机器的 /var/lib/zerotier-one/moons.d 目录里去（这个目录是拷贝之前手工建立的），然后重启 zerotier-one。</p>\n<p><strong>7. 重启服务</strong></p>\n<p>网上的命令是这样的</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">killall -9 zerotier-one</span><br><span class=\"line\">zerotier-one -d</span><br></pre></td></tr></table></figure>\n<p>但是我执行后遇到错误，所以最简单的办法是直接reboot</p>\n<p><strong>8. 客户端配置</strong></p>\n<ul>\n<li>在没有加入moon时，运行<code>zerotier-cli listpeers</code>查看客户端的连接情况</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/22/WechatIMG3906-1587536897732.png\" alt=\"title\"></p>\n<p>可以看到都是planet和leaf，没有moon；</p>\n<ul>\n<li><p>不管Windows还是Mac OS，都需要以管理员身份运行：<br><code>zerotier-cli orbit 3648b35427 3648b35427</code></p>\n</li>\n<li><p>再次用 <code>zerotier-cli listpeers</code> 查看客户端的连接情况</p>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/22/WechatIMG3908-1587537050446.png\" alt=\"title\"></p>\n<ul>\n<li>注意红色的部分，看到了moon有木有？</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/22/WechatIMG3905-1587537114326.png\" alt=\"title\"></p>\n<p>参考文档：</p>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NvbGRib3kyNTgvYXJ0aWNsZS9kZXRhaWxzLzkzMTMzODYw\">ZeroTier-One配置moon心得<i class=\"fa fa-external-link-alt\"></i></span><br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI5MDUwNTk5L2FydGljbGUvZGV0YWlscy85NTc1NzExNQ==\">ZeroTier-One搭建moon完整过程<i class=\"fa fa-external-link-alt\"></i></span><br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2F0dXJsL2F3ZXNvbWUtYW50aS1nZncvYmxvYi9tYXN0ZXIvWmVyb1RpZXIvWmVyb1RpZXJfTW9vbnMubWQ=\">建立自定义 ZeroTier Moons 服务器<i class=\"fa fa-external-link-alt\"></i></span><br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnpjemMuY3ovMjAxOC8wMy8xNC9aZXJvVGllci1tb29uLSVFOCVBRSVCRSVFNyVCRCVBRSVFNiU5NSU5OSVFNyVBOCU4Qi8=\">ZeroTier moon 设置教程<i class=\"fa fa-external-link-alt\"></i></span><br><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5sdWNrdHUuY29tL2FyY2hpdmVzLzc2NC5odG1s\">初探：建立 zerotier 的 moon 服务器<i class=\"fa fa-external-link-alt\"></i></span><br><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5sdWNrdHUuY29tL2FyY2hpdmVzLzc2Ni5odG1s\">再探：创建 zerotier moon 其实很简单<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["GCP","Zerotier","Moon"]},{"title":"手动安装WordPress","url":"/2020/04/28/%E6%89%8B%E5%8A%A8%E5%AE%89%E8%A3%85WordPress/","content":"<p>原本以为下载了源代码，丢到群晖的web就OK了，但是很快就被打脸了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/20/405-not-allowed-error-nginx-chrome-1587372276790.png\" alt=\"title\"></p>\n<p>换浏览器，用Safari<br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/20/405-not-allowed-error-nginx-safari-1587372451916.png\" alt=\"title\"></p>\n<p>算了，没力气折腾，还是把Nginx换成Apache试试吧</p>\n<p><strong>安装组件</strong></p>\n<ul>\n<li>之前已经安装过Web Station、PHP5.6、PHP7.2、MariaDB 5、phpMyAdmin，所以主要再装个Apache2.4即可</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/20/Jietu20200420-165729-1587373072541.jpg\" alt=\"title\"></p>\n<ul>\n<li>进入Web Satation修改http后端服务器</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/20/Jietu20200420-165544-1587373005801.jpg\" alt=\"title\"></p>\n<ul>\n<li><p>对PHP7.2进行设置<br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/20/Jietu20200420-170053-1587373282769.jpg\" alt=\"title\"></p>\n</li>\n<li><p>安装PHP7.2必要的组件，安装curl，gd，mysqli，openssl，下图中直接打钩就行；<br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/20/Jietu20200420-170401-1587373473543.jpg\" alt=\"title\"></p>\n</li>\n<li><p>在phpMyAdmin，用root账户登录，新建WordPress的数据库</p>\n</li>\n<li><p>将wp-config-sample.php复制一份，重命名为wp-config.php，按下图进行修改：<br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/20/WechatIMG3869-1587373734970.png\" alt=\"title\"></p>\n</li>\n<li><p>访问<span class=\"exturl\" data-url=\"aHR0cDovL2lwL3dvcmRwcmVzcyVFRiVCQyU4QyVFNiU4QyU4OSVFNiVBRCVBNSVFOSVBQSVBNCVFNiU5MyU4RCVFNCVCRCU5QyVFNSU4RCVCMyVFNSU4RiVBRiVFRiVCQyU5Qg==\">http://IP/wordpress，按步骤操作即可；<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n</ul>\n<p>到这里，已经可以在局域网中通过IP使用了，可以根据自己的喜好设置主题等；<br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/20/WechatIMG3870-1587373941561.png\" alt=\"title\"></p>\n<p><strong>参考文档</strong></p>\n<blockquote>\n<p>1、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9raW5zdGEuY29tL2Jsb2cvNDA1LW1ldGhvZC1ub3QtYWxsb3dlZC1lcnJvci8=\">How to Fix the 405 Method Not Allowed Error on Your WordPress Site<i class=\"fa fa-external-link-alt\"></i></span><br>2、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9vZGNuLnRvcC8yMDE4LzEwLzA2LzU0LyVFNyVCRSVBNCVFNiU5OSU5NmRzbS02LTIlRUYlQkMlOEMlRTYlODklOEIlRTUlOEElQTglRTUlQUUlODklRTglQTMlODV3b3JkcHJlc3MlRUYlQkMlOENhcGFjaGUtMi00cGhwLTctMC8=\">群晖DSM 6.2，手动安装WordPress，Apache 2.4+PHP 7.0<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","MariaDB","WordPress","PHP","Nginx","Apache"]},{"title":"群晖app访问遇到的端口问题","url":"/2020/04/28/%E7%BE%A4%E6%99%96app%E8%AE%BF%E9%97%AE%E9%81%87%E5%88%B0%E7%9A%84%E7%AB%AF%E5%8F%A3%E9%97%AE%E9%A2%98/","content":"<p><strong>什么是 NAS</strong></p>\n<blockquote>\n<p>NAS（网络连接存储）是与家庭或办公室网络连接的智能存储设备。可以将所有家人和同事的文件存储在 NAS 上（从重要文档到珍贵的照片、音乐和视频集）。使用网页浏览器或移动应用程序可以通过 Internet 访问文件并使用 NAS 提供的各种服务。</p>\n</blockquote>\n<p><strong>什么是 黑群</strong></p>\n<blockquote>\n<p>黑群指的是，非正规购买的群晖nas 而是在普通电脑上装群晖nas的系统。作者并不鼓励或支持使用盗版，只是用于研究和了解群晖系统，强烈不建议正式的使用，尤其是用于重要的数据备份。</p>\n</blockquote>\n<p>既然是NAS那必须要支持远程访问，要想从外网访问家庭内网，目前可用的有这么几个方案：</p>\n<blockquote>\n<ol>\n<li><p>官方提供了QuickConnect（简称QC），但咱用的是黑裙，能用各种软件已经不错了，哪好意思再去蹭群晖的QC资源；</p>\n</li>\n<li><p>非常幸运的一个有公网 IPv4 地址，只要在路由器做端口映射就能解决问题，但目前好像基本不可能了，毕竟 IPv4 的资源都快用完了； </p>\n</li>\n<li><p>用frp、ngrok类的内网穿透软件，这个有免费的，也有收费的，当然如果你有VPS主机，也可以自己来搭建，只是做起来有一定的门槛；</p>\n</li>\n<li><p>用ZeroTier组个虚拟局域网，100个设备内免费，可是需要在每个入网的设备安装虚拟服务和网卡（如果有支持OpenWRT的路由器应该就没这么麻烦了），弄不好有可能还需要自己来架设moon服务器来协助P2P打洞；</p>\n</li>\n<li><p>购买内网穿透的硬件，比如花生棒、公网IP盒子一类的，操作简单，但是有流量方面的限制；</p>\n</li>\n</ol>\n</blockquote>\n<p>今天我们讨论的是frp方案，群晖里已安装了frpc客户端，下面是frpc.ini里的相关设置：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[www]</span></span><br><span class=\"line\"><span class=\"attr\">type</span> = http</span><br><span class=\"line\"><span class=\"attr\">local_ip</span> = <span class=\"number\">192.168</span>.<span class=\"number\">31.198</span></span><br><span class=\"line\"><span class=\"attr\">local_port</span> = <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"attr\">custom_domains</span> = www.abc.ml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[nas]</span></span><br><span class=\"line\"><span class=\"attr\">type</span> = http</span><br><span class=\"line\"><span class=\"attr\">local_ip</span> = <span class=\"number\">192.168</span>.<span class=\"number\">31.198</span></span><br><span class=\"line\"><span class=\"attr\">local_port</span> = <span class=\"number\">5000</span></span><br><span class=\"line\"><span class=\"attr\">custom_domains</span> = nas.abc.ml</span><br></pre></td></tr></table></figure>\n\n<p>用Moments、DS note、Drive都挺正常的，以Drive为例</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/25/8cee490a2dc91ed32bcdcbedc3b1e28-1587802236285.jpg\" alt=\"title\"></p>\n<p>登录成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/25/0e03e7c66bdb97b4d9be64175f24577-1587802254924.jpg\" alt=\"title\"></p>\n<p>同样的设置，群晖管家、DS file却一直登录失败</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/25/f958c9513503734d3fc4049d307a592-1587802269940.jpg\" alt=\"title\"></p>\n<p>最后借用了之前发的一篇文章《RaiDrive挂载frp映射的webdav网盘》中的思路，给地址后面了加了个80端口。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/25/3591e2f12d305de65f4d38f403d74af-1587802297733.jpg\" alt=\"title\"></p>\n<p>大功告成！</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/25/7f33abd8283a829d413e1f445ec66e2-1587802344202.jpg\" alt=\"title\"></p>\n<blockquote>\n<p> <strong>总结</strong>：看来以后类似的问题要多试试80端口大法，包治百病啊，呵呵~</p>\n</blockquote>\n<p>参考文档</p>\n<blockquote>\n<p>群晖官网的介绍，<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc3lub2xvZ3kuY24vemgtY24vc29sdXRpb24vd2hhdF9pc19uYXM=\">https://www.synology.cn/zh-cn/solution/what_is_nas<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","categories":["各种折腾"],"tags":["群晖","ngrok","frp","VPS","NAS","黑群","QuickConnect","ZeroTier"]},{"title":"群晖上的Zerotier GUI一直显示offline的原因","url":"/2020/04/28/%E7%BE%A4%E6%99%96%E4%B8%8A%E7%9A%84Zerotier%20GUI%E4%B8%80%E7%9B%B4%E6%98%BE%E7%A4%BAoffline%E7%9A%84%E5%8E%9F%E5%9B%A0/","content":"<p>两台黑群晖，因为共用了frps，所以为了避免端口冲突，一台保留了端口：5000，另一台启用了端口：5002。</p>\n<p>其中在局域网一台正常：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/20/Jietu20200420-150636-1587366421033.jpg\" alt=\"title\"></p>\n<p>之所以强调局域网是因为在用域名访问时，也同样出现了offline</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/20/Jietu20200420-150235-1587366203005.jpg\" alt=\"title\"></p>\n<p>用ssh登录后发现可以正常使用<br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/20/WechatIMG3868-1587366673982.png\" alt=\"title\"></p>\n<p>说明我们下载的包是没问题的，有问题的只是WEB GUI而已。</p>\n<p>参考文档：</p>\n<blockquote>\n<p>1、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3plcm90aWVyL1plcm9UaWVyTkFTL2lzc3Vlcy8xOA==\">Zerotier GUI on Synology shows offline #18<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<p>文档中有一段描述，可以证明其只能连接端口：5000<br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/20/Jietu20200420-151837-1587367148388.jpg\" alt=\"title\"></p>\n<p>而在使用frp后，所有域名是不带端口的，所以才会导致局域网正常而使用frp后又显示offline的原因。</p>\n","categories":["各种折腾"],"tags":["群晖","ngrok","frp","NAS","ZeroTier","GUI"]},{"title":"苏玉云2019年度作品（6P）","url":"/2020/04/28/%E8%8B%8F%E7%8E%89%E4%BA%912019%E5%B9%B4%E5%BA%A6%E4%BD%9C%E5%93%81%EF%BC%886P%EF%BC%89/","content":"<blockquote>\n<p>发发去年的。<br>还记得那天的大风<br>哈哈哈哈特别感谢两位老板的拍摄</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/25/3337c9233db603d3f300ef2519858d0-1587792802356.jpg\" alt=\"title\"></p>\n<ul>\n<li><p>1<br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/25/3aec30a6931aed5eb32f587d48cdfdb-1587792834165.jpg\" alt=\"title\"></p>\n</li>\n<li><p>2<br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/25/b6affe0acbf5a5508a238cec29d657e-1587792968015.jpg\" alt=\"title\"></p>\n</li>\n<li><p>3<br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/25/b31faf2adf0762bf39970b352d3efa7-1587793000684.jpg\" alt=\"title\"></p>\n</li>\n<li><p>4<br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/25/03d0e5250f59f94f20a08be01210977-1587793027028.jpg\" alt=\"title\"></p>\n</li>\n<li><p>5<br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/25/26584dcfb8a84af4ba98feb03c4854b-1587793063468.jpg\" alt=\"title\"></p>\n</li>\n<li><p>6<br><img src=\"https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/04/25/5a833d3e767bcc8e8c236f0dcf90135-1587793090589.jpg\" alt=\"title\"></p>\n</li>\n</ul>\n","categories":["苏玉云作品"],"tags":["服装设计"]}]