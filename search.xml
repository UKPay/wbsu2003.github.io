<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Android手机上查看obsidian笔记的不完美方案</title>
    <url>/2020/10/19/Android%E6%89%8B%E6%9C%BA%E4%B8%8A%E6%9F%A5%E7%9C%8Bobsidian%E7%AC%94%E8%AE%B0%E7%9A%84%E4%B8%8D%E5%AE%8C%E7%BE%8E%E6%96%B9%E6%A1%88/</url>
    <content><![CDATA[<h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><p>在『<a href="https://laosu.ml/2020/09/09/%E8%83%BD%E6%9E%84%E5%BB%BA%E7%9F%A5%E8%AF%86%E5%BA%93%E7%9A%84%E7%AC%94%E8%AE%B0%E8%BD%AF%E4%BB%B6obsidian%E8%AF%95%E7%94%A8/">能构建知识库的笔记软件obsidian试用</a>』中我们简单介绍过 <code>obsidian</code> 笔记，<code>obisidian</code> 最主要的特点是采用纯文本的 <code>Markdown</code> 文件，而且所有文件均存放于本地，目前只提供了桌面客户端，所以我们如何才能实现在移动端查看或者编辑笔记？</p>
<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><blockquote>
<p>之所以不考虑 <code>Syncthing</code> 的移动端，主要出于两方面考虑：一方面我需要的不是同步，而是按需，另一方面 <code>Syncthing</code> 移动端的功耗比较高。</p>
</blockquote>
<p>我们为了在不同的设备上实现 <code>obsidian</code> 笔记的同步安装了『<a href="https://laosu.ml/2020/09/04/Syncthing%E6%96%87%E4%BB%B6%E5%A4%B9%E5%90%8C%E6%AD%A5%E7%A5%9E%E5%99%A8/">Syncthing文件夹同步神器</a>』</p>
<p>同时我们已经在『<a href="https://laosu.ml/2020/04/28/RaiDrive%E6%8C%82%E8%BD%BDfrp%E6%98%A0%E5%B0%84%E7%9A%84WebDAV%E7%BD%91%E7%9B%98/">RaiDrive挂载frp映射的WebDAV网盘</a>』实现了通过 <code>WebDAV</code> 协议访问群晖的文件目录。</p>
<p>所以我在想，能否在通过 <code>WebDAV</code> 协议访问  <code>Syncthing</code> 同步目录中的 <code>Markdown</code> 文件，间接实现手机端访问 <code>obsidian</code> 笔记?</p>
<p>当然如果你和我一样用群晖搭建的环境，更简单的办法当然是直接用 <code>DS file</code> 来访问 <code>obsidian</code> 笔记啦。</p>
<h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><h2 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h2><p>按上面的思路，首先我们要找一个 WebDAV 客户端，这个方案虽然麻烦，但是具备一定的通用性，即使你没有采用群晖，也是可以的。</p>
<h3 id="WebDAV-客户端"><a href="#WebDAV-客户端" class="headerlink" title="WebDAV 客户端"></a>WebDAV 客户端</h3><p>因为我的手机是小米的，所以我找了几个 Android 平台的免费的 WebDAV 客户端</p>
<ol>
<li>Amaze File Manager</li>
<li>Astro File Manager</li>
<li>Cx File Explorer</li>
<li>Total Commander</li>
</ol>
<p>经过一番试用，最终选了 <code>Total Commander</code>，原因我们后面再说。</p>
<p>下载地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuZ2hpc2xlci5jb20vYW5kcm9pZC5odG0=">https://www.ghisler.com/android.htm<i class="fa fa-external-link-alt"></i></span></p>
<p>在这个看重颜值的时代，<code>Total Commander</code> 的界面实在是有点朴素</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201017214930.jpg" alt=""></p>
<p>配置界面甚至让我有种穿越的感觉</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201017215113.jpg" alt=""></p>
<p>因为软件本身并没有集成插件，所以安装程序很小，所以如果我们要用 <code>WebDAV</code> 协议，需要另外进行安装。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201017215403.jpg" alt=""></p>
<p>插件也不大，也就800多k，点击链接后就开始下载了</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201017215604.jpg" alt=""></p>
<p>插件安装完成后，主界面会多出 <code>WebDAV</code> </p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201017220616.png" alt=""></p>
<p>进入后，通过 <code>添加服务器</code>，将群晖的 <code>WebDAV</code> 服务器加到列表中</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201017220919.png" alt=""></p>
<p>接下来就能看到文件列表了</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201017221244.png" alt=""></p>
<p>其他的插件是否要安装，看个人需要了</p>
<h2 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h2><p>如果你也是在群晖上搭建的，我建议直接用 <code>DS file</code>，而不需要再去找第三方的客户端。</p>
<h3 id="DS-file-客户端"><a href="#DS-file-客户端" class="headerlink" title="DS file 客户端"></a>DS file 客户端</h3><p>下载地址：各应用市场</p>
<h2 id="Markdown-编辑器"><a href="#Markdown-编辑器" class="headerlink" title="Markdown 编辑器"></a>Markdown 编辑器</h2><p>文件已经可以访问了，接下来就是 Markdown 文件的编辑和查看了，Android 平台免费的 Markdown 编辑器应该不少，但是我个人觉得 <code>Markor</code> 挺好用的，这是一个开源的 Markdown 编辑器。</p>
<p>代码主页：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2dzYW50bmVyL21hcmtvcg==">https://github.com/gsantner/markor<i class="fa fa-external-link-alt"></i></span></p>
<p>下载地址：<span class="exturl" data-url="aHR0cHM6Ly9mLWRyb2lkLm9yZy9lbi9wYWNrYWdlcy9uZXQuZ3NhbnRuZXIubWFya29yLw==">https://f-droid.org/en/packages/net.gsantner.markor/<i class="fa fa-external-link-alt"></i></span></p>
<p>软件安装很简单，但我们需要把 <code>Markor</code> 作为打开  <code>md</code> 文件的默认程序。</p>
<p>点开右上角</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201017230847.png" alt=""></p>
<p>进入 <code>设置</code></p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201017231014.jpg" alt=""></p>
<p>进入 <code>通用</code></p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201017231106.png" alt=""></p>
<p>在 <code>总是使用此应用打开</code> 中添加 <code>.md</code></p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201017231236.jpg" alt=""></p>
<h1 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h1><p>回到 <code>Total Commander</code>，找一篇 <code>md</code> 文档打开试试</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201017231737.jpg" alt=""></p>
<p>需要我们选择 <code>Markor</code> </p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201017232441.jpg" alt=""></p>
<p>不管是打开还是编辑，<code>md</code> 文件都会先被下载，这就是前面提到的选择 <code>Total Commander</code> 的原因，因为用其他软件，比如 <code>Cx File Explorer</code>， <code>Markor</code> 会提示错误</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201017232151.jpg" alt=""></p>
<p>原因是 <code>Markor</code> 只支持本地文件</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201017232736.png" alt=""></p>
<p>预览和编辑可以切换</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201017232831.jpg" alt=""></p>
<h1 id="本地创建文件的回传"><a href="#本地创建文件的回传" class="headerlink" title="本地创建文件的回传"></a>本地创建文件的回传</h1><p>本地新建的文件，默认在 <code>Document/markor</code> 目录下，需要按下面操作，使之能进入到 <code>obsidia</code> 的库中</p>
<ol>
<li>长按文件，点击上面的分享按钮</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201017234956.jpg" alt=""></p>
<ol start="2">
<li>选择 <code>Total Commander</code>  或 <code>Cx File Explorer</code> 或  <code>DS file</code></li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201019195932.png" alt=""></p>
<p>3、 <code>DS file</code> 一切正常，但是  <code>Total Commander</code> 会报错</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201019200318.jpg" alt=""></p>
<p> <code>Cx File Explorer</code> 也是一样</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201019205302.png" alt=""></p>
<p>真是奇怪，同样的目录在 MacOS 上用 CloudMounter 读写正常，同样在 windoiws 上 RaiDrive 读写也一样正常，难道移动端的 <code>WebDAV</code> 客户端都是只读的？有谁知道原因，请不吝赐教！</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>gsantner/markor: Text editor - Notes &amp; ToDo (for Android) - Markdown, todo.txt, plaintext, math, ..<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2dzYW50bmVyL21hcmtvcg==">https://github.com/gsantner/markor<i class="fa fa-external-link-alt"></i></span></p>
<p>Markor - 带 todo 功能的易用 Markdown 编辑器 [Android] - 小众软件<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuYXBwaW5uLmNvbS9tYXJrb3Iv">https://www.appinn.com/markor/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>WebDAV</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Glances实时监视群晖运行状况</title>
    <url>/2020/09/22/Glances%E5%AE%9E%E6%97%B6%E7%9B%91%E8%A7%86%E7%BE%A4%E6%99%96%E8%BF%90%E8%A1%8C%E7%8A%B6%E5%86%B5/</url>
    <content><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>在 docker 注册表中搜索 <code>glances</code> ，选择第一个 <code>nicolargo/glances</code>，版本 <code>latest</code>。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/docker01-1600232128459.png" alt="title"></p>
<h2 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h2><p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/docker02-1600232156260.png" alt="title"></p>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/docker03-1600232169422.png" alt="title"></p>
<h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><h2 id="发现问题"><a href="#发现问题" class="headerlink" title="发现问题"></a>发现问题</h2><p>在浏览器中输入 <code>http://群晖IP:61208</code>，即可看到主界面</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/index01-1600232212596.png" alt="title"></p>
<p>但是跟官网的图片比，好像右下角缺了一大块，仔细对比之后发现缺了 <code>docker</code> 的信息，和 <code>portainer</code>、<code>watchtower</code> 不同，<code>glances</code> 并没找到对远程终端的支持。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/index02-1600232229777.png" alt="title"></p>
<p>所以问题应该出在 <code>/var/run/docker.sock</code>，这是 <code>Docker API</code> 的主要入口,简单地说，它是 Docker 守护进程（Docker daemon）默认监听的 Unix 域套接字（Unix domain socket），容器中的进程可以通过它与 Docker 守护进程进行通信。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/1600233408261-1600233408269.png" alt="title"></p>
<blockquote>
<p>图片来自<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmZ1bmRlYnVnLmNvbS8yMDE3LzA0LzE3L2Fib3V0LWRvY2tlci1zb2NrLw==">https://blog.fundebug.com/2017/04/17/about-docker-sock/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h2 id="计划任务"><a href="#计划任务" class="headerlink" title="计划任务"></a>计划任务</h2><p>黑群晖老版本无法直接访问 var 目录,所以无法通过配置 -v <code>/var/run/docker.sock:/var/run/docker.sock</code> 来完成，所以我们要用<br> <code>sudo ln -s /var/run/docker.sock /volume1/docker/docker.sock</code> 把你当前群晖的 docker.sock 映射到 docker 共享目录（我安装在了 volume1 ），同时为避免重启后软链会消失，需要把它加到计划任务中。</p>
<p>转到 <code>控制面板</code> –&gt; <code>任务计划</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/task01-1600232366408.png" alt="title"></p>
<p><code>新增</code> –&gt; <code>计划的任务</code> –&gt; <code>用户定义的脚本</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/task02-1600232386590.png" alt="title"></p>
<p>在 <code>创建任务</code> 窗口的 <code>常规</code> 选项卡上，确保将 <code>用户账号</code> 选择为 <code>root</code>，填入 <code>任务名称</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/task03-1600232399083.png" alt="title"></p>
<p>在 <code>创建任务</code> 窗口的 <code>计划</code> 选项卡上，在 <code>日期</code> –&gt; <code>在以下的天中运行</code> 下，选择 <code>每日</code> 。在 <code>时间</code> –&gt; <code>运行频率</code> 下，选择 <code>每1小时</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/task04-1600232413872.png" alt="title"></p>
<p>在 <code>创建任务</code> 窗口的 <code>任务设置</code> 选项卡上，在 <code>运行命令</code> –&gt; <code>用户定义的脚本</code>中，粘贴 <code>sudo ln -s /var/run/docker.sock /volume1/docker/docker.sock</code> 到文本框中，然后按 <code>确定</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/task05-1600232425336.png" alt="title"></p>
<p>在新创建的任务，右键单击 <code>运行</code> 立即运行一次</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/task06-1600232436204.png" alt="title"></p>
<p>需要确认</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/task07-1600232446903.png" alt="title"></p>
<h2 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h2><p>软链接在 <code>File Station</code> 是看不到的，所以我们不能再用 GUI 来修改或者创建了，但是命令行创建成功后，可以在 GUI 中查看 </p>
<p>通过SSH进入Synology，运行以下docker run命令</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker run -d --restart=<span class="string">"always"</span> --name=<span class="string">"nicolargo-glances1"</span> -p 61208-61209:61208-61209 -e GLANCES_OPT=<span class="string">"-w"</span> -v /volume1/docker/docker.sock:/var/run/docker.sock:ro --pid host docker.io/nicolargo/glances</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/ssh01-1600232476479.png" alt="title"></p>
<p>再回到浏览器，刷新一下</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/index03-1600232489329.png" alt="title"></p>
<p>容器的信息已经有了，我们在 GUI 中 找到 <code>nicolargo-glances1</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/22/1600775620347-1600775620409.png" alt="title"></p>
<p>先停止，然后进入编辑，是可以看到文件夹映射的</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/22/1600775684921-1600775684924.png" alt="title"></p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>Glances - An Eye on your system<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9uaWNvbGFyZ28uZ2l0aHViLmlvL2dsYW5jZXMv">https://nicolargo.github.io/glances/<i class="fa fa-external-link-alt"></i></span></p>
<p>nicolargo/glances: Glances an Eye on your system. A top/htop alternative for GNU/Linux, BSD, Mac OS and Windows operating systems.<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25pY29sYXJnby9nbGFuY2Vz">https://github.com/nicolargo/glances<i class="fa fa-external-link-alt"></i></span></p>
<p>Docker — Glances 3.1.4 documentation<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9nbGFuY2VzLnJlYWR0aGVkb2NzLmlvL2VuL2xhdGVzdC9kb2NrZXIuaHRtbA==">https://glances.readthedocs.io/en/latest/docker.html<i class="fa fa-external-link-alt"></i></span></p>
<p>关于/var/run/docker.sock<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmZ1bmRlYnVnLmNvbS8yMDE3LzA0LzE3L2Fib3V0LWRvY2tlci1zb2NrLw==">https://blog.fundebug.com/2017/04/17/about-docker-sock/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>性能监视</tag>
        <tag>运维</tag>
        <tag>可视化</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>GitNote的简单使用记录</title>
    <url>/2020/04/29/GitNote%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p><strong>什么是GitHub</strong></p>
<blockquote>
<p>GitHub 是透過 Git 進行版本控制的軟體原始碼代管服務平台，由 GitHub 公司的開發者 Chris Wanstrath、PJ Hyett 和 Tom Preston-Werner 使用 Ruby on Rails 編寫而成。 GitHub 同時提供付費帳戶和免費帳戶。 【維基百科】</p>
</blockquote>
<p><strong>什么是git</strong></p>
<blockquote>
<p>git是一個分散式版本控制軟體，最初由林納斯·托瓦茲創作，於2005年以 GPL<br> 釋出。最初目的是為更好地管理 Linux 核心開發而設計。應注意的是，這與 GNU Interactive Tools 不同。 git 最初的開發動力來自於 BitKeeper 和Monotone。 【維基百科】</p>
</blockquote>
<p><strong>什么是Markdown</strong></p>
<blockquote>
<p>Markdown是一種輕量級標記式語言，創始人為約翰·格魯伯。它允許人們使用易讀易寫的純文字格式編寫文件，然後轉換成有效的XHTML文件。這種語言吸收了很多在電子郵件中已有的純文字標記的特性。【維基百科】</p>
</blockquote>
<p><strong>什么是GitNote</strong></p>
<blockquote>
<p>GitNote 是一款基于 git 的现代笔记软件，不需要依赖本地 git 环境。支持 Windows、macOS、Linux，使用 Git 仓库作为数据保存，如 GitHub、GitLab 等，内置 Git 支持，依托 Git 仓库的特性，拥有历史版本、私密笔记、无限空间等特点。</p>
<p>官网地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRub3RlYXBwLmNvbS8=">https://gitnoteapp.com/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>看到<strong>历史版本</strong>、<strong>私密笔记</strong>、<strong>无限空间</strong>是不是有些心动？再往下看，还支持<strong>脑图</strong>、支持<strong>流程图</strong>、支持<strong>多图床</strong>，更重要的是支持markdown，是不是已经按奈不住了？</p>
<p>本文只是粗略描述了过程，详细的安装和配置，请阅读参考文档部分。</p>
<h1 id="1、申请GitHub账号"><a href="#1、申请GitHub账号" class="headerlink" title="1、申请GitHub账号"></a>1、申请GitHub账号</h1><p>先要去 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tLw==">https://github.com/<i class="fa fa-external-link-alt"></i></span> 注册账号，注册完登陆 Github 看起来应该是这样：<br><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/17/github-1587137114658.jpg" alt="title"></p>
<h1 id="2、建私有仓库，存放笔记"><a href="#2、建私有仓库，存放笔记" class="headerlink" title="2、建私有仓库，存放笔记"></a>2、建私有仓库，存放笔记</h1><p>访问 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25ldw==">https://github.com/new<i class="fa fa-external-link-alt"></i></span> 创建仓库。 填写 Repository name，推荐将仓库命名为 xxnote，一目了然。</p>
<p><strong>特别注意：</strong></p>
<p>除非你打算公开所有笔记，否则，务必选择 Private。<br>勾选 Initialize this repository with a README，省去我们自己初始化仓库的工作。<br><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/17/repo-1587137248312.jpg" alt="title"></p>
<p>点击 Create repository 完成创建</p>
<h1 id="3、建公有仓库，存放图片"><a href="#3、建公有仓库，存放图片" class="headerlink" title="3、建公有仓库，存放图片"></a>3、建公有仓库，存放图片</h1><p>编写笔记的时候，会用到图片，我们将所有图片也托管到 Github 上。类似上一步，再创建一个仓库。 填写 Repository name，推荐将仓库命名为gitnote-images之类，一目了然。<br><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/17/pic-1587137364240.jpg" alt="title"></p>
<p><strong>特别注意：</strong></p>
<p>务必选择 Public，否则在笔记中无法引用图片。<br>勾选 Initialize this repository with a README，省去我们自己初始化仓库的工作。<br>点击 Create repository 完成创建</p>
<h1 id="4、下载、配置Gitnote"><a href="#4、下载、配置Gitnote" class="headerlink" title="4、下载、配置Gitnote"></a>4、下载、配置Gitnote</h1><p>前往 GitNote 下载对应版本的安装包，并安装。 第一次打开，应该是这样的。<br><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/17/%E4%B8%BB%E7%95%8C%E9%9D%A2-1587136969998.PNG" alt="title"></p>
<h2 id="4-1、-添加本地已经-GIT-仓库"><a href="#4-1、-添加本地已经-GIT-仓库" class="headerlink" title="4.1、 添加本地已经 GIT 仓库"></a>4.1、 添加本地已经 GIT 仓库</h2><p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/27/import-1587956373130.gif" alt="title"><br>【以上动图来自官网：<span class="exturl" data-url="aHR0cHM6Ly9naXRub3RlYXBwLmNvbS96aC9kb2NzL3NldHVwLmh0bWzjgJE=">https://gitnoteapp.com/zh/docs/setup.html】<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="4-2、-克隆一个仓库"><a href="#4-2、-克隆一个仓库" class="headerlink" title="4.2、 克隆一个仓库"></a>4.2、 克隆一个仓库</h2><p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/27/clone-1587956400202.gif" alt="title"><br>【以上动图来自官网：<span class="exturl" data-url="aHR0cHM6Ly9naXRub3RlYXBwLmNvbS96aC9kb2NzL3NldHVwLmh0bWzjgJE=">https://gitnoteapp.com/zh/docs/setup.html】<i class="fa fa-external-link-alt"></i></span></p>
<h1 id="5、安装图床插件"><a href="#5、安装图床插件" class="headerlink" title="5、安装图床插件"></a>5、安装图床插件</h1><h2 id="5-1、从插件市场"><a href="#5-1、从插件市场" class="headerlink" title="5.1、从插件市场"></a>5.1、从插件市场</h2><p>一直出错，显示无文字的红色xx，只能另找办法。</p>
<h2 id="5-2、gitnote-手动插件安装方式"><a href="#5-2、gitnote-手动插件安装方式" class="headerlink" title="5.2、gitnote 手动插件安装方式"></a>5.2、gitnote 手动插件安装方式</h2><p><span class="exturl" data-url="aHR0cHM6Ly96aGFvcGVuZy5tZS9pbmRleC5waHAvYXJjaGl2ZXMvZ2l0bm90ZS1pbnN0YWxsLXBsdWdpbi5odG1s">这是作者的博客推荐的方法<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly96aGFvcGVuZy5tZS9pbmRleC5waHAvYXJjaGl2ZXMvZ2l0bm90ZS1pbnN0YWxsLXBsdWdpbi5odG1s">https://zhaopeng.me/index.php/archives/gitnote-install-plugin.html<i class="fa fa-external-link-alt"></i></span></p>
<ol>
<li><p>到 github 下载插件<br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3poYW9wZW5nbWUvZ2l0bm90ZS1leHRlbnNpb25z">https://github.com/zhaopengme/gitnote-extensions<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p>解压到 {user}/.gitnote/plugins 目录</p>
</li>
<li><p>{user} 用户的根目录,windows是 c:/users/{用户名}</p>
</li>
<li><p>重启 GitNote</p>
</li>
</ol>
<h1 id="6、几个坑"><a href="#6、几个坑" class="headerlink" title="6、几个坑"></a>6、几个坑</h1><h2 id="6-1、github图床问题"><a href="#6-1、github图床问题" class="headerlink" title="6.1、github图床问题"></a>6.1、github图床问题</h2><ul>
<li>不要用菜单栏的插入图片，这个不会上传；</li>
<li>拖拽图片或者附件到gitnote界面时，会弹出上面一个十字架和下面一个方框，一定要放到方框中，因为下面写着“上传到github”，如果不在方框内，会提示“不支持附件，仅支持上传第三方”，搞得一度以为自己设置有问题；</li>
</ul>
<h2 id="6-2、网页剪藏问题"><a href="#6-2、网页剪藏问题" class="headerlink" title="6.2、网页剪藏问题"></a>6.2、网页剪藏问题</h2><p>点开左上角的图标</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/18/1587172157-1587172234746.png" alt="title"></p>
<p>记得要先注册</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/18/1587172463(1)-1587172504793.png" alt="title"></p>
<p>因为这个账号不是github的账号，而是gitnote的账号，用于分享和收藏用的</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/18/%E4%BC%9A%E5%91%98-1587173880450.png" alt="title"></p>
<h2 id="6-3、各种莫名错误"><a href="#6-3、各种莫名错误" class="headerlink" title="6.3、各种莫名错误"></a>6.3、各种莫名错误</h2><ul>
<li>网络错误：</li>
</ul>
<p>比如上传github图床时，时不时出现的网络错误</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/18/%E7%BD%91%E7%BB%9C%E9%94%99%E8%AF%AF-1587173935850.jpg" alt="title"></p>
<ul>
<li>预览问题：</li>
</ul>
<p>上传成功的图片不显示，而只是显示一个title</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/18/%E4%B8%8D%E6%98%BE%E7%A4%BA-1587174417113.png" alt="title"></p>
<p>而实际上在github的网页上应该是这样的</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/18/1587175163(1)-1587175194527.png" alt="title"></p>
<ul>
<li>文档历史</li>
</ul>
<p>不知道什么原因，一直没有文档的编辑历史</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/18/1587175317(1)-1587175333780.jpg" alt="title"></p>
<p>个人觉得如果你不是程序员，还是用EverNote、为知笔记、有道云笔记吧~~<br>【备注：之所以不提OneNote是因为国内同步总有各种问题，龟速甚至无法同步，所以不提也罢】</p>
<p>有句话叫“免费的其实是最贵的”！虽然不花钱，可是得花时间。</p>
<p>当然你有兴趣、有时间，还是可以折腾折腾的，毕竟也是一种乐趣不是？</p>
<p><strong>参考文档</strong></p>
<blockquote>
<p>GitNote帮助文档 ：<span class="exturl" data-url="aHR0cHM6Ly9naXRub3RlYXBwLmNvbS96aC9kb2NzLw==">https://gitnoteapp.com/zh/docs/<i class="fa fa-external-link-alt"></i></span></p>
<p>数据交给你，我放心！开源笔记软件 GitNote 配置及试用：<span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC84MDMwNTQ2NQ==">https://zhuanlan.zhihu.com/p/80305465<i class="fa fa-external-link-alt"></i></span></p>
<p>程序员笔记利器gitNote：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RoZV9wb3dlci9hcnRpY2xlL2RldGFpbHMvMTAzMTI1MTc1">https://blog.csdn.net/the_power/article/details/103125175<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>Markdown</tag>
        <tag>GitHub</tag>
        <tag>git</tag>
        <tag>GitNote</tag>
      </tags>
  </entry>
  <entry>
    <title>BT Web客户端工具live-torrent</title>
    <url>/2020/10/23/BT%20Web%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%B7%A5%E5%85%B7live-torrent/</url>
    <content><![CDATA[<h1 id="软件简介"><a href="#软件简介" class="headerlink" title="软件简介"></a>软件简介</h1><p><code>live-torrent</code> 是一款免下载的种子资源在线播放器！是一个支持磁力链接和种子播放的在线搜索云播 <code>Web</code> 客户端！有强大的引擎搜索查找资源，无敏感资源搜索，自动识别 <code>bt</code> 种子视频文件然后播放观看，能自动给视频添加字幕！字幕采用的 <code>OpenSubtitles</code> ，所以还需要您在 <span class="exturl" data-url="aHR0cHM6Ly93d3cub3BlbnN1YnRpdGxlcy5vcmc=">https://www.opensubtitles.org<i class="fa fa-external-link-alt"></i></span> 注册一个账号，后面会用到。</p>
<p>软件特点：</p>
<ol>
<li>开源项目，代码主页：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0RhdmVuY2h5L2xpdmUtdG9ycmVudA==">https://github.com/Davenchy/live-torrent<i class="fa fa-external-link-alt"></i></span></li>
<li>不支持在线搜索中文资源，但中文资源可以自己上传然后识别下载和播放</li>
<li>搜索之后复制磁力链接到站点，点击右侧的眼睛按钮-快速进行解析</li>
<li>支持在线播放和极速下载，画质巨清晰，进度条任意拖拽</li>
</ol>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>在 docker 注册表中搜索 <code>live-torrent</code> ，选择第一个 <code>davenchy/live-torrent</code>，版本 <code>latest</code>。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601541814494-1601541814497.png" alt="title"></p>
<h2 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h2><p>找一个空闲的端口，别冲突就行</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601543529497-1601543529500.png" alt="title"></p>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>如果你需要字幕，需要申请 <code>OpenSubtitles</code> 的 <code>UserAgent 字符串</code> ，目前官网是在手动添加 <code>UA</code> ，因此可能需要几天的时间。</p>
<p>收件人:<span class="exturl" data-url="bWFpbHRvOmFkbWluQG9wZW5zdWJ0aXRsZXMub3Jn">admin@opensubtitles.org<i class="fa fa-external-link-alt"></i></span><br>主题：Register User Agent Request<br>邮件内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Required info</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">Your name: your real name </span><br><span class="line">Your registered OS username: your username on opensubtitles.org</span><br><span class="line">Contact mail: your mail</span><br><span class="line">Title of useragent: your name of useragent</span><br><span class="line">Version of useragent: for example: v1</span><br><span class="line">Programming language: C++&#x2F;Java&#x2F;PHP&#x2F;Python...</span><br><span class="line">Approximate users of program: how many approx. users are using your program?</span><br><span class="line">Opensource: yes&#x2F;no</span><br><span class="line">Upload feature: yes&#x2F;no&#x2F;maybe in future</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Optional info</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">Application URL: where is possible find homepage of application</span><br><span class="line">Developer URL: developers homepage</span><br></pre></td></tr></table></figure>

<p>如果你懒得申请也可以用默认的，只是每天对 <code>IP/用户</code> 下载有次数限制</p>
<table>
<thead>
<tr>
<th align="center">可变</th>
<th align="center">值</th>
</tr>
</thead>
<tbody><tr>
<td align="center">OSUA</td>
<td align="center">your UserAgent string （缺省值：TemporaryUserAgent）</td>
</tr>
</tbody></table>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601545255660-1601545255661.png" alt="title"></p>
<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>在浏览器中输入 <code>http://群晖IP:3180</code>，即可看到主界面</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601545396783-1601545396785.png" alt="title"></p>
<p>这里只能输入 <code>torrentID</code>，<code>torrentID</code> 可以是 <code>torrent magnet , torrent HTTP/HTTPS url or torrent info hash</code>，也可以上传自己的种子文件</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601546546850-1601546546853.png" alt="title"></p>
<p>这里可以直接搜索电影，但不支持中文，比如你搜索 <code>黄金眼</code>，显示的是</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601546670453-1601546670455.png" alt="title"></p>
<p>所以我的办法是去豆瓣电影：<span class="exturl" data-url="aHR0cHM6Ly9tb3ZpZS5kb3ViYW4uY29tLw==">https://movie.douban.com/<i class="fa fa-external-link-alt"></i></span>，找电影的英文名称</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601546759768-1601546759770.png" alt="title"></p>
<p>然后再来搜索</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601546842897-1601546842898.png" alt="title"></p>
<p>查看详情</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601546944013-1601546944018.png" alt="title"></p>
<p>往下拉</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601547016188-1601547016191.png" alt="title"></p>
<p>查看详情</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601547774308-1601547774309.png" alt="title"></p>
<p>试试在线播放，有的半天没动静</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601565540291-1601565540293.png" alt="title"></p>
<p>有的电影秒开，这个和我们下载 <code>bt</code> 是一样的，取决于种子的活跃度</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601547842787-1601547842792.png" alt="title"></p>
<p>直接拖拽了一下，只停顿了几秒钟</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601548077095-1601548077098.png" alt="title"></p>
<p>需要启用字幕</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601548295552-1601548295555.png" alt="title"></p>
<p>没搞明白为什么是英文字幕而不是中文，因为没有找到设置语言的地方，现在想到的办法是先到 <code>opensubtitles</code> 找中文字幕，然后复制 <code>URL</code></p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601553682059-1601553682060.png" alt="title"></p>
<p>然后回到播放界面，用 <code>Load URL Caption</code> 加载刚刚复制的 <code>URL</code> 或者用 <code>Upload Caption</code><br> 上传字幕文件</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601553544943-1601553544946.png" alt="title"></p>
<p>图省事的话，更简单的办法就是启用 <code>Google Translate</code></p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601554425439-1601554425441.png" alt="title"></p>
<p>瞬间就变中文，不过有时候还不如不翻译呢</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601554382386-1601554382389.png" alt="title"></p>
<h1 id="缓存目录"><a href="#缓存目录" class="headerlink" title="缓存目录"></a>缓存目录</h1><p>视频缓存目录 <code>/tmp/webtorrent/</code></p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601555248054-1601555248056.png" alt="title"></p>
<p>目录比较深</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601557188418-1601557188419.png" alt="title"></p>
<p>我的 <code>volume1</code> 比较小，所以如果不定期清理，会很容易爆掉</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/01/1601557720024-1601557720026.png" alt="title"></p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>Davenchy/live-torrent: Torrent Web Client 代码主页<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0RhdmVuY2h5L2xpdmUtdG9ycmVudA==">https://github.com/Davenchy/live-torrent<i class="fa fa-external-link-alt"></i></span></p>
<p>live-torrent：一个支持磁力链和种子的在线搜索云播Web客户端 - Rat’s Blog<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cubW9lcmF0cy5jb20vYXJjaGl2ZXMvMTAyNy8=">https://www.moerats.com/archives/1027/<i class="fa fa-external-link-alt"></i></span></p>
<p>Live-torrent：磁力链和种子在线搜索播放下载 – Aneeo Blog<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9hbmVlby5jb20vNDY2NC5odG1s">https://aneeo.com/4664.html<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>torrent</tag>
        <tag>多媒体</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo-theme-next主题</title>
    <url>/2020/04/28/Hexo-theme-next%E4%B8%BB%E9%A2%98/</url>
    <content><![CDATA[<p><strong>什么是NexT</strong></p>
<blockquote>
<p>«NexT» is a high quality elegant Hexo theme. It is crafted from scratch with love.</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/29/63487983-da41b080-c4df-11e9-951c-64883a8a5e9b-1588135737833.png" alt="title"></p>
<h1 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h1><p>Hexo安装完成后，默认的主题是landscape，个人不是很喜欢，所以我们要更换。<br><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/29/Jietu20200429-130211-1588137107672.jpg" alt="title"></p>
<p>随便搜搜你就会发现，Next是排名最靠前的主题了，也是目前教程最多的主题，所以我们决定换成Next试试看，先上个效果。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/29/WechatIMG4023-1588130305246.png" alt="title"></p>
<p>粗看差别也不是特别大对不对？仔细看还是有一些区别的：</p>
<blockquote>
<ul>
<li>去掉了顶部的banner</li>
<li>对Markdown的引用显示的更友好</li>
<li>没有全部居中显示</li>
</ul>
</blockquote>
<p>其实好看不好的不重要，说白了就是想折腾一下。</p>
<h1 id="2-安装"><a href="#2-安装" class="headerlink" title="2. 安装"></a>2. 安装</h1><h2 id="2-1-NexT的版本"><a href="#2-1-NexT的版本" class="headerlink" title="2.1 NexT的版本"></a>2.1 NexT的版本</h2><p>v6之前的版本，已不再维护。<br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2lpc3NuYW4vaGV4by10aGVtZS1uZXh0">https://github.com/iissnan/hexo-theme-next<i class="fa fa-external-link-alt"></i></span></p>
<p>v6之后的版本<br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by10aGVtZS1uZXh0">https://github.com/theme-next/hexo-theme-next<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="2-2-安装NexT"><a href="#2-2-安装NexT" class="headerlink" title="2.2 安装NexT"></a>2.2 安装NexT</h2><p>在<code>blog</code>目录，cmd模式下运行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-theme-next themes&#x2F;next</span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>网上的教程基本上都是安装的v5.1.4之前的版本，可以用，但是会遇到各种奇葩的问题，所以建议用v6以上的版本。</strong></p>
</blockquote>
<p>进入<code>blog\themes</code>目录，你会发现，除了<code>landscape</code>目录外，还多了一个<code>next</code>目录。</p>
<h2 id="2-3-切换主题"><a href="#2-3-切换主题" class="headerlink" title="2.3 切换主题"></a>2.3 切换主题</h2><p>回到<code>blog</code>目录，编辑<code>_config.yml</code>文件，将<code>theme：</code>后面的<code>landscape</code>改成<code>next</code>，保存并退出。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/29/WechatIMG4028-1588138154211.png" alt="title"></p>
<p>回到<code>blog</code>目录，cmd模式下运行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure>

<h1 id="3-修改"><a href="#3-修改" class="headerlink" title="3. 修改"></a>3. 修改</h1><h2 id="3-1-修改Scheme"><a href="#3-1-修改Scheme" class="headerlink" title="3.1 修改Scheme"></a>3.1 修改Scheme</h2><p>进入<code>blog\themes\next</code>目录，打开<code>_config.yml</code>文件。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/29/WechatIMG4029-1588138855093.png" alt="title"></p>
<h2 id="3-1-修改菜单"><a href="#3-1-修改菜单" class="headerlink" title="3.1 修改菜单"></a>3.1 修改菜单</h2><p>默认只有2个菜单<br><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/29/Jietu20200429-134353-1588139151630.jpg" alt="title"></p>
<p>再打开3个，去掉前面的#号就行<br><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/29/WechatIMG4030-1588139208209.png" alt="title"></p>
<p>在编译发布一次</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/29/Jietu20200429-134520-1588139278556.jpg" alt="title"></p>
<p>已经变成了5个菜单了，但是新增的菜单如果你什么都不做，点击后就会显示404错误。<br><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/29/WechatIMG4031-1588139439421.png" alt="title"></p>
<p>需要创建相应的文件夹，比如标签：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new page &quot;tags&quot;</span><br></pre></td></tr></table></figure>

<p>至于我们要改成什么样，给你看看官方的demo，让我们一起努力吧！<br><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/29/WechatIMG4033-1588140211540.png" alt="title"></p>
<p><strong>参考文档</strong></p>
<blockquote>
<p>官网<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by10aGVtZS1uZXh0">https://github.com/theme-next/hexo-theme-next<i class="fa fa-external-link-alt"></i></span></p>
<p>Hexo-NexT配置超炫网页效果<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC85ZjBlOTBjYzMyYzI=">https://www.jianshu.com/p/9f0e90cc32c2<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
        <tag>NexT</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>HomeAssistant设置https访问后的问题</title>
    <url>/2020/08/09/HomeAssistant%E8%AE%BE%E7%BD%AEhttps%E8%AE%BF%E9%97%AE%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/</url>
    <content><![CDATA[<p>之前 HomeAssistant 在浏览器中是这样打开的  <code>http://ha.xxx.ml</code></p>
<p>最近因为测试的几个软件都需要 SSL 支持，所以准备全面升级到 https，拟定的方案是利用群晖的反代 + 内网穿透来实现。，所以升级完成后，应该是这样的 <code>https://ha.xxx.ml</code></p>
<h1 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h1><p>还是用的 frp ，但之前采用的一个域名一条记录的方式显然已经不适合反向代理，frpc.ini 需要按下面这样的进行修改，也可以用到《<a href="https://laosu.ml/2020/07/31/%E5%85%8D%E8%B4%B9%E7%9A%84%E6%B3%9B%E5%9F%9F%E5%90%8Dhttps%E8%AF%81%E4%B9%A6%E8%87%AA%E5%8A%A8%E7%BB%AD%E6%9C%9F/">免费的泛域名https证书自动续期</a>》里介绍的 SSL 证书自动续期。</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[http]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">192.168</span>.<span class="number">0.199</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">81</span></span><br><span class="line"><span class="attr">custom_domains</span> = *.xxsu.ml</span><br><span class="line"></span><br><span class="line"><span class="section">[https]</span></span><br><span class="line"><span class="attr">type</span> = https</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">192.168</span>.<span class="number">0.199</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">444</span></span><br><span class="line"><span class="attr">custom_domains</span> = *.xxsu.ml</span><br></pre></td></tr></table></figure>

<h1 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h1><p>直接用的群晖的反向代理，这里「来源」中的端口要和 <code>frpc.ini</code> 中 <code>local_port</code> 一致</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/02/1596350538307-1596350538309.png" alt="title"></p>
<h1 id="遇到问题"><a href="#遇到问题" class="headerlink" title="遇到问题"></a>遇到问题</h1><p>设置反代完成后，在浏览器中输入 <code>https://ha.xxx.ml</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/02/1596351283877-1596351283881.png" alt="title"></p>
<p>但是登陆完成后，却一直连接不上</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/02/1596346985529-1596346985576.png" alt="title"></p>
<p>开始以为是 https 的问题，所以重新反代了一次 http 协议</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/02/1596351438718-1596351438720.png" alt="title"></p>
<p>但是结果是一样的，所以基本上可以确定是因为反代导致的，而不是因为 https</p>
<h1 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h1><p>查阅了一圈资料，发现主要原因是因为群晖自带的 nginx 不支持 websocket，这个问题直到 DSM6.2.1 才解决，而我的版本还是  DSM6.1.7。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/02/1596357813026-1596357813028.png" alt="title"></p>
<p>好在网上已经有了解决方案。Synology DSM 6 反向代理的配置修复程序项目地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL29yb2JhcmRldC9kc20tcmV2ZXJzZS1wcm94eS13ZWJzb2NrZXQ=">https://github.com/orobardet/dsm-reverse-proxy-websocket<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/02/1596357088477-1596357088478.png" alt="title"></p>
<p>SSH连接后打开 <code>/usr/syno/share/nginx/Portal.mustache</code></p>
<blockquote>
<p>切记，修改前先备份，先备份，先备份，重要的事情总是要说三遍，备份是一种好习惯</p>
</blockquote>
<p>在 <code>location</code> 部分中添加以下内容:</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">proxy_set_headerUpgrade   $http_upgrade;</span><br><span class="line">proxy_set_headerConnection   "upgrade";</span><br><span class="line">proxy_read_timeout  86400;</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/02/1596357482146-1596357482150.png" alt="title"></p>
<p>重启 httpd</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo synoservicecfg --restart nginx</span><br></pre></td></tr></table></figure>

<p>再次在浏览器中输入 <code>https://ha.xxx.ml</code>，发现已经完美解决了用 https 访问后卡在登录界面的问题。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>群晖nas 修改nginx配置的问题<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuc2Fkay5vcmcvJUU2JTk3JUE1JUU1JUJGJTk3LzE5NzAuaHRtbA==">https://www.sadk.org/%E6%97%A5%E5%BF%97/1970.html<i class="fa fa-external-link-alt"></i></span></p>
<p>[进阶教程] nginx通过https反向代理hass的配置注意事项<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9iYnMuaGFzc2JpYW4uY29tL3RocmVhZC00Mjc2LTEtMS5odG1s">https://bbs.hassbian.com/thread-4276-1-1.html<i class="fa fa-external-link-alt"></i></span></p>
<p>Nginx反向代理Home assistant<br>地址：<span class="exturl" data-url="aHR0cDovL3d3dy55dW5zZWFuLmNvbS9uZ2lueGZhbi14aWFuZy1kYWktbGktaG9tZS8=">http://www.yunsean.com/nginxfan-xiang-dai-li-home/<i class="fa fa-external-link-alt"></i></span></p>
<p>群晖nginx反向代理处理websocket协议的方法<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2E5OTJxcDg3Lw==">https://post.smzdm.com/p/a992qp87/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>HomeAssistant</tag>
        <tag>SSL</tag>
      </tags>
  </entry>
  <entry>
    <title>IFTTT的开源替代品</title>
    <url>/2020/10/10/IFTTT%E7%9A%84%E5%BC%80%E6%BA%90%E6%9B%BF%E4%BB%A3%E5%93%81/</url>
    <content><![CDATA[<p>什么是 IFTTT？</p>
<blockquote>
<p>IFTTT，是一個新生的網絡服務平台，通過其他不同平台的條件來決定是否執行下一條命令。即對網絡服務通過其他網絡服務作出反應。IFTTT得名為其口號「if this then that」。 IFTTT的官方念法類似英語單詞「gift」的「ift」，即不要發「g」的音。 [維基百科]</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/10/1602301546869-1602301546877.png" alt="title"><br>【图片来自：<span class="exturl" data-url="aHR0cHM6Ly93d3cuc29odS5jb20vYS8yMjU4ODA4NTVfMTE1Nzg1">https://www.sohu.com/a/225880855_115785<i class="fa fa-external-link-alt"></i></span>】</p>
<p>IFTTT要收费了，即在意料之外又在情理之中，毕竟一个网站的运营不可能长期靠爱来发电。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/10/1602300227661-1602300227713.png" alt="title"></p>
<p>不过定价方式比较奇特，10月31日前由用户自己填写，当然能设置的最低价格是 $1.99，从11月1号开始固定为 $3.99。</p>
<p>如果你不想付费也还是可以继续使用的，只是免费版的 IFTTT 只能创建 3 个应用，这对于不是重度用户来说也是够的。</p>
<p>我之前主要用在收藏资料，比如最早是从 Google Reader 到 Evernote， Pocket 到 Evernote，feedly 到 Evernote，后来笔记改为 Wiznote 后，又从 feedly 到 Wiznote 等等，当然 IFTTT 能做的事情远不仅仅是我的这点应用，可以结合家里的智能家居，比如智能温控器，来更有效的控制空调设备，或者结合智能空气检测仪，来控制新风系统等等。</p>
<p>其实 IFTTT 的替代品挺多的，我指的是开源的，能够自建的那种。</p>
<h1 id="n8n"><a href="#n8n" class="headerlink" title="n8n"></a>n8n</h1><p>n8n 是免费的基于节点的工作流自动化工具，可以轻松实现跨不同服务的任务自动化。</p>
<p>类似 IFTTT、Zapier，可以互联互通包括 GitHub、Dropbox、Google、NextCLoud、RSS、Slack、Telegram 在内的几十款在线服务。实现当 A 条件发生，触发 B 服务这样的自动工作流程。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/10/1602309461118-1602309461125.png" alt="title"></p>
<p>官网：<span class="exturl" data-url="aHR0cHM6Ly9uOG4uaW8v">https://n8n.io/<i class="fa fa-external-link-alt"></i></span><br>代码：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL244bi1pby9uOG4v">https://github.com/n8n-io/n8n/<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/10/1602308666661-1602308666702.png" alt="title"><br>【图片来自：官网】</p>
<h1 id="Node-RED"><a href="#Node-RED" class="headerlink" title="Node-RED"></a>Node-RED</h1><p>Node-RED 是一种编程工具，用于以新颖有趣的方式将硬件设备、API 和在线服务连接在一起。 它提供了一个基于浏览器的编辑器，使您可以轻松地使用设计器中的各种节点将流连接在一起，只需单击即可将其部署到其运行，简洁高效的完成一个服务的部署。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/10/1602316253657-1602316253664.png" alt="title"></p>
<p>官网：<span class="exturl" data-url="aHR0cHM6Ly9ub2RlcmVkLm9yZy8=">https://nodered.org/<i class="fa fa-external-link-alt"></i></span><br>代码：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25vZGUtcmVkL25vZGUtcmVk">https://github.com/node-red/node-red<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/10/1602315954066-1602315954075.png" alt="title"><br>【图片来自：官网】</p>
<h1 id="StackStorm"><a href="#StackStorm" class="headerlink" title="StackStorm"></a>StackStorm</h1><p>StackStorm 是一个强大的自动化平台，结合 DevOps 和 ChatOps ，提供可扩展、灵活和健壮的工具链用于应用、服务和工作流的自动化能力。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/10/1602309409523-1602309409523.png" alt="title"></p>
<p>官网：<span class="exturl" data-url="aHR0cHM6Ly9zdGFja3N0b3JtLmNvbS8=">https://stackstorm.com/<i class="fa fa-external-link-alt"></i></span><br>代码：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1N0YWNrU3Rvcm0vc3Qy">https://github.com/StackStorm/st2<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/10/1602309301405-1602309301415.png" alt="title"><br>【图片来自：官网】</p>
<h1 id="Huginn"><a href="#Huginn" class="headerlink" title="Huginn"></a>Huginn</h1><p>Huginn 是一个强大的自动化工具，它就像 IFTTT，if 1 then 2，当事件 1 出现，自动完成事件 2。 它可以帮助你设置感应器，收集信息并完成从信息的搜集—过滤—通知这样一连串的任务。 比起 IFTTT，它更加强大，更加自动化，也更加难以搞定。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/10/1602309926948-1602309926955.png" alt="title"></p>
<p>代码：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2h1Z2lubi9odWdpbm4=">https://github.com/huginn/huginn<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/10/1602310311110-1602310311119.png" alt="title"><br>【图片来自：官网】</p>
<h1 id="Flogo"><a href="#Flogo" class="headerlink" title="Flogo"></a>Flogo</h1><p>Flogo项目是一个资源高效的，基于 Go 的开源生态系统，用于构建事件驱动的应用程序。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/10/1602317155625-1602317155628.png" alt="title"></p>
<p>主页：<span class="exturl" data-url="aHR0cDovL3d3dy5mbG9nby5pby8=">http://www.flogo.io/<i class="fa fa-external-link-alt"></i></span><br>代码：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RpYmNvc29mdHdhcmUvZmxvZ28=">https://github.com/tibcosoftware/flogo<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/10/1602317169844-1602317169851.png" alt="title"><br>【图片来自：官网】</p>
<h1 id="Beehive"><a href="#Beehive" class="headerlink" title="Beehive"></a>Beehive</h1><p>Beehive 是由 Go 模板引擎驱动的开源 IFTTT，一个灵活的事件和代理系统。它允许你创建自己的代理，执行由事件和过滤器触发的自动化任务。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/10/1602317668267-1602317668274.png" alt="title"></p>
<p>代码：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL211ZXNsaS9iZWVoaXZlLw==">https://github.com/muesli/beehive/<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://github.com/muesli/beehive-docs/raw/master/screencaps/new_bees.gif" alt="title"><br>【图片来自：官网】</p>
<h1 id="DataFire"><a href="#DataFire" class="headerlink" title="DataFire"></a>DataFire</h1><p>DataFire 是一个用于构建和集成 API 的开源框架，可以快速开发连接到 1000 多种不同服务的任务和 API。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/10/1602317855774-1602317855780.png" alt="title"></p>
<p>主页：<span class="exturl" data-url="aHR0cHM6Ly9hcHAuZGF0YWZpcmUuaW8v">https://app.datafire.io/<i class="fa fa-external-link-alt"></i></span><br>代码：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0RhdGFGaXJlL0RhdGFGaXJl">https://github.com/DataFire/DataFire<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/10/1602317962457-1602317962464.png" alt="title"></p>
<h1 id="Actionsflow"><a href="#Actionsflow" class="headerlink" title="Actionsflow"></a>Actionsflow</h1><p>Actionsflow 基于 GitHub Actions 实现，因此可通过配置 YAML 文件来构建工作流，亦可用作 IFTTT/Zapier 的开源替代品。</p>
<p>可用于构建各类 App、数据、API 之间的工作流程，帮你更好的处理文件同步、信息收集、任务管理等事项。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/10/1602312266089-1602312266092.png" alt="title"></p>
<p>官网：<span class="exturl" data-url="aHR0cHM6Ly9hY3Rpb25zZmxvdy5naXRodWIuaW8v">https://actionsflow.github.io/<i class="fa fa-external-link-alt"></i></span><br>代码：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FjdGlvbnNmbG93L2FjdGlvbnNmbG93">https://github.com/actionsflow/actionsflow<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/10/1602312796307-1602312796316.png" alt="title"><br>【图片来自：<span class="exturl" data-url="aHR0cHM6Ly93ZWliby5jb20vNTcyMjk2NDM4OS9Kb2RGRGRqMmw=">https://weibo.com/5722964389/JodFDdj2l<i class="fa fa-external-link-alt"></i></span>】</p>
<p>当然还有一些已经不活跃的项目，比如 Trigger Happy、Fr8，有新的后续再增补吧。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>玩转 IFTTT，互联网自动化也可以很简单<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuc29odS5jb20vYS8yMjU4ODA4NTVfMTE1Nzg1">https://www.sohu.com/a/225880855_115785<i class="fa fa-external-link-alt"></i></span></p>
<p>n8n - 开源自动工作流工具，类 IFTTT/Zapier，互联互通 50+ 款在线服务 - 小众软件<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuYXBwaW5uLmNvbS9uOG4taW8v">https://www.appinn.com/n8n-io/<i class="fa fa-external-link-alt"></i></span></p>
<p>Stackstorm的介绍与入门_夜深人静后的码农-CSDN博客<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3N4YjA4NDE5MDExMTYvYXJ0aWNsZS9kZXRhaWxzLzc5ODI2OTY5">https://blog.csdn.net/sxb0841901116/article/details/79826969<i class="fa fa-external-link-alt"></i></span></p>
<p>Huginn中文指南：搭建自己的iFTTT — Corkine’s BlOG<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLm1hemhhbmdqaW5nLmNvbS8yMDE3LzAxLzE0L2h1Z2lubiVFNiU4QyU4NyVFNSU4RCU5Ny8=">https://blog.mazhangjing.com/2017/01/14/huginn%E6%8C%87%E5%8D%97/<i class="fa fa-external-link-alt"></i></span></p>
<p>Beehive-go-Go 模板引擎驱动的 IFTTT<br>地址：<span class="exturl" data-url="aHR0cDovL2NvZGluZ2RpY3QuY29tL29zL3NvZnR3YXJlLzkzNzMz">http://codingdict.com/os/software/93733<i class="fa fa-external-link-alt"></i></span></p>
<p>ActionsFlow：程序员的 IFTTT 开源替代品<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuMDI1MjI1LmNvbS9yZWFkLTI0NjkzLmh0bWw=">https://www.025225.com/read-24693.html<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>自动化</tag>
        <tag>IFTTT</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown的图片伴侣PicGo</title>
    <url>/2020/10/13/Markdown%E7%9A%84%E5%9B%BE%E7%89%87%E4%BC%B4%E4%BE%A3PicGo/</url>
    <content><![CDATA[<p>什么是图床？</p>
<blockquote>
<p>图床一般是指储存图片的服务器，有国内和国外之分。国外的图床由于有空间距离等因素决定访问速度很慢影响图片显示速度。国内也分为单线空间、多线空间和 cdn 加速三种。[百度百科]</p>
</blockquote>
<p>什么是 CDN ？</p>
<blockquote>
<p>CDN 的全称是 Content Delivery Network ，即内容分发网络。CDN 是构建在网络之上的内容分发网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN 的关键技术主要有内容存储和分发技术。[百度百科]</p>
</blockquote>
<p>什么是 jsDelivr ？</p>
<blockquote>
<p>jsDelivr 是用于开源项目的免费公共 CDN ，由 Cloudflare、Fastly、StackPath、QUANTIL 等 CDN 供应商提供了全球超过 750 个 CDN 节点。最重要的是，jsDelivr 在中国大陆也拥有超过数百个节点，因为 jsDelivr 拥有正规的 ICP 备案，解决了中国大陆的访问速度优化，实现真正的全球极速低延迟体验。<br> jsDelivr 是免费的、不限制带宽的，可以加速 NPM、Github 内的文件，而且无需进行任何配置。</p>
</blockquote>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近被两个问题困扰：</p>
<p>1、之前用 gitnote 写作时，图片都是自动上传到 github 的，因为我启用了 gitnote 自带的 github 图床插件，所以当已完成的 md 文档发布到 hexo 时，不需要考虑图片的问题。而从 gitnote 转到 obsidian 后，粘贴的图片都在本地创建的 <code>附件目录</code> 中，在发布前还需要手动上传到图床，加上发布到微信公众号还需要单独上传图片，相当于一张图片要上传2次。</p>
<p>2、因为 DNS 污染的原因，github 图床的图片显示并不稳定，有时候能看到图，有时候会变成</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/13/1602559204537-1602559204563.png" alt="title"></p>
<h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>针对问题1：首先想到了 PicGo ，这个图床工具大名鼎鼎，免费、开源、支持Windows、MacOS 和 Linux，相信用 Markdown 来写文档的朋友们都应该知道，它的界面友好，支持的图床也多，支持拖拽上传，使用很方便，最重要的是支持插件系统，功能扩展很方便。</p>
<p>以前一直没用主要是 gitnote 本身支持图床，包括 MWeb 也是一样；毕竟外置的工具再怎么好用也比不上内置的方便。</p>
<p>但目前 obsidian 还没有开放插件，所以只能用第三方工具来迂回解决。</p>
<p>针对问题2：网上给出的方法一般是修改 hosts 文件，当然还可以用科学上网的方法，但是不管哪一种方法，我都不能要求读者必须满足条件之一才能观看我的文章。</p>
<p>所以最好的办法当然是能让读者直接能访问到 github 上的图片，而解决这个问题可以通过 jsDelivr CDN 来进行全球加速，只是不确定这种方法是不是对 jsDelivr 的滥用？</p>
<p>除了 jsDelivr 外，还有 staticaly ，官网地址： <span class="exturl" data-url="aHR0cHM6Ly9zdGF0aWNhbGx5LmlvLw==">https://statically.io/<i class="fa fa-external-link-alt"></i></span>  也是免费不限流量的，而 Cloudflare  免费账户每天 10 万次请求，一般用用肯定是够的。</p>
<h1 id="PicGo"><a href="#PicGo" class="headerlink" title="PicGo"></a>PicGo</h1><p>关于用 PicGo 设置免费的 github 图床，可以看这篇文章 「<span class="exturl" data-url="aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDAyMzIyMjEzNw==">GitHub + jsDelivr + PicGo打造免费图床<i class="fa fa-external-link-alt"></i></span>」，照着文档一步一步做就可以了。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201013001524.png" alt=""></p>
<p><code>设定自定义域名</code> 决定了图片上传成功后返回的字符串，你可以选择 <code>Markdown</code> 、<code>HTML</code> 等不同的格式。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/13/1602573583123-1602573583132.png" alt="title"></p>
<p>我们可以利用 <code>设定自定义域名</code> 将上传成功的图片地址从 github 地址自动转换为 jsDelivr 地址。</p>
<p>开始 <code>设定自定义域名</code> 中只是替换了域名部分</p>
<p>从 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;wbsu2003&#x2F;gitnote-images&#x2F;master</span><br></pre></td></tr></table></figure>

<p>改成了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;wbsu2003&#x2F;gitnote-images&#x2F;master</span><br></pre></td></tr></table></figure>

<p>结果返回了错误</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Package size exceeded the configured limit of 50 MB. Try https:&#x2F;&#x2F;github.com&#x2F;wbsu2003&#x2F;gitnote-images&#x2F;tree&#x2F;master&#x2F;mynote&#x2F;master&#x2F;2020&#x2F;10&#x2F;13&#x2F;1602571758405-1602571758418.png instead.</span><br></pre></td></tr></table></figure>

<p>实际上应该改成</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;wbsu2003&#x2F;gitnote-images@master</span><br></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;wbsu2003&#x2F;gitnote-images</span><br></pre></td></tr></table></figure>


<p>所以总结起来应该是这个样子：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;GitHub用户名&#x2F;仓库名@release版本号&#x2F;文件名(含目录)</span><br></pre></td></tr></table></figure>

<p>或是</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;GitHub用户名&#x2F;仓库名&#x2F;文件名(含目录)</span><br></pre></td></tr></table></figure>

<h1 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h1><p>我们首先来测试一张图片，它的原始路径是：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;wbsu2003&#x2F;gitnote-images&#x2F;master&#x2F;mynote&#x2F;2020&#x2F;10&#x2F;13&#x2F;1602571758405-1602571758418.png</span><br></pre></td></tr></table></figure>

<p>显示效果：</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/13/1602571758405-1602571758418.png" alt="测试图片1"></p>
<p>采用 jsdelivr 地址规则后</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;wbsu2003&#x2F;gitnote-images@master&#x2F;mynote&#x2F;2020&#x2F;10&#x2F;13&#x2F;1602571758405-1602571758418.png</span><br></pre></td></tr></table></figure>

<p>显示效果：</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images@master/mynote/2020/10/13/1602571758405-1602571758418.png" alt="测试图片2"></p>
<p>master 可选择仓库的不同分支，如果像我一样仓库只有 master 的分支，@master 是可以省略的，直接用图片链接：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;wbsu2003&#x2F;gitnote-images&#x2F;mynote&#x2F;2020&#x2F;10&#x2F;13&#x2F;1602571758405-1602571758418.png</span><br></pre></td></tr></table></figure>

<p>显示效果：</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/13/1602571758405-1602571758418.png" alt="测试图片"></p>
<h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>用 jsDelivr 不仅能加速图片，也可以为 Hexo 博客进行 CDN 加速，不过我的博客之前已经做了双线，暂时先这么用着吧。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>PicGo 官网主页<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9tb2x1bmVyZmlubi5jb20vUGljR28v">https://molunerfinn.com/PicGo/<i class="fa fa-external-link-alt"></i></span></p>
<p>Molunerfinn/PicGo 代码主页<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01vbHVuZXJmaW5uL1BpY0dv">https://github.com/Molunerfinn/PicGo<i class="fa fa-external-link-alt"></i></span></p>
<p>PicGo v2.2 更新，快捷键系统与一波插件推荐 - 少数派<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9zc3BhaS5jb20vcG9zdC81ODIyMw==">https://sspai.com/post/58223<i class="fa fa-external-link-alt"></i></span></p>
<p>GitHub + jsDelivr + PicGo打造免费图床_个人文章 - SegmentFault 思否<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDAyMzIyMjEzNw==">https://segmentfault.com/a/1190000023222137<i class="fa fa-external-link-alt"></i></span></p>
<p>使用 jsDelivr 为 Hexo 博客提供高效免费的CDN加速 - 一个人的孤落时辰<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9xaW55dWFucGVpLmdpdGh1Yi5pby9wb3N0cy8xNDE3NzE5NTAyLw==">https://qinyuanpei.github.io/posts/1417719502/<i class="fa fa-external-link-alt"></i></span></p>
<p>快速免费的公用 CDN —— jsDelivr - Rogn - 博客园<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbGZyaS9wLzEyMjEyODc4Lmh0bWw=">https://www.cnblogs.com/lfri/p/12212878.html<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
        <tag>图床</tag>
        <tag>CDN</tag>
      </tags>
  </entry>
  <entry>
    <title>PVE安装win10集显直通</title>
    <url>/2020/05/21/PVE%E5%AE%89%E8%A3%85win10%E9%9B%86%E6%98%BE%E7%9B%B4%E9%80%9A/</url>
    <content><![CDATA[<p><strong>什么是PVE</strong></p>
<blockquote>
<p>Proxmox VE 全称是 Proxmox Virtual Environment (Proxmox 虚拟环境)，通常简称为 Proxmox或PVE，Proxmox VE 是一个功能强大的完全开源的虚拟化平台。通过内置的Web管理界面，你能够轻易地管理多个虚拟机和容器, 也可以轻松地管理存储和网络，甚至是管理高可用性集群。</p>
</blockquote>
<p><strong>为什么要显卡直通</strong></p>
<blockquote>
<p>简单来说，显卡直通就是希望虚拟机能直接用显卡的GPU，来获得更高的性能。理论上包括网卡、声卡等硬件设备都是可以直通（PassThorugh）的。</p>
</blockquote>
<h1 id="安装-PVE"><a href="#安装-PVE" class="headerlink" title="安装 PVE"></a>安装 PVE</h1><h2 id="下载-PVE-ISO-文件"><a href="#下载-PVE-ISO-文件" class="headerlink" title="下载 PVE ISO 文件"></a>下载 PVE ISO 文件</h2><p>官方网站下载地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cucHJveG1veC5jb20vZW4vZG93bmxvYWRz">https://www.proxmox.com/en/downloads<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="制作启动-U-盘"><a href="#制作启动-U-盘" class="headerlink" title="制作启动 U 盘"></a>制作启动 U 盘</h2><p>用 UltraISO 写入 U 盘；</p>
<p>【注意】：</p>
<blockquote>
<ol>
<li>可能会存在U盘兼容性问题，但我没遇到，用的 kingstone DT101 G2 的 4G；</li>
<li>在写入格式时，开始选的 USB-HDD，但可能跟主板有关系，也可能是设置关系，不能正常启动，后改为 RAW 后正常；</li>
</ol>
</blockquote>
<h2 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h2><p>BIOS 中设置 U 盘启动；</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%201-1590034607684.png" alt="title"></p>
<p>自检画面，等待几秒</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%202-1590034644701.png" alt="title"></p>
<p>同意协议，点击 “I agree”</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%203-1590034687395.png" alt="title"></p>
<p>选择硬盘，点击 “Next”</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%204-1590034714141.png" alt="title"></p>
<p>【注意】：</p>
<blockquote>
<p>注意要选择你要安装 pve 系统的盘符，会格式化掉硬盘里的所有东西。保险起见把不用的硬盘先拔掉。</p>
</blockquote>
<p>设定国家、时区和键盘，Country 输入 China 即可，点击 “Next”</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%205-1590034752844.png" alt="title"></p>
<p>设置管理员 root 账号密码和邮箱</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%206-1590034782949.png" alt="title"></p>
<p>【注意】：</p>
<blockquote>
<p>密码要牢记</p>
</blockquote>
<p>设定主机名，IP，网关，掩码和 DNS，在安装过程中这里的IP等信息自动获取了（上述2步骤会自动检查网络，固定IP可以自己设定）</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%207-1590034858836.png" alt="title"></p>
<p>安装中，等待几分钟</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%208-1590034920244.png" alt="title"></p>
<p>安装完提示重启</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%209-1590034945702.png" alt="title"></p>
<p>【注意】：</p>
<blockquote>
<p>重启前请先移除U盘，或者关闭U盘启动；</p>
</blockquote>
<p>启动完成后的控制台，会提示控制台访问URL</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2010-1590034990755.png" alt="title"></p>
<p>【注意】</p>
<blockquote>
<p>1、是 https，不是 http；<br>2、因为证书问题，尽量不要用 ie 和 edge 浏览器，chrome 浏览器的效果比较好；</p>
</blockquote>
<h1 id="运行PVE"><a href="#运行PVE" class="headerlink" title="运行PVE"></a>运行PVE</h1><p>输入URL， <span class="exturl" data-url="aHR0cHM6Ly9JUDo4MDA2">https://IP:8006<i class="fa fa-external-link-alt"></i></span> ， 语言可以选择中文，对于中文支持不错；</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2011-1590035049330.png" alt="title"></p>
<p>进入 PVE UI 的截图</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2012-1590035069746.png" alt="title"></p>
<h1 id="虚拟化设置"><a href="#虚拟化设置" class="headerlink" title="虚拟化设置"></a>虚拟化设置</h1><h2 id="修改BIOS"><a href="#修改BIOS" class="headerlink" title="修改BIOS"></a>修改BIOS</h2><p>在 BIOS 中要开启跟虚拟化相关的选项，比如VD-T等；</p>
<h2 id="修改PVE内核"><a href="#修改PVE内核" class="headerlink" title="修改PVE内核"></a>修改PVE内核</h2><p>PVE 的内核开启支持 VD-T 直通的 IOMMU 及相关模块；</p>
<ul>
<li>修改/etc/default/grub文件中的内容</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2014-1590035396165.png" alt="title"></p>
<p>【注意】：</p>
<blockquote>
<p>后面所有的操作都在 WEB GUI 的 shell 中进行</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2013-1590035381302.png" alt="title"></p>
<p>把原内容中：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=<span class="string">"quiet"</span></span><br></pre></td></tr></table></figure>

<p>改为：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=<span class="string">"quiet intel_iommu=on video=efifb:off"</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2015-1590035456671.png" alt="title"></p>
<p>执行 <code>update-grub</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2016-1590035511541.png" alt="title"></p>
<p>立即更新 grub</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2017-1590035521808.png" alt="title"></p>
<ul>
<li>找到文件 <code>/etc/modules</code>（如果系统没有此文件，则自己建立一个）</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2018-1590035572512.png" alt="title"></p>
<p>加上以下代码，每个一行：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">Vfio</span><br><span class="line">vfio_iommu_type1</span><br><span class="line">vfio_pci</span><br><span class="line">vfio_virqfd</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2019-1590035663580.png" alt="title"></p>
<ul>
<li>建立驱动黑名单，依次输入以下命令：</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"blacklist snd_hda_intel"</span>&gt;&gt; /etc/modprobe.d/pve-blacklist.conf</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"blacklist snd_hda_codec_hdmi"</span>&gt;&gt; /etc/modprobe.d/pve-blacklist.conf</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"blacklist i915"</span>&gt;&gt; /etc/modprobe.d/pve-blacklist.confupdate-initramfs –u</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2020-1590035762619.png" alt="title"></p>
<ul>
<li>GPU 信息确认：<br>输入命令 <code>lspci</code> ，确定核显编号，一般集显是 <code>00:02</code></li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2021-1590035874624.png" alt="title"></p>
<p>再输入命令 <code>lspci -n -s 00:02</code>  得到 <code>vendor IDs</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2022-1590037422736.png" alt="title"></p>
<p>把集显指定到 VFIO 模块</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"options vfio-pci ids=8086:1616"</span> &gt; /etc/modprobe.d/vfio.conf</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2023-1590037450012.png" alt="title"></p>
<h1 id="创建-Win10-虚拟机"><a href="#创建-Win10-虚拟机" class="headerlink" title="创建 Win10 虚拟机"></a>创建 Win10 虚拟机</h1><h2 id="下载-win10-的-iso-包；"><a href="#下载-win10-的-iso-包；" class="headerlink" title="下载 win10 的 iso 包；"></a>下载 win10 的 iso 包；</h2><p>我相信你一定有，就是没有你也能找得到；</p>
<h2 id="下载-virtio-win-的-iso-驱动包；"><a href="#下载-virtio-win-的-iso-驱动包；" class="headerlink" title="下载 virtio-win 的 iso 驱动包；"></a>下载 virtio-win 的 iso 驱动包；</h2><p>下载地址：<span class="exturl" data-url="aHR0cHM6Ly9mZWRvcmFwZW9wbGUub3JnL2dyb3Vwcy92aXJ0L3ZpcnRpby13aW4vZGlyZWN0LWRvd25sb2Fkcy9hcmNoaXZlLXZpcnRpby8=">https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/archive-virtio/<i class="fa fa-external-link-alt"></i></span></p>
<p>【注意】：</p>
<blockquote>
<p>建议下日期最新的版本</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2024-1590037534614.png" alt="title"></p>
<h2 id="上传ISO文件"><a href="#上传ISO文件" class="headerlink" title="上传ISO文件"></a>上传ISO文件</h2><p>上述的 iso 包都上传到下图目录中</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2025-1590037579769.png" alt="title"></p>
<h2 id="设置虚拟机参数"><a href="#设置虚拟机参数" class="headerlink" title="设置虚拟机参数"></a>设置虚拟机参数</h2><p>参数设置不同的机器是不一样的，需要根据不同的机器进行验证；</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2026-1590037624180.png" alt="title"></p>
<p>【注意】：以下说法不一定准确，需要进一步验证：</p>
<blockquote>
<p>1、处理器需要为 HOST 模式；<br>2、Win10 系统要放在 ide0，否则有可能不会启动；<br>3、机器要选 q35，据说 PCI-e 的性能更好；<br>4、网上都说装 win10 时 BIOS 要选 OVMF（UEFI），但在我的机器上就是死活起不来；<br>5、显示选默认就可以，但是一定要分显存；<br>6、安装 win10 过程中，如果找不到磁盘，可以在 virtio-win 的 ISO 上找 virscsi 驱动；<br>7、安装完成后，检查【设备管理器】中的驱动情况，除显卡外其他都可以用 virtio-win 的 ISO<br>8、显卡可以直接下载对应版本的集显驱动；</p>
</blockquote>
<h2 id="连接win10虚拟机"><a href="#连接win10虚拟机" class="headerlink" title="连接win10虚拟机"></a>连接win10虚拟机</h2><ul>
<li>1、虚拟机安装完成后，建议启用远程桌面，配置 RDP 访问；</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2027-1590037678865.png" alt="title"></p>
<ul>
<li>2、修改/etc/pve/qemu-server/100.conf（Win10 在 PVE 顺序是 100）</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2028-1590037714502.png" alt="title"></p>
<p>输入：<code>vi /etc/pve/qemu-server/100.conf</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2029-1590037773452.png" alt="title"></p>
<p>在第一行插入：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">args: -device vfio-pci,host=00:02.0,addr=0x18,x-igd-opregion=on</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/21/%E5%9B%BE%E7%89%87%2030-1590037807483.png" alt="title"></p>
<p>【注意】：</p>
<blockquote>
<p>1、据说这一步骤是直通核显 GPU 的关键步骤；<br>2、需要注意的是：host=00:02.0这个 00:02.0 需要与前面 lspic 显示的核显编号对应上；<br>3、PVE 主机的 HDMI 接口接到显示器；<br>4、当 win10 认到双显示器时，改为复制模式；</p>
</blockquote>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>接下来就可以安装显卡驱动愉快的玩耍了。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>PVE的安装，中文手册及GPU独显核显直通、万兆内网的那些事<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9rb29sc2hhcmUuY24vdGhyZWFkLTE1ODkzOS0xLTEuaHRtbA==">https://koolshare.cn/thread-158939-1-1.html<i class="fa fa-external-link-alt"></i></span></p>
<p>PVE直通核显搭建虚拟Win10 HTPC避坑指南<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuMTBiZXN0cy5jb20vd2luMTAtaHRwYy1vbi1wdmUv">https://www.10bests.com/win10-htpc-on-pve/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>PVE</tag>
        <tag>显卡直通</tag>
        <tag>GPU</tag>
      </tags>
  </entry>
  <entry>
    <title>RaiDrive挂载frp映射的WebDAV网盘</title>
    <url>/2020/04/28/RaiDrive%E6%8C%82%E8%BD%BDfrp%E6%98%A0%E5%B0%84%E7%9A%84WebDAV%E7%BD%91%E7%9B%98/</url>
    <content><![CDATA[<p><strong>RaiDrive是什么？</strong></p>
<blockquote>
<p>RaiDrive 是一款能够将一些网盘映射为本地网络磁盘的工具，支持 Google Drive、Google Photos、Dropbox、OneDrive、FTP、SFTP、WebDAV。</p>
</blockquote>
<p><strong>frp是什么？</strong></p>
<blockquote>
<p>frp 是一个高性能的反向代理应用，可以帮助您轻松地进行内网穿透，对外网提供服务，支持tcp, http, https 等协议类型，并且web 服务支持根据域名进行路由转发。</p>
</blockquote>
<p><strong>WebDAV是什么？</strong></p>
<blockquote>
<p>WebDAV是一组HTTP的扩展协议，支持用户直接对远程Web服务器上的文件进行编辑和管理。 它是一种标准协议，大多数操作系统都支持，比如Windows、Mac和Linux。您可以将WebDAV服务器上的一个文件夹映射成一个网络驱动器。</p>
</blockquote>
<p>在群晖上开启WebDAV，只要在<strong>套件中心</strong>安装WebDAV Server即可，剩下的只是一些简单的设置。</p>
<p>暂时未启用https，如果需要的话勾选即可</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/25/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20200425103339-1587782369660.png" alt="title"></p>
<p>在电脑上打开RaiDrive，按下图设置</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/25/c4a40fe28c7c2903037bff96010779b-1587782608503.png" alt="title"></p>
<p>确定之后</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/25/4edca9758e42ca3a58951a9c466e0c4-1587782670948.png" alt="title"></p>
<p>在资源管理器中打开<br><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/25/36fe38fbe78e2e38dc2a925a479b7a5-1587782702646.png" alt="title"></p>
<p>是不是很简单？接下来我们把它映射到外网，方便从远程进行访问。</p>
<p>首先要在frpc.ini增加下面的内容</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[webdav]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">192.168</span>.<span class="number">0.199</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">5005</span></span><br><span class="line"><span class="attr">use_encryption</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">use_gzip</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">custom_domains</span> = webdav.abc.ml</span><br></pre></td></tr></table></figure>

<p>我是在docker中安装的frpc容器，设置好之后重启一下以便设置生效。</p>
<p>在电脑上打开RaiDrive，端口是必填的，所以还是和局域网一样填了5005。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/25/2564299304a703440e7df7564292e03-1587783865197.png" alt="title"></p>
<p>可是这一次没成功</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/25/4a9ce9e2e46414ef353878e274b2e33-1587783976746.png" alt="title"></p>
<p>在网上找了一圈，也没找到解决办法。直到有一天无意中把端口改成了80</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/25/8c58c72442bfb7626ef29cdd1b20a0a-1587784272628.png" alt="title"></p>
<p>见证奇迹的时刻到了</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/25/c68ac1e782f5f089d0894fd114b2dff-1587784987298.png" alt="title"></p>
<p>收工~~</p>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>WebDAV</tag>
        <tag>docker</tag>
        <tag>RaiDrive</tag>
        <tag>frp</tag>
      </tags>
  </entry>
  <entry>
    <title>R6300v2上安装zerotier</title>
    <url>/2020/05/29/R6300v2%E4%B8%8A%E5%AE%89%E8%A3%85zerotier/</url>
    <content><![CDATA[<h1 id="过程回顾"><a href="#过程回顾" class="headerlink" title="过程回顾"></a>过程回顾</h1><h2 id="安装-opkg-软件源"><a href="#安装-opkg-软件源" class="headerlink" title="安装 opkg 软件源"></a>安装 opkg 软件源</h2><p>winscp + putty 登录到路由器上。先要在路由器中设置允许ssh登录</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/23/1590203251195-1590203251197.png" alt="title"></p>
<h3 id="创建软件安装目录"><a href="#创建软件安装目录" class="headerlink" title="创建软件安装目录"></a>创建软件安装目录</h3><p>依次执行命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /jffs</span><br><span class="line">mkdir /jffs/opt</span><br><span class="line">ln -nsf /jffs/opt /tmp/opt</span><br></pre></td></tr></table></figure>

<h3 id="安装-opkg"><a href="#安装-opkg" class="headerlink" title="安装 opkg"></a>安装 opkg</h3><ul>
<li>下载脚本</li>
</ul>
<p>执行命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">wget http://qnapware.zyxmon.org/binaries-armv7/installer/entware_install_arm.sh</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/23/1590166646192-1590166646246.png" alt="title"></p>
<ul>
<li>然后运行脚本：</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sh ./entware_install_arm.sh</span><br></pre></td></tr></table></figure>

<p>等待脚本运行完毕，看到 Congratulations! 就说明安装成功了。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/23/1590167344866-1590167344868.png" alt="title"></p>
<h3 id="自动挂载opt分区"><a href="#自动挂载opt分区" class="headerlink" title="自动挂载opt分区"></a>自动挂载opt分区</h3><p>在/jffs/scripts位置建立文件，可以先在电脑上建立文本文件，再用WinSCP传进去文件名: <code>post-mount</code></p>
<p>内容如下：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line">ln -nsf /jffs/opt /tmp/opt</span><br></pre></td></tr></table></figure>

<p>最后获取脚本文件的权限，命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">chmod a+rx /jffs/scripts/post-mount</span><br></pre></td></tr></table></figure>

<p>到这里 opkg 软件源就算安装完毕了。</p>
<h2 id="安装、配置-zerotier"><a href="#安装、配置-zerotier" class="headerlink" title="安装、配置 zerotier"></a>安装、配置 zerotier</h2><h3 id="安装-zerotier"><a href="#安装-zerotier" class="headerlink" title="安装 zerotier"></a>安装 zerotier</h3><p>依次执行命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">opkg update</span><br><span class="line">opkg install zerotier</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/23/1590168332375-1590168332377.png" alt="title"></p>
<h3 id="运行-zerotier"><a href="#运行-zerotier" class="headerlink" title="运行 zerotier"></a>运行 zerotier</h3><p>依次执行命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">modprobe tun</span><br><span class="line">zerotier-one -d</span><br><span class="line">zerotier-cli info</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/23/1590168486543-1590168486546.png" alt="title"></p>
<p>居然是offline？</p>
<h3 id="加入申请到的网络ID"><a href="#加入申请到的网络ID" class="headerlink" title="加入申请到的网络ID"></a>加入申请到的网络ID</h3><p>执行命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">zerotier-cli join 8b***********9</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/23/1590168884793-1590168884794.png" alt="title"></p>
<h3 id="获取-ip-值"><a href="#获取-ip-值" class="headerlink" title="获取 ip 值"></a>获取 ip 值</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">zerotier-cli listnetworks</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/23/1590202519667-1590202519727.png" alt="title"></p>
<p>显示 <code>REQUESTING_CONFIGURATION PRIVATE zt0 -</code> 而不是IP，进入zerotier的后台设置界面，也没看到需要授权的设备，所以可以肯定存在问题。</p>
<p>仔细翻看原帖子的跟帖，也有不少人和我遇到同样的问题。接下来开始各种尝试。</p>
<h3 id="开启从互联网设置"><a href="#开启从互联网设置" class="headerlink" title="开启从互联网设置"></a>开启从互联网设置</h3><p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/23/1590203097622-1590203097624.png" alt="title"></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/23/1590203068306-1590203068309.png" alt="title"></p>
<p>故障依旧</p>
<p>查了很多文档后发现 Entware 还可以安装到 U盘，虽然会让路由器后面带个小辫子，但是总归还是要尝试一下的。</p>
<h2 id="将-Entware-装到-U盘"><a href="#将-Entware-装到-U盘" class="headerlink" title="将 Entware 装到 U盘"></a>将 Entware 装到 U盘</h2><p>梅林固件自带一个entware.sh的安装脚本，但是要求必须插上一个 ext4 等 linux 文件系统的 U盘。可以找个 U盘，用 DiskGenius 可以格式化成 ext4 格式。</p>
<p>执行命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">df -h</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/23/1590205045828-1590205045831.png" alt="title"></p>
<p>可以看到 U盘 挂载成功，netgear是 U盘的卷标，接下来执行。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">entware-setup.sh</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/23/1590205205693-1590205205695.png" alt="title"></p>
<p>安装 zerotier</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/23/1590205562115-1590205562117.png" alt="title"></p>
<p>依次运行：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">modprobe tun</span><br><span class="line">zerotier-one -d</span><br><span class="line">zerotier-cli info</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/23/1590206488931-1590206488932.png" alt="title"></p>
<p>成功上线，而且是最新的1.4.6版本</p>
<p>执行命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">zerotier-cli join 8b***********9</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/23/1590207762304-1590207762307.png" alt="title"></p>
<p>这次居然是加入网络ID失败，在执行一次，很莫名其妙的又ok了，接下来执行命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">zerotier-cli listnetworks</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/23/1590208320717-1590208320723.png" alt="title"></p>
<p>显示 <code>ACCESS_DENIED PRIVATE</code>，这是需要在zerotier后台页面授权，</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/23/1590208451665-1590208451668.png" alt="title"></p>
<p>勾选之后，再次执行：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">zerotier-cli listnetworks</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/23/1590208598768-1590208598772.png" alt="title"></p>
<p>可以看到已经获取到了后台分配的IP地址。先查询下所有iptables情况：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">iptables -v -L INPUT -n --line-numbers</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/23/1590209134536-1590209134539.png" alt="title"></p>
<p>添加一条 <code>iptables</code>:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">iptables -I INPUT 1 -i ztyqb3hz7p -j ACCEPT</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/23/1590209538703-1590209538706.png" alt="title"></p>
<p>如果你不确定虚拟网卡的名词，可以用 <code>ifconfig</code> 查一下。我这里的虚拟网卡名即为: <code>ztyqb3hz7p</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/23/1590211715737-1590211715740.png" alt="title"></p>
<p>重启zerotier</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">killall zerotier-one</span><br><span class="line">zerotier-one -d</span><br></pre></td></tr></table></figure>

<p>设置开机加载tun驱动并检测脚本是否运行：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"modprobe tun"</span> &gt;&gt; /jffs/scripts/nat-start</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"cru a ZeroTierDaemon "</span>/opt/etc/init.d/S90zerotier-one.sh start<span class="string">""</span> &gt;&gt; /jffs/scripts/wan-start</span><br></pre></td></tr></table></figure>

<p>端口映射，添加/jffs/scripts/nat-start内容，并设置开机启动</p>
<blockquote>
<p>192.168.191.10 为 zerotier 分配的 IP<br>192.168.0.1 为路由器的 IP</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"iptables -t nat -A PREROUTING -d 192.168.191.10 -p tcp --dport 80 -j DNAT --to-destination 192.168.0.1:80"</span> &gt;&gt; /jffs/scripts/nat-start</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"/opt/etc/init.d/S90zerotier-one.sh"</span> &gt;&gt; /jffs/scripts/nat-start</span><br><span class="line">chmod a+rx /jffs/scripts/*</span><br></pre></td></tr></table></figure>

<p>启动脚本放到相应目录</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/23/1590212628810-1590212628814.png" alt="title"></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">chmod 755 /opt/etc/init.d/S90zerotier-one.sh</span><br></pre></td></tr></table></figure>

<p>S90zerotier-one.sh 脚本内容：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#! /bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">  start)</span><br><span class="line">    <span class="keyword">if</span> ( pidof zerotier-one )</span><br><span class="line">    <span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">"ZeroTier-One is already running."</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Starting ZeroTier-One"</span> ;</span><br><span class="line">        /opt/bin/zerotier-one -d ;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"<span class="variable">$(date)</span> Started ZeroTier-One"</span> &gt;&gt; /opt/var/<span class="built_in">log</span>/zerotier-one.log ;</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    ;;</span><br><span class="line">  stop)</span><br><span class="line">    <span class="keyword">if</span> ( pidof zerotier-one )</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Stopping ZeroTier-One"</span>;</span><br><span class="line">        killall zerotier-one</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"<span class="variable">$(date)</span> Stopped ZeroTier-One"</span> &gt;&gt; /opt/var/<span class="built_in">log</span>/zerotier-one.log</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"ZeroTier-One was not running"</span> ;</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    ;;</span><br><span class="line">  status)</span><br><span class="line">    <span class="keyword">if</span> ( pidof zerotier-one )</span><br><span class="line">    <span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">"ZeroTier-One is running."</span></span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">echo</span> <span class="string">"ZeroTier-One is NOT running"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    ;;</span><br><span class="line">  *)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Usage: /etc/init.d/zerotier-one &#123;start|stop|status&#125;"</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">    ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure>

<p>添加防火墙规则（没有开启防火墙这个无所谓），在/jffs/scripts位置建立文件，可以先在电脑上建立文本文件，再用WinSCP传进去文件名: <code>firewall-start</code></p>
<p>文件内容如下</p>
<p>注意：</p>
<ul>
<li>请将脚本中的 192.168.191.10 换成你自己 zerotier 的 IP</li>
<li>请将脚本中的 192.168.0.1 换成你自己路由器的内网 IP</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line">logger -t <span class="string">"custom iptables"</span> <span class="string">"Enter"</span> -p user.notice</span><br><span class="line">iptables -C INPUT -i ztyqb3hz7p -j ACCEPT</span><br><span class="line"><span class="keyword">if</span> [ $? != 0 ]; <span class="keyword">then</span></span><br><span class="line">  <span class="comment">#iptables -I INPUT -i ztyqb3hz7p -j ACCEPT</span></span><br><span class="line">  <span class="comment">#iptables -I INPUT -i ztyqb3hz7p -p icmp -j ACCEPT</span></span><br><span class="line">  iptables -I INPUT 1 -i ppp0 -p icmp -j DROP</span><br><span class="line">  iptables -t nat -A PREROUTING -d 192.168.191.10 -p tcp --dport 80 -j DNAT --to-destination 192.168.0.1:80</span><br><span class="line">  logger -t <span class="string">"custom iptables"</span> <span class="string">"rules added"</span> -p user.notice</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  logger -t <span class="string">"custom iptables"</span> <span class="string">"rules existed skip"</span> -p user.notice</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<p>获取脚本文件的权限，命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">chmod a+rx /jffs/scripts/firewall-start</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/23/1590213979104-1590213979107.png" alt="title"></p>
<h2 id="设置entware开机生效"><a href="#设置entware开机生效" class="headerlink" title="设置entware开机生效"></a>设置entware开机生效</h2><p>重启后在日志中看到 <code>admin: Could not start Entware</code></p>
<p>在/jffs/scripts位置建立文件<code>post-mount</code> , 把u盘中的 entware 挂载到 opt，内容如下：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$1</span>"</span> = <span class="string">"/tmp/mnt/netgear"</span> ] ; <span class="keyword">then</span></span><br><span class="line">  ln -nsf <span class="variable">$1</span>/entware /tmp/opt</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<p>获取脚本文件的权限，命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">chmod a+rx /jffs/scripts/post-mount</span><br></pre></td></tr></table></figure>

<p>最后就是重启设备，可以享受局域网的快乐了~~</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>需要带个 U 盘小辫子，总觉得不是很完美，等有心情了再研究吧。</p>
<h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><h2 id="jffs-scripts目录"><a href="#jffs-scripts目录" class="headerlink" title="/jffs/scripts目录"></a>/jffs/scripts目录</h2><p>里面的脚本名固定不可以随便修改，但是可以加自己的内容。</p>
<table>
<thead>
<tr>
<th align="center">脚本名</th>
<th align="center">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="center">post-mount</td>
<td align="center">在挂载磁盘后调用</td>
</tr>
<tr>
<td align="center">nat-start</td>
<td align="center">在nat配置后调用</td>
</tr>
<tr>
<td align="center">services-start</td>
<td align="center">在系统服务启动后调用</td>
</tr>
<tr>
<td align="center">services-stop</td>
<td align="center">在系统服务器停止前调用</td>
</tr>
<tr>
<td align="center">wan-start</td>
<td align="center">在wan网卡启动后调用</td>
</tr>
<tr>
<td align="center">firewall-start</td>
<td align="center">防火墙规则的配置文件</td>
</tr>
</tbody></table>
<h3 id="nat-start的相关内容"><a href="#nat-start的相关内容" class="headerlink" title="nat-start的相关内容"></a>nat-start的相关内容</h3><p>注意：</p>
<p>请将脚本中的 192.168.191.10 换成你自己 zerotier 的 IP<br>请将脚本中的 192.168.0.1 换成你自己路由器的内网 IP</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line">modprobe tun</span><br><span class="line">iptables -t nat -A PREROUTING -d 192.168.191.10 -p tcp --dport 80 -j DNAT --to-destination 192.168.0.1:80</span><br><span class="line">/opt/etc/init.d/S90zerotier-one.sh</span><br></pre></td></tr></table></figure>

<h3 id="wan-start的相关内容"><a href="#wan-start的相关内容" class="headerlink" title="wan-start的相关内容"></a>wan-start的相关内容</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line">cru a ZeroTierDaemon <span class="string">"/opt/etc/init.d/S90zerotier-one.sh start"</span></span><br></pre></td></tr></table></figure>

<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>[网络] r6300v2 梅林固件装Opkg、Transmission<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuY2hpcGhlbGwuY29tL3RocmVhZC0xMzQ3ODU2LTEtMS5odG1s">https://www.chiphell.com/thread-1347856-1-1.html<i class="fa fa-external-link-alt"></i></span></p>
<p>[其他插件] 梅林安装zerotier实现内网穿透<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9rb29sc2hhcmUuY24vdGhyZWFkLTEzNDkzMC0xLTEuaHRtbA==">https://koolshare.cn/thread-134930-1-1.html<i class="fa fa-external-link-alt"></i></span></p>
<p>[教程] 将entware装入jffs分区<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9rb29sc2hhcmUuY24vdGhyZWFkLTE2MzE5Mi0xLTEuaHRtbA==">https://koolshare.cn/thread-163192-1-1.html<i class="fa fa-external-link-alt"></i></span></p>
<p>在梅林上使用 Entware<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8yNTU5YzI1NmRjZGU=">https://www.jianshu.com/p/2559c256dcde<i class="fa fa-external-link-alt"></i></span></p>
<p>entware嵌入到移动硬盘，在路由器重启后不生效<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d5b25ncWluZy9hcnRpY2xlL2RldGFpbHMvODUzMTQzMzc=">https://blog.csdn.net/wyongqing/article/details/85314337<i class="fa fa-external-link-alt"></i></span></p>
<p>A Guide About Installing ZeroTier on ASUS AC68U Router<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuc25iZm9ydW1zLmNvbS90aHJlYWRzL2EtZ3VpZGUtYWJvdXQtaW5zdGFsbGluZy16ZXJvdGllci1vbi1hc3VzLWFjNjh1LXJvdXRlci40MjY0OC8=">https://www.snbforums.com/threads/a-guide-about-installing-zerotier-on-asus-ac68u-router.42648/<i class="fa fa-external-link-alt"></i></span></p>
<p>使用Zerotier为Syncthing打洞<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuaGVhcnRubi5jb20vMjAxOC8wNC8wMy9pbnN0YWxsLWFuZC1jb25maWctemVyb3RpZXItZm9yLXN5bmN0aGluZy8=">https://www.heartnn.com/2018/04/03/install-and-config-zerotier-for-syncthing/<i class="fa fa-external-link-alt"></i></span></p>
<p>梅林固件安装Zerotier<br>地址：<span class="exturl" data-url="aHR0cDovL3d3dy5xLXNlcnZlci5jbi9pbmRleC5waHAvYXJjaGl2ZXMvMy8=">http://www.q-server.cn/index.php/archives/3/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>netgear</tag>
        <tag>路由器</tag>
        <tag>R6300V2</tag>
        <tag>zerotier</tag>
      </tags>
  </entry>
  <entry>
    <title>R6300v2上安装zerotier（修订）</title>
    <url>/2020/06/09/R6300v2%E4%B8%8A%E5%AE%89%E8%A3%85zerotier%EF%BC%88%E4%BF%AE%E8%AE%A2%EF%BC%89/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>之前写的「 <a href="https://laosu.ml/2020/05/29/R6300v2%E4%B8%8A%E5%AE%89%E8%A3%85zerotier/">R6300v2上安装zerotier</a> 」当时一切正常，但是发现在R6300v2重启之后，还是存在问题，估计问题主要是出在防火墙的设置上。</p>
<p>现在把重做的过程做个记录。</p>
<h1 id="问题1：PORT-ERROR错误"><a href="#问题1：PORT-ERROR错误" class="headerlink" title="问题1：PORT_ERROR错误"></a>问题1：<code>PORT_ERROR</code>错误</h1><p>putty登录到R6300v2，执行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">zerotier-cli listnetworks</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/07/1591514832631-1591514832682.png" alt="title"></p>
<p>显示出现了 <code>PORT_ERROR</code>错误。 </p>
<p>初步判断是TUN出了问题，执行 <code>ifconfig</code>，确实没发现zt开头的网卡设备</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/07/1591517016597-1591517016600.png" alt="title"></p>
<h2 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h2><p>重启zerotier</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">killall zerotier-one</span><br><span class="line">modprobe tun</span><br><span class="line">zerotier-one -d</span><br></pre></td></tr></table></figure>

<p>再次执行 <code>ifconfig</code> ，有了</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/07/1591517148128-1591517148131.png" alt="title"></p>
<p>再看看是否正常？</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">zerotier-cli listnetworks</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/07/1591517408587-1591517408591.png" alt="title"></p>
<p>显示 <code>OK</code></p>
<h2 id="可能的原因"><a href="#可能的原因" class="headerlink" title="可能的原因"></a>可能的原因</h2><p>虽然在 <code>/jffs/scripts/nat-start</code> 中有 <code>modprobe tun</code>，但是可能存在加载顺序等问题，所以导致在执行 <code>zerotier-one -d</code> 没成功，所以在 <code>/opt/etc/init.d/S90zerotier-one.sh</code> 新加一段，用于解决 <code>PORT_ERROR</code> 问题。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> lsmod | grep -q tun ;</span><br><span class="line"><span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">"mod tun ready"</span> ;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    modprobe tun;</span><br><span class="line">    logger -t <span class="string">"zerotier"</span> -c <span class="string">"modprobe tun started, zerotier-one should start in one minute"</span> -p user.notice ;</span><br><span class="line"><span class="built_in">exit</span> 0;</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<p>完整的 <code>/opt/etc/init.d/S90zerotier-one.sh</code>脚本</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#! /bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">  start)</span><br><span class="line">       <span class="comment"># 新增开始</span></span><br><span class="line">       <span class="keyword">if</span> lsmod | grep -q tun ;</span><br><span class="line">       <span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">"mod tun ready"</span> ;</span><br><span class="line">       <span class="keyword">else</span></span><br><span class="line">           modprobe tun;</span><br><span class="line">           logger -t <span class="string">"zerotier"</span> -c <span class="string">"modprobe tun started, zerotier-one should start in one minute"</span> -p user.notice ;</span><br><span class="line">       <span class="built_in">exit</span> 0;</span><br><span class="line">       <span class="keyword">fi</span></span><br><span class="line">       <span class="comment"># 新增结束</span></span><br><span class="line">    <span class="keyword">if</span> ( pidof zerotier-one )</span><br><span class="line">    <span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">"ZeroTier-One is already running."</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Starting ZeroTier-One"</span> ;</span><br><span class="line">        /opt/bin/zerotier-one -d ;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"<span class="variable">$(date)</span> Started ZeroTier-One"</span> &gt;&gt; /opt/var/<span class="built_in">log</span>/zerotier-one.log ;</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    ;;</span><br><span class="line">  stop)</span><br><span class="line">    <span class="keyword">if</span> ( pidof zerotier-one )</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Stopping ZeroTier-One"</span>;</span><br><span class="line">        killall zerotier-one</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"<span class="variable">$(date)</span> Stopped ZeroTier-One"</span> &gt;&gt; /opt/var/<span class="built_in">log</span>/zerotier-one.log</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"ZeroTier-One was not running"</span> ;</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    ;;</span><br><span class="line">  status)</span><br><span class="line">    <span class="keyword">if</span> ( pidof zerotier-one )</span><br><span class="line">    <span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">"ZeroTier-One is running."</span></span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">echo</span> <span class="string">"ZeroTier-One is NOT running"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    ;;</span><br><span class="line">  *)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Usage: /etc/init.d/zerotier-one &#123;start|stop|status&#125;"</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">    ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure>

<h1 id="问题2：访问不到内网设备"><a href="#问题2：访问不到内网设备" class="headerlink" title="问题2：访问不到内网设备"></a>问题2：访问不到内网设备</h1><p>将路由加入到 <code>Zerotier</code> 网络是为了在外网访问到家庭局域网中的设备，但是之前的设置只是能够让我们通过zt网地址 <code>192.168.191.10</code> 访问到R6300v2，而不是通过 <code>192.168.0.1</code></p>
<h2 id="zerotier-com上设置路由"><a href="#zerotier-com上设置路由" class="headerlink" title="zerotier.com上设置路由"></a>zerotier.com上设置路由</h2><p>比如192.168.0.0/24是我的内网网段，后面那个地址是我R6300v2里面zerotier获取的zt地址。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/08/1591629176545-1591629176569.png" alt="title"></p>
<h2 id="增加-iptables-rules"><a href="#增加-iptables-rules" class="headerlink" title="增加 iptables rules"></a>增加 iptables rules</h2><p>先运行</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">iptables -v -L -n --line-numbers</span><br></pre></td></tr></table></figure>

<p>先接受zerotier的所有数据</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">iptables -I INPUT -i zt+ -j ACCEPT</span><br></pre></td></tr></table></figure>
<p><strong>【备注：】</strong> all “zt0, zt1, ztzlgf7vul” can be replaced by zt+ for wild matching in iptables only!   所以后面 <code>ztyqb3hz7p</code> 都将写成 <code>zt+</code> ，这使得脚本有了很大的通用性</p>
<h2 id="重启zerotier"><a href="#重启zerotier" class="headerlink" title="重启zerotier"></a>重启zerotier</h2><p>先停止</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">/opt/etc/init.d/S90zerotier-one.sh stop</span><br></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">killall zerotier-one</span><br></pre></td></tr></table></figure>

<p>再启动</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">zerotier-one -d</span><br></pre></td></tr></table></figure>

<h2 id="ping"><a href="#ping" class="headerlink" title="ping"></a>ping</h2><p>测试网络</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ping 192.168.191.10 -c 4</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/08/1591623069478-1591623069524.png" alt="title"></p>
<h2 id="Allow-FTP-SSH-WEBUI"><a href="#Allow-FTP-SSH-WEBUI" class="headerlink" title="Allow FTP, SSH, WEBUI"></a>Allow FTP, SSH, WEBUI</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">iptables -t nat -A PREROUTING -d 192.168.191.10 -p tcp -m multiport --dport 21,22,80 -j DNAT --to-destination 192.168.0.1</span><br></pre></td></tr></table></figure>

<p>或者替代方案</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">iptables -t nat -I PREROUTING -i zt+ -d 192.168.191.0/24 -p tcp -m multiport --dport 21,22,80 -j DNAT --to-destination `nvram get lan_ipaddr`</span><br></pre></td></tr></table></figure>

<h2 id="修改脚本"><a href="#修改脚本" class="headerlink" title="修改脚本"></a>修改脚本</h2><p>修改 <code>/jffs/scripts/firewall-start</code></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line">logger -t <span class="string">"custom iptables"</span> <span class="string">"Enter"</span> -p user.notice</span><br><span class="line"></span><br><span class="line">iptables -C INPUT -i zt+ -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ $? != 0 ]; <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">  iptables -I INPUT -i zt+ -j ACCEPT</span><br><span class="line">  iptables -t nat -I PREROUTING -i zt+ -d 192.168.191.0/24 -p tcp -m multiport --dport 21,22,80 -j DNAT --to-destination `nvram get lan_ipaddr`</span><br><span class="line"></span><br><span class="line">  logger -t <span class="string">"custom iptables"</span> <span class="string">"rules added"</span> -p user.notice</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  logger -t <span class="string">"custom iptables"</span> <span class="string">"rules existed skip"</span> -p user.notice</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<h2 id="手机测试"><a href="#手机测试" class="headerlink" title="手机测试"></a>手机测试</h2><p>手机上打开zerotier，用4G上网，记得勾选 <code>Use Cellular Data</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/08/1591630322505-1591630322507.png" alt="title"></p>
<p>在浏览器中访问192.168.0.1（ 就是我们的路由器R6300v2的局域网地址 ） ，已经可以访问了</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/08/1591630477952-1591630477956.png" alt="title"></p>
<p>但是直接访问192.168.0.199 （ NAS的局域网地址 ）还是不行</p>
<h2 id="再次修改脚本"><a href="#再次修改脚本" class="headerlink" title="再次修改脚本"></a>再次修改脚本</h2><p>在 <code>/jffs/scripts/firewall-start</code>中增加下面三行就直接可以访问到内网的设备；</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">iptables -I FORWARD -i zt+ -j ACCEPT</span><br><span class="line">iptables -I FORWARD -o zt+ -j ACCEPT</span><br><span class="line">iptables -t nat -I POSTROUTING -o zt+ -j MASQUERADE</span><br></pre></td></tr></table></figure>

<p>完整的 <code>/jffs/scripts/firewall-start</code>脚本</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line">logger -t <span class="string">"custom iptables"</span> <span class="string">"Enter"</span> -p user.notice</span><br><span class="line"></span><br><span class="line">iptables -C INPUT -i zt+ -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ $? != 0 ]; <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">  iptables -I INPUT -i zt+ -j ACCEPT</span><br><span class="line">  iptables -t nat -I PREROUTING -i zt+ -d 192.168.191.0/24 -p tcp -m multiport --dport 21,22,80 -j DNAT --to-destination `nvram get lan_ipaddr`</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 2020.06.09 参考 https://blog.urusai.me/2019/using-zerotier-to-combine-gateways/</span></span><br><span class="line">  iptables -I FORWARD -i zt+ -j ACCEPT</span><br><span class="line">  iptables -I FORWARD -o zt+ -j ACCEPT</span><br><span class="line">  iptables -t nat -I POSTROUTING -o zt+ -j MASQUERADE</span><br><span class="line"></span><br><span class="line">  logger -t <span class="string">"custom iptables"</span> <span class="string">"rules added"</span> -p user.notice</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  logger -t <span class="string">"custom iptables"</span> <span class="string">"rules existed skip"</span> -p user.notice</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<p>在手机浏览器中直接访问192.168.0.199 （ NAS的局域网地址 ）</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/09/1591713001408-1591713001465.png" alt="title"></p>
<h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>终于达成所愿！但是从测试看，依然有2个问题：</p>
<ol>
<li>速度并不稳定，有时快有时慢，取决于相连的两侧能否P2P打洞（NAT穿越）成功，如果不成功还是会走服务器中转，这个就会比较影响速度</li>
<li>在外网访问，需要启动zerotier客户端，这一点不如frp方便</li>
</ol>
<p>但不管怎么说可以和frp互为补充，做个双保险。</p>
<h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><p>为防止和避免拷贝脚本出错，作为附件提供参考</p>
<h2 id="jffs-scripts-firewall-start"><a href="#jffs-scripts-firewall-start" class="headerlink" title="/jffs/scripts/firewall-start"></a><code>/jffs/scripts/firewall-start</code></h2><p><span class="exturl" data-url="aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3dic3UyMDAzL2dpdG5vdGUtaW1hZ2VzL21hc3Rlci9teW5vdGUvMjAyMC8wNi8wOS8tMTU5MTcxMzkzMzg1OA==">firewall-start<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="jffs-scripts-nat-start"><a href="#jffs-scripts-nat-start" class="headerlink" title="/jffs/scripts/nat-start"></a><code>/jffs/scripts/nat-start</code></h2><p><span class="exturl" data-url="aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3dic3UyMDAzL2dpdG5vdGUtaW1hZ2VzL21hc3Rlci9teW5vdGUvMjAyMC8wNi8wOS8tMTU5MTcxNDA1NTM0MA==">nat-start<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="jffs-scripts-post-mount"><a href="#jffs-scripts-post-mount" class="headerlink" title="/jffs/scripts/post-mount"></a><code>/jffs/scripts/post-mount</code></h2><p><span class="exturl" data-url="aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3dic3UyMDAzL2dpdG5vdGUtaW1hZ2VzL21hc3Rlci9teW5vdGUvMjAyMC8wNi8wOS8tMTU5MTcxNDE1ODcxMw==">post-mount<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="jffs-scripts-wan-start"><a href="#jffs-scripts-wan-start" class="headerlink" title="/jffs/scripts/wan-start"></a><code>/jffs/scripts/wan-start</code></h2><p><span class="exturl" data-url="aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3dic3UyMDAzL2dpdG5vdGUtaW1hZ2VzL21hc3Rlci9teW5vdGUvMjAyMC8wNi8wOS8tMTU5MTcxNDMwMzg3NA==">wan-start<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="opt-etc-init-d-S90zerotier-one-sh"><a href="#opt-etc-init-d-S90zerotier-one-sh" class="headerlink" title="/opt/etc/init.d/S90zerotier-one.sh"></a><code>/opt/etc/init.d/S90zerotier-one.sh</code></h2><p><span class="exturl" data-url="aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3dic3UyMDAzL2dpdG5vdGUtaW1hZ2VzL21hc3Rlci9teW5vdGUvMjAyMC8wNi8wOS9TOTB6ZXJvdGllci1vbmUtMTU5MTcxNDg3NzYxNy5zaA==">S90zerotier-one.sh<i class="fa fa-external-link-alt"></i></span></p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>[教程] LEDE旁路由中安装zerotier，内网穿透，访问局域网，极简教程<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9rb29sc2hhcmUuY24vdGhyZWFkLTE1MjU2MS0xLTEuaHRtbA==">https://koolshare.cn/thread-152561-1-1.html<i class="fa fa-external-link-alt"></i></span></p>
<p>A Guide About Installing ZeroTier on ASUS AC68U Router<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuc25iZm9ydW1zLmNvbS90aHJlYWRzL2EtZ3VpZGUtYWJvdXQtaW5zdGFsbGluZy16ZXJvdGllci1vbi1hc3VzLWFjNjh1LXJvdXRlci40MjY0OC8=">https://www.snbforums.com/threads/a-guide-about-installing-zerotier-on-asus-ac68u-router.42648/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>netgear</tag>
        <tag>路由器</tag>
        <tag>R6300V2</tag>
        <tag>zerotier</tag>
      </tags>
  </entry>
  <entry>
    <title>YouTube-DL被下架了</title>
    <url>/2020/10/30/YouTube-DL%E8%A2%AB%E4%B8%8B%E6%9E%B6%E4%BA%86/</url>
    <content><![CDATA[<p>上周五，美国唱片业协会（RIAA）要求 GitHub 下架 YouTube-DL 这一广受欢迎的下载器项目 repo，此举不仅令 GitHub CEO 感到难堪，同时也激怒了众多开发人员。</p>
<p>到现在为止，RIAA 的下架令明显起到了反效果，很多开发人员不仅仅对此表示了抗议，还发布了更多代码副本。其中最具创意的回应是有人将 YouTube-DL 编码为易于共享的图像，并鼓励其他人也共享这些图像。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201030173608.png" alt=""></p>
<p>YouTube-DL 虽然名字里包含了 YouTube ，但是能下载的不仅仅是 YouTube 的音视频，而是可以从 700 多个站点下载音视频，还包括了 Facebook、B 站、爱奇艺、优酷以及 TikTok 等知名站点。所以应该触动了很多人的奶酪吧，被封杀应该也是意料之中的事情。</p>
<p>其实 YouTube-DL 除了简单视频下载功能外，还可以将下载内容转换为几乎任何格式，包括创建仅包含视频音轨的 mp3。记者群体也多使用它处理报道工作，包括下载新闻稿、转录视频与音频等等。所以关键不是工具本身，而是看你用来这个工具来做什么用途。</p>
<p>如果仅仅是下载，类似的工具还有 You-Get，Annie，ytdl 等等，当然还可以用 Greasemonkey 脚本、或者浏览器插件，所以说实话，看不出这种封杀会产生什么样的效果。尤其是我想到了北极准备保存 1000 年的 Arctic Code Vault项目，打造的代码诺亚方舟。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201030203046.png" alt=""></p>
<p>到目前为止， YouTube-DL 的官网仍然可以正常访问下载 。官网地址：<span class="exturl" data-url="aHR0cDovL3lvdXR1YmUtZGwub3Jn">http://youtube-dl.org<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201030201252.png" alt=""></p>
<p>在群晖 docker 注册表中搜索 <code>youtubedl</code>，也依然能还能搜索出一堆。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201030204125.png" alt=""></p>
<h1 id="申明"><a href="#申明" class="headerlink" title="申明"></a>申明</h1><p>本文中提到的工具仅用于信息描述。作者不会支持、提倡、鼓励使用任何软件来下载受版权保护的内容。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>Tzahi12345/YoutubeDL-Material: Self-hosted YouTube downloader built on Material Design<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1R6YWhpMTIzNDUvWW91dHViZURMLU1hdGVyaWFs">https://github.com/Tzahi12345/YoutubeDL-Material<i class="fa fa-external-link-alt"></i></span></p>
<p>YouTubeDL Material – A Self-Hosted YouTube Video Downloader – NAS Hosted<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9nZWVrZWQuaG9zdC95b3V0dWJlZGwtbWF0ZXJpYWwtYS1zZWxmLWhvc3RlZC15b3V0dWJlLXZpZGVvLWRvd25sb2FkZXIv">https://geeked.host/youtubedl-material-a-self-hosted-youtube-video-downloader/<i class="fa fa-external-link-alt"></i></span></p>
<p>soimort/you-get: Dumb downloader that scrapes the web<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NvaW1vcnQveW91LWdldA==">https://github.com/soimort/you-get<i class="fa fa-external-link-alt"></i></span></p>
<p>iawia002/annie: 👾 Fast, simple and clean video downloader<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2lhd2lhMDAyL2Fubmll">https://github.com/iawia002/annie<i class="fa fa-external-link-alt"></i></span></p>
<p>rylio/ytdl: YouTube download library and CLI written in Go<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3J5bGlvL3l0ZGw=">https://github.com/rylio/ytdl<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>下载</tag>
      </tags>
  </entry>
  <entry>
    <title>Snapdrop实现P2P局域网文件互传</title>
    <url>/2020/10/01/Snapdrop%E5%AE%9E%E7%8E%B0P2P%E5%B1%80%E5%9F%9F%E7%BD%91%E6%96%87%E4%BB%B6%E4%BA%92%E4%BC%A0/</url>
    <content><![CDATA[<p>今天是国庆也是中秋节，祝各位新老朋友节日快乐！幸福圆满！</p>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>经常在办公室需要和同事传个文档啥的，如果正好大家都是 Mac，可以通过 <code>AirDrop</code> (中文名：<code>隔空投送</code>) 来传，但是如果不是，那就只能用 U 盘了。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/01/airdrop-1601485544332.png" alt="title"></p>
<p>那不同系统的电脑间文件传输有没有简单一点的方法呢？今天跟大家分享一个跨平台、跨设备的文档传输服务，打开浏览器就可以使用。只要两个设备在同一个网路环境下，就可以快速传输，让我们在 <code>Windows</code> 上也可以跟 <code>Mac</code> 互传文件达到类似 <code>AirDrop</code> 的效果！</p>
<p>官网地址：<span class="exturl" data-url="aHR0cHM6Ly9zbmFwZHJvcC5uZXQv">https://snapdrop.net/<i class="fa fa-external-link-alt"></i></span>，既不需要注册，也不需要安装 <code>APP</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/01/web1-1601485560982.png" alt="title"></p>
<p>当我们在另一台机器上打开网页后，我们能看到</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/01/web2-1601485573420.png" alt="title"></p>
<p>点击扫描到的设备名称后，就可以开始传输文件了</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/01/web3-1601485586284.png" alt="title"></p>
<p>在扫描到的设备上右键，可以发消息</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/01/web4-1601485594613.png" alt="title"></p>
<p>如果觉得 <code>Snapdrop</code> 速度慢或者不可靠，还能自己搭建一个，这样不仅更快捷也更安全，虽然 <code>Snapdrop</code> 本身是走的 <code>P2P</code>，并不会在服务器上存储文件。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/01/error-1601485619811.png" alt="title"></p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p><code>Snapdrop</code> 是开源的项目：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1JvYmluTGludXMvc25hcGRyb3A=">https://github.com/RobinLinus/snapdrop<i class="fa fa-external-link-alt"></i></span>，它基于下面这些技术构建：<br>    - Vanilla HTML5 / ES6 / CSS3<br>    - Progressive Web App<br>    - WebRTC<br>    - WebSockets<br>    - NodeJS<br>    - Material Design</p>
<p>技术原理上是通过浏览器的 <code>WebRTC</code> 实现点对点的传输，所以不需要安装软件，也没有文件大小的限制，理论上可以在任何平台和设备上运行，只要浏览器支持 <code>WebRTC</code> 即可。</p>
<p>我们用 <code>portainer</code> 来安装，选择 <code>seji/snapdrop-docker</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/01/docker-1601485643838.png" alt="title"></p>
<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>在浏览器中输入 <code>http://群晖IP:4080</code>，看到的是和官网一样简洁的界面</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/01/1601487081660-1601487081662.png" alt="title"></p>
<h2 id="传输文件"><a href="#传输文件" class="headerlink" title="传输文件"></a>传输文件</h2><p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/01/Pasted%20image%2020201001004829-1601485667388.png" alt="title"></p>
<p>发送端，传输完成后有提示</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/01/Pasted%20image%2020201001004459-1601485681947.png" alt="title"></p>
<p>接收端需要确认，保障了安全性</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/01/Pasted%20image%2020201001004537-1601485694851.png" alt="title"></p>
<h2 id="发送文字"><a href="#发送文字" class="headerlink" title="发送文字"></a>发送文字</h2><p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/01/Pasted%20image%2020201001005039-1601485709255.png" alt="title"></p>
<p>发送端</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/01/Pasted%20image%2020201001004649-1601485722701.png" alt="title"></p>
<p>接收端</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/01/Pasted%20image%2020201001004704-1601485735620.png" alt="title"></p>
<p>经测试，我们自己搭建的服务和 <code>snapdrop</code> 官网是一致的。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>RobinLinus/snapdrop官网<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1JvYmluTGludXMvc25hcGRyb3A=">https://github.com/RobinLinus/snapdrop<i class="fa fa-external-link-alt"></i></span></p>
<p>Snapdrop 瀏覽器跨裝置 P2P 傳檔，比 AirDrop 更易使用！<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9mcmVlLmNvbS50dy9zbmFwZHJvcC8=">https://free.com.tw/snapdrop/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>P2P</tag>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title>frp基础设置示例详解</title>
    <url>/2020/05/28/frp%E5%9F%BA%E7%A1%80%E8%AE%BE%E7%BD%AE%E7%A4%BA%E4%BE%8B%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>当初开始用 frp 走了一些弯路，主要原因还是对 frp 的工作原理理解不透彻，所以在设置时才会出现各种错误，导致不成功，所以下面我们以实例来做详细的说明。</p>
<h1 id="frp-工作原理"><a href="#frp-工作原理" class="headerlink" title="frp 工作原理"></a>frp 工作原理</h1><p>官网的架构图比较抽象，不便于描述</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/28/1590643008214-1590643008248.png" alt="title"></p>
<p>所以我重绘了一张，结合实例来进行说明</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/28/1590644061456-1590644061464.png" alt="title"></p>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><ol>
<li>frps 需要有公网 IP，例如：IP 是 <code>10.146.0.3</code></li>
<li>frps 要绑定域名，例如：绑定到 <code>laosu.ml</code></li>
<li>根据需要访问的内容，在 dns 解析中绑定二级域名，所有的域名均指向 <code>10.146.0.3</code></li>
</ol>
<ul>
<li>为NAS管理页面绑定了：nas.laosu.ml</li>
<li>为Jellyfin绑定了域名：movie.laosu.ml</li>
<li>为airsonic绑定了域名：music.laosu.ml</li>
<li>为R6300v2绑定了域名：router.laosu.ml</li>
</ul>
<h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><p>当我在浏览器中输入： <span class="exturl" data-url="aHR0cDovL21vdmllLmxhb3N1Lm1s">http://movie.laosu.ml<i class="fa fa-external-link-alt"></i></span> 时，dns 服务会将其解析到 IP：<code>10.146.0.3</code> 上，也就是跳转到了我们安装了 frps 的主机上，frps 会根据用户输入的域名向 frpc 发起查询，如果存在该服务，则返回 jellyfin 的web 页面。</p>
<p>而当我输入了错误的二级域名，或者该二级域名没有被解析、绑定，又或者是 frps 和 frpc 之间的网络出现了问题，也就是服务不存在时，则会返回下面的错误界面。</p>
<p>例如在浏览器中输入了：<span class="exturl" data-url="aHR0cDovL21vdmllMS5sYW9zdS5tbA==">http://movie1.laosu.ml<i class="fa fa-external-link-alt"></i></span> 之后</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/28/1590644807478-1590644807482.png" alt="title"></p>
<h1 id="frps-ini-说明"><a href="#frps-ini-说明" class="headerlink" title="frps.ini 说明"></a>frps.ini 说明</h1><p>frps 服务器有了一键安装包之后，变得简单多了，可以输入frps config 来查看 /usr/local/frps/frps.ini 的内容，下面的 frps.ini 是一路默认设置生成的内容：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># [common] is integral section</span></span><br><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="comment"># A literal address or host name for IPv6 must be enclosed</span></span><br><span class="line"><span class="comment"># in square brackets, as in "[::1]:80", "[ipv6-host]:http" or "[ipv6-host%zone]:80"</span></span><br><span class="line"><span class="attr">bind_addr</span> = <span class="number">0.0</span>.<span class="number">0.0</span></span><br><span class="line"><span class="attr">bind_port</span> = <span class="number">5443</span></span><br><span class="line"><span class="comment"># udp port used for kcp protocol, it can be same with 'bind_port'</span></span><br><span class="line"><span class="comment"># if not set, kcp is disabled in frps</span></span><br><span class="line"><span class="attr">kcp_bind_port</span> = <span class="number">5443</span></span><br><span class="line"><span class="comment"># if you want to configure or reload frps by dashboard, dashboard_port must be set</span></span><br><span class="line"><span class="attr">dashboard_port</span> = <span class="number">6443</span></span><br><span class="line"><span class="comment"># dashboard assets directory(only for debug mode)</span></span><br><span class="line"><span class="attr">dashboard_user</span> = admin</span><br><span class="line"><span class="attr">dashboard_pwd</span> = xxxxxxxx</span><br><span class="line"><span class="comment"># assets_dir = ./static</span></span><br><span class="line"><span class="attr">vhost_http_port</span> = <span class="number">80</span></span><br><span class="line"><span class="attr">vhost_https_port</span> = <span class="number">443</span></span><br><span class="line"><span class="comment"># console or real logFile path like ./frps.log</span></span><br><span class="line"><span class="attr">log_file</span> = ./frps.log</span><br><span class="line"><span class="comment"># debug, info, warn, error</span></span><br><span class="line"><span class="attr">log_level</span> = info</span><br><span class="line"><span class="attr">log_max_days</span> = <span class="number">3</span></span><br><span class="line"><span class="comment"># auth token</span></span><br><span class="line"><span class="attr">token</span> = yyyyyyyyyyyyyyyy</span><br><span class="line"><span class="comment"># It is convenient to use subdomain configure for http、https type when many people use one frps server together.</span></span><br><span class="line"><span class="attr">subdomain_host</span> = <span class="number">10.146</span>.<span class="number">0.3</span></span><br><span class="line"><span class="comment"># only allow frpc to bind ports you list, if you set nothing, there won't be any limit</span></span><br><span class="line"><span class="comment">#allow_ports = 1-65535</span></span><br><span class="line"><span class="comment"># pool_count in each proxy will change to max_pool_count if they exceed the maximum value</span></span><br><span class="line"><span class="attr">max_pool_count</span> = <span class="number">50</span></span><br><span class="line"><span class="comment"># if tcp stream multiplexing is used, default is true</span></span><br><span class="line"><span class="attr">tcp_mux</span> = <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>这里比较关键的信息：</p>
<ul>
<li>子域名主机和 frps 服务器的公网IP是同一个</li>
</ul>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">subdomain_host</span> = <span class="number">10.146</span>.<span class="number">0.3</span></span><br></pre></td></tr></table></figure>
<ul>
<li>管理页面</li>
</ul>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># if you want to configure or reload frps by dashboard, dashboard_port must be set</span></span><br><span class="line"><span class="attr">dashboard_port</span> = <span class="number">6443</span></span><br><span class="line"><span class="comment"># dashboard assets directory(only for debug mode)</span></span><br><span class="line"><span class="attr">dashboard_user</span> = admin</span><br><span class="line"><span class="attr">dashboard_pwd</span> = xxxxxxxx</span><br></pre></td></tr></table></figure>

<p>你可以在浏览器中输入：<span class="exturl" data-url="aHR0cDovLzEwLjE0Ni4wLjM6NjQ0Mw==">http://10.146.0.3:6443<i class="fa fa-external-link-alt"></i></span> ，输入用户名、密码后，可以查看实时的服务状态是否在线等信息。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/28/1590646590390-1590646590393.png" alt="title"></p>
<ul>
<li>token</li>
</ul>
<p>frpc 登录到 frps 时的认证凭证，在 <code>frpc.ini</code> 要用到的。</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># auth token</span></span><br><span class="line"><span class="attr">token</span> = yyyyyyyyyyyyyyyy</span><br></pre></td></tr></table></figure>

<h1 id="frpc-ini-说明"><a href="#frpc-ini-说明" class="headerlink" title="frpc.ini 说明"></a>frpc.ini 说明</h1><p>先上实例 <code>frpc.ini</code>，后面再做说明。</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = <span class="number">10.146</span>.<span class="number">0.3</span></span><br><span class="line"><span class="attr">server_port</span> = <span class="number">5443</span></span><br><span class="line"><span class="attr">token</span> = yyyyyyyyyyyyyyyy</span><br><span class="line"></span><br><span class="line"><span class="section">[nas]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">192.168</span>.<span class="number">0.199</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">5000</span></span><br><span class="line"><span class="attr">custom_domains</span> = nas.laosu.ml</span><br><span class="line"></span><br><span class="line"><span class="section">[movie]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">192.168</span>.<span class="number">0.199</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">8096</span></span><br><span class="line"><span class="attr">custom_domains</span> = movie.laosu.ml</span><br><span class="line"></span><br><span class="line"><span class="section">[music]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">192.168</span>.<span class="number">0.199</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">4040</span></span><br><span class="line"><span class="attr">custom_domains</span> = music.laosu.ml</span><br><span class="line"></span><br><span class="line"><span class="section">[router]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">192.168</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">80</span></span><br><span class="line"><span class="attr">custom_domains</span> = router.laosu.ml</span><br></pre></td></tr></table></figure>

<h2 id="客户端-token-认证"><a href="#客户端-token-认证" class="headerlink" title="客户端 token 认证"></a>客户端 token 认证</h2><p>frpc.ini 中，在 <code>[common]</code>节：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">token</span> = yyyyyyyyyyyyyyyy</span><br></pre></td></tr></table></figure>

<h2 id="开启kcp协议"><a href="#开启kcp协议" class="headerlink" title="开启kcp协议"></a>开启kcp协议</h2><p>kcp协议虽然会有额外的流量消耗，但在弱网环境下传输效率提升明显。关于kcp协议，有兴趣的可以自己度娘。</p>
<p>首先在 <code>frps.ini</code> 中启用 kcp 协议支持，指定一个 udp 端口用于接收客户端请求：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">bind_addr</span> = <span class="number">0.0</span>.<span class="number">0.0</span></span><br><span class="line"><span class="attr">bind_port</span> = <span class="number">5443</span></span><br><span class="line"><span class="comment"># udp port used for kcp protocol, it can be same with 'bind_port'</span></span><br><span class="line"><span class="comment"># if not set, kcp is disabled in frps</span></span><br><span class="line"><span class="attr">kcp_bind_port</span> = <span class="number">5443</span></span><br></pre></td></tr></table></figure>

<p>其次在 <code>frpc.ini</code> 中，在 <code>[common]</code>节：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">server_addr</span> = <span class="number">10.146</span>.<span class="number">0.3</span></span><br><span class="line"><span class="attr">server_port</span> = <span class="number">5443</span></span><br><span class="line"></span><br><span class="line"><span class="attr">protocol</span> = kcp</span><br></pre></td></tr></table></figure>

<h2 id="节的名称不能重复"><a href="#节的名称不能重复" class="headerlink" title="节的名称不能重复"></a>节的名称不能重复</h2><p>在示例 frpc.ini 中，一共有5个节，名称分别是 <code>[common]</code> 、 <code>[nas]</code> 、<code>[movie]</code> 、<code>[music]</code> 、 <code>[router]</code> ；</p>
<p><strong>【重要说明】</strong></p>
<blockquote>
<ul>
<li>这些节的名称是不可以重复的，否则会报错，尤其是一台 frps 服务器对应多台 frpc 客户端，这个错就会比较难发现</li>
<li>个人习惯将节的名称和二级域名的前缀保持一致，这样便于管理</li>
</ul>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/28/1590649156365-1590649156373.png" alt="title"></p>
<h2 id="加密与压缩"><a href="#加密与压缩" class="headerlink" title="加密与压缩"></a>加密与压缩</h2><p>这个是将 frpc 与 frps 之间的通信内容加密与压缩传输</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">use_encryption</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">use_compression</span> = <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>优点：</p>
<ul>
<li>加密可以有效防止 frpc 与 frps 之间流量被拦截</li>
<li>压缩可以有效减小 frpc 与 frps 之间的网络流量</li>
</ul>
<p>缺点：</p>
<ul>
<li>会额外消耗一些 cpu 资源</li>
</ul>
<p>以 <code>[nas]</code> 为例：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[nas]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">192.168</span>.<span class="number">0.199</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">5000</span></span><br><span class="line"><span class="attr">use_encryption</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">use_compression</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">custom_domains</span> = nas.laosu.ml</span><br></pre></td></tr></table></figure>

<h2 id="增加密码保护"><a href="#增加密码保护" class="headerlink" title="增加密码保护"></a>增加密码保护</h2><p>对于一些没有安全保护的页面，需要输入账号、密码才能访问</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">http_user</span> = abc</span><br><span class="line"><span class="attr">http_pwd</span> = abc</span><br></pre></td></tr></table></figure>

<p>以 <code>[nas]</code> 为例：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[nas]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">192.168</span>.<span class="number">0.199</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">5000</span></span><br><span class="line"><span class="attr">use_encryption</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">use_compression</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">http_user</span> = abc</span><br><span class="line"><span class="attr">http_pwd</span> = abc</span><br><span class="line"><span class="attr">custom_domains</span> = nas.laosu.ml</span><br></pre></td></tr></table></figure>

<p>当你在浏览器中输入： <span class="exturl" data-url="aHR0cDovL25hcy5sYW9zdS5tbA==">http://nas.laosu.ml<i class="fa fa-external-link-alt"></i></span> 时，浏览器中会弹出用户号、密码的输入窗口，需要输入配置的用户名和密码才能继续访问。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>frp官网<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2ZhdGVkaWVyL2ZycA==">https://github.com/fatedier/frp<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>frp</tag>
        <tag>kcp协议</tag>
      </tags>
  </entry>
  <entry>
    <title>Syncthing文件夹同步神器</title>
    <url>/2020/09/04/Syncthing%E6%96%87%E4%BB%B6%E5%A4%B9%E5%90%8C%E6%AD%A5%E7%A5%9E%E5%99%A8/</url>
    <content><![CDATA[<p><strong>什么是 Syncthing？</strong></p>
<blockquote>
<p>Syncthing是一個開源的文件同步客戶端與伺服器軟體，採用Go語言編寫。它可以在本地網絡上的設備之間或通過Internet在遠程設備之間同步文件，使用了其獨有的對等自由塊交換協議。原始碼託管在GitHub上 【維基百科】</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/27/1598527713988-1598527714057.png" alt="title"></p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>在群晖的 <code>Docker</code> 中搜索 <code>syncthing</code>，选第二个，这是官方的镜像，版本 <code>latest</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/27/1598528457772-1598528457779.png" alt="title"></p>
<h2 id="卷"><a href="#卷" class="headerlink" title="卷"></a>卷</h2><table>
<thead>
<tr>
<th align="center">文件夹</th>
<th align="center">装载路径</th>
</tr>
</thead>
<tbody><tr>
<td align="center">/wherever/st-sync</td>
<td align="center">/var/syncthing</td>
</tr>
</tbody></table>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/27/1598529398892-1598529398895.png" alt="title"></p>
<h2 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h2><p>默认的就可以</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/27/1598531022141-1598531022144.png" alt="title"></p>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>默认的就可以</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/27/1598529884395-1598529884397.png" alt="title"></p>
<h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:8384</code> ，第一次会有是<code>运行匿名使用报告</code>的提示，选 <code>否</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/27/1598531171486-1598531171488.png" alt="title"></p>
<h2 id="设置访问-Syncthing-管理界面的密码"><a href="#设置访问-Syncthing-管理界面的密码" class="headerlink" title="设置访问 Syncthing 管理界面的密码"></a>设置访问 Syncthing 管理界面的密码</h2><p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/27/1598531403781-1598531403785.png" alt="title"></p>
<p>设置好用户名和密码，保存</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/27/1598540094555-1598540094557.png" alt="title"></p>
<h2 id="windows平台"><a href="#windows平台" class="headerlink" title="windows平台"></a>windows平台</h2><p>建议使用 <code>SyncTrayzor</code>，拥有图形用户界面并可以最小化到托盘后台运行，并可以设置开机启动。</p>
<p>github上的下载地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NhbnRvbjcvU3luY1RyYXl6b3IvcmVsZWFzZXMv">https://github.com/canton7/SyncTrayzor/releases/<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/31/1598880269327-1598880269330.png" alt="title"></p>
<p>但是需要注意，<code>SyncTrayzor</code> 最新版本也是2019年7月27号发布的，已经过了1年多，感觉作者已经弃坑了，所以<code>SyncTrayzor</code> 中的 <code>Syncthing</code> 版本是比较低，才 <code>v1.2.0</code> ，需要我们下载最新的版本进行替换，当然不升级也能用，尝试过台式机上的 <code>v1.2.0</code> 可以和群晖上的 <code>v1.8.0</code> 同步，也是完全没问题的</p>
<p>github上的下载地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3N5bmN0aGluZy9zeW5jdGhpbmcvcmVsZWFzZXM=">https://github.com/syncthing/syncthing/releases<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/31/1598875947266-1598875947268.png" alt="title"></p>
<p>如果<code>SyncTrayzor</code>尚未运行过，直接替换根目录下的 <code>Syncthing.exe</code> 即可，如果已经运行过，要替换 <code>data</code> 目录下的 <code>Syncthing.exe</code>，更换之后，版本就会显示成 <code>v1.8.0</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/04/1599221602040-1599221602042.png" alt="title"></p>
<p>添加群晖的设备ID</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/31/1598875507376-1598875507416.png" alt="title"></p>
<p>群晖的设备ID能在网页上查到</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/27/1598535544096-1598535544100.png" alt="title"></p>
<p>设备ID就是一串字符和一个二维码</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/27/1598535609545-1598535609546.png" alt="title"></p>
<h2 id="Mac-平台"><a href="#Mac-平台" class="headerlink" title="Mac 平台"></a>Mac 平台</h2><p>github上的下载地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3N5bmN0aGluZy9zeW5jdGhpbmctbWFjb3MvcmVsZWFzZXMv">https://github.com/syncthing/syncthing-macos/releases/<i class="fa fa-external-link-alt"></i></span></p>
<p>开机启动</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/28/1598577486739-1598577486746.png" alt="title"></p>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>因为群晖是24小时开机的，所以所有需要同步的设备都和群晖互加</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/31/1598881146444-1598881146447.png" alt="title"></p>
<p>每台设备都只能看到自己和群晖，而在群晖上能看到其他所有的远程设备</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/31/1598881332126-1598881332127.png" alt="title"></p>
<p>因为我们没有搭建自己的 <code>discovery server</code> 和 <code>relay server</code>，所以地址列表里只要保持 <code>dynamic</code> 就行</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/31/1598881476624-1598881476625.png" alt="title"></p>
<p>是否需要把群晖上的 <code>Syncthing webUI</code> 映射出去呢？个人觉得没啥必要，因为也就开始相互添加的时候需要查询设备ID和进行同意，之后都是靠 <code>global discovery server</code> 来找到设备了，而速度则取决于 <code>relay server</code>，如果速度不理想，可以考虑自己搭建 <code>Syncthing</code> 发现和中继服务器。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>Syncthing的安裝與使用<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuaXRyZWFkMDEuY29tL2NvbnRlbnQvMTU0OTAyMDEzOS5odG1s">https://www.itread01.com/content/1549020139.html<i class="fa fa-external-link-alt"></i></span></p>
<p>Syncthing就是我要的同步备份软件<br>地址：<span class="exturl" data-url="aHR0cHM6Ly96aGloLm1lL3N5bmN0aGluZy10aGUtYmVzdC8=">https://zhih.me/syncthing-the-best/<i class="fa fa-external-link-alt"></i></span></p>
<p>Syncthing – 数据同步利器—自己的网盘，详细安装配置指南，内网使用，发现服务器配置，更新docker<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vamFja2FkYW0vcC84NTY4ODMzLmh0bWw=">https://www.cnblogs.com/jackadam/p/8568833.html<i class="fa fa-external-link-alt"></i></span></p>
<p>Syncthing - P2P文件同步工具<br>地址：<span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC82OTI2NzAyMA==">https://zhuanlan.zhihu.com/p/69267020<i class="fa fa-external-link-alt"></i></span></p>
<p>點對點傳輸的同步軟體Syncthing：無限擴大個人的線上儲<br>地址：<span class="exturl" data-url="aHR0cDovL2pkZXYudHcvYmxvZy80ODQ0L3N5bmN0aGluZy1wZWVyLXRvLXBlZXItc3luYy10b29s">http://jdev.tw/blog/4844/syncthing-peer-to-peer-sync-tool<i class="fa fa-external-link-alt"></i></span></p>
<p>使用Syncthing搭建我们的私有同步网盘 db1024 db1024<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuZGIxMDI0LmNvbS9pbmRleC5waHAvMjAxOS8wNC8yOS8lRTQlQkQlQkYlRTclOTQlQThzeW5jdGhpbmclRTYlOTAlQUQlRTUlQkIlQkElRTYlODglOTElRTQlQkIlQUMlRTclOUElODQlRTclQTclODElRTYlOUMlODklRTUlOTAlOEMlRTYlQUQlQTUlRTclQkQlOTElRTclOUIlOTgv">https://www.db1024.com/index.php/2019/04/29/%E4%BD%BF%E7%94%A8syncthing%E6%90%AD%E5%BB%BA%E6%88%91%E4%BB%AC%E7%9A%84%E7%A7%81%E6%9C%89%E5%90%8C%E6%AD%A5%E7%BD%91%E7%9B%98/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>同步</tag>
        <tag>云盘</tag>
      </tags>
  </entry>
  <entry>
    <title>searX用处不大的个人聚合搜索引擎</title>
    <url>/2020/11/12/searX%E7%94%A8%E5%A4%84%E4%B8%8D%E5%A4%A7%E7%9A%84%E4%B8%AA%E4%BA%BA%E8%81%9A%E5%90%88%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/</url>
    <content><![CDATA[<p>什么是元搜索引擎？</p>
<blockquote>
<p>元件搜尋引擎又稱集合型搜尋引擎，將多個單一搜尋引擎整合在一起，提供統一的檢索介面，將用戶的檢索提問同時提交給多個獨立的搜尋引擎，同時檢索多個資料庫；並根據多個獨立搜尋引擎的檢索結果進行二次加工，如對檢索結果去重、排序等；輸出給自己。【维基百科】</p>
</blockquote>
<p>搭建个人聚合搜索的目的无非是要解决几个问题：隐私保护、匿名访问、无广告。</p>
<p>在我的脑海里首先蹦出来的是 <code>Whoogle</code> 和 <code>searX</code>，前者号称获取 Google 搜索结果，但不包含任何广告，javascript，AMP链接，cookie 或 IP 地址跟踪。但因为众所周知的原因，在国内用不起来。不过你可以到 <span class="exturl" data-url="aHR0cHM6Ly93aG9vZ2xlLnNkZi5vcmcv">https://whoogle.sdf.org/<i class="fa fa-external-link-alt"></i></span> 感受一下</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/09/1602222680730-1602222680732.png" alt="title"></p>
<p>后者号称可展现 Google/Bing 等70多种搜索网站的搜索结果，但是据用过的人说对中文支持并不好。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/09/1602220821982-1602220822018.png" alt="title"></p>
<p>你可以到 <span class="exturl" data-url="aHR0cHM6Ly9zZWFyeC5sYXF1YWRyYXR1cmUubmV0Lw==">https://searx.laquadrature.net/<i class="fa fa-external-link-alt"></i></span>  感受一下。个人感觉还行，只是遇到被Q的引擎还是会报错。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/09/1602221843638-1602221843647.png" alt="title"></p>
<p>当然 <code>元搜索引擎</code> 肯定不止上面提到的两个，比如基于 <code>searX</code> 二次开发的秘迹搜索</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/09/1602220764047-1602220764054.png" alt="title"></p>
<p>你可以到  <span class="exturl" data-url="aHR0cHM6Ly9taWppc291LmNvbS8=">https://mijisou.com/<i class="fa fa-external-link-alt"></i></span> 感受一下。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/09/1602222970226-1602222970232.png" alt="title"></p>
<p>今天我们要安装的是 <code>searX</code>，来近距离感受一下元搜索引擎。</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>在 docker 注册表中搜索 <code>searx</code> ，选择第一个 <code>wonderfall/searx</code>，版本 <code>latest</code>。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/09/1602230972671-1602230972681.png" alt="title"></p>
<h2 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h2><p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/09/1602250865656-1602250865707.png" alt="title"></p>
<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>在浏览器中输入 <code>http://群晖IP:8888</code> 就可以看到主界面，但是第一次运行会有错误提示</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/09/1602251214312-1602251214317.png" alt="title"></p>
<p>需要编辑右上角的 <code>首选项</code>，我们会看到搜索引擎，看起来都是英文的，而且我们能辨识的也就 <code>google</code>、<code>bing</code>、<code>yahoo</code>，其他的确实请原谅我的孤陋寡闻</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/09/1602252523834-1602252523836.png" alt="title"></p>
<p>感觉什么也不用改，返回主界面就不再报错了，但是搜索结果要不就是找不到任何东西</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/09/1602253948316-1602253948318.png" alt="title"></p>
<p>要不就是超时报错（首选项采用默认值）</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/09/1602254045435-1602254045437.png" alt="title"></p>
<p>搜个视频，关键词 <code>小丑</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/09/1602258945951-1602258945954.png" alt="title"></p>
<p>搜个图片，关键词 <code>印度</code></p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/09/1602259138872-1602259138875.png" alt="title"></p>
<p>所以感觉也不是不能用，只是在国内并不好用吧。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>searx/searx: 开源代码主页<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NlYXJ4L3NlYXJ4">https://github.com/searx/searx<i class="fa fa-external-link-alt"></i></span></p>
<p>Welcome to searx — Searx Documentation (Searx-0.17.0.tex)<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9zZWFyeC5naXRodWIuaW8vc2Vhcngv">https://searx.github.io/searx/<i class="fa fa-external-link-alt"></i></span></p>
<p>宝塔面板Docker安装Searx – 搭建一个尊重隐私的私人聚合搜索平台 - 大鸟博客<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuZGFuaWFvLm9yZy82NTE1Lmh0bWw=">https://www.daniao.org/6515.html<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>docker</tag>
        <tag>搜索引擎</tag>
      </tags>
  </entry>
  <entry>
    <title>你现在用什么做笔记？</title>
    <url>/2020/08/29/%E4%BD%A0%E7%8E%B0%E5%9C%A8%E7%94%A8%E4%BB%80%E4%B9%88%E5%81%9A%E7%AC%94%E8%AE%B0%EF%BC%9F/</url>
    <content><![CDATA[<p>大概是4~5月份的时候，小苏同学给我发了一篇文章，《<span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80OTI2MzMwNg==">我的最后一款笔记应用-Notion<i class="fa fa-external-link-alt"></i></span>》，有兴趣可以去看看</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/29/1598680991905-1598680991943.png" alt="title"></p>
<p><code>Notion</code> 作为一款 All-in-one的笔记，除了笔记还包含了团队wiki、文档管理、项目管理、工作流等，尤其是其漂亮的外观，在页面上可以通过拖拽、链接来组织内容，让人耳目一新，原来笔记还可以是这样的。不过虽然有免费方案，但存在诸多的限制，于是我默默看了一眼明年才到期的 wiznote。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/29/1598681779808-1598681779815.png" alt="title"></p>
<p>在 <code>wiznote</code> 之前我用过 <code>Evernote</code>，而且是重度使用者，冲过几年的高级会员，其客户端采用单数据库文件，经历了几次文件损坏，虽然笔记没有丢失，但每次都需要重新同步</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/30/1598760668205-1598760668232.png" alt="title"></p>
<p>期间还尝试过 <code>onenote</code>，功能强大还免费，但是同步时灵时不灵的要看运气，改过 <code>Hosts</code> 也翻过墙，太累了</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/30/1598760747263-1598760747265.png" alt="title"></p>
<p><code>有道云笔记</code>，一言难尽</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/30/1598761788610-1598761788612.png" alt="title"></p>
<p>放弃不代表一无是处，留下也不见得就是完全满意， <code>wiznote</code> 这几年有很多的进步，包括私有化部署，推出 Lite 版等等，但是最后对我而言，因为只支持树状文件组织，缺乏良好的搜索，只能标注 <code>tag</code> ，最终沦为了一个信息仓库，不断的吞噬着传入的各种信息，像一个黑洞一样。易收藏是做到了，但依然难整理，如果只是收藏而不整理，是不会带来任何的知识的。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/30/1598761949163-1598761949165.png" alt="title"></p>
<p>最近又有同事向我推荐 <code>Notion</code>，考虑到 <code>Notion</code> 已经被墙，所以我一直在寻找国内是否有类似的产品，结果还真找到了，前有 <code>寒舟</code>，后有 <code>我来</code>。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/30/1598762364624-1598762364626.png" alt="title"></p>
<p><code>寒舟</code>已停止开发，也停止了运营，原因就不说了，有兴趣的同学自行百度； <code>我来</code> 正在内测，不过需要邀请码才能参加，有兴趣想了解或者愿意折腾的同学，可以直接戳 <span class="exturl" data-url="aHR0cHM6Ly93d3cud29sYWkuY29tL3NpZ251cD9pbnZpdGF0aW9uPVZCM0RHTjM=">https://www.wolai.com/signup?invitation=VB3DGN3<i class="fa fa-external-link-alt"></i></span>，邀请码就是：<code>VB3DGN3</code>，一个码可以注册99人，先到先得了。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/30/1598762037722-1598762037724.png" alt="title"></p>
<p>通过研究 <code>我来</code>，我才知道了 <code>双向链接</code> 和 <code>关系图谱</code>，这才是整理的正确姿势嘛，而这个功能 <code>Notion</code> 目前还不支持</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/29/p314729297-1598686561141.jpg" alt="title"><br>（上图来自：<span class="exturl" data-url="aHR0cHM6Ly93d3cuZG91YmFuLmNvbS9ncm91cC90b3BpYy8xODU4MjI4NzIv">https://www.douban.com/group/topic/185822872/<i class="fa fa-external-link-alt"></i></span>）</p>
<p>不少人觉得 <code>我来</code> 就是 <code>Notion</code> + <code>Roam</code> 的综合体，所以通过了解 <code>Roam Research</code>，又知道了 <code>Zettelkasten</code> 卡片盒</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/29/1598688764107-1598688764111.png" alt="title"></p>
<p>寻寻觅觅了一圈的工具，基本上确定了后续的使用方案：</p>
<ul>
<li><p>线上方案：会继续用 <code>我来</code> <span class="exturl" data-url="aHR0cHM6Ly93d3cud29sYWkuY29tL3NpZ251cD9pbnZpdGF0aW9uPVZCM0RHTjM=">http://wolai.com/<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p>离线方案：将采用 <code>Obsidian</code> 来作为本地个人知识库的构建工具，数据放在自己手里还是比较安心的，先上一张图。</p>
</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/29/1598685648354-1598685648356.png" alt="title"></p>
<p>当然如果你是程序员，可以考虑开源的 VScode 插件</p>
<ul>
<li><p><code>Foam</code>，主页在这里：<span class="exturl" data-url="aHR0cHM6Ly9mb2FtYnViYmxlLmdpdGh1Yi5pby9mb2FtLw==">https://foambubble.github.io/foam/<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p><code>Memo</code>，主页在这里：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3N2c29vbC92c2NvZGUtbWVtbw==">https://github.com/svsool/vscode-memo<i class="fa fa-external-link-alt"></i></span></p>
</li>
</ul>
<p><strong>工具只是手段，重要的还是内容，当你已经有了趁手的工具，那就赶紧行动起来吧！</strong></p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>如何评价「我来 wolai.com」这个产品？<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzQwNzEzMjI3My9hbnN3ZXIvMTM1MjYzODg0OQ==">https://www.zhihu.com/question/407132273/answer/1352638849<i class="fa fa-external-link-alt"></i></span></p>
<p>2020年了，你的笔记有 “双向链接” 吗？<br>地址：<span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xNDA5MjkxODQ=">https://zhuanlan.zhihu.com/p/140929184<i class="fa fa-external-link-alt"></i></span></p>
<p>秒杀传统型笔记！支持 Markdown 和双向链接的 Roam Research 为什么这么强？<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuc29odS5jb20vYS8zOTg3MDU2MTJfNjAyOTk0">https://www.sohu.com/a/398705612_602994<i class="fa fa-external-link-alt"></i></span></p>
<p>Roam Research Report ——理念与功能<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9zc3BhaS5jb20vcG9zdC82MDU4OA==">https://sspai.com/post/60588<i class="fa fa-external-link-alt"></i></span></p>
<p>Matrix 圆桌 | 网状结构笔记工具是一阵风吗？<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9zc3BhaS5jb20vcG9zdC82MTg4Ng==">https://sspai.com/post/61886<i class="fa fa-external-link-alt"></i></span></p>
<p>基于 Obsidian 的 Zettelkasten 卡片盒笔记法实践<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cubWF0YXRha2kuaW8vcC80Mjc1">https://www.matataki.io/p/4275<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>双向链接</tag>
      </tags>
  </entry>
  <entry>
    <title>watchtower自动化更新docker镜像</title>
    <url>/2020/09/18/watchtower%E8%87%AA%E5%8A%A8%E5%8C%96%E6%9B%B4%E6%96%B0docker%E9%95%9C%E5%83%8F/</url>
    <content><![CDATA[<p><strong>什么是 watchtower ?</strong></p>
<blockquote>
<p>watchtower 是一款实现自动化更新 Docker 镜像与容器的实用工具。它监控着所有正在运行的容器以及相关镜像，当检测本地镜像与镜像仓库中的镜像有差异时，会自动拉取最新镜像并使用最初部署时的参数重新启动相应的容器。</p>
</blockquote>
<h1 id="Docker手动升级流程"><a href="#Docker手动升级流程" class="headerlink" title="Docker手动升级流程"></a>Docker手动升级流程</h1><p>在介绍自动升级前，让先我们来了解一下手动升级的流程，以 <code>Airsonic</code> 为例</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/airsonic01-1600228454902.png" alt="title"></p>
<p>1、在注册表选择最新（latest）的映像下载（由于名字和以前下载的一样，在映像里只有一个，在DSM消息里有提示下载完成即可）</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/airsonic02-1600228493146.png" alt="title"></p>
<p>2、在容器里选择正在运行的 airsonic，在上面的操作里选择 <code>停止--&gt;清除--&gt;启动</code>，就完成升级了。（数据不会丢失）</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/airsonic03-1600228510043.png" alt="title"></p>
<p>3、映像下载慢可以使用阿里等国内镜像下载，启动完成后，已经是新版本了</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/airsonic04-1600228544199.png" alt="title"></p>
<h1 id="用watchtower自动升级"><a href="#用watchtower自动升级" class="headerlink" title="用watchtower自动升级"></a>用watchtower自动升级</h1><p>一般采用 <code>docker run</code> 方式，SSH 登录到群晖后用命令行执行</p>
<h2 id="快速启动"><a href="#快速启动" class="headerlink" title="快速启动"></a>快速启动</h2><p>执行以下标准命令启动 <code>watchtower</code> 容器，<code>watchtower</code> 将开始监视我们正在运行的 Docker 容器，并每隔几分钟检查一次所有容器的镜像是否为最新版，如发现镜像更新将会自动停止容器，删除容器，拉取最新镜像，再以之前启动容器的命令启动容器。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">    --name watchtower \</span><br><span class="line">    -v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">    containrrr/watchtower</span><br></pre></td></tr></table></figure>

<h2 id="指定容器更新"><a href="#指定容器更新" class="headerlink" title="指定容器更新"></a>指定容器更新</h2><p>如无需自动更新所有稳定运行的容器，可以配置仅更新指定容器，只需要在命令后加上容器名。例如只更新 <code>nginx</code> 和 <code>redis</code>。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">    --name watchtower \</span><br><span class="line">    --restart always \</span><br><span class="line">    -v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">    containrrr/watchtower \</span><br><span class="line">    --cleanup \</span><br><span class="line">    nginx redis</span><br></pre></td></tr></table></figure>

<h2 id="远程主机"><a href="#远程主机" class="headerlink" title="远程主机"></a>远程主机</h2><p>缺省情况下，<code>watchtower</code>监控的是本地的 <code>docker daemon</code>，但是也可以监控另一台机器上的 docker，比如我本机 IP 是 <code>192.168.0.199</code>，而另一台蜗牛星际的 IP 是 <code>192.168.0.198</code></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">    --name watchtower \</span><br><span class="line">    containrrr/watchtower --host <span class="string">"tcp://192.168.0.199:2375"</span></span><br></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">    --name watchtower \</span><br><span class="line">    -e DOCKER_HOST=<span class="string">"tcp://192.168.0.199:2375"</span> \</span><br><span class="line">    containrrr/watchtower</span><br></pre></td></tr></table></figure>

<h1 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h1><p>不建议自动更新全部，而要用指定容器更新，因为有些项目升级可能会带来很严重的兼容性问题，比如 <code>homeassistant</code> 从 <code>0.82</code> 升到 <code>0.93</code>，各种不兼容，折腾到差点放弃，所以现在虽然已经都 <code>0.114</code> 了，可我还是一直停留在 <code>0.93</code>。</p>
<p>更多的参数和命令，比如定时更新等等，可以参考官方的文档<span class="exturl" data-url="aHR0cHM6Ly9jb250YWlucnJyLmRldi93YXRjaHRvd2VyLw==">https://containrrr.dev/watchtower/<i class="fa fa-external-link-alt"></i></span></p>
<p>目前我觉得手动升级足够了，毕竟也才30多个镜像而已</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/1600228999348-1600228999350.png" alt="title"></p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>Remote hosts - Watchtower<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9jb250YWlucnJyLmRldi93YXRjaHRvd2VyL3JlbW90ZS1ob3N0cy8=">https://containrrr.dev/watchtower/remote-hosts/<i class="fa fa-external-link-alt"></i></span></p>
<p>Watchtower - 自动更新 Docker 镜像与容器 - 思有云 - IOIOX<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuaW9pb3guY29tL2FyY2hpdmVzLzg0Lmh0bWw=">https://www.ioiox.com/archives/84.html<i class="fa fa-external-link-alt"></i></span></p>
<p>群晖NAS下自动更新docker镜像_NAS存储_什么值得买<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2E2bHJtbjZuLw==">https://post.smzdm.com/p/a6lrmn6n/<i class="fa fa-external-link-alt"></i></span></p>
<p>如何自动更新群晖docker的镜像与容器 | 生活的左上角<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9id3NreWVyLmNvbS9zeW5vbG9neS1kb2NrZXItaW5zdGFsbC13YXRjaHRvd2VyLmh0bWw=">https://bwskyer.com/synology-docker-install-watchtower.html<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>运维</tag>
        <tag>可视化</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>个人专属的音乐库</title>
    <url>/2020/05/04/%E4%B8%AA%E4%BA%BA%E4%B8%93%E5%B1%9E%E7%9A%84%E9%9F%B3%E4%B9%90%E5%BA%93/</url>
    <content><![CDATA[<p>虽然国内已经有了虾米音乐、QQ音乐、网易云音乐等，国外也有Spotify、SoundCloud和Google Play Music等数字音乐服务，但是对于那些拥有大量本地音乐文件的用户，怎么才能不浪费这些资源呢？</p>
<a id="more"></a>

<p>之前我们专门讨论过家庭多媒体中心，这些流媒体服务软件，包括Plex、Emby、Jellyfin等，尤其是Plex不仅有出色的视频播放，而且在音乐方面也同样出色，除此之外还有Ampache，但今天我们要讨论的是sonic系列。</p>
<h1 id="Subsonic"><a href="#Subsonic" class="headerlink" title="Subsonic"></a>Subsonic</h1><p>Subsonic由挪威人Sindre Mehus采用Java语言编写而成。它具有一个强大的自动转换格式引擎，可通过将其即时转换为MP3来流式传输各种有损和无损格式。提供28种语言（包括中文），30种不同主题以及高度可配置的用户界面。</p>
<p>群晖上安装可以通过导入第三方源后在【套件中心】安装，也可以通过Docker安装。界面效果：</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/04/QQ%E6%88%AA%E5%9B%BE20181014181418-1588561466060.png" alt="title"></p>
<p>通过购买Subsonic Premium版本，您可以使用视频流功能，无广告体验以及流式传输到Chromecast和Sonos设备。</p>
<h1 id="Madsonic"><a href="#Madsonic" class="headerlink" title="Madsonic"></a>Madsonic</h1><p>Madsonic是具有自动点唱机功能的基于Web的媒体库和媒体流媒体。Madsonic基于Java技术，可在大多数平台上运行，包括Windows，MacOS，OSX，Linux和Unix变体。</p>
<p>群晖上可以通过Docker安装，界面效果：</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/04/Madsonic-Linux-Media-Server-1588562333873.png" alt="title"></p>
<h1 id="Libresonic"><a href="#Libresonic" class="headerlink" title="Libresonic"></a>Libresonic</h1><p>这个基于Web的个人音乐服务器可以轻松处理大量收藏。此外Libresonic几乎可以与您使用的所有文件格式兼容。但是这个开源项目已经停止更新了。界面效果：</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/04/LibreSonic-Music-Server-Software-1588563025909.jpg" alt="title"></p>
<h1 id="Airsonic"><a href="#Airsonic" class="headerlink" title="Airsonic"></a>Airsonic</h1><p>Airsonic，一个自由和开源社区驱动的媒体服务器，虽然是Subsonic和Libresonic的分支，但是AirSonic仍然是免费和开源的，而不是Subsonic和Madsonic的闭源模型。界面效果：</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/04/screenshot-1588563012761.png" alt="title"></p>
<h1 id="选择的依据"><a href="#选择的依据" class="headerlink" title="选择的依据"></a>选择的依据</h1><p>一个主要因素是开放源代码与封闭源代码，我个人倾向于开源的Libresonic或Airsonic，考虑到持久的更新和维护，最终我选择了Airsonic。</p>
<h1 id="客户端播放"><a href="#客户端播放" class="headerlink" title="客户端播放"></a>客户端播放</h1><p>除了在Web上直接播放音乐外，Airsonic也支持用客户端来播放，因为Airsonic提供和Subsonic相同的API，所以也意味着所有Subsonic应用程序都应该与Airsonic兼容，起码理论上是这样的。</p>
<p>在这个页面（ <span class="exturl" data-url="aHR0cHM6Ly9haXJzb25pYy5naXRodWIuaW8vZG9jcy9hcHBzLw==">https://airsonic.github.io/docs/apps/<i class="fa fa-external-link-alt"></i></span> ），详细列举了各种应用，基本上涵盖了所有的主流系统平台，总归有适合你的。</p>
<p>最后给个Android手机上Subsonic Music Streamer的效果图：</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/04/nexusae0_225-1588572892955.png" alt="title"></p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>Subsonic官网<br>地址：<span class="exturl" data-url="aHR0cDovL3d3dy5zdWJzb25pYy5vcmcvcGFnZXMvaW5kZXguanNw">http://www.subsonic.org/pages/index.jsp<i class="fa fa-external-link-alt"></i></span></p>
<p>Subsonic：在浏览器内欣赏本地音乐<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cud2FlcmZhLmNvbS9zdWJzb25pYw==">https://www.waerfa.com/subsonic<i class="fa fa-external-link-alt"></i></span></p>
<p>Madsonic官网<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9iZXRhLm1hZHNvbmljLm9yZy9wYWdlcy9pbmRleC5qc3A=">https://beta.madsonic.org/pages/index.jsp<i class="fa fa-external-link-alt"></i></span></p>
<p>Airsonic官网<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FpcnNvbmljL2FpcnNvbmlj">https://github.com/airsonic/airsonic<i class="fa fa-external-link-alt"></i></span></p>
<p>【阿文菌】airsonic，用docker搭建属于自己的在线音乐平台。<br>地址：<span class="exturl" data-url="aHR0cDovL3d3dy5qdW53ZW4uYmlkOjU4MDAvYXdlbi8xOS5odG1s">http://www.junwen.bid:5800/awen/19.html<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>subsonic</tag>
        <tag>airsonic</tag>
        <tag>plex</tag>
        <tag>Emby</tag>
        <tag>jellyfin</tag>
        <tag>madsonic</tag>
        <tag>libresonic</tag>
        <tag>Spotify</tag>
        <tag>Ampache</tag>
        <tag>SoundCloud</tag>
        <tag>Google Play Music</tag>
      </tags>
  </entry>
  <entry>
    <title>免费的泛域名https证书自动续期</title>
    <url>/2020/07/31/%E5%85%8D%E8%B4%B9%E7%9A%84%E6%B3%9B%E5%9F%9F%E5%90%8Dhttps%E8%AF%81%E4%B9%A6%E8%87%AA%E5%8A%A8%E7%BB%AD%E6%9C%9F/</url>
    <content><![CDATA[<p><strong>什么是Certbot？</strong></p>
<blockquote>
<p>Certbot是专门为 Let’s Encrypt 制作的一个支持 ACME 协议的证书管理工具，可以通过它来全自动化的生成、管理、更新 Let’s encrypt 证书。</p>
</blockquote>
<p><strong>什么是Let’s Encrypt？</strong></p>
<blockquote>
<p>Let’s Encrypt是一個於2015年三季度推出的數位憑證認證機構，旨在以自動化流程消除手動建立和安裝憑證的複雜流程，並推廣使全球資訊網伺服器的加密連接無所不在，為安全網站提供免費的傳輸層安全性協定憑證。 [維基百科]</p>
</blockquote>
<p><strong>什么是泛域名？</strong></p>
<blockquote>
<p>就是 <code>*.baidu.com</code> 这种，可以实现无限的二级域名。</p>
</blockquote>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>一直用腾讯的 dnspod 为各种二级域名申请免费的 SSL 证书，一个二级域名对应一张证书，有效期1年，除了少数会留着一直用，大部分软件、镜像测试完之后，域名基本上就不再使用了，虽然管理上有点麻烦，但是毕竟免费的，还要啥自行车？直到有一天出现</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/30/1596074306601-1596074306609.png" alt="title"></p>
<p>查了一下，从2018年起亚洲诚信品牌免费型 DV 版 SSL 证书，同一主域最多只能申请20张，要么重复循环使用，要么申请泛域名证书。</p>
<p>但要申请一个泛域名 SSL 证书，一方面价格不菲，另一方面免费泛域名证书有效期一般只有三个月，当你的二级站点一多，难免会顾此失彼。</p>
<p>所以我们今天要解决的问题是用 Certbot 自动化来配置 SSL 证书和定时更新。</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>因为主要是在群晖上建各种站点，所以还是在群晖上以 Docker 方式安装。</p>
<p>在注册表中搜索 <code>xzxiaoshan</code> ，选择 <code>xzxiaoshan/certbot</code>，版本选择 <code>latest</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/30/1596081068633-1596081068636.png" alt="title"></p>
<h1 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h1><h2 id="卷"><a href="#卷" class="headerlink" title="卷"></a>卷</h2><p>添加两个文件夹</p>
<table>
<thead>
<tr>
<th align="center">文件夹</th>
<th align="center">装载路径</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><code>docker/certbot/logs</code></td>
<td align="center"><code>/var/log/letsencrypt</code></td>
</tr>
<tr>
<td align="center"><code>docker/certbot/letsencrypt</code></td>
<td align="center"><code>/etc/letsencrypt</code></td>
</tr>
</tbody></table>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/30/1596081762755-1596081762761.png" alt="title"></p>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>以腾讯云为例</p>
<table>
<thead>
<tr>
<th align="center">可变</th>
<th align="center">值</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><code>PDNS</code></td>
<td align="center"><code>txy</code></td>
</tr>
<tr>
<td align="center"><code>TXY_TOKEN</code></td>
<td align="center">腾讯的<code>SecretKey</code></td>
</tr>
<tr>
<td align="center"><code>TXY_KEY</code></td>
<td align="center">腾讯的<code>SecretId</code></td>
</tr>
<tr>
<td align="center"><code>CERT_PARAMS</code></td>
<td align="center"><code>--email example@qq.com -d example.com -d *.example.com</code></td>
</tr>
</tbody></table>
<blockquote>
<p>因为都有key，开始想当然的把 SecretKey 填在了 TXY_KEY ，把 SecretId 填在了 TXY_TOKEN ，结果折腾了半天一直出错，囧<del>~</del></p>
</blockquote>
<p>参数说明</p>
<ul>
<li>PDNS参数：阿里云aly、腾讯云txy、华为云hwy、GoDaddy godaddy</li>
<li>ALY_KEY 和 ALY_TOKEN：阿里云 API key 和 Secrec 官方申请文档<br><span class="exturl" data-url="aHR0cHM6Ly9oZWxwLmFsaXl1bi5jb20va25vd2xlZGdlX2RldGFpbC8zODczOC5odG1s">https://help.aliyun.com/knowledge_detail/38738.html<i class="fa fa-external-link-alt"></i></span> </li>
<li>TXY_KEY 和 TXY_TOKEN：腾讯云 API 密钥官方申请文档<br><span class="exturl" data-url="aHR0cHM6Ly9jb25zb2xlLmNsb3VkLnRlbmNlbnQuY29tL2NhbS9jYXBp">https://console.cloud.tencent.com/cam/capi<i class="fa fa-external-link-alt"></i></span> </li>
<li>HWY_KEY 和 HWY_TOKEN: 华为云 API 密钥官方申请文档<br><span class="exturl" data-url="aHR0cHM6Ly9zdXBwb3J0Lmh1YXdlaWNsb3VkLmNvbS9kZXZnLWFwaXNpZ24vYXBpLXNpZ24tcHJvdmlkZS5odG1s">https://support.huaweicloud.com/devg-apisign/api-sign-provide.html<i class="fa fa-external-link-alt"></i></span> </li>
<li>GODADDY_KEY 和 GODADDY_TOKEN：GoDaddy API 密钥官方申请文档<br><span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuZ29kYWRkeS5jb20vZ2V0c3RhcnRlZA==">https://developer.godaddy.com/getstarted<i class="fa fa-external-link-alt"></i></span> </li>
<li>支持的域名后缀详见文件domain.ini<br><span class="exturl" data-url="aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3h6eGlhb3NoYW4vY2VydGJvdC9tYXN0ZXIvY2VydGJvdC1hdS9kb21haW4uaW5p">https://raw.githubusercontent.com/xzxiaoshan/certbot/master/certbot-au/domain.ini<i class="fa fa-external-link-alt"></i></span> </li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/30/1596082642836-1596082642843.png" alt="title"></p>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><h2 id="证书自动同步"><a href="#证书自动同步" class="headerlink" title="证书自动同步"></a>证书自动同步</h2><p>群晖 –&gt; “控制面板” –&gt; “计划的任务” –&gt; “用户定义的脚本” –&gt; “任务设置”</p>
<p>脚本内容填写 </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">/volume1/docker/certbot/letsencrypt/synology/syncSynologyCert.sh</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/30/1596088950576-1596088950583.png" alt="title"></p>
<p>其中前面一段 <code>/volume1/docker/certbot/letsencrypt</code> 是你群晖配置容器时挂载的卷的目录的实际路径（右键文件夹属性查看）。</p>
<p>脚本设置<code>每天执行一次</code>即可。</p>
<h1 id="更换默认证书"><a href="#更换默认证书" class="headerlink" title="更换默认证书"></a>更换默认证书</h1><p>容器运行成功后，如果没有出现错误，会自动生成一些目录</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/31/1596196319697-1596196319726.png" alt="title"></p>
<p>下载 <code>archive</code> 文件夹里的证书</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/31/1596186910038-1596186910039.png" alt="title"></p>
<p>新增证书</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/31/1596186705885-1596186705891.png" alt="title"></p>
<p>导入证书</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/31/1596186175310-1596186175340.png" alt="title"></p>
<p>将导入的证书设置为默认证书（原来默认的证书是 synology.com ）</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/31/1596186301587-1596186301593.png" alt="title"></p>
<p>有可能会需要重启网页服务器</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/31/1596187073168-1596187073169.png" alt="title"></p>
<h1 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h1><p>在浏览器中输入 <code>https://example.com</code> ，</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/31/1596197089751-1596197089754.png" alt="title"></p>
<p>可以在 <span class="exturl" data-url="aHR0cHM6Ly9teXNzbC5jb20=">https://myssl.com<i class="fa fa-external-link-alt"></i></span> 继续验 SSL 安全性，现在我们又可以继续愉快的玩（折）耍（腾）了。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>免费https证书（泛域名的，自动续期）<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NhdG9vcC9hcnRpY2xlL2RldGFpbHMvMTA0OTcwNzY3">https://blog.csdn.net/catoop/article/details/104970767<i class="fa fa-external-link-alt"></i></span></p>
<p>群晖免费HTTPS证书，泛域名+自动续期<br>地址：<span class="exturl" data-url="aHR0cDovL3d3dy5uYXN5dW4uY29tL3RocmVhZC02OTQwNy0xLTEuaHRtbA==">http://www.nasyun.com/thread-69407-1-1.html<i class="fa fa-external-link-alt"></i></span></p>
<p>Nginx配合Certbot自动更新，获得永久免费SSL证书<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RvdHBob2VuaXgvYXJ0aWNsZS9kZXRhaWxzLzEwNjI3MjQyMQ==">https://blog.csdn.net/dotphoenix/article/details/106272421<i class="fa fa-external-link-alt"></i></span></p>
<p>使用 Certbot 为网站设置永久免费的 HTTPS 证书<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9qaW1teXNvbmcuaW8vYmxvZy9mcmVlLWNlcnRpZmljYXRlcy13aXRoLWNlcnRib3Qv">https://jimmysong.io/blog/free-certificates-with-certbot/<i class="fa fa-external-link-alt"></i></span></p>
<p>【原创】群晖安装并自动续期Let’s Encrypt SSL证书<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9mb3J1bS41MW5iLmNvbS90aHJlYWQtMTc4OTg0My0xLTEuaHRtbA==">https://forum.51nb.com/thread-1789843-1-1.html<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>SSL</tag>
        <tag>证书</tag>
      </tags>
  </entry>
  <entry>
    <title>一款全能的跨平台下载工具Motrix</title>
    <url>/2020/07/27/%E4%B8%80%E6%AC%BE%E5%85%A8%E8%83%BD%E7%9A%84%E8%B7%A8%E5%B9%B3%E5%8F%B0%E4%B8%8B%E8%BD%BD%E5%B7%A5%E5%85%B7Motrix/</url>
    <content><![CDATA[<p><strong>什么是Motrix</strong>？</p>
<blockquote>
<p>Motrix 是一款采用了「Aria 2」作为核心的开源免费下载软件，可以支持下载 HTTP、FTP、BT、磁力链接以及下载百度网盘等资源。软件代码基于 Electron 构架的设计让 Motrix 能够在多平台下施展拳脚，无论是 Windows、macOS 还是 Linux 都能拥有极佳的下载体验。</p>
</blockquote>
<h1 id="产品特性"><a href="#产品特性" class="headerlink" title="产品特性"></a>产品特性</h1><p>🕹 简洁明了的图形操作界面<br>🦄 支持BT和磁力链任务<br>☑️ 支持选择性下载BT部分文件<br>📡 每天自动更新 Tracker 服务器列表<br>🔌 UPnP &amp; NAT-PMP 端口映射<br>🎛 最高支持 10 个任务同时下载<br>🚀 单任务最高支持 64 线程下载<br>🕶 模拟用户代理UA<br>🔔 下载完成后通知<br>💻 支持触控栏快捷键(Mac 专享)<br>🤖 常驻系统托盘，操作更加便捷<br>🌑 深色模式<br>🗑 移除任务时可同时删除相关文件<br>🌍 国际化， 查看已可支持的语言<br>🛠 更多特性开发中</p>
<p>软件主界面：</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/27/1595860773837-1595860773868.png" alt="title"></p>
<p>软件本身的使用非常简单，实在不会在这里能找到详细的使用说明，<span class="exturl" data-url="aHR0cHM6Ly93d3cueXVxdWUuY29tL21vYXBwL2hlbHA=">https://www.yuque.com/moapp/help<i class="fa fa-external-link-alt"></i></span></p>
<h1 id="百度云的2种下载方式"><a href="#百度云的2种下载方式" class="headerlink" title="百度云的2种下载方式"></a>百度云的2种下载方式</h1><h2 id="Motrix-插件"><a href="#Motrix-插件" class="headerlink" title="Motrix 插件"></a>Motrix 插件</h2><p>Motrix 曾经提供过名为「百度网盘助手」的 Chrome 浏览器扩展，但是因为某种原因已经不提供了，但是我知道你总归还是有办法的。</p>
<p>插件安装好之后，在您的百度网盘网页上会出现「MO.app」按钮。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/28/1595867567020-1595867567024.png" alt="title"></p>
<p>先要设置，才能使用。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/28/1595867617615-1595867617617.png" alt="title"></p>
<p>其实都已经配好了，只要测试成功就能用了。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/28/1595867665225-1595867665227.png" alt="title"></p>
<p>另外别忘了插件要启用key</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/28/1595936377019-1595936377025.png" alt="title"></p>
<p>这个key来自于 Motrix 的设置</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/28/1595899137317-1595899137319.png" alt="title"></p>
<blockquote>
<p>需要注意的是，在 windows 平台，用 ctrl +c 复制这个 key 实际上得到的是这样一串字符：<code>http://token:eJEPyMHltDcy@127.0.0.1:16800/jsonrpc</code>，而在 Mac 上 只有 <code>eJEPyMHltDcy</code>，需要自己补全，不然会有问题。</p>
</blockquote>
<p>下载前需要先启动 Motrix，选择要下载的文件，然后点「使用MO下载」即可。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/28/1595867770517-1595867770518.png" alt="title"></p>
<h2 id="油猴（Tampermonkey）脚本"><a href="#油猴（Tampermonkey）脚本" class="headerlink" title="油猴（Tampermonkey）脚本"></a>油猴（Tampermonkey）脚本</h2><p>一个开源的脚本「百度网盘直链下载助手」，代码下载地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3N5aHl6MTk5MC9iYWlkdXl1bg==">https://github.com/syhyz1990/baiduyun<i class="fa fa-external-link-alt"></i></span>。安装完成后，在您的百度网盘网页上会出现「下载助手」按钮。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/27/1595862832030-1595862832035.png" alt="title"></p>
<p>要配合 Motrix 下载，我们要用 「PRC 下载」模式。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/28/1595900291772-1595900291779.png" alt="title"></p>
<p>同样需要「配置 RPC 服务」</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/28/1595900332408-1595900332414.png" alt="title"></p>
<blockquote>
<p>1、这里的密钥只要填写前面 Motrix 生成的 <code>eJEPyMHltDcy</code> 即可；<br>2、端口改为16800；</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/28/1595936119011-1595936119111.png" alt="title"></p>
<p>详细的教程（<span class="exturl" data-url="aHR0cHM6Ly93d3cuYmFpZHV5dW4ud2lraS96aC1jbi9ycGMuaHRtbCNtb3RyaXgtJUU0JUJEJUJGJUU3JTk0JUE4JUU2JThDJTg3JUU1JThEJTk3">https://www.baiduyun.wiki/zh-cn/rpc.html#motrix-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97<i class="fa fa-external-link-alt"></i></span>）在这里能找到。</p>
<h2 id="两种下载方式的对比"><a href="#两种下载方式的对比" class="headerlink" title="两种下载方式的对比"></a>两种下载方式的对比</h2><p>2种下载方式的下载速度，显然油猴脚本的「下载助手」中的 RPC 下载速度更好，但不确定是否具备普遍性。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/27/1595861918637-1595861918639.png" alt="title"></p>
<h1 id="其他网站的下载"><a href="#其他网站的下载" class="headerlink" title="其他网站的下载"></a>其他网站的下载</h1><p>建议下载「Motrix Chrome Extension」插件，用来拦截 chrome 的下载器</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/27/1595863609686-1595863609687.png" alt="title"></p>
<p>装了插件后默认会用 Motrix 下载，在「蜂鸟云盘」测试下载速度，网页直接下载大概在 7 MB/s左右，但是用 Motrix 可以达到 11 MB/s。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/27/1595863521050-1595863521053.png" alt="title"></p>
<h1 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h1><p>工具用着虽然爽，但是各种云盘既然存在会员，既然存在限速，说明资源还是有限的，也许你占的就是VIP的带宽，别人可是交了钱才享受的服务，所以偶尔应应急就算了。羊毛可以撸，但是千万别撸太狠，把羊给撸没了。生存不易，网盘多的很，别总和百度较劲，且用且珍惜！</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>官网中文主页<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9tb3RyaXguYXBwL3poLUNOLw==">https://motrix.app/zh-CN/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>下载</tag>
        <tag>Motrix</tag>
        <tag>网盘</tag>
      </tags>
  </entry>
  <entry>
    <title>全网音乐免费听</title>
    <url>/2020/07/15/%E5%85%A8%E7%BD%91%E9%9F%B3%E4%B9%90%E5%85%8D%E8%B4%B9%E5%90%AC/</url>
    <content><![CDATA[<p><strong>什么是 Listen 1</strong></p>
<blockquote>
<p>Listen 1 可以搜索和播放来自网易云音乐，虾米，QQ音乐，酷狗音乐，酷我音乐，Bilibili，咪咕音乐网站的歌曲，让你的曲库更全面。并支持收藏功能，方便的创建自己的歌单。<br>这是一款 Github 开源软件，感谢开源社区的开发者，为 Listen 1 贡献了精彩的代码。</p>
</blockquote>
<h1 id="跨平台的客户端"><a href="#跨平台的客户端" class="headerlink" title="跨平台的客户端"></a>跨平台的客户端</h1><p>除主流平台客户端外，还支持浏览器插件</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/15/1594796468266-1594796468309.png" alt="title"></p>
<h1 id="搜索功能"><a href="#搜索功能" class="headerlink" title="搜索功能"></a>搜索功能</h1><p> Listen 1 可以搜索和播放来自网易云音乐，虾米，QQ音乐，酷狗音乐，酷我音乐，Bilibili，咪咕音乐网站的歌曲，让你的曲库更全面。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/15/1594796825376-1594796825384.png" alt="title"></p>
<h1 id="歌单功能"><a href="#歌单功能" class="headerlink" title="歌单功能"></a>歌单功能</h1><p>支持歌单功能，你可以方便的播放，收藏和创建自己的歌单。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/15/1594797231118-1594797231127.png" alt="title"></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/15/1594798253657-1594798253661.png" alt="title"></p>
<h1 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h1><p>目前支持2种，简约白和深空灰</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/15/1594797320097-1594797320099.png" alt="title"></p>
<h1 id="歌词显示"><a href="#歌词显示" class="headerlink" title="歌词显示"></a>歌词显示</h1><p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/15/1594797426387-1594797426396.png" alt="title"></p>
<h1 id="安装chrome插件"><a href="#安装chrome插件" class="headerlink" title="安装chrome插件"></a>安装chrome插件</h1><p>下载 Chrome 插件版压缩包，并解压缩</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/15/1594798363898-1594798363901.png" alt="title"></p>
<p>打开 Chrome 扩展页面，勾选右上角「开发者模式」</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/15/1594798452789-1594798452791.png" alt="title"></p>
<p>选择「加载已解压的扩展程序…」，选择刚刚解压缩的文件夹</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/15/1594798491176-1594798491184.png" alt="title"></p>
<p>新版本的 chrome 需要打开「固定扩展程序」</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/15/1594798663675-1594798663682.png" alt="title"></p>
<p>开始使用</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/15/1594799088828-1594799088856.png" alt="title"></p>
<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>1、如果在海外，或者挂了VPN，会出现下图的提示</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/15/1594804486501-1594804486506.png" alt="title"></p>
<p>2、还能用多久？毕竟南山必胜客岂是浪得虚名！</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/15/1594812396772-1594812396834.png" alt="title"></p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>官网主页<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9saXN0ZW4xLmdpdGh1Yi5pby9saXN0ZW4xLw==">https://listen1.github.io/listen1/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>listen1</tag>
        <tag>音乐</tag>
      </tags>
  </entry>
  <entry>
    <title>免费在线流程图Draw.io</title>
    <url>/2020/05/10/%E5%85%8D%E8%B4%B9%E5%9C%A8%E7%BA%BF%E6%B5%81%E7%A8%8B%E5%9B%BEDraw.io/</url>
    <content><![CDATA[<p>除了office外，我们用的比较多的办公软件应该就是visio了，所以除了在线office外，是否也有免费的在线的visio呢？</p>
<p>在研究了ProcessOn（ <span class="exturl" data-url="aHR0cHM6Ly93d3cucHJvY2Vzc29uLmNvbS8=">https://www.processon.com/<i class="fa fa-external-link-alt"></i></span> ）、Freedgo Design（ <span class="exturl" data-url="aHR0cHM6Ly93d3cuZnJlZWRnby5jb20v">https://www.freedgo.com/<i class="fa fa-external-link-alt"></i></span> ）、bullmind（ <span class="exturl" data-url="aHR0cHM6Ly93d3cuYnVsbG1pbmQuY29tLw==">https://www.bullmind.com/<i class="fa fa-external-link-alt"></i></span> ）、Draw.io（ <span class="exturl" data-url="aHR0cHM6Ly9hcHAuZGlhZ3JhbXMubmV0Lw==">https://app.diagrams.net/<i class="fa fa-external-link-alt"></i></span> ）等线上绘图软件之后，我发现Draw.io不仅功能强大，没有保存文件数量限制，内置的图库还很丰富，源代码开源能够本地部署，非常厚道，因此成为我们的首选。</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><ul>
<li>在docker注册表中搜索“onlyoffice”，第一个即为官方提供的image文件。</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/10/1589088450552-1589088450553.png" alt="title"></p>
<ul>
<li>双击开始安装，选“latest”</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/10/1589088530648-1589088530649.png" alt="title"></p>
<h1 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h1><ul>
<li>习惯性的限制下资源的使用</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/10/1589088826340-1589088826343.png" alt="title"></p>
<ul>
<li><p>【卷】不用设置</p>
</li>
<li><p>【端口】的设置，只要避免冲突就可以</p>
</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/10/1589088895467-1589088895468.png" alt="title"></p>
<h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><p>在浏览器中输入 http://群晖IP:8081</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/10/1589089216157-1589089216160.png" alt="title"></p>
<p>显示更多网盘</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/10/1589089708915-1589089708919.png" alt="title"></p>
<p>如果你不需要网盘，可以在浏览器中输入 http://群晖IP:8081/?offline=1</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/10/1589089264415-1589089264419.png" alt="title"></p>
<h1 id="新建"><a href="#新建" class="headerlink" title="新建"></a>新建</h1><p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/10/1589089603439-1589089603442.png" alt="title"></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/10/1589089584334-1589089584335.png" alt="title"></p>
<h1 id="编辑"><a href="#编辑" class="headerlink" title="编辑"></a>编辑</h1><p>来画个网络图</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/10/1589089844093-1589089844095.png" alt="title"></p>
<p>支持的图库非常丰富</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/10/1589089939950-1589089939952.png" alt="title"></p>
<h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><ul>
<li>免注册</li>
<li>支持中文</li>
<li>丰富的内置图库</li>
<li>多种存储格式</li>
<li>支持云盘存储</li>
<li>有独立的桌面客户端，支持Windows、Mac OS、Linux</li>
</ul>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>Draw.io官网<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9hcHAuZGlhZ3JhbXMubmV0Lw==">https://app.diagrams.net/<i class="fa fa-external-link-alt"></i></span></p>
<p>Draw.io代码<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2pncmFwaA==">https://github.com/jgraph<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>云盘</tag>
        <tag>visio</tag>
        <tag>draw.io</tag>
      </tags>
  </entry>
  <entry>
    <title>国庆在家玩录播</title>
    <url>/2020/10/07/%E5%9B%BD%E5%BA%86%E5%9C%A8%E5%AE%B6%E7%8E%A9%E5%BD%95%E6%92%AD/</url>
    <content><![CDATA[<p>上一篇我们研究了如何在家里直播，今天我们来研究下怎么进行录播，这样我们就不用担心错过什么了，比如说网课，体育比赛等等。</p>
<p>和 <code>LiveGo</code> 一样，<code>Bililive-go</code> 也是基于 <code>Go</code> 语言开发的项目，如果你正在学习 <code>Go</code> 语言，可以到这里看看，<span class="exturl" data-url="aHR0cHM6Ly9zaG9ja2VybGkubmV0L3Bvc3QvZ28tYXdlc29tZS8=">https://shockerli.net/post/go-awesome/<i class="fa fa-external-link-alt"></i></span>，作者汇聚了大量 <code>Go</code> 语言开发的优秀资源，涵盖了软件开发的方方面面，非常👍。</p>
<p>根据官方的资料显示，目前 <code>Bililive-go</code> 支持的平台</p>
<table>
<thead>
<tr>
<th>站点</th>
<th>url</th>
<th>支持情况</th>
</tr>
</thead>
<tbody><tr>
<td>哔哩哔哩直播</td>
<td>live.bilibili.com</td>
<td>滋瓷</td>
</tr>
<tr>
<td>熊猫直播</td>
<td><span class="exturl" data-url="aHR0cDovL3d3dy5wYW5kYS50dg==">www.panda.tv<i class="fa fa-external-link-alt"></i></span></td>
<td>滋瓷</td>
</tr>
<tr>
<td>战旗直播</td>
<td><span class="exturl" data-url="aHR0cDovL3d3dy56aGFucWkudHY=">www.zhanqi.tv<i class="fa fa-external-link-alt"></i></span></td>
<td>滋瓷</td>
</tr>
<tr>
<td>斗鱼直播</td>
<td><span class="exturl" data-url="aHR0cDovL3d3dy5kb3V5dS5jb20=">www.douyu.com<i class="fa fa-external-link-alt"></i></span></td>
<td>滋瓷</td>
</tr>
<tr>
<td>火猫直播</td>
<td><span class="exturl" data-url="aHR0cDovL3d3dy5odW9tYW8uY29t">www.huomao.com<i class="fa fa-external-link-alt"></i></span></td>
<td>滋瓷</td>
</tr>
<tr>
<td>龙珠直播</td>
<td>longzhu.com</td>
<td>滋瓷</td>
</tr>
<tr>
<td>虎牙直播</td>
<td><span class="exturl" data-url="aHR0cDovL3d3dy5odXlhLmNvbQ==">www.huya.com<i class="fa fa-external-link-alt"></i></span></td>
<td>滋瓷</td>
</tr>
<tr>
<td>全民直播</td>
<td><span class="exturl" data-url="aHR0cDovL3d3dy5xdWFubWluLnR2">www.quanmin.tv<i class="fa fa-external-link-alt"></i></span></td>
<td>滋瓷</td>
</tr>
<tr>
<td>CC 直播</td>
<td>cc.163.com</td>
<td>滋瓷</td>
</tr>
<tr>
<td>一直播</td>
<td><span class="exturl" data-url="aHR0cDovL3d3dy55aXpoaWJvLmNvbQ==">www.yizhibo.com<i class="fa fa-external-link-alt"></i></span></td>
<td>滋瓷</td>
</tr>
<tr>
<td>twitch</td>
<td><span class="exturl" data-url="aHR0cDovL3d3dy50d2l0Y2gudHY=">www.twitch.tv<i class="fa fa-external-link-alt"></i></span></td>
<td>滋瓷</td>
</tr>
<tr>
<td>OPENREC</td>
<td><span class="exturl" data-url="aHR0cDovL3d3dy5vcGVucmVjLnR2">www.openrec.tv<i class="fa fa-external-link-alt"></i></span></td>
<td>滋瓷</td>
</tr>
</tbody></table>
<p>对直播行业不是太了解，不知道是不是主流的直播平台都覆盖到了？测试的时候才知道 <code>熊猫直播</code> 已经停止运营了</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/01/1601520711839-1601520711841.png" alt="title"></p>
<p>我试了 <code>哔哩哔哩</code> 和 <code>斗鱼</code> ，还是可以正常使用的。话不多说，继续我们今天的环境安装。</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>在 docker 注册表中搜索 <code>bililive</code> ，选择第一个 <code>chigusa/bililive-go</code>，版本 <code>latest</code>。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/01/docker01-1601520267478.png" alt="title"></p>
<h2 id="卷"><a href="#卷" class="headerlink" title="卷"></a>卷</h2><table>
<thead>
<tr>
<th align="center">文件/文件夹</th>
<th align="center">装载路径</th>
</tr>
</thead>
<tbody><tr>
<td align="center">群晖的本地目录</td>
<td align="center">/srv/bililive</td>
</tr>
</tbody></table>
<p>这里我挂载到了 <code>airdisk</code> 用 <code>samba</code> 协议映射到群晖的盘上</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/01/docker02-1601520285720.png" alt="title"></p>
<h2 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h2><p>找个不冲突的端口就可</p>
<table>
<thead>
<tr>
<th align="center">本地端口</th>
<th align="center">容器端口</th>
</tr>
</thead>
<tbody><tr>
<td align="center">4880</td>
<td align="center">8080</td>
</tr>
</tbody></table>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/01/docker03-1601520302918.png" alt="title"></p>
<h1 id="录制"><a href="#录制" class="headerlink" title="录制"></a>录制</h1><h2 id="主界面"><a href="#主界面" class="headerlink" title="主界面"></a>主界面</h2><p>在浏览器中输入 <code>http://群晖IP:4880</code>，就可以看到主界面了</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/01/web01-1601520323760.png" alt="title"></p>
<p><code>系统状态</code>中的信息</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/01/web02-1601520337927.png" alt="title"></p>
<h2 id="录制B站"><a href="#录制B站" class="headerlink" title="录制B站"></a>录制B站</h2><p>在 <code>B站</code> 找到直播的入口 ，随便选了个试试</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/01/bili01-1601520352073.png" alt="title"></p>
<p>选中打开后，复制浏览器地址栏的地址</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/01/1601521670811-1601521670817.png" alt="title"></p>
<p>添加房间，粘贴地址，点 <code>OK</code> 确定</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/01/1601521774163-1601521774164.png" alt="title"></p>
<p>列表中可以看到已经在 <code>录制中</code> 了</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/01/1601521809230-1601521809232.png" alt="title"></p>
<p>在 <code>File Station</code> 中已经能看到录制的文件了，格式是 <code>flv</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/01/1601521892818-1601521892821.png" alt="title"></p>
<p>可以通过点击 <code>停止监控</code> 来停止录像</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/01/bili06-1601520413719.png" alt="title"></p>
<p>确定后，列表中的 <code>运行状态</code> 会改变</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/01/bili07-1601520421414.png" alt="title"></p>
<p>再回到  <code>File Station</code> ，右键直接播放，会显示格式不支持</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/01/bili08-1601520430229.png" alt="title"></p>
<p>用 <code>airdisk</code> 播放试试</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/01/1601522190230-1601522190232.png" alt="title"></p>
<p>即便是远程模式，也很流畅</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/01/1601522288057-1601522288060.png" alt="title"></p>
<p><code>斗鱼</code> 上也是一样的操作</p>
<h1 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h1><p>录制功能很强大，但是这个毕竟不是完整的应用而是个开发的框架，需要根据实际应用进行完善，程序提供了 <code>Http Rest API</code> 接口，所以开发 <code>WEB</code> 应用还是很简单快捷的。</p>
<h2 id="不能删除直播间"><a href="#不能删除直播间" class="headerlink" title="不能删除直播间"></a>不能删除直播间</h2><p>遇到房间不能删除的情况，只能在 <code>终端机</code> 中手动修改 <code>config.yml</code> 文件，配置文件为 <code>/etc/bililive-go/config.yml</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/01/Pasted%20image%2020200930195841-1601520500966.png" alt="title"></p>
<p>把不需要的房间整行删除，重启容器就可以了</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/01/Pasted%20image%2020200930200512-1601520531398.png" alt="title"></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># config.yml 说明</span></span><br><span class="line"><span class="attr">rpc:</span> </span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span>           <span class="comment"># 是否开启API</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8080</span>    <span class="comment"># 监听地址</span></span><br><span class="line">  <span class="attr">token:</span> <span class="string">""</span>               <span class="comment"># token</span></span><br><span class="line">  <span class="attr">tls:</span>                    <span class="comment"># tls配置</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">cert_file:</span> <span class="string">""</span></span><br><span class="line">    <span class="attr">key_file:</span> <span class="string">""</span></span><br><span class="line"><span class="attr">debug:</span> <span class="literal">false</span>              <span class="comment"># debug模式</span></span><br><span class="line"><span class="attr">interval:</span> <span class="number">15</span>              <span class="comment"># 直播间状态查询间隔时间（秒）</span></span><br><span class="line"><span class="attr">out_put_path:</span> <span class="string">./</span>          <span class="comment"># 输出文件路径</span></span><br><span class="line"><span class="attr">live_rooms:</span>               <span class="comment"># 直播间url</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://www.panda.tv/10300</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://live.bilibili.com/1010</span></span><br></pre></td></tr></table></figure>

<h2 id="重启容器后开始录制"><a href="#重启容器后开始录制" class="headerlink" title="重启容器后开始录制"></a>重启容器后开始录制</h2><p>重启容器会导致原来已经停止监控的房间又开始处于 <code>录制中</code> 或 <code>监控中</code>，目前只能手动停止</p>
<h2 id="不支持定时录制"><a href="#不支持定时录制" class="headerlink" title="不支持定时录制"></a>不支持定时录制</h2><p>不支持定时录制，但没有视频流的时候，也就是没直播的时候会显示 <code>监控中</code>，当有视频流的时候才会录制，状态会显示 <code>录制中</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/01/Pasted%20image%2020200930201141-1601520544629.png" alt="title"></p>
<p>如果你正在做录播项目，基于 <code>Bililive-go</code> 可以让你事倍功半。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>GitHub - hr3lxphr6j/bililive-go: 一个直播录制工具<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hyM2x4cGhyNmovYmlsaWxpdmUtZ28=">https://github.com/hr3lxphr6j/bililive-go<i class="fa fa-external-link-alt"></i></span></p>
<p>n1化身全网直播录制工具，妈妈再也不用担心我上网课走神了_软件应用_什么值得买<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2FscHd2d3ZvLw==">https://post.smzdm.com/p/alpwvwvo/<i class="fa fa-external-link-alt"></i></span></p>
<p>bililive-go的使用 - A trivial blog.<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9jYXByaWNjaW8ubW9lL2FyY2hpdmVzLzM0Lw==">https://capriccio.moe/archives/34/<i class="fa fa-external-link-alt"></i></span></p>
<p>BRITE’S BLOG.人生在世，看得穿，又看得远者prevail everywhere.: 用VPS实现一些方便的功能<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9icml0ZW1pbmcuYmxvZ3Nwb3QuY29tLzIwMTkvMTIvdnBzLmh0bWw=">https://briteming.blogspot.com/2019/12/vps.html<i class="fa fa-external-link-alt"></i></span></p>
<p>Go 语言优秀资源整理，为项目落地加速🏃[2020.08.17更新] - 格物<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9zaG9ja2VybGkubmV0L3Bvc3QvZ28tYXdlc29tZS8=">https://shockerli.net/post/go-awesome/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>录播</tag>
      </tags>
  </entry>
  <entry>
    <title>免费跨平台密码管理器KeePass</title>
    <url>/2020/07/11/%E5%85%8D%E8%B4%B9%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86%E5%99%A8KeePass/</url>
    <content><![CDATA[<p><strong>什么是KeePass</strong></p>
<blockquote>
<p>Keepass 是一个免费的开源密码管理器，它可以帮助您安全地管理密码。您可以将所有密码放在一个数据库中，该数据库使用一个主密钥或密钥文件锁定。所以您只需要记住一个主密码或者选择密钥文件就可以解锁整个数据库。数据库使用目前已知的最佳和最安全的加密算法（aes和twofish）进行加密。 </p>
</blockquote>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>当今的时代您需要记住许多各种密码。例如：办公室电脑密码、笔记本密码、家里电脑密码、上网帐号密码、手机服务密码、邮箱密码、QQ 密码、银行卡查询密码、银行卡交易密码、银行卡网上支付密码……现在的我们需要记太多太多的密码。纵然我们可以使一些密码一致，但无法让所有的密码都一样，因为如果你在任何地方使用了密码，而有人得到了这个密码，你就有问题了…一个严重的问题。窃贼可以访问你的电子邮件帐户、网站等等，你的所有与之相关的文件和数据都有可能遭到泄露。</p>
<p>可以在这个网站 <span class="exturl" data-url="aHR0cHM6Ly93d3cuYXN0cmlsbC5jb20vemgvcGFzc3dvcmQtbGVhay10ZXN0">https://www.astrill.com/zh/password-leak-test<i class="fa fa-external-link-alt"></i></span> 检查您的密码是否曾经在网络上泄露。</p>
<p>如果是这样的，那恭喜你了。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/11/1594466237094-1594466237101.png" alt="title"></p>
<p>如果是这样，赶紧换密码吧。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/11/1594466275274-1594466275276.png" alt="title"></p>
<p>最好的保护是在每个网站上使用独特的密码，不要重复使用旧密码，但这样太考验我们的记忆力了，所以这个时候就需要用KeePass了。</p>
<h1 id="Windows平台"><a href="#Windows平台" class="headerlink" title="Windows平台"></a>Windows平台</h1><p>我直接下载的便携版，只要解压到指定的目录就可以了</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/11/1594467672098-1594467672102.png" alt="title"></p>
<h2 id="设置中文"><a href="#设置中文" class="headerlink" title="设置中文"></a>设置中文</h2><p>在这个页面 <span class="exturl" data-url="aHR0cHM6Ly93d3cua2VlcGFzcy5jb20uY24vbGFuZ3VhZ2Uv">https://www.keepass.com.cn/language/<i class="fa fa-external-link-alt"></i></span> 下载简体中文语言包</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/11/1594468371330-1594468371332.png" alt="title"></p>
<p>在 keepass 的安装目录中有个 languages 文件夹，将解包的文件移到 languages 文件夹中，启动 keepass ，选择中文，按提示重启 keepass 即可。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/11/1594468844471-1594468844473.png" alt="title"></p>
<h2 id="OneDrive同步插件"><a href="#OneDrive同步插件" class="headerlink" title="OneDrive同步插件"></a>OneDrive同步插件</h2><ul>
<li>1、在 keepaass 主界面中点击【工具】→【插件管理器】→【打开文件夹】；</li>
<li>2、将下载的后缀为 <code>.plgx</code> 的文件复制并粘贴到步骤 1 打开的的文件夹中（zip 包请先解压）；</li>
<li>3、关闭然后重新打开 keepass。</li>
</ul>
<p>选择了用 OneDrive 来做不同平台的数据同步，所以需要安装 <code>KeePassOneDriveSync</code> 插件</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/11/1594469168280-1594469168283.png" alt="title"></p>
<p>同步</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/11/1594468118484-1594468118487.png" alt="title"></p>
<h1 id="Mac-OS平台"><a href="#Mac-OS平台" class="headerlink" title="Mac OS平台"></a>Mac OS平台</h1><h2 id="MacPass"><a href="#MacPass" class="headerlink" title="MacPass"></a>MacPass</h2><p>这货只支持本地数据库，所以如果想要实现数据库同步，还需要借助其他软件的配合，比如 ‎OneDrive、CloudMounter、ExpanDrive 等网盘软件。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/11/1594482310581-1594482310583.png" alt="title"></p>
<p>登录后的主界面</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/11/1594483016293-1594483016296.png" alt="title"></p>
<h2 id="KeeWeb"><a href="#KeeWeb" class="headerlink" title="KeeWeb"></a>KeeWeb</h2><p>其实 KeeWeb 不仅仅只支持 Mac，还有 Windows、Linux 客户端，另外还有在线网页版，是真正跨平台软件。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/12/1594486008554-1594486008557.png" alt="title"></p>
<p>支持多种同步方式</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/12/1594485964165-1594485964192.png" alt="title"></p>
<p>主界面</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/12/1594486348161-1594486348162.png" alt="title"></p>
<h1 id="Chrome-插件"><a href="#Chrome-插件" class="headerlink" title="Chrome 插件"></a>Chrome 插件</h1><p>有两个选择，看个人喜好。</p>
<h2 id="keepass-tusk"><a href="#keepass-tusk" class="headerlink" title="keepass tusk"></a>keepass tusk</h2><p>在chrome 网上应用店中搜索 <code>keepass tusk</code>，并安装</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/11/1594470450750-1594470450752.png" alt="title"></p>
<p>数据库选择 OneDrive</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/11/1594470582480-1594470582482.png" alt="title"></p>
<h2 id="KeePassHttp-Connector"><a href="#KeePassHttp-Connector" class="headerlink" title="KeePassHttp-Connector"></a>KeePassHttp-Connector</h2><p>第一步、Windows平台需要先在 keepass 中安装 <code>KeePassHttp</code> 插件；</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/12/1594525037606-1594525037690.png" alt="title"></p>
<p>Mac平台 MacPass 需要下载 <code>MacPassHTTP</code> 插件</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/11/1594482694115-1594482694118.png" alt="title"></p>
<p>第二步、在chrome 网上应用店中搜索 <code>KeePassHttp</code>，并安装</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/11/1594471668031-1594471668035.png" alt="title"></p>
<p>KeePassHttp-Connector 本身并不存储任何记录，所以当你在 chrome 浏览器中打开一个网页时，它就会询问 KeePassHttp（MacPassHTTP）你的数据库中有没有关于这个网址的记录；如果有 KeePassHttp（MacPassHTTP）会弹出一个对话框，点击【Allow】它就会将记录以 AES 256 算法加密然后通过 http 协议发送给 KeePassHttp-Connector 从而实现网页自动填充。</p>
<h1 id="Android平台"><a href="#Android平台" class="headerlink" title="Android平台"></a>Android平台</h1><p>KeePass2Android 支持很多种同步盘数据库调用方式，所以当然选 KeePass2Android 了。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/11/1594473620781-1594473620783.png" alt="title"></p>
<p>刚安装完第一次运行的初始界面</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/11/1594473853512-1594473853514.png" alt="title"></p>
<p>选择【打开文件】</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/11/1594477304409-1594477304412.png" alt="title"></p>
<p>Keepass2Android 的便捷性也还挺不错，比如刚锁定数据库，短时间内解锁，会只要求输入密码后3位，还支持指纹解锁。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>官网中文主页<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cua2VlcGFzcy5jb20uY24v">https://www.keepass.com.cn/<i class="fa fa-external-link-alt"></i></span></p>
<p>密码管理软件KeePass教程 篇一：Windows端的配置和使用教程（上）<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2EyNWdkOWxwLw==">https://post.smzdm.com/p/a25gd9lp/<i class="fa fa-external-link-alt"></i></span></p>
<p>密码管理软件KeePass教程 篇二：Windows端的配置和使用教程（下）<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2Fxbmwyb3FwLw==">https://post.smzdm.com/p/aqnl2oqp/<i class="fa fa-external-link-alt"></i></span></p>
<p>免费跨平台密码管理器KeePass使用及云同步教程<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cucnVhbmppYW56aGFpLmNvbS9rZWVwYXNzLXR1dG9yaWFsLmh0bWw=">https://www.ruanjianzhai.com/keepass-tutorial.html<i class="fa fa-external-link-alt"></i></span></p>
<p>(十五)小众但好用：安卓版Keepass使用教程<br>地址：<span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80NzYxNDg4Mg==">https://zhuanlan.zhihu.com/p/47614882<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>KeePass</tag>
        <tag>密码</tag>
        <tag>MacPass</tag>
        <tag>KeePass2Android</tag>
        <tag>OneDrive</tag>
      </tags>
  </entry>
  <entry>
    <title>国庆在家玩直播</title>
    <url>/2020/10/03/%E5%9B%BD%E5%BA%86%E5%9C%A8%E5%AE%B6%E7%8E%A9%E7%9B%B4%E6%92%AD/</url>
    <content><![CDATA[<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>推流工具：OBS（Open Broadcaster Software），软件下载地址：<span class="exturl" data-url="aHR0cHM6Ly9vYnNwcm9qZWN0LmNvbS9kb3dubG9hZA==">https://obsproject.com/download<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/29/obs00-1601387112184.png" alt="title"></p>
<p>播放工具：<br>PotPlayer（windows），下载地址：<span class="exturl" data-url="aHR0cHM6Ly9kYXVtcG90cGxheWVyLmNvbS9kb3dubG9hZC8=">https://daumpotplayer.com/download/<i class="fa fa-external-link-alt"></i></span></p>
<p>IINA（macOS），下载地址：<span class="exturl" data-url="aHR0cHM6Ly9paW5hLmlvL2Rvd25sb2FkLw==">https://iina.io/download/<i class="fa fa-external-link-alt"></i></span> </p>
<p>VLC（跨平台），下载地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cudmlkZW9sYW4ub3JnL3ZsYy8=">https://www.videolan.org/vlc/<i class="fa fa-external-link-alt"></i></span></p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>在 docker 注册表中搜索 <code>livego</code> ，选择第二个 <code>gwuhaolin/livego</code>，应该就只有一个版本，所以双击直接下载。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/29/docker01-1601387155710.png" alt="title"></p>
<h2 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h2><table>
<thead>
<tr>
<th align="center">本地端口</th>
<th align="center">容器端口</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1935</td>
<td align="center">1935</td>
<td align="center">RTMP协议，用于主播推流</td>
</tr>
<tr>
<td align="center">7001</td>
<td align="center">7001</td>
<td align="center">HTTP-FLV协议，用于播放</td>
</tr>
<tr>
<td align="center">7002</td>
<td align="center">7002</td>
<td align="center">HLS协议 ，用于播放</td>
</tr>
<tr>
<td align="center">8090</td>
<td align="center">8090</td>
<td align="center">HTTP-API</td>
</tr>
</tbody></table>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/29/docker02-1601387181377.png" alt="title"></p>
<h1 id="直播"><a href="#直播" class="headerlink" title="直播"></a>直播</h1><h2 id="PotPlayer设置"><a href="#PotPlayer设置" class="headerlink" title="PotPlayer设置"></a>PotPlayer设置</h2><p>用 <code>PotPlayer</code> 播放《007：女王密使》作为 <code>OBS</code> 的视频源，因为后面还要用 <code>PotPlayer</code> 来播放，所以一定要修改 <code>多重处理方式</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/29/obs01-1601387203550.png" alt="title"></p>
<h2 id="OBS的设置"><a href="#OBS的设置" class="headerlink" title="OBS的设置"></a>OBS的设置</h2><p>在 <code>OBS</code> –&gt; <code>来源</code> –&gt; <code>窗口捕捉</code> 设置捕捉画面</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/29/obs02-1601387217094.png" alt="title"></p>
<p>当然也也可以选择摄像头（视频捕获设备）或者本地媒体文件</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/29/obs03-1601387234911.png" alt="title"></p>
<p>当然如果你愿意，你也可以叠加显示</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/29/obs04-1601387244297.png" alt="title"></p>
<h2 id="用OBS推流"><a href="#用OBS推流" class="headerlink" title="用OBS推流"></a>用OBS推流</h2><p>第一步、在浏览器中输入 <code>http://群晖IP:8090/control/get?room=movie</code>， 获取一个房间的 <code>channelkey</code> 用于推流。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/29/tl01-1601387257535.png" alt="title"></p>
<p>第二步、使用OBS来推流。</p>
<p>按官网的介绍，通过 <code>RTMP</code> 协议推送视频流的地址是： <code>rtmp://server ip:1935/{appname}/{channelkey}</code>，<br>其中 <code>appname</code> 默认是 <code>live</code>，所以在 <code>OBS</code> 的推流设置中的 <code>服务器</code> 地址填 <code>rtmp://群晖IP:1935/live</code>，<code>串流秘钥</code> 填第一步获取到的 <code>channelkey</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/29/tl02-1601387279512.png" alt="title"></p>
<h2 id="用客户端播放"><a href="#用客户端播放" class="headerlink" title="用客户端播放"></a>用客户端播放</h2><p>第三步、播放，其中 <code>RTMP</code> 的播放地址如下: <code>rtmp://server ip:1935/{appname}/movie</code>，所以我们在 <code>PotPlayer</code> 中 <code>打开链接</code> 中输入 <code>rtmp://群晖IP:1935/live/movie</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/29/tl03-1601387293549.png" alt="title"></p>
<p>如果没什么意外，你应该能看到直播画面了。左边是 <code>OBS</code> 推流的界面，右边是 <code>PotPlayer</code> 播放的界面。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/29/tl04-1601387304747.png" alt="title"></p>
<p>如果是在 <code>macOS</code> 上播放，可以用 <code>IINA</code>，我尝试着用远程推流和远程播放，受限于带宽和无 <code>CDN</code> 支持，常常会需要缓冲，不过这一切都在情理之中。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/29/tl05-1601387350427.png" alt="title"></p>
<p>所以如果要投入实用，当然还是要用大厂的云服务才行。</p>
<h2 id="用网页播放"><a href="#用网页播放" class="headerlink" title="用网页播放"></a>用网页播放</h2><p>除了播放器外，我们还可以用网页播放，因为 <code>LiveGo</code> 除了 <code>RTMP</code> 外还支持 <code>HTTP-FLV</code> 和 <code>HLS</code> 播放协议。</p>
<p>我把网页播放器打包到了<code>webplayer.zip</code> 中，<code>webplayer.zip</code> 下载地址：</p>
<p><a href="https://laosu.ml/uploads/webplayer.zip">https://laosu.ml/uploads/webplayer.zip</a></p>
<p>或者 </p>
<p>百度分享链接: <span class="exturl" data-url="aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMVNVVHVXZnBRVG00OGd6ajBJOXpzTFE=">https://pan.baidu.com/s/1SUTuWfpQTm48gzj0I9zsLQ<i class="fa fa-external-link-alt"></i></span> 提取码: xbj1</p>
<p><code>webplayer.zip</code> 里有三个文件，源代码来源自『<span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9kOWM2NmQ3ZDE2NTM=">使用flv.js与video.js实现播放视频直播(简教程)<i class="fa fa-external-link-alt"></i></span>』，对作者表示感谢！</p>
<p>其中 <code>flv.htm</code> 引用了 <code>flv.js</code> 库，而 <code>hls.htm</code> 则引用了 <code>video.js</code> 库，这两个库都是开源的，有兴趣的可以自己研究。</p>
<h3 id="FLV协议"><a href="#FLV协议" class="headerlink" title="FLV协议"></a>FLV协议</h3><p>用记事本打开 <code>flv.htm</code>，找到下图中的部分</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/29/htm01-1601387468589.png" alt="title"></p>
<p> <code>LiveGo</code> 采用 <code>HTTP-FLV</code> 协议的播放地址为： <code>http://127.0.0.1:7001/{appname}/movie.flv</code>，所以根据 <code>OSB</code> 推流的地址，这里要修改为 <code>http://群晖IP:7001/live/movie.flv</code>，保存文件后，双击 <code>flv.htm</code> 文件，用默认浏览器打开，点播放按钮，如果没意外的话，图像就应该出来了</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/29/web01-1601387451525.png" alt="title"></p>
<blockquote>
<p>这个地址输入到 <code>PotPlayer</code> 中，也是可以播放的</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/29/potplayer01-1601387572071.png" alt="title"></p>
<p>如果 <code>OBS</code> 没有推流，<code>flv.htm</code> 中会一直转圈</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/29/web03-1601387594589.png" alt="title"></p>
<h3 id="HLS协议"><a href="#HLS协议" class="headerlink" title="HLS协议"></a>HLS协议</h3><p>同样的，用记事本打开 <code>hls.htm</code>，找到下图中的部分</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/29/htm02-1601387614142.png" alt="title"></p>
<p> <code>LiveGo</code> 采用 <code>HLS</code> 协议的播放地址为： <code>http://127.0.0.1:7002/{appname}/movie.m3u8</code>，所以根据 <code>OSB</code> 的推流地址，这里要修改为 <code>http://群晖IP:7002/live/movie.m3u8</code>，保存文件后，双击 <code>hls.htm</code> 文件，用默认浏览器打开，点播放按钮，如果没意外的话，图像也应该会出来</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/29/web02-1601387682271.png" alt="title"></p>
<blockquote>
<p>这个地址输入到 <code>PotPlayer</code> 中，同样也是可以播放的</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/29/potplayer02-1601387707104.png" alt="title"></p>
<p>如果 <code>OBS</code> 还没开始推流，<code>hls.htm</code> 会直接报错</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/29/web04-1601387724308.png" alt="title"></p>
<h1 id="空间占用"><a href="#空间占用" class="headerlink" title="空间占用"></a>空间占用</h1><p>直播会在 <code>docker</code> 容器中生成临时文件，占用大量的空间，这个需要定期进行清理，不然很容易爆了，因为我存放 <code>docker</code> 的系统盘比较小</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/03/1601709501032-1601709501033.png" alt="title"></p>
<p>每次推流都会产生一个 <code>flv</code> 文件，文件的大小取决于直播的时间。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/10/03/1601709605283-1601709605284.png" alt="title"></p>
<h1 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h1><p>直播的用途很多，直播讲课，直播带货等等，用在家里的话，可以试试直播监控摄像头。</p>
<h2 id="RTMP协议"><a href="#RTMP协议" class="headerlink" title="RTMP协议"></a>RTMP协议</h2><p>对于支持 <code>rtmp</code> 协议的摄像头比较好办，可以像 <code>OBS</code> 一样直接推流到 <code>LiveGo</code> 服务。</p>
<h2 id="mjpeg协议"><a href="#mjpeg协议" class="headerlink" title="mjpeg协议"></a>mjpeg协议</h2><p>对于支持 <code>mjpeg</code> 协议的摄像头，需要用 <code>OBS</code> 来推流。在 <code>OBS</code> 的 <code>来源</code> 中新建 <code>浏览器</code>，在 <code>浏览器</code> 属性中的 <code>URL</code> 中输入摄像机的 <code>mjpeg url</code> 访问地址 </p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/29/1601389289912-1601389289914.png" alt="title"></p>
<h2 id="RTSP协议"><a href="#RTSP协议" class="headerlink" title="RTSP协议"></a>RTSP协议</h2><p><code>OBS</code> 本身并不支持 <code>RTSP</code> 协议，所以还需要 <code>VLC</code> 或者 <code>PotPlayer</code> 来做中转。</p>
<p>首先在 <code>PotPlayer</code> 中打开 <code>rtsp</code> 地址</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/29/1601390266564-1601390266566.png" alt="title"></p>
<p>然后在 <code>OBS</code> 的 <code>来源</code> 中新建 <code>窗口捕获</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/29/1601390994870-1601390994873.png" alt="title"></p>
<p>当然你熟悉 <code>ffmpeg</code> 的话，也可以用 <code>ffmpeg</code> 将 <code>rtsp</code> 流转为 <code>rtmp</code> 流并推给 <code>LiveGo</code> 服务器，只是我还没试过。</p>
<p>我承认这个过程确实有点折腾，但也挺好玩的不是么？</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>livego/README_cn.md at master · gwuhaolin/livego · GitHub<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2d3dWhhb2xpbi9saXZlZ28vYmxvYi9tYXN0ZXIvUkVBRE1FX2NuLm1k">https://github.com/gwuhaolin/livego/blob/master/README_cn.md<i class="fa fa-external-link-alt"></i></span></p>
<p>livego介绍以及最全使用方法介绍 | 码农家园<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuY29kZW5vbmcuY29tL2NzMTA2NjgzMTg0Lw==">https://www.codenong.com/cs106683184/<i class="fa fa-external-link-alt"></i></span></p>
<p>使用flv.js做直播 · Issue #3 · gwuhaolin/blog · GitHub<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2d3dWhhb2xpbi9ibG9nL2lzc3Vlcy8z">https://github.com/gwuhaolin/blog/issues/3<i class="fa fa-external-link-alt"></i></span></p>
<p>使用flv.js做直播 - 浩麟的博客<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93dWhhb2xpbi5jbi8yMDE3LzA1LzE3LyVFNCVCRCVCRiVFNyU5NCVBOGZsdi5qcyVFNSU4MSU5QSVFNyU5QiVCNCVFNiU5MiVBRC8=">https://wuhaolin.cn/2017/05/17/%E4%BD%BF%E7%94%A8flv.js%E5%81%9A%E7%9B%B4%E6%92%AD/<i class="fa fa-external-link-alt"></i></span></p>
<p>使用flv.js与video.js实现播放视频直播(简教程) - 简书<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9kOWM2NmQ3ZDE2NTM=">https://www.jianshu.com/p/d9c66d7d1653<i class="fa fa-external-link-alt"></i></span></p>
<p>livego+obs+flv.js 搭建视频直播 - sentangle - 博客园<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vc2VudGFuZ2xlL3AvMTIyMzg4MzYuaHRtbA==">https://www.cnblogs.com/sentangle/p/12238836.html<i class="fa fa-external-link-alt"></i></span></p>
<p>flv + livego + obs 实现简易直播平台(windows版+Linux版)_qq_38556217的博客-CSDN博客<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4NTU2MjE3L2FydGljbGUvZGV0YWlscy8xMDQ2MjI4NzU=">https://blog.csdn.net/qq_38556217/article/details/104622875<i class="fa fa-external-link-alt"></i></span></p>
<p>rtsp视频流转rtmp在网页上直播_banjing_1993的博客-CSDN博客<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2JhbmppbmdfMTk5My9hcnRpY2xlL2RldGFpbHMvMTA1MjIxNTA2">https://blog.csdn.net/banjing_1993/article/details/105221506<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>RTMP</tag>
        <tag>推流</tag>
        <tag>直播</tag>
        <tag>HLS</tag>
        <tag>HTTP-FLV</tag>
        <tag>mjpeg</tag>
        <tag>RTSP</tag>
      </tags>
  </entry>
  <entry>
    <title>全面升级frp</title>
    <url>/2020/05/26/%E5%85%A8%E9%9D%A2%E5%8D%87%E7%BA%A7frp/</url>
    <content><![CDATA[<blockquote>
<p>题图来自：<span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xMTM2NzI2NTI=">https://zhuanlan.zhihu.com/p/113672652<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><strong>什么是 frp</strong></p>
<blockquote>
<p>frp 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp 协议，为 http 和 https 应用协议提供了额外的能力，且尝试性支持了点对点穿透。【官网中文说明：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2ZhdGVkaWVyL2ZycC9ibG9iL21hc3Rlci9SRUFETUVfemgubWQ=">https://github.com/fatedier/frp/blob/master/README_zh.md<i class="fa fa-external-link-alt"></i></span>】</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/26/1590492748211-1590492748244.png" alt="title"><br>（图片来自官网）</p>
<p>这张架构图清晰的显示了 frp 的工作原理，外网的用户 User 通过域名访问到内网提供 tcp 或者 http 服务的设备。</p>
<ul>
<li><strong>frps</strong> 是具有公网 IP 地址的frp服务器，一般我们都是购买 VPS ；</li>
<li><strong>tcp or http service</strong> 是指内网提供 http 或者 tcp 服务的设备，可以是群晖，也可以是安装了各种服务的Windows、Linux主机，像我们之前介绍过的多媒体服务 jellyfin、图书库 Calibre-Web 等等都是跨平台、能够对外提供 http服务的软件；</li>
<li><strong>frpc</strong> 是指 frp 客户端，可以安装在 windows电脑上，也可以安装在群晖，甚至是路由器上，建议安装的一直开机的设备上，这样能保证随时都可以访问内网；当然作为7*24小时开始的设备，要考虑功耗、噪音等等问题。</li>
</ul>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>升级前一直用 0.20 版本，也一直蛮稳定的，之所以要升级是因为 0.20 之后的版本带来了一些新的特性，比如：0.25 版本之后 frpc 和 frps 之间支持通过 TLS 协议加密传输，安全性会更高一些；还有诸如服务器插件等等；当然最重要的原因还是喜欢折腾。</p>
<h1 id="VPS-上卸载-0-20-版"><a href="#VPS-上卸载-0-20-版" class="headerlink" title="VPS 上卸载 0.20 版"></a>VPS 上卸载 0.20 版</h1><p>0.20 版本是用的《<span class="exturl" data-url="aHR0cHM6Ly9rb29sc2hhcmUuY24vdGhyZWFkLTY1Mzc5LTEtMS5odG1s">内网穿透利器Frp一键安装脚本及设置教程<i class="fa fa-external-link-alt"></i></span>》里的脚本安装的</p>
<p>首先我们在VPS服务器上看看是否有更新</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">./install-frps.sh update</span><br></pre></td></tr></table></figure>

<p>发现依然还是 0.20，说明这个脚本的作者已经弃坑了，只能卸载了</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">./install-frps.sh uninstall</span><br></pre></td></tr></table></figure>

<p>整个过程非常简单，所以就不上图了。</p>
<h1 id="停用路由器上的-0-20-版-frpc"><a href="#停用路由器上的-0-20-版-frpc" class="headerlink" title="停用路由器上的 0.20 版 frpc"></a>停用路由器上的 0.20 版 frpc</h1><p>frpc 客户端当时是安装在netgear的R6300v2，刷了梅林固件，从软件中心进去已安装中可以找到 frpc 穿透</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/26/1590499866859-1590499866861.png" alt="title"></p>
<p>先停用</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/26/1590499976846-1590499976847.png" alt="title"></p>
<p>鼠标移上去会显示卸载</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/26/1590499930762-1590499930763.png" alt="title"></p>
<h1 id="VPS上安装-0-33-版-frps"><a href="#VPS上安装-0-33-版-frps" class="headerlink" title="VPS上安装 0.33 版 frps"></a>VPS上安装 0.33 版 frps</h1><p>我们在万能的 github 上找到了另一个提供一键安装脚本的大神，安装脚本已支持跟随到最新的服务版本，这正是我们需要的。</p>
<p>在VPS上依次执行：</p>
<ul>
<li><p>下载 sh 脚本</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/MvsCode/frps-onekey/master/install-frps.sh -O ./install-frps.sh</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改权限</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">chmod 700 ./install-frps.sh</span><br></pre></td></tr></table></figure>
</li>
<li><p>执行脚本安装 frps</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">./install-frps.sh install</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p><strong>除了密码外，一路无脑回车</strong>，所以也不上过程图了。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/26/1590496171230-1590496171231.png" alt="title"></p>
<h1 id="群晖上安装-0-33-版-frpc"><a href="#群晖上安装-0-33-版-frpc" class="headerlink" title="群晖上安装 0.33 版 frpc"></a>群晖上安装 0.33 版 frpc</h1><h2 id="版本选择"><a href="#版本选择" class="headerlink" title="版本选择"></a>版本选择</h2><p>还是继续用 docker 镜像的方式安装，在注册表中搜索 frpc，排在第一的 <code>oldiy/frpc</code>,因为之前我们我们用的就是它，但是它的最新版本只到 0.26</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/26/1590496890276-1590496890279.png" alt="title"></p>
<p>所以这次我们选了红框中的 <code>stilleshan/frpc</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/26/1590496869650-1590496869651.png" alt="title"></p>
<p>因为这个版本的镜像支持 0.33 版本</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/26/1590497020692-1590497020693.png" alt="title"></p>
<h2 id="安装设置"><a href="#安装设置" class="headerlink" title="安装设置"></a>安装设置</h2><h3 id="创建容器"><a href="#创建容器" class="headerlink" title="创建容器"></a>创建容器</h3><p>还是用的默认名称</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/26/1590497170077-1590497170078.png" alt="title"></p>
<h3 id="高级设置"><a href="#高级设置" class="headerlink" title="高级设置"></a>高级设置</h3><ul>
<li>勾选启用自动重新启动</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/26/1590497354380-1590497354382.png" alt="title"></p>
<ul>
<li>卷</li>
</ul>
<p>添加文件，根据你存放的 frpc.ini 添加，后面的装载路径必须是 <code>/frp/frpc.ini</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/26/1590497660747-1590497660748.png" alt="title"></p>
<p>下面是镜像的作者提供的frpc.ini格式内容参考，请根据自己的实际进行修改。</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = free.frp.ioiox.com</span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7007</span></span><br><span class="line"><span class="attr">token</span> = www.ioiox.com</span><br><span class="line"></span><br><span class="line"><span class="section">[web1]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">192.168</span>.<span class="number">1.2</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">5000</span></span><br><span class="line"><span class="attr">custom_domains</span> = yourdomain.com</span><br><span class="line"></span><br><span class="line"><span class="section">[web2]</span></span><br><span class="line"><span class="attr">type</span> = https</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">192.168</span>.<span class="number">1.2</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">5001</span></span><br><span class="line"><span class="attr">custom_domains</span> = yourdomain.com</span><br><span class="line"></span><br><span class="line"><span class="section">[tcp1]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">192.168</span>.<span class="number">1.2</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">22</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">22222</span></span><br><span class="line"><span class="attr">custom_domains</span> = yourdomain.com</span><br></pre></td></tr></table></figure>

<ul>
<li>网络</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/26/1590498683867-1590498683868.png" alt="title"></p>
<ul>
<li>端口</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/26/1590498725028-1590498725029.png" alt="title"></p>
<ul>
<li>链接</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/26/1590498781478-1590498781479.png" alt="title"></p>
<ul>
<li>环境</li>
</ul>
<p>可以添加个时区，左边<code>可变</code>输入 TZ ，右边<code>值</code> 输入 Asia/Shanghai，不加也不影响使用。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/26/1590498838936-1590498838937.png" alt="title"></p>
<p>稍等一会儿就可以访问了。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>frp官网<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2ZhdGVkaWVyL2ZycA==">https://github.com/fatedier/frp<i class="fa fa-external-link-alt"></i></span></p>
<p>内网穿透利器Frp一键安装脚本及设置教程<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9rb29sc2hhcmUuY24vdGhyZWFkLTY1Mzc5LTEtMS5odG1s">https://koolshare.cn/thread-65379-1-1.html<i class="fa fa-external-link-alt"></i></span></p>
<p>Frps服务端一键配置脚本，Frp最新版本：0.33.0<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL012c0NvZGUvZnJwcy1vbmVrZXk=">https://github.com/MvsCode/frps-onekey<i class="fa fa-external-link-alt"></i></span></p>
<p>stilleshan/frpc项目<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3N0aWxsZXNoYW4vZnJwYw==">https://github.com/stilleshan/frpc<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>docker</tag>
        <tag>frp</tag>
        <tag>VPS</tag>
      </tags>
  </entry>
  <entry>
    <title>在GitHub上搭建Blog</title>
    <url>/2020/04/29/%E5%9C%A8GitHub%E4%B8%8A%E6%90%AD%E5%BB%BABlog/</url>
    <content><![CDATA[<p><strong>什么是Hexo</strong></p>
<blockquote>
<p>Hexo是一款基于Node.js的静态博客框架，依赖少、易于安装使用，使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。可以方便的托管在GitHub和Heroku上，是搭建博客的首选框架。</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/29/WechatIMG4019-1588127705678.png" alt="title"></p>
<p>之前我们聊过GitNote的简单使用记录，一款使用Git仓库来保存数据的笔记软件。</p>
<p>但笔记并不都适宜公开，像我的笔记中还有很多跟工作相关的内容，比如待办事项等，所以我们在创建笔记仓库时，建议选择的是Private属性。如果我们有想要公开分享的内容时怎么办呢？这就要用到我们今天介绍的Hexo。</p>
<p>具体的安装步骤，仔细阅读参考文档即可。</p>
<p>这里给大家看看效果：<span class="exturl" data-url="aHR0cHM6Ly93YnN1MjAwMy5naXRodWIuaW8v">https://wbsu2003.github.io/<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>介绍下一篇文章的发布流程：</strong></p>
<ol>
<li><strong>编辑</strong><blockquote>
<p>在GitNote中编写Markdown笔记（图床建议使用GitHub）；</p>
</blockquote>
</li>
<li><strong>拷贝</strong><blockquote>
<p>将MD文档，复制到blog\source_poster\目录下；</p>
</blockquote>
</li>
<li><strong>预览</strong><blockquote>
<p>在blog目录中，cmd模式下依次运行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/29/WechatIMG4022-1588129251266.png" alt="title"></p>
</blockquote>
</li>
</ol>
<blockquote>
<p>在浏览器中打开网址：<span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDo0MDAw5Y2z5Y+v55yL5Yiw6aKE6KeI5pWI5p6c">http://localhost:4000即可看到预览效果<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<ol start="4">
<li><strong>发布到Hexo</strong><blockquote>
<p>在blog目录中，cmd模式下运行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure>
<p>然后在浏览器中打开网址：https://用户名.github.io</p>
</blockquote>
</li>
</ol>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/29/WechatIMG4023-1588130305246.png" alt="title"></p>
<ol start="5">
<li><strong>发布到微信公众号</strong><blockquote>
<p>微信公众号并不支持MD，所以我们只能复制右侧的预览界面</p>
</blockquote>
</li>
</ol>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/29/Jietu20200429-112742-1588130920726.jpg" alt="title"></p>
<blockquote>
<p>微信公众号不支持第三方图床，直接粘贴过来会显示图片错误，所以需要重新上传图片</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/29/Jietu20200429-113036-1588131074459.jpg" alt="title"></p>
<blockquote>
<p>稍微再调整下字体、格式等等就可以发布了。</p>
</blockquote>
<p><strong>参考文档</strong></p>
<blockquote>
<p>官方文档<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3Mv">https://hexo.io/zh-cn/docs/<i class="fa fa-external-link-alt"></i></span></p>
<p>GitHub+Hexo 搭建个人网站详细教程<br>地址：<span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8yNjYyNTI0OQ==">https://zhuanlan.zhihu.com/p/26625249<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
        <tag>GitHub</tag>
        <tag>GitNote</tag>
        <tag>Hexo</tag>
        <tag>Blog</tag>
        <tag>微信公众号</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>利用Cloudreve搭建自用网盘</title>
    <url>/2020/07/30/%E5%88%A9%E7%94%A8Cloudreve%E6%90%AD%E5%BB%BA%E8%87%AA%E7%94%A8%E7%BD%91%E7%9B%98/</url>
    <content><![CDATA[<p><strong>什么是Cloudreve?</strong></p>
<blockquote>
<p>Cloudreve 可以让您快速搭建起公私兼备的网盘系统。Cloudreve 在底层支持不同的云存储平台，用户在实际使用时无须关心物理存储方式。你可以使用 Cloudreve 搭建个人用网盘、文件分享系统，亦或是针对大小团体的公有云系统，早期的Cloudreve 是用 PHP 开发的，但是 v3 用 go 进行了重构。</p>
</blockquote>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>依然是在群晖中打开 Docker，在注册表中搜索 <code>cloudreve</code> ，选择 <code>xavierniu/cloudreve</code>，版本选择 <code>latest</code>，这个版本是基于最新的Cloudreve V3制作的。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/26/1595765817375-1595765817407.png" alt="title"></p>
<p>SSH登录到群晖，假设 docker 建在 volume1 上；</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建目录和文件</span></span><br><span class="line">mkdir -p /volume1/docker/cloudreve \</span><br><span class="line">    &amp;&amp; touch /volume1/docker/cloudreve/conf.ini \</span><br><span class="line">    &amp;&amp; touch /volume1/docker/cloudreve/cloudreve.db</span><br></pre></td></tr></table></figure>

<p>会在 <code>docker</code> 目录中创建 <code>cloudreve</code> 目录，并在<code>cloudreve</code> 目录生成了2个空的文件。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/28/1595943586919-1595943586920.png" alt="title"></p>
<h2 id="卷"><a href="#卷" class="headerlink" title="卷"></a>卷</h2><p>第一行为添加文件：<code>&lt;PATH TO cloudreve.db&gt;</code> –&gt; 数据库文件<br>第二行为添加文件：<code>&lt;PATH TO conf.ini&gt;</code> –&gt; 配置文件<br>第三行是添加文件夹：<code>&lt;PATH TO UPLOADS&gt;</code> –&gt; 上传目录</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/28/1595944104745-1595944104749.png" alt="title"></p>
<h2 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h2><p>默认端口为5212 </p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/28/1595944318942-1595944318944.png" alt="title"></p>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>其他默认的就可以，PUID和PGID需要在SSH登录后，运行</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 假设当前登陆用户为root</span></span><br><span class="line">id root</span><br></pre></td></tr></table></figure>

<p>会得到类似于下面的一段代码</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">uid=1000(root) gid=1000(root)</span><br></pre></td></tr></table></figure>

<p>则PUID填入1000，PGID填入1000</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/28/1595944434472-1595944434474.png" alt="title"></p>
<h2 id="高级设置"><a href="#高级设置" class="headerlink" title="高级设置"></a>高级设置</h2><p>勾选启用自动重新启动</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/28/1595944497978-1595944497981.png" alt="title"></p>
<h1 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h1><p>很多功能需要 https 才能使用，比如存储策略。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/28/1595949969285-1595949969288.png" alt="title"></p>
<h2 id="反向代理设置"><a href="#反向代理设置" class="headerlink" title="反向代理设置"></a>反向代理设置</h2><p>进入群晖的 “控制面板” –&gt; “Synology 应用程序门户” –&gt; “反向代理服务器” 页面 (找不到的话请点击高级模式) ，如图添加一条 “反向代理服务器规则”。（“来源端口” 你自己定义，“目的地端口” ）</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/28/1595950375295-1595950375298.png" alt="title"></p>
<h2 id="上传证书"><a href="#上传证书" class="headerlink" title="上传证书"></a>上传证书</h2><p>进入群晖的 “控制面板” –&gt; “安全性” –&gt; “证书” 页面，将你的域名证书文件和私钥文件导入群晖中。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/28/1595950917512-1595950917515.png" alt="title"></p>
<h2 id="管理员账号"><a href="#管理员账号" class="headerlink" title="管理员账号"></a>管理员账号</h2><p>选中容器，右键「详情」–&gt;「日志」，可以找到初始管理员账号和密码。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/28/1595948760583-1595948760585.png" alt="title"></p>
<blockquote>
<p>Cloudreve 在首次启动时，会创建初始管理员账号，请注意保管管理员密码，此密码只会在首次启动时出现。如果您忘记初始管理员密码，需要删除同级目录下的cloudreve.db，重新启动主程序以初始化新的管理员账户。</p>
</blockquote>
<p>完成 https 设置后，在浏览器中输入 https://域名:5213，用管理员账号、密码登录，进入「管理面板」。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/28/1595949379894-1595949379897.png" alt="title"></p>
<p>进入「管理面板」</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/28/1595949480622-1595949480625.png" alt="title"></p>
<p>「添加存储策略」</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/28/1595949896291-1595949896294.png" alt="title"></p>
<h2 id="存储设置"><a href="#存储设置" class="headerlink" title="存储设置"></a>存储设置</h2><p>以 OneDrive 为例，前提是你得有 OneDrive for Business 账号才行。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/28/1595951592318-1595951592320.png" alt="title"></p>
<p>按照页面提示依次执行即可。我加了2个 OneDrive，加上本地存储，总共有3个策略，想测试动态切换，但是没找到地方。但是后面介绍的清玖云盘是可以的，也许这是捐赠版才有的功能？</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/29/1595955100978-1595955101003.png" alt="title"></p>
<p>接下来要修改「用户组」的默认的存储策略，下拉框中选择即可。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/29/1595955215811-1595955215813.png" alt="title"></p>
<p>其他的按实际需求填写即可。</p>
<h2 id="注册用户"><a href="#注册用户" class="headerlink" title="注册用户"></a>注册用户</h2><p>在浏览器中输入：https://域名:5213</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/28/1595944718375-1595944718378.png" alt="title"></p>
<p>注册后就能使用了</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/28/1595947509452-1595947509454.png" alt="title"></p>
<p>支持上传文件夹</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/29/1595993037639-1595993037640.png" alt="title"></p>
<h2 id="离线下载"><a href="#离线下载" class="headerlink" title="离线下载"></a>离线下载</h2><p>需要用到另外一个Aira2镜像</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/29/1595984626547-1595984626554.png" alt="title"></p>
<p>我平时下载都用玩客云+智能插座，所以这里就略过了，有兴趣的朋友可以参考：【Cloudreve Docker配置方法】中的Step4. 启动Aria2服务，<span class="exturl" data-url="aHR0cHM6Ly9yZWdpc3RyeS5odWIuZG9ja2VyLmNvbS9yL3hhdmllcm5pdS9jbG91ZHJldmUv77yM6YeM6Z2i5pyJ6K+m57uG55qE6YWN572u5pa55rOV44CC">https://registry.hub.docker.com/r/xavierniu/cloudreve/，里面有详细的配置方法。<i class="fa fa-external-link-alt"></i></span></p>
<h1 id="市面上基于-Cloudreve-搭建的网盘"><a href="#市面上基于-Cloudreve-搭建的网盘" class="headerlink" title="市面上基于 Cloudreve 搭建的网盘"></a>市面上基于 Cloudreve 搭建的网盘</h1><p>如果你觉得自己搭建麻烦，也可以直接注册个网盘来用，目前基于 Cloudreve 搭建的网盘还是挺多的，但是安全性和稳定性还有待时间的验证。</p>
<h2 id="清玖云盘"><a href="#清玖云盘" class="headerlink" title="清玖云盘"></a>清玖云盘</h2><p>地址：<span class="exturl" data-url="aHR0cHM6Ly9jbG91ZC5xaW5nc3RvcmUuY24v">https://cloud.qingstore.cn/<i class="fa fa-external-link-alt"></i></span></p>
<p>刚注册是500G，后来不知道怎么变成了1T空间，默认支持 WebDAV 协议。有了对外接口，就可以使用 RaiDrive、ExpanDrive、CloudMounter 这类的挂载工具，也可以使用 GoodSync 、Rclone 这样的同步工具，大大提高了可玩性，也弥补了 Cloudreve 没有客户端的问题。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/27/1595836260026-1595836260035.png" alt="title"></p>
<h2 id="蜂鸟云盘"><a href="#蜂鸟云盘" class="headerlink" title="蜂鸟云盘"></a>蜂鸟云盘</h2><p>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuZmVuZ25pYW9wYW4uY29tLw==">https://www.fengniaopan.com/<i class="fa fa-external-link-alt"></i></span></p>
<p>注册后有2T空间。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/27/1595836138936-1595836138940.png" alt="title"></p>
<h2 id="小麦云盘"><a href="#小麦云盘" class="headerlink" title="小麦云盘"></a>小麦云盘</h2><p>地址：<span class="exturl" data-url="aHR0cHM6Ly9iLm93bi1jbG91ZC5jbi8=">https://b.own-cloud.cn/<i class="fa fa-external-link-alt"></i></span></p>
<p>注册后有500G空间。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/27/1595835978272-1595835978275.png" alt="title"></p>
<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>前面我们谈到网盘支持 WebDAV 的意义，所以很有必要验证一下，可惜翻车了。</p>
<h2 id="WebDAV-测试"><a href="#WebDAV-测试" class="headerlink" title="WebDAV 测试"></a>WebDAV 测试</h2><p>Mac 上用 CloudMounter 测试了不行</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/29/1595993975221-1595993975228.png" alt="title"></p>
<p>Windows 上用 RaiDrive 测试了也不行</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/30/1596110014598-1596110014659.png" alt="title"></p>
<p>不仅仅是我们自己搭建的不行，连清玖云盘也不行，在网上搜了一圈，有说是因为了 nginx 反代导致的，也有人说是只有用 http 才能支持 WebDAV，简单做了能想到的测试，都未能见效，不排除是软件本身的 Bug。只能先埋个坑，等有时间了再来仔细研究。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>代码主页<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Nsb3VkcmV2ZS9DbG91ZHJldmU=">https://github.com/cloudreve/Cloudreve<i class="fa fa-external-link-alt"></i></span></p>
<p>Docker代码主页<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9yL3hhdmllcm5pdS9jbG91ZHJldmU=">https://hub.docker.com/r/xavierniu/cloudreve<i class="fa fa-external-link-alt"></i></span></p>
<p>利用CLOUDREVE 3.0+ONEDRIVE世纪互联版搭建自己的高速云存储<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuZmVpamkud29yay8yMDIwLzE1MC5odG1s">https://www.feiji.work/2020/150.html<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>网盘</tag>
        <tag>Cloudreve</tag>
      </tags>
  </entry>
  <entry>
    <title>在Netlify上部署Hexo</title>
    <url>/2020/05/06/%E5%9C%A8Netlify%E4%B8%8A%E9%83%A8%E7%BD%B2Hexo/</url>
    <content><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>整个安装过程比较简单，仔细阅读参考文档就可。</p>
<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>在站长之家（ <span class="exturl" data-url="aHR0cDovL3Rvb2wuY2hpbmF6LmNvbQ==">http://tool.chinaz.com<i class="fa fa-external-link-alt"></i></span> ）–&gt;【网站测速】，分别输入原生的二级域名和自定义域名进行测试。</p>
<ul>
<li>Github原生域名：wbsu2003.github.io</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/05/9a4c0cec7613ef0a26d15f7b8b753f6-1588685964469.png" alt="title"></p>
<ul>
<li>自定义域名：laosu.ml</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/05/ad4e50dc85d907733371cd9c16f4d5a-1588685562397.png" alt="title"></p>
<ul>
<li>Netlify原生域名：laosu.netlify.app</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/05/f65ecc7bc1fd8346db408228a161c97-1588686229553.png" alt="title"></p>
<ul>
<li>自定义域名：laosu.tk</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/05/56d579185980d254200090020640746-1588685618068.png" alt="title"></p>
<h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>先当备用网站吧。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>Github Pages访问太慢？通过Netlify免费加速<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vMzdZMzcvcC8xMjU1MTgzOS5odG1s">https://www.cnblogs.com/37Y37/p/12551839.html<i class="fa fa-external-link-alt"></i></span></p>
<p>部署 Hexo 静态博客 (下) - 偶遇 Netlify, 优雅地持续部署你的博客<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9jaGFuZ2NoZW4ubWUvYmxvZy8yMDE4MDgxOS9kZXBsb3ktaGV4by1ibG9nLXRvLW5ldGxpZnkv">https://changchen.me/blog/20180819/deploy-hexo-blog-to-netlify/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Netlify</tag>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>在GCP上安装Zerotier的Moon服务器</title>
    <url>/2020/04/28/%E5%9C%A8GCP%E4%B8%8A%E5%AE%89%E8%A3%85Zerotier%E7%9A%84Moon%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<p>原本速度虽然不快，但是好歹也有1M左右的传输速度，但是架不住时常抽风，今天开始又完全不通了。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/22/Jietu20200422-125540-1587531353984.jpg" alt="title"></p>
<p>而之前是这样的</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/22/Jietu20200422-130750-1587532105407.jpg" alt="title"></p>
<p>查阅文档后发现，moon的搭建是为了补充根节点在国外，速度慢，且不稳定的一个补充方案，以便使zerotier能在各种情况都能稳定运行的一种保障. </p>
<p>GCP有公网地址，直接就它了。</p>
<p><strong>1. 在GCP上安装Zerotier</strong></p>
<p>用官网上提供的命令行：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -s https://install.zerotier.com | sudo bash</span><br></pre></td></tr></table></figure>

<p>开始安装：<br><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/22/38901587517414_.pic_hd-1587534791827.jpg" alt="title"></p>
<p>安装完成：<br><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/22/WechatIMG3891-1587534849922.png" alt="title"></p>
<p><strong>2. 加入网络</strong></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/22/WechatIMG3897-1587536175663.png" alt="title"></p>
<p><strong>3. 获取网络情况</strong></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/22/WechatIMG3899-1587536235890.png" alt="title"></p>
<p><strong>4. 生成moon.json</strong><br>进入 /var/lib/zerotier-one 文件夹<br><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/22/WechatIMG3893-1587534932410.png" alt="title"></p>
<p>运行下面的语句</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">zerotier-idtool initmoon identity.public &gt;&gt;moon.json</span><br></pre></td></tr></table></figure>

<p>会在当前目录下产生一个新文件 <img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/22/moon-1587535706203.json" alt="moon.js"></p>
<p>直接运行<code>vi moon.js</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/22/WechatIMG3895-1587535338523.png" alt="title"></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line"> <span class="attr">"id"</span>: <span class="string">"3648b35427"</span>,</span><br><span class="line"> <span class="attr">"objtype"</span>: <span class="string">"world"</span>,</span><br><span class="line"> <span class="attr">"roots"</span>: [</span><br><span class="line">  &#123;</span><br><span class="line">   <span class="attr">"identity"</span>: <span class="string">"3648b35427:0:49fbcc3fb665ac07dbbf5825a63d771d38dcc37f94393de88766d3a39a488156e02f6d816e3a3a3684af5d2385b7401944ce54651fd8de6b2a13f4d8d0ec9a5c"</span>,</span><br><span class="line">   <span class="attr">"stableEndpoints"</span>: []</span><br><span class="line">  &#125;</span><br><span class="line"> ],</span><br><span class="line"> <span class="attr">"signingKey"</span>: <span class="string">"3475482010c71caf78bf00573552ebcd53cd83b2e09572374eaeae2383c9773d9d0c697e4ee0b3ae4a74e20abd04651c9fe6a339a1077f47bbeedce2a10d44f1"</span>,</span><br><span class="line"> <span class="attr">"signingKey_SECRET"</span>: <span class="string">"294e4d31e71847eeea842aa60c2aba603f95666263970bb39e21eb4c349ee77c265bf903fce3b1870f9825346b87de7861b1538f24006d93e20b90f1a9bd9913"</span>,</span><br><span class="line"> <span class="attr">"updatesMustBeSignedBy"</span>: <span class="string">"3475482010c71caf78bf00573552ebcd53cd83b2e09572374eaeae2383c9773d9d0c697e4ee0b3ae4a74e20abd04651c9fe6a339a1077f47bbeedce2a10d44f1"</span>,</span><br><span class="line"> <span class="attr">"worldType"</span>: <span class="string">"moon"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>5. 需要修改stableEndpoints</strong></p>
<p>增加做moon机器的IP地址信息如下：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line"> <span class="attr">"id"</span>: <span class="string">"3648b35427"</span>,</span><br><span class="line"> <span class="attr">"objtype"</span>: <span class="string">"world"</span>,</span><br><span class="line"> <span class="attr">"roots"</span>: [</span><br><span class="line">  &#123;</span><br><span class="line">   <span class="attr">"identity"</span>: <span class="string">"3648b35427:0:49fbcc3fb665ac07dbbf5825a63d771d38dcc37f94393de88766d3a39a488156e02f6d816e3a3a3684af5d2385b7401944ce54651fd8de6b2a13f4d8d0ec9a5c"</span>,</span><br><span class="line">   <span class="attr">"stableEndpoints"</span>: [<span class="string">"34.84.xxx.xxx/9993"</span>,<span class="string">"192.168.191.1/9993"</span>]</span><br><span class="line">  &#125;</span><br><span class="line"> ],</span><br><span class="line"> <span class="attr">"signingKey"</span>: <span class="string">"3475482010c71caf78bf00573552ebcd53cd83b2e09572374eaeae2383c9773d9d0c697e4ee0b3ae4a74e20abd04651c9fe6a339a1077f47bbeedce2a10d44f1"</span>,</span><br><span class="line"> <span class="attr">"signingKey_SECRET"</span>: <span class="string">"294e4d31e71847eeea842aa60c2aba603f95666263970bb39e21eb4c349ee77c265bf903fce3b1870f9825346b87de7861b1538f24006d93e20b90f1a9bd9913"</span>,</span><br><span class="line"> <span class="attr">"updatesMustBeSignedBy"</span>: <span class="string">"3475482010c71caf78bf00573552ebcd53cd83b2e09572374eaeae2383c9773d9d0c697e4ee0b3ae4a74e20abd04651c9fe6a339a1077f47bbeedce2a10d44f1"</span>,</span><br><span class="line"> <span class="attr">"worldType"</span>: <span class="string">"moon"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其中<br>34.84.xxx.xxx 为公网地址<br>192.168.191.1 为zerotier分配的地址，后台设置时已经取消了自动分配；</p>
<p><strong>6. 建立私有网络的zerotier标志性文件</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">zerotier-idtool genmoon moon.json</span><br></pre></td></tr></table></figure>

<p>运行上面的命令以后，就会在该文件夹下生成类似这样的一个新文件：0000003648b35427.moon。然后把他们拷贝到做 moon 机器的 /var/lib/zerotier-one/moons.d 目录里去（这个目录是拷贝之前手工建立的），然后重启 zerotier-one。</p>
<p><strong>7. 重启服务</strong></p>
<p>网上的命令是这样的</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">killall -9 zerotier-one</span><br><span class="line">zerotier-one -d</span><br></pre></td></tr></table></figure>
<p>但是我执行后遇到错误，所以最简单的办法是直接reboot</p>
<p><strong>8. 客户端配置</strong></p>
<ul>
<li>在没有加入moon时，运行<code>zerotier-cli listpeers</code>查看客户端的连接情况</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/22/WechatIMG3906-1587536897732.png" alt="title"></p>
<p>可以看到都是planet和leaf，没有moon；</p>
<ul>
<li><p>不管Windows还是Mac OS，都需要以管理员身份运行：<br><code>zerotier-cli orbit 3648b35427 3648b35427</code></p>
</li>
<li><p>再次用 <code>zerotier-cli listpeers</code> 查看客户端的连接情况</p>
</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/22/WechatIMG3908-1587537050446.png" alt="title"></p>
<ul>
<li>注意红色的部分，看到了moon有木有？</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/22/WechatIMG3905-1587537114326.png" alt="title"></p>
<p>参考文档：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NvbGRib3kyNTgvYXJ0aWNsZS9kZXRhaWxzLzkzMTMzODYw">ZeroTier-One配置moon心得<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI5MDUwNTk5L2FydGljbGUvZGV0YWlscy85NTc1NzExNQ==">ZeroTier-One搭建moon完整过程<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2F0dXJsL2F3ZXNvbWUtYW50aS1nZncvYmxvYi9tYXN0ZXIvWmVyb1RpZXIvWmVyb1RpZXJfTW9vbnMubWQ=">建立自定义 ZeroTier Moons 服务器<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnpjemMuY3ovMjAxOC8wMy8xNC9aZXJvVGllci1tb29uLSVFOCVBRSVCRSVFNyVCRCVBRSVFNiU5NSU5OSVFNyVBOCU4Qi8=">ZeroTier moon 设置教程<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cDovL3d3dy5sdWNrdHUuY29tL2FyY2hpdmVzLzc2NC5odG1s">初探：建立 zerotier 的 moon 服务器<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cDovL3d3dy5sdWNrdHUuY29tL2FyY2hpdmVzLzc2Ni5odG1s">再探：创建 zerotier moon 其实很简单<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>GCP</tag>
        <tag>Zerotier</tag>
        <tag>Moon</tag>
      </tags>
  </entry>
  <entry>
    <title>在Coding上部署Hexo并实现和Github双线访问</title>
    <url>/2020/05/12/%E5%9C%A8Coding%E4%B8%8A%E9%83%A8%E7%BD%B2Hexo%E5%B9%B6%E5%AE%9E%E7%8E%B0%E5%92%8CGithub%E5%8F%8C%E7%BA%BF%E8%AE%BF%E9%97%AE/</url>
    <content><![CDATA[<p>之前在Netlify上折腾过一次，但是结果不理想，原本以为Netlify自带CDN，会对速度的提升带来帮助，但是结果却让人大跌眼镜。</p>
<p>虽然上一次的折腾失败了，详见《<a href="https://laosu.ml/2020/05/06/%E5%9C%A8Netlify%E4%B8%8A%E9%83%A8%E7%BD%B2Hexo/">在Netlify上部署Hexo</a>》，但并没有放弃，一直在寻找替代的方案，最终不负众望找到了Coding，因为官网改版较大，参考文档中的一些过程需要重新说明，避免走弯路。</p>
<h1 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h1><ul>
<li>首先是<strong>注册团队</strong></li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/12/1589285768968-1589285768971.png" alt="title"></p>
<ul>
<li>登录方式有点特别，先输入团队，再用账号、密码登录</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/12/1589285835067-1589285835070.png" alt="title"></p>
<ul>
<li>接下来就可以新建项目了</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/12/1589285945328-1589285945329.png" alt="title"></p>
<h1 id="配置SSH公钥"><a href="#配置SSH公钥" class="headerlink" title="配置SSH公钥"></a>配置SSH公钥</h1><ul>
<li>点右上角的头像，选择<strong>个人设置</strong></li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/12/1589286100597-1589286100602.png" alt="title"></p>
<ul>
<li>在左边菜单选择 <strong>SSH公钥</strong>，配置方法和Github是一样的，具体如何生成秘钥，如何配置可以看看参考文档《<strong>超详细Hexo+Github博客搭建小白教程</strong>》，里面的介绍非常详细。</li>
</ul>
<h1 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="配置 _config.yml"></a>配置 _config.yml</h1><ul>
<li>打开你本地博客根目录的 _config.yml 文件，找到 deployment</li>
</ul>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: </span><br><span class="line">    github: https://github.com/wbsu2003/wbsu2003.github.io.git</span><br><span class="line">    coding: git@e.coding.net:laosu/blog/blog.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<h1 id="代码部署"><a href="#代码部署" class="headerlink" title="代码部署"></a>代码部署</h1><ul>
<li>添加完成后先执行命令 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo g -d</span><br></pre></td></tr></table></figure></li>
<li>将博客双线部署到 Coding Pages 和 GitHub Pages，如下图所示表示部署成功：</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/12/1589286884028-1589286884034.png" alt="title"></p>
<h1 id="开启-Coding-Pages"><a href="#开启-Coding-Pages" class="headerlink" title="开启 Coding Pages"></a>开启 Coding Pages</h1><p>这一步折腾了半天，后来才发现，新建的项目默认项目的<strong>持续部署</strong>是不打开的，而我们需要的Coding Page（现在叫<strong>静态页面</strong>）就在这里面。</p>
<ul>
<li>在我们新建的项目界面，找到左下角的<strong>项目设置</strong>，并进入<strong>功能开关</strong>，打开<strong>持续部署</strong></li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/12/1589287172069-1589287172071.png" alt="title"></p>
<ul>
<li>再次回到项目界面，左边菜单就会多出<strong>持续集成</strong>，进入后会看到<strong>静态页面</strong></li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/12/1589287281291-1589287281293.png" alt="title"></p>
<ul>
<li>进入<strong>静态页面</strong>，会看到生成的默认访问地址，现在拿到的域名是 <span class="exturl" data-url="aHR0cHM6Ly94eHh4eC5jb2RpbmctcGFnZXMuY29t">https://xxxxx.coding-pages.com<i class="fa fa-external-link-alt"></i></span> 这样的格式。</li>
</ul>
<h1 id="绑定自定义域名"><a href="#绑定自定义域名" class="headerlink" title="绑定自定义域名"></a>绑定自定义域名</h1><ul>
<li>从右上角的<strong>设置</strong>进入</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/12/1589287543769-1589287543774.png" alt="title"></p>
<ul>
<li>找到<strong>自定义域名</strong>，最多可以绑5个自定义域名</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/12/1589287863082-1589287863083.png" alt="title"></p>
<h1 id="设置双线访问"><a href="#设置双线访问" class="headerlink" title="设置双线访问"></a>设置双线访问</h1><p>用的dnspod免费域名解析，首先在你的域名 DNS 设置中添加一条 CNAME 记录指向 xxxxx.coding-pages.com，解析路线选择** 默认<strong>，将 GitHub 的解析路线改为 **境外</strong>，这样境外访问就会走 GitHub，境内就会走 Coding</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/12/1589288920873-1589288920878.png" alt="title"></p>
<h1 id="证书问题"><a href="#证书问题" class="headerlink" title="证书问题"></a>证书问题</h1><p>相信大家前面注意到， <strong>自定义域名</strong> 中首选域名的证书状态是<strong>申请失败</strong></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/12/1589289282375-1589289282377.png" alt="title"></p>
<p>这是因为我们之前把域名绑定到了 GitHub Pages 并开启了 HTTPS，在验证域名所有权时会定位到 Github Pages 的主机上导致 SSL 证书申请失败，所以需要先暂停dnspod中对 GitHub Pages 的解析</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/12/1589289222588-1589289222590.png" alt="title"></p>
<p>然后再次申请，等一会儿就会显示成功了！</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/12/1589289393822-1589289393824.png" alt="title"></p>
<h1 id="测速"><a href="#测速" class="headerlink" title="测速"></a>测速</h1><p>因为laosu.ml绑了双线，所以这次测速主要对比Netlify和Coding，对应的域名分别是laosu.tk和laosu.gq</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/12/1589289958694-1589289958697.png" alt="title"></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/12/1589289987235-1589289987236.png" alt="title"></p>
<p>虽然还是有些地方依然不理想，但是相比而言已经好了很多了。</p>
<h1 id="带来的问题"><a href="#带来的问题" class="headerlink" title="带来的问题"></a>带来的问题</h1><p>因为是双线，所以虽然访问的都是laosu.ml，但是实际上是不同的网站，所以在计数上会存在不一致。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>Coding官网<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9jb2RpbmcubmV0Lw==">https://coding.net/<i class="fa fa-external-link-alt"></i></span></p>
<p>Hexo 双线部署到 Coding Pages 和 GitHub Pages 并实现全站 HTTPS<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuaXRyaHguY29tLzIwMTkvMDkvMTYvQTQ3LWhleG8tZGVwbG95ZWQtdG8tZ2l0aHViLWFuZC1jb2Rpbmcv">https://www.itrhx.com/2019/09/16/A47-hexo-deployed-to-github-and-coding/<i class="fa fa-external-link-alt"></i></span></p>
<p>超详细Hexo+Github博客搭建小白教程<br>地址：<span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zNTY2ODIzNw==">https://zhuanlan.zhihu.com/p/35668237<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>blog</tag>
        <tag>Coding</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>在群晖上搭建专属的视频会议</title>
    <url>/2020/07/22/%E5%9C%A8%E7%BE%A4%E6%99%96%E4%B8%8A%E6%90%AD%E5%BB%BA%E4%B8%93%E5%B1%9E%E7%9A%84%E8%A7%86%E9%A2%91%E4%BC%9A%E8%AE%AE/</url>
    <content><![CDATA[<p><strong>什么是Jitsi?</strong></p>
<blockquote>
<p>Jitsi is a collection of Open Source projects which provide state-of-the-art video conferencing capabilities that are secure, easy to use and easy to self-host.</p>
</blockquote>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>新冠的肆虐让视频会议系统受到关注，使得 Zoom 用户数量激增，从去年12月每日用户才1000万，到今年3月已经增长到2亿。对于许多公司而言，使用 Zoom 之类的工具是正确的做法，但是 Zoom 接连不断的爆出数据泄露事件，因此对于资金短缺或更注重信息安全的公司而言，Jitsi 可能才是远程沟通的理想手段。</p>
<p>Jitsi Meet 采用了 Java 语言开发，是开源的视频会议系统，基于 WebRTC、React、XMPP 等成熟的开源技术。 它能够独立部署，也可以方便整合到业务系统中。</p>
<p>最重要的是其采用了端到端的加密方式（end-to-end encryption），每个人密钥都不相同，有几个人参会就有几组密钥，视频内容都是在本地完成加密和解密，有着较高的安全性。</p>
<p>加上</p>
<ol>
<li>代码开源</li>
<li>自己搭建<br>所以理论上 Jitsi 会有更高的安全性。</li>
</ol>
<h2 id="系统架构"><a href="#系统架构" class="headerlink" title="系统架构"></a>系统架构</h2><p>根据官网的描述（<span class="exturl" data-url="aHR0cHM6Ly9qaXRzaS5naXRodWIuaW8vaGFuZGJvb2svZG9jcy9hcmNoaXRlY3R1cmU=">https://jitsi.github.io/handbook/docs/architecture<i class="fa fa-external-link-alt"></i></span>），Jitsi包含一系列项目：</p>
<p><code>Jitsi Meet</code></p>
<blockquote>
<p>兼容 WebRTC 的 JavaScript 前端应用程序，使用 Jitsi Videobridge 来提供高质量，可扩展的视频会议。</p>
</blockquote>
<p><code>Jitsi Videobridge（jvb）</code></p>
<blockquote>
<p>兼容WebRTC的服务器，旨在在会议参与者之间实现视频数据路由。</p>
</blockquote>
<p><code>Jitsi Conference Focus（jicofo）</code> </p>
<blockquote>
<p>Jitsi Meet会议中使用的服务器端 focus 组件，用于会议室（房间）管理，管理参与者和 jvb 之间的会话。</p>
</blockquote>
<p><code>Jitsi Gateway to SIP（​​jigasi）</code> </p>
<blockquote>
<p>服务器端应用程序，允许常规SIP客户端加入Jitsi Meet会议</p>
</blockquote>
<p><code>Jibri</code></p>
<blockquote>
<p>直播/录播的工具，基于ffmpeg实现会议画面的捕捉和编码。如果有多个会议室需要录制/直播，需要部署多台 Jibri。</p>
</blockquote>
<p><code>Prosody</code> </p>
<blockquote>
<p>XMPP信令服务器，Jitsi使用的外部软件，负责各组件间的消息交换。</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/22/1595379838253-1595379838260.png" alt="title"><br>（官网的架构图）</p>
<h2 id="产品特点"><a href="#产品特点" class="headerlink" title="产品特点"></a>产品特点</h2><ul>
<li><p>无限用户</p>
<blockquote>
<p>用户或会议参与者的数量没有人为限制。服务器性能和带宽是唯一的限制因素。</p>
</blockquote>
</li>
<li><p>无需帐户</p>
<blockquote>
<p>不用注册账号也能使用</p>
</blockquote>
</li>
<li><p>会议室锁定</p>
<blockquote>
<p>使用密码控制对会议的访问。</p>
</blockquote>
</li>
<li><p>默认加密</p>
<blockquote>
<p>采用了端到端的加密方式</p>
</blockquote>
</li>
<li><p>高质量</p>
<blockquote>
<p>音频和视频以Opus和VP8的清晰度和丰富性提供。</p>
</blockquote>
</li>
<li><p>无需客户端</p>
<blockquote>
<p>可以使用 Web 浏览器，无需下载即可加入对话。只需与其他人共享您的会议 URL 即可开始。</p>
</blockquote>
</li>
<li><p>100％开源</p>
<blockquote>
<p>由来自世界各地的杰出社区提供支持。</p>
</blockquote>
</li>
<li><p>通过URL邀请：您可以在自己喜欢的易于记忆的 <code>https://meet.mydomain.com/自定义会议室名称</code> 会议上见面（例如：<span class="exturl" data-url="aHR0cHM6Ly9tZWV0Lm15ZG9tYWluLmNvbS9PdXJDb25m">https://meet.mydomain.com/OurConf<i class="fa fa-external-link-alt"></i></span> )，而不必将由数字和字母组成的随机序列加入难以记忆的房间中。</p>
</li>
</ul>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>首先需要下载 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2ppdHNpL2RvY2tlci1qaXRzaS1tZWV0L2FyY2hpdmUvbWFzdGVyLnppcA=="> https://github.com/jitsi/docker-jitsi-meet/archive/master.zip<i class="fa fa-external-link-alt"></i></span></p>
<p>因为我的 docker 安装在「存储空间1」，所以我把文件上传并解压到了 <code>/volume1/docker</code></p>
<p>用SSH客户端连到群晖。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 进入解压出来的目录</span></span><br><span class="line"><span class="built_in">cd</span> /volume1/docker/docker-jitsi-meet-master</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拷贝环境文件</span></span><br><span class="line">cp env.example .env</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为.env 文件中的账号生成密码</span></span><br><span class="line">./gen-passwords.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成存放配置文件的目录</span></span><br><span class="line">mkdir /volume1/docker/docker-jitsi-config/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成子目录</span></span><br><span class="line">mkdir -p /volume1/docker/docker-jitsi-config/&#123;web/letsencrypt,transcripts,prosody/config,prosody/prosody-plugins-custom,jicofo,jvb,jigasi,jibri&#125;</span><br></pre></td></tr></table></figure>

<p>编辑 <code>.env</code> 文件，将 <code>CONFIG=~/.jitsi-meet-cfg</code> 修改为 <code>CONFIG=/volume1/docker/docker-jitsi-config</code></p>
<p>取消下面几行前面的#号注释，使之生效</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启用身份验证</span></span><br><span class="line"><span class="attr">ENABLE_AUTH</span>=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许访客</span></span><br><span class="line"><span class="attr">ENABLE_GUESTS</span>=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#选择认证类型: internal, jwt or ldap</span></span><br><span class="line"><span class="attr">AUTH_TYPE</span>=internal</span><br></pre></td></tr></table></figure>

<p>并按照自己的实际设置以下内容：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 避免冲突将 80 改成了 5080</span></span><br><span class="line">HTTP_PORT=5080</span><br><span class="line"></span><br><span class="line"><span class="comment"># 避免冲突将 443 改成了 5443</span></span><br><span class="line">HTTPS_PORT=5443</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置域名</span></span><br><span class="line">PUBLIC_URL=https://meet.mydomain.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置内网的IP，也就是群晖的IP</span></span><br><span class="line">DOCKER_HOST_ADDRESS=192.168.X.X</span><br></pre></td></tr></table></figure>

<p>接下来就可以产生和运行你的 docker 容器了，4个镜像差不多 1G 的大小，所以时间取决于你的网速。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure>

<p>依次会下载 <code>jitsi/web:latest</code>、 <code>jitsi/prosody:latest</code>、<code>jitsi/jicofo:latest</code>、<code>jitsi/jvb:latest</code>。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/21/1595331997095-1595331997129.png" alt="title"></p>
<p>回到 Docker 管理器，我们会看到这四个容器已经启动了</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/22/1595380535852-1595380535860.png" alt="title"></p>
<p>这个时候在浏览器输入 <code>http://192.168.X.X:5080</code>，可以看到下面的界面</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/21/1595346420531-1595346420534.png" alt="title"></p>
<p>但是在http协议下，摄像头和麦克风是不能使用的</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/21/1595346568733-1595346568735.png" alt="title"></p>
<p>需要https才可以，在浏览器输入 <code>https://192.168.X.X:5443</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/21/1595346704342-1595346704345.png" alt="title"></p>
<h1 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h1><h2 id="设置反向代理"><a href="#设置反向代理" class="headerlink" title="设置反向代理"></a>设置反向代理</h2><p>「控制面板」–&gt;「Synology应用程序门户」–&gt;「反向代理服务器」–&gt; 「新增」</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/22/1595347924573-1595347924576.png" alt="title"></p>
<h2 id="上传ssl证书"><a href="#上传ssl证书" class="headerlink" title="上传ssl证书"></a>上传ssl证书</h2><p>「控制面板」–&gt;「安全性」–&gt;「证书」–&gt;「新增」</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/22/1595348024508-1595348024509.png" alt="title"></p>
<h2 id="创建账号"><a href="#创建账号" class="headerlink" title="创建账号"></a>创建账号</h2><p>因为前面我们启用了身份验证，所以需要注册用户</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 首先exec到容器内</span></span><br><span class="line">docker-compose <span class="built_in">exec</span> prosody /bin/bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建主持人账号</span></span><br><span class="line">prosodyctl --config /config/prosody.cfg.lua register 用户名 meet.jitsi 密码</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除主持人账号</span></span><br><span class="line">prosodyctl --config /config/prosody.cfg.lua unregister 用户名 meet.jitsi</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/22/1595350308976-1595350308979.png" alt="title"></p>
<p>现在我们可以正式使用了，开启一个新的会议后，会提示等待主持人</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/22/1595348971304-1595348971307.png" alt="title"></p>
<p>会议室的主界面，非常的清爽</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/22/1595379017410-1595379017471.png" alt="title"></p>
<h1 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h1><p>除了网页外，官网提供了Android和iOS平台的移动客户端，如果你需要Wndows或者其他平台的桌面客户端，可以参考我之前写的《<a href="https://laosu.ml/2020/06/06/%E6%8A%8A%E7%BD%91%E9%A1%B5%E6%89%93%E5%8C%85%E6%88%90%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/">把网页打包成桌面应用程序</a>》，自己打包一个。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/22/1595379280515-1595379280522.png" alt="title"></p>
<p>在手机上收到邀请链接会要求下载客户端</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/22/1595384414391-1595384414393.png" alt="title"></p>
<h1 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h1><p>如果你在后续更改了任何 <code>.env</code> 内的配置，假设不想用身份验证了想取消掉，那么要使新的配置生效的话，步骤依次是：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 停止并删除容器、网络、卷、镜像</span></span><br><span class="line">docker-compose down</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除配置目录</span></span><br><span class="line">rm -rf /volume1/docker/docker-jitsi-config</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重建配置目录</span></span><br><span class="line">mkdir -p /volume1/docker/docker-jitsi-config/&#123;web/letsencrypt,transcripts,prosody/config,prosody/prosody-plugins-custom,jicofo,jvb,jigasi,jibri&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新构建并在后台启动容器，-d 在后台运行服务容器</span></span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure>

<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>官网主页<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9qaXRzaS5vcmcv">https://jitsi.org/<i class="fa fa-external-link-alt"></i></span></p>
<p>Jitsi Meet on Docker<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2ppdHNpL2RvY2tlci1qaXRzaS1tZWV0">https://github.com/jitsi/docker-jitsi-meet<i class="fa fa-external-link-alt"></i></span></p>
<p>Jitsi private video conferencing on synology NAS<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cudmlydHVhbGNvbmZ1c2lvbi5uZXQvaml0c2ktbWVldGluZy1jb25mZXJlbmNlLW9uLXN5bm9sb2d5LW5hcy8=">https://www.virtualconfusion.net/jitsi-meeting-conference-on-synology-nas/<i class="fa fa-external-link-alt"></i></span></p>
<p>How to install Jitsi Meet on your QNAP server<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9tZWRpdW0uY29tL3N3bGgvaG93LXRvLWluc3RhbGwtaml0c2ktbWVldC1vbi15b3VyLXFuYXAtc2VydmVyLTZjYzg4MjRiOTU3Yg==">https://medium.com/swlh/how-to-install-jitsi-meet-on-your-qnap-server-6cc8824b957b<i class="fa fa-external-link-alt"></i></span></p>
<p>Jitsi Meet：开源的视频会议系统<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9sYWxhLmltLzcwOTIuaHRtbA==">https://lala.im/7092.html<i class="fa fa-external-link-alt"></i></span></p>
<p>开源架构解析｜视频会议系统 Jitsi Meet<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9saXVsYW50YW8uY29tL2ppdHNpLW1lZXQuaHRtbA==">https://liulantao.com/jitsi-meet.html<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>视频会议</tag>
        <tag>jitsi</tag>
      </tags>
  </entry>
  <entry>
    <title>复旦大学的藤月开了</title>
    <url>/2020/05/06/%E5%A4%8D%E6%97%A6%E5%A4%A7%E5%AD%A6%E7%9A%84%E8%97%A4%E6%9C%88%E5%BC%80%E4%BA%86/</url>
    <content><![CDATA[<p>自从去年复旦大学把藤月种下去，我就一直挺好奇的，到底开花的时候会是什么样呢？</p>
<h1 id="五一节前"><a href="#五一节前" class="headerlink" title="五一节前"></a>五一节前</h1><p>当时路过还是一个一个的花骨朵。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/06/WechatIMG4074-1588740269573.jpeg" alt="title"></p>
<p>但也有的已经含苞待放了。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/06/WechatIMG4073-1588740436193.jpeg" alt="黄色的"></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/06/WechatIMG4076-1588740455075.jpeg" alt="红色的"></p>
<h1 id="今天（5月6日）"><a href="#今天（5月6日）" class="headerlink" title="今天（5月6日）"></a>今天（5月6日）</h1><p>今天路过时发现，一小半都已经开放了，而且姹紫嫣红，分外好看。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/06/WechatIMG4082-1588740697074.jpeg" alt="title"></p>
<p>估计等过几天都开了，会更好看。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/06/WechatIMG4071-1588740745690.jpeg" alt="title"></p>
<p>大游行？</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/06/WechatIMG4072-1588740768724.jpeg" alt="title"></p>
<p>甜梦？</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/06/WechatIMG4075-1588740908887.jpeg" alt="title"></p>
<p>紫袍玉带？</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/06/WechatIMG4077-1588740948926.jpeg" alt="title"></p>
<p>藤冰山？</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/06/WechatIMG4078-1588740989713.jpeg" alt="title"></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/06/WechatIMG4079-1588741007305.jpeg" alt="title"></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/06/WechatIMG4080-1588741031040.jpeg" alt="title"></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/06/WechatIMG4081-1588741064243.jpeg" alt="title"></p>
<p>我的心？</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/06/WechatIMG4083-1588741092150.jpeg" alt="title"></p>
<p>玛格丽特王妃？</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/06/WechatIMG4084-1588741118387.jpeg" alt="title"></p>
<p>自由精神？</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/06/WechatIMG4085-1588741131409.jpeg" alt="title"></p>
<p>埃格兰泰恩？塞西尔布朗纳？</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/06/WechatIMG4086-1588741145227.jpeg" alt="title"></p>
<p>麦金？</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/06/WechatIMG4087-1588741163758.jpeg" alt="title"></p>
<p>粉色达芬奇？</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/06/WechatIMG4088-1588741187607.jpeg" alt="title"></p>
<p>沃勒顿老庄园？</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/06/WechatIMG4089-1588741222125.jpeg" alt="title"></p>
<p>欢迎?</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/06/WechatIMG4090-1588741242501.jpeg" alt="title"></p>
<p>粉团蔷薇?</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/06/WechatIMG4091-1588741276861.jpeg" alt="title"></p>
<p>权杖之岛?</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/06/WechatIMG4092-1588741297897.jpeg" alt="title"></p>
<p>克莱尔奥斯汀？</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/06/WechatIMG4093-1588741309981.jpeg" alt="title"></p>
<p>藤冰山？粉妆楼？</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/06/WechatIMG4094-1588741330994.jpeg" alt="title"></p>
<p>抓破美人脸？</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/06/WechatIMG4095-1588741354003.jpeg" alt="title"></p>
<p>先是用形色app对着花儿一顿识别，可这人工智能有时候也掉链子，所有的结果都是月季，只能自己对着图片研究，也不知道到底有没有哪一张是蒙对了的，但起码有一点，我已经绝对打败了AI。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/06/%E4%B8%8B%E8%BD%BD-1588771007288.jpg" alt="title"></p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>藤本月季网<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cudGVuZ2Jlbnl1ZWppLmNvbS8=">https://www.tengbenyueji.com/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>美好生活</category>
      </categories>
      <tags>
        <tag>藤本月季</tag>
        <tag>复旦大学</tag>
        <tag>国帆路</tag>
        <tag>AI</tag>
      </tags>
  </entry>
  <entry>
    <title>在线文档系统MrDoc</title>
    <url>/2020/08/03/%E5%9C%A8%E7%BA%BF%E6%96%87%E6%A1%A3%E7%B3%BB%E7%BB%9FMrDoc/</url>
    <content><![CDATA[<p>什么是 MrDoc？</p>
<blockquote>
<p>MrDoc 是基于 Python 开发的在线文档系统，适合作为个人和小型团队的文档、知识和笔记管理工具。致力于成为全平台（Web端、桌面端、移动端）的私有化在线文档部署方案。</p>
</blockquote>
<p>主界面看着蛮清爽</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/01/1596253812579-1596253812620.png" alt="title"></p>
<p>而且客户端基本上覆盖了主流</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/02/1596366083065-1596366083067.png" alt="title"></p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>在群晖上以 Docker 方式安装。</p>
<p>在注册表中搜索 <code>mrdoc</code> ，选择 <code>jonnyan404/mrdoc-nginx</code>，版本选择 <code>latest</code>。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/01/1596254944479-1596254944483.png" alt="title"></p>
<h2 id="卷"><a href="#卷" class="headerlink" title="卷"></a>卷</h2><p>添加两个文件夹</p>
<table>
<thead>
<tr>
<th align="center">文件夹</th>
<th align="center">装载路径</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><code>docker/mrdoc/config</code></td>
<td align="center"><code>/app/MrDoc/config</code></td>
</tr>
<tr>
<td align="center"><code>docker//mrdoc/media</code></td>
<td align="center"><code>/app/MrDoc/media</code></td>
</tr>
</tbody></table>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/01/1596265138071-1596265138074.png" alt="title"></p>
<h2 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h2><p>要避免端口冲突，所以重新指定了本地端口</p>
<table>
<thead>
<tr>
<th align="center">本地端口</th>
<th align="center">容器端口</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1443</td>
<td align="center">443</td>
</tr>
<tr>
<td align="center">1080</td>
<td align="center">80</td>
</tr>
</tbody></table>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/01/1596259445512-1596259445514.png" alt="title"></p>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>注意 LISTEN_PORT 端口，需要和前面设置的容器端口一致，默认为 10086 要改成 80</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/01/1596272428746-1596272428749.png" alt="title"></p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>在 <code>/docker/mrdoc/config</code> 目录新建 <code>config.ini</code> 文件，将下面的内容粘贴进去，并根据自己的实际进行设置。</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 如果自己没有更换其它数据库的需求,请原样复制粘贴,不要乱改配置.</span></span><br><span class="line"><span class="comment"># mysql版本注意:需要mysql5.6及以上版本.</span></span><br><span class="line"><span class="comment"># mysql需要手动创建一个数据库:create database mrdoc character set utf8mb4 collate utf8_bin;</span></span><br><span class="line"><span class="comment">#grant all privileges on mrdoc.* to 'jonnyan404'@'%' identified by 'www.jonnyan404.top:8088' with grant option;</span></span><br><span class="line"><span class="comment">#flush privileges;</span></span><br><span class="line"><span class="section">[site]</span></span><br><span class="line"><span class="comment"># True表示开启站点调试模式，False表示关闭站点调试模式</span></span><br><span class="line"><span class="attr">debug</span> = <span class="literal">False</span></span><br><span class="line"> </span><br><span class="line"><span class="section">[database]</span></span><br><span class="line"><span class="comment"># engine，指定数据库类型，接受sqlite、mysql、oracle、postgresql</span></span><br><span class="line"><span class="attr">engine</span> = sqlite</span><br><span class="line"><span class="comment"># name表示数据库的名称</span></span><br><span class="line"><span class="comment"># name = mrdoc</span></span><br><span class="line"><span class="comment"># user表示数据库用户名</span></span><br><span class="line"><span class="comment"># user = jonnyan404</span></span><br><span class="line"><span class="comment"># password表示数据库用户密码</span></span><br><span class="line"><span class="comment"># password = www.jonnyan404.top:8088</span></span><br><span class="line"><span class="comment"># host表示数据库主机地址</span></span><br><span class="line"><span class="comment"># host = db_host</span></span><br><span class="line"><span class="comment"># port表示数据库端口</span></span><br><span class="line"><span class="comment"># port=3306</span></span><br><span class="line"><span class="section">[chromium]</span></span><br><span class="line"><span class="comment"># path用于指定Chromium的路径，不指定则使用默认的</span></span><br><span class="line"><span class="attr">path</span> = /usr/lib/chromium/chrome</span><br><span class="line"><span class="attr">args</span> = --<span class="literal">no</span>-sandbox,--disable-gpu</span><br></pre></td></tr></table></figure>

<h2 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h2><p>选中容器 –&gt; 详情</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/01/1596272813576-1596272813579.png" alt="title"></p>
<p>终端机 –&gt; 新增，输入 <code>sh</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/01/1596272925744-1596272925746.png" alt="title"></p>
<p>现在可以在光标处输入命令了</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/01/1596272972595-1596272972597.png" alt="title"></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 执行数据库迁移</span></span><br><span class="line">python manage.py migrate</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/01/1596267100282-1596267100284.png" alt="title"></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建一个管理员账户来管理整个 MrDoc</span></span><br><span class="line">python manage.py createsuperuser</span><br></pre></td></tr></table></figure>

<p>按提示输入管理员账号邮箱密码</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/01/1596267236523-1596267236526.png" alt="title"></p>
<p>config 目录下生成了 <code>db.sqlite3</code> 文件</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/01/1596267386641-1596267386644.png" alt="title"></p>
<h1 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h1><p>浏览器中输入 http://群晖IP:1080</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/01/1596270701140-1596270701163.png" alt="title"></p>
<p>管理员账号登录</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/01/1596270831787-1596270831790.png" alt="title"></p>
<p>打开菜单</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/01/1596270906497-1596270906500.png" alt="title"></p>
<p>进入后台</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/01/1596270949580-1596270949582.png" alt="title"></p>
<p>简单设置几个参数</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/01/1596271145465-1596271145468.png" alt="title"></p>
<p>建个用户，去玩耍吧</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/01/1596271352366-1596271352368.png" alt="title"></p>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>新建文档</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/01/1596271492976-1596271492978.png" alt="title"></p>
<p>编辑界面</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/01/1596271577500-1596271577502.png" alt="title"></p>
<p>把本文贴进去的效果</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/01/1596289761955-1596289761957.png" alt="title"></p>
<p>不需要再找图床</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/01/1596289894889-1596289894891.png" alt="title"></p>
<p>图片直接上传到了 <code>media</code> 目录中</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/01/1596289961582-1596289961584.png" alt="title"></p>
<h1 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h1><p>用 https 时无法正常获取大纲</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/02/1596365111271-1596365111272.png" alt="title"></p>
<p>但是用 http 却能正常获取到大纲</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/02/1596365074831-1596365074834.png" alt="title"></p>
<p>有可能是程序的bug，但官方提供的 demo 网站也是基于 http 协议的（ <span class="exturl" data-url="aHR0cDovL21yZG9jLnptaXN0ZXIuY29tLw==">http://mrdoc.zmister.com/<i class="fa fa-external-link-alt"></i></span> ），所以暂时无法判断，已提交 issues。</p>
<h1 id="同类产品"><a href="#同类产品" class="headerlink" title="同类产品"></a>同类产品</h1><h2 id="Gitbook"><a href="#Gitbook" class="headerlink" title="Gitbook"></a>Gitbook</h2><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuZ2l0Ym9vay5jb20v">https://www.gitbook.com/<i class="fa fa-external-link-alt"></i></span></p>
<p>Gitbook 是一个写作和出版的平台，他们使用的系统是开源的。支持 Markdown 和 AsciiDoc 格式，最后输出的是静态网页。还可以通过 calibre 把书转成 pdf、epub、mobi 等常用格式，方便在各种设备上阅读。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/01/1596273262983-1596273262986.png" alt="title"></p>
<h2 id="ShowDoc"><a href="#ShowDoc" class="headerlink" title="ShowDoc"></a>ShowDoc</h2><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuc2hvd2RvYy5jYy8=">https://www.showdoc.cc/<i class="fa fa-external-link-alt"></i></span></p>
<p>ShowDoc 是一个非常适合 IT 团队的在线API文档、技术文档工具。你可以使用 Showdoc 来编写在线 API 文档、技术文档、数据字典、在线手册.</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/01/1596274324107-1596274324153.png" alt="title"></p>
<h2 id="语雀"><a href="#语雀" class="headerlink" title="语雀"></a>语雀</h2><p><span class="exturl" data-url="aHR0cHM6Ly93d3cueXVxdWUuY29tLw==">https://www.yuque.com/<i class="fa fa-external-link-alt"></i></span></p>
<p>优雅高效的在线文档编辑与协同工具，让每个企业轻松拥有文档中心，主流 Office 文件全兼容，多人协同，轻松拥有团队知识库。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/01/1596274697973-1596274697975.png" alt="title"></p>
<h2 id="Wizard"><a href="#Wizard" class="headerlink" title="Wizard"></a>Wizard</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL215bHhzdy93aXphcmQ=">https://github.com/mylxsw/wizard<i class="fa fa-external-link-alt"></i></span></p>
<p>一款开源的文档管理工具，支持Markdown/Swagger/Table类型的文档。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/01/1596275886186-1596275886189.png" alt="title"></p>
<h2 id="TopDocs"><a href="#TopDocs" class="headerlink" title="TopDocs"></a>TopDocs</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRlZS5jb20vcXVhemVyby90b3Bkb2Nz">https://gitee.com/quazero/topdocs<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/01/1596275971877-1596275971880.png" alt="title"></p>
<p>同类产品挺多的，有时间了一个一个搭起来试试，总归会找到最适合自己的。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>代码主页<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3ptaXN0ZXIyMDE2L01yRG9j">https://github.com/zmister2016/MrDoc<i class="fa fa-external-link-alt"></i></span></p>
<p>mrdoc的docker版本简明使用教程<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuam9ubnlhbjQwNC50b3A6ODA4OC9hcmNoaXZlcy9tcmRvYyVFNyU5QSU4NGRvY2tlciVFNyU4OSU4OCVFNiU5QyVBQyVFNyVBRSU4MCVFNiU5OCU4RSVFNCVCRCVCRiVFNyU5NCVBOCVFNiU5NSU5OSVFNyVBOCU4Qg==">https://www.jonnyan404.top:8088/archives/mrdoc%E7%9A%84docker%E7%89%88%E6%9C%AC%E7%AE%80%E6%98%8E%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B<i class="fa fa-external-link-alt"></i></span></p>
<p>开源MrDoc，一个适合个人和小型团队的文档、知识、笔记在线管理系统<br>地址：<span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xMzQxMjc4NzQ=">https://zhuanlan.zhihu.com/p/134127874<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>群晖</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>外网访问群晖的新方案Tailscale</title>
    <url>/2020/11/04/%E5%A4%96%E7%BD%91%E8%AE%BF%E9%97%AE%E7%BE%A4%E6%99%96%E7%9A%84%E6%96%B0%E6%96%B9%E6%A1%88Tailscale/</url>
    <content><![CDATA[<p><strong>WireGuard 是什么？</strong></p>
<blockquote>
<p>WireGuard 是由 Jason A. Donenfeld 开发的开源 VPN 程序及协议，基于 Linux 核心实现，利用 Curve25519 进行秘钥交换，ChaCha20 用于加密，Poly1305 用于资料认证，BLAKE2 用于杂凑函数运算，支持 IPv4 和 IPv6 的第3层。</p>
</blockquote>
<p><strong>零信任网络是什么？</strong></p>
<blockquote>
<p>“零信任”是一个安全术语也是一个安全概念，它将网络防御的边界缩小到单个或更小的资源组，其中心思想是企业不应自动信任内部或外部的任何人/事/物、不应该根据物理或网络位置对系统授予完全可信的权限，应在授权前对任何试图接入企业系统的人/事/物进行验证、对数据资源的访问只有当资源需要的时候才授予。简单来说，“零信任”的策略就是不相信任何人。除非网络明确知道接入者的身份，否则任谁都无法接入到网络。</p>
</blockquote>
<p><strong>Tailscale 是什么？</strong></p>
<blockquote>
<p>Tailscale 是基于 WireGuard 的网状 VPN 替代产品，可将您的计算机，数据库和服务安全地连接在一起，而无需任何代理。</p>
</blockquote>
<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Tailscale 是一家自称为新型虚拟隐私网络 (VPN) 的初创公司，成立于2019年，是由一群前谷歌软件工程师创立的初创公司，该公司完全是远程办公，其产品 Tailscale 正式推出之际，正值许多公司不得不适应远程办公。</p>
<p>其技术基于谷歌的零信任 BeyondCorp 架构，并使用 WireGuard 协议构建，使用 OAuth2（SSO），OpenID 或 SAML 进行身份验证，并在客户端和服务器之间创建点对点的完全加密连接。</p>
<p>传统的 VPN 技术使用预共享密钥（PSK）对用户进行身份验证。而 Tailscale 的技术不需要硬件或基础设施，对协调服务器的身份验证使用的是已经存在的服务，无论是组织自己的 OAuth2 服务还是 Google Apps 或 Office 365 之类的第三方服务。这种与现有身份提供商的紧密集成意味着不需要维护单独的授权用户列表，而且新员工和新员工团队成员或添加双因素身份验证比传统的 VPN 产品更简单。</p>
<p>目前主要的 Mesh VPN 解决方案：</p>
<ol>
<li>Tinc</li>
<li>Zerotier</li>
<li>Nebula</li>
<li>Tailscale</li>
</ol>
<p>之前我用过 zerotier ，感觉 Tailscale 设置上比 zerotier 更简单一些，免费版和 zerotier 一样，支持 100 台设备。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026212105.png" alt=""></p>
<p>但是似乎免费版只能用 Google 账号和 Microsoft 账号登录。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026212431.png" alt=""></p>
<h1 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h1><p>Tailscale 是一个开源项目，客户端基本上覆盖了主流平台</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026143142.png" alt=""></p>
<p>但对于我们来说，最主要的是要在外网访问家里的群晖，所以首先需要解决的是有没有能在群晖上运行的版本。</p>
<h2 id="群晖套件"><a href="#群晖套件" class="headerlink" title="群晖套件"></a>群晖套件</h2><p>官方没有相应的版本，所以只能使用第三方的套件 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25pcmV2L3N5bm9sb2d5LXRhaWxzY2FsZQ==">https://github.com/nirev/synology-tailscale<i class="fa fa-external-link-alt"></i></span></p>
<p>如果在这张报表里找不到您的设备</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026163004.png" alt=""></p>
<p>可以在 <span class="exturl" data-url="aHR0cHM6Ly93d3cuc3lub2xvZ3kuY29tL3poLWNuL2tub3dsZWRnZWJhc2UvRFNNL3R1dG9yaWFsL0NvbXBhdGliaWxpdHlfUGVyaXBoZXJhbHMvV2hhdF9raW5kX29mX0NQVV9kb2VzX215X05BU19oYXZl">https://www.synology.com/zh-cn/knowledgebase/DSM/tutorial/Compatibility_Peripherals/What_kind_of_CPU_does_my_NAS_have<i class="fa fa-external-link-alt"></i></span> 查找对应的 CPU 类型。</p>
<p>比如 DS3617xs</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026163359.png" alt=""></p>
<p>其实也不用这么麻烦，只要搞清楚自己的 CPU 是 x86 还是 arm ，是 32 位还是 64 位就可以了，反正就4个版本，直接下载了 x86 的 64位 的版本。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026175735.png" alt=""></p>
<p>如果下错了版本，会显示不兼容，比如我安装 32 位的版本</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026165701.png" alt=""></p>
<p>手动安装</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026175931.png" alt=""></p>
<p>再次检查</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026180435.png" alt=""></p>
<p>安装完成后，需要SSH登录到群晖。执行 <code>sudo tailscale up</code></p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026200335.png" alt=""></p>
<p>复制红框内的内容，在浏览器中打开，用你的账号登录</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026200437.png" alt=""></p>
<h2 id="其他nas"><a href="#其他nas" class="headerlink" title="其他nas"></a>其他nas</h2><p>可以到这里看看 <span class="exturl" data-url="aHR0cHM6Ly90YWlsc2NhbGUuY29tL2tiLzEwNzQvY29ubmVjdC10by15b3VyLW5hcw==">https://tailscale.com/kb/1074/connect-to-your-nas<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="MacOS"><a href="#MacOS" class="headerlink" title="MacOS"></a>MacOS</h2><p>直接在 APP Store 里搜索 <code>Tailscale</code> ，支持 MacOS 10.13 及之后的系统版本。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026144539.png" alt=""></p>
<p>运行</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026144637.png" alt=""></p>
<p>允许添加 VPN 配置</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026144727.png" alt=""></p>
<h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><p>需要说明的是只支持 windows 7 之后的系统版本。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026154958.png" alt=""></p>
<p>安装虚拟网卡的驱动</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026155124.png" alt=""></p>
<p>如果安装了360，需要同意而不是阻止</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026155347.png" alt=""></p>
<p>点 <code>Log in</code> 跳转到浏览器中登录验证</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201103195734.png" alt=""></p>
<h2 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h2><p>Android 客户端的下载比较费周折，官方只提供了 Google Play 这里就不细说了。</p>
<p>有一点需要说明，群晖上使用 <code>1.1.335</code> 版本时，我的 Android 手机怎么也连不上，但是群晖升级到 <code>1.1.540</code> 版本后，Android 就能正常访问群晖了。</p>
<blockquote>
<p>目前 <code>1.1.540</code> 的版本还是 unstable 的，如果没遇到问题不建议安装这个版本。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25pcmV2L3N5bm9sb2d5LXRhaWxzY2FsZS9wdWxsLzMy">https://github.com/nirev/synology-tailscale/pull/32<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h2 id="Centos"><a href="#Centos" class="headerlink" title="Centos"></a>Centos</h2><p>尝试在 vps 上安装的</p>
<ol>
<li>安装 Yum repository manager</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo yum install yum-utils</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201103191018.png" alt=""></p>
<ol start="2">
<li>添加 Tailscale 库并安装</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo yum-config-manager --add-repo https:&#x2F;&#x2F;pkgs.tailscale.com&#x2F;stable&#x2F;centos&#x2F;7&#x2F;tailscale.repo</span><br><span class="line"></span><br><span class="line">sudo yum install tailscale</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201103191139.png" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201103191252.png" alt=""></p>
<ol start="3">
<li>使用 <code>systemctl</code> 启用和启动服务</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo systemctl enable --now tailscaled</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201103191539.png" alt=""></p>
<ol start="4">
<li>验证登录到你的 Tailscale 网络</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo tailscale up</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201104195711.png" alt=""></p>
<p>复制红框内的内容，在浏览器中打开，用你的账号登录。</p>
<ol start="5">
<li><p>进入 <code>admin console</code> 可以看到新加入的设备IP</p>
</li>
<li><p>获取您的 Tailscale IP 地址，当然在后台也能看到</p>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ip addr show tailscale0</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201103191935.png" alt=""></p>
<ol start="7">
<li>为了避免失效总需要验证，建议开启 <code>Disable Key Expiry</code></li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201103192932.png" alt=""></p>
<blockquote>
<p>对于验证不方便的群晖、Linux 和 Android 手机，我都启用了 <code>Disable Key Expiry</code>。</p>
</blockquote>
<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>所有设备的 IP，可以在 <code>Admin console</code> 中查到</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201027144501.png" alt=""></p>
<p>比如在设备列表中的群晖主机</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201026200613.png" alt=""></p>
<blockquote>
<p>默认情况下，每个设备都会收到 100.xyz 范围内的 IP 地址。该 IP 地址是根据设备和授权凭证自动分配的，无法手动更改。这个是和 zerotier 不一样的。</p>
</blockquote>
<p>从外网 ping 群晖在 Tailscale 中的 IP，偶有丢包</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201027090003.png" alt=""></p>
<p>有时也会存在连续性的丢包</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201030090805.png" alt=""></p>
<p>利用之前安装的测速软件 <code>Speedtest</code> 来测个速度</p>
<blockquote>
<p>测速服务器搭建请参考 『<a href="https://laosu.ml/2020/10/27/%E8%87%AA%E5%BB%BASpeedtest%E7%BD%91%E7%BB%9C%E6%B5%8B%E9%80%9F%E6%9C%8D%E5%8A%A1%E5%99%A8/">自建Speedtest网络测速服务器</a>』</p>
</blockquote>
<ul>
<li>输入 frp 映射的域名，测速结果</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201027085727.png" alt=""></p>
<ul>
<li>输入后台获取到的 Tailscale 的 IP 地址 + 端口，测速结果</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201027085533.png" alt=""></p>
<p>smb 协议映射到群晖的共享目录，然后拷贝</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201028131938.png" alt=""></p>
<p>如果这样不够直观的话，用网页下载方式</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201104200215.png" alt=""></p>
<p>和 <code>Speedtest</code> 的测试结果非常接近，显然比通过 frp 服务做的内网穿透强多了，虽然腾讯的 vps 也跑满了带宽，但是毕竟只是 1Mb/s 的小水管， 差了 30 倍左右，当然这不是 frp 的问题，是因为做 frps 的 vps 带宽太小了，如果要提升到 3Mb/s ，每年要多花300多，要想达到 30Mb/s，一年估计起码多出1~2万。</p>
<p>当然效果还需要持续观察，毕竟 zerotier 偶尔也是可以打洞成功的，只是 zerotier 大部分时间需要走服务器中转，即便搭建了 moon 服务器也是一样，这也是我一直关注新的替代产品的主要原因。</p>
<p>我个人觉得 Mesh VPN 比 frp、nps 等内网穿透软件更简单，也更安全。因为我是给自己用，又不是对外提供服务，唯一的不便也就是要安装客户端，但节省了公网架设服务器的费用和带宽费用，还是很值得尝试的。</p>
<p>因为群晖的 Tailscale 版本暂时还不支持子网，所以这次我们暂时没有讨论其他不能安装 Tailscale 客户端的设备。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>Tailscale 主页<br>地址：<span class="exturl" data-url="aHR0cHM6Ly90YWlsc2NhbGUuY29tLw==">https://tailscale.com/<i class="fa fa-external-link-alt"></i></span></p>
<p>Tailscale 代码<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RhaWxzY2FsZQ==">https://github.com/tailscale<i class="fa fa-external-link-alt"></i></span></p>
<p>nirev/synology-tailscale: 群晖版代码<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25pcmV2L3N5bm9sb2d5LXRhaWxzY2FsZQ==">https://github.com/nirev/synology-tailscale<i class="fa fa-external-link-alt"></i></span></p>
<p>How Tailscale works · Tailscale Blog<br>地址：<span class="exturl" data-url="aHR0cHM6Ly90YWlsc2NhbGUuY29tL2Jsb2cvaG93LXRhaWxzY2FsZS13b3Jrcy8=">https://tailscale.com/blog/how-tailscale-works/<i class="fa fa-external-link-alt"></i></span></p>
<p>Rethinking VPN: Tailscale startup packages Wireguard with network security • The Register<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cudGhlcmVnaXN0ZXIuY29tLzIwMjAvMDQvMDIvcmV0aGlua2luZ192cG5fdGFpbHNjYWxlX3N0YXJ0dXBfcGFja2FnZXMv">https://www.theregister.com/2020/04/02/rethinking_vpn_tailscale_startup_packages/<i class="fa fa-external-link-alt"></i></span></p>
<p>Digging unconventional and mesh VPNs<br>地址：<span class="exturl" data-url="aHR0cHM6Ly91bmRpc2Nsb3NlZC5ibG9nL21lc2gtdnBuLw==">https://undisclosed.blog/mesh-vpn/<i class="fa fa-external-link-alt"></i></span></p>
<p>A programmer’s note | Tailscale：不一样的VPN<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnNodWtlYmV0YS5jb20vMjAyMC8wNS8xNS90YWlsc2NhbGUlRUYlQkMlOUElRTQlQjglOEQlRTQlQjglODAlRTYlQTAlQjclRTclOUElODR2cG4v">https://blog.shukebeta.com/2020/05/15/tailscale%EF%BC%9A%E4%B8%8D%E4%B8%80%E6%A0%B7%E7%9A%84vpn/<i class="fa fa-external-link-alt"></i></span></p>
<p>TAILSCALE种子轮融资300万加元 – North America Incubator<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cubmFpbmN1YmF0b3IuY29tLzIzMDQuaHRtbA==">https://www.naincubator.com/2304.html<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>网络</tag>
        <tag>vpn</tag>
        <tag>内网穿透</tag>
      </tags>
  </entry>
  <entry>
    <title>家庭多媒体中心（1）：综合篇</title>
    <url>/2020/05/01/%E5%AE%B6%E5%BA%AD%E5%A4%9A%E5%AA%92%E4%BD%93%E4%B8%AD%E5%BF%83%EF%BC%881%EF%BC%89%EF%BC%9A%E7%BB%BC%E5%90%88%E7%AF%87/</url>
    <content><![CDATA[<p><strong>什么是刮削器（Scrapers）</strong></p>
<blockquote>
<p>是指能够从以下受支持的站点收集电影的信息：IMDb，themoviedb.org，Rutten Tomatoes，OFDb.de，fanart.tv，port.hu、豆瓣等；</p>
</blockquote>
<p>这是一个系列，为了避免篇幅过长，准备分五个部分：</p>
<blockquote>
<ol>
<li>综合篇（本文）</li>
<li>影片的管理</li>
<li>影片的播放</li>
<li>流媒体服务</li>
<li>离线查询</li>
</ol>
</blockquote>
<p>以群晖为核心，从下载到播放，整个流程基本上实现了一个完整的闭环。</p>
<h1 id="离线查询："><a href="#离线查询：" class="headerlink" title="离线查询："></a><strong>离线查询</strong>：</h1><p>首先要有个管理系统，能查到某一部电影有没有下载过，如果是下载过的片源，能查到它的格式、分辨率等信息。<br><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/27/Jietu20200427-135747-1587967110918.jpg" alt="title"></p>
<h1 id="下载片源："><a href="#下载片源：" class="headerlink" title="下载片源："></a><strong>下载片源</strong>：</h1><p>如果是没有下载过的片源，可以用迅雷、BT、PT等各类下载软件去下；</p>
<h1 id="影片管理："><a href="#影片管理：" class="headerlink" title="影片管理："></a><strong>影片管理</strong>：</h1><ul>
<li>少量的电影无所谓管理，但是当数量多了就需要管理，不仅仅是方便查找；</li>
<li>如果电影都只在本机上，Windows平台上可以用极影派、zogvm2来管理，Mac上没研究过；</li>
<li>如果你和我一样可能要用到Kodi、Jellyfin、Emby、Plex等，建议用MediaElch、tinyMediaManager来做刮削器，可以生成漂亮的海报墙。下图是jellyfin上的显示效果。</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/27/0-1587966853645.png" alt="title"></p>
<h1 id="影片播放："><a href="#影片播放：" class="headerlink" title="影片播放："></a><strong>影片播放</strong>：</h1><ul>
<li>局域网中，虽然Kodi是个神器，而且支持各种平台，但是我还是更喜欢用各平台最常用的播放器，比如Windows下用PotPlayer，Mac下用IINA，Android手机上用MX Player，ios上用nPlayer。</li>
<li>如果有远程播放的需求，可以试试Emby、jellyfin、Plex等，其实对我来说这是个伪需求。</li>
</ul>
<h1 id="流媒体服务："><a href="#流媒体服务：" class="headerlink" title="流媒体服务："></a><strong>流媒体服务</strong>：</h1><ul>
<li>Plex、Emby是收费软件，按月付费提供 premium 服务，jellyfin是免费的，这几个软件都是跨平台的，哪怕是在windows电脑上，也是瞬间就可以变成流媒体服务器的。</li>
<li>国产软件，也可以考虑威动影音，支持移动端，虽然好像已经不再维护，但还是可以使用的。</li>
</ul>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a><strong>参考文档</strong></h1><blockquote>
<p>Add-on:Universal Movie Scraper<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9rb2RpLndpa2kvdmlldy9BZGQtb246VW5pdmVyc2FsX01vdmllX1NjcmFwZXI=">https://kodi.wiki/view/Add-on:Universal_Movie_Scraper<i class="fa fa-external-link-alt"></i></span></p>
<p>极影派 – 帮你管理本地电影视频库[Windows]<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuYXBwaW5uLmNvbS9qZWVucGkv">https://www.appinn.com/jeenpi/<i class="fa fa-external-link-alt"></i></span></p>
<p>ZogVM – 支持多硬盘、NAS 的本地音/视频库管理工具[Win]<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuYXBwaW5uLmNvbS96b2d2bS8=">https://www.appinn.com/zogvm/<i class="fa fa-external-link-alt"></i></span></p>
<p>Linux下电影管理软件的简单比较<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmJnbWUubWUvcG9zdHMvdGhlLWxpbnV4LW1vdmllLWNvbGxlY3Rpb24tbWFuYWdlcnMtY29tcGFyZWQvI21lZGlhZWxjaA==">https://blog.bgme.me/posts/the-linux-movie-collection-managers-compared/#mediaelch<i class="fa fa-external-link-alt"></i></span></p>
<p>手把手教您用tMM刮削影片信息，让KODI、Jellyfin、PLEX、使用本地媒体电影墙！<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2E0d2txdzM3Lw==">https://post.smzdm.com/p/a4wkqw37/<i class="fa fa-external-link-alt"></i></span></p>
<p>KODI使用心得（界面改中文、插件安装、设置媒体库）<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9kZjQ3NTc1NGFjYzE=">https://www.jianshu.com/p/df475754acc1<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>Emby</tag>
        <tag>jellyfin</tag>
        <tag>刮削器</tag>
        <tag>Scrapers</tag>
        <tag>Plex</tag>
        <tag>ZogVM</tag>
        <tag>极影派</tag>
        <tag>Kodi</tag>
      </tags>
  </entry>
  <entry>
    <title>在群晖上实现在线Office文档编辑</title>
    <url>/2020/05/08/%E5%9C%A8%E7%BE%A4%E6%99%96%E4%B8%8A%E5%AE%9E%E7%8E%B0%E5%9C%A8%E7%BA%BFOffice%E6%96%87%E6%A1%A3%E7%BC%96%E8%BE%91/</url>
    <content><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><ul>
<li>在docker注册表中搜索“onlyoffice”，第一个即为官方提供的image文件。</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/08/1-1588925796082.png" alt="title"></p>
<ul>
<li>双击开始安装，选“latest”</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/08/2-1588925921227.png" alt="title"></p>
<ul>
<li>下载速度还可以</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/08/3-1588926050168.png" alt="title"></p>
<h1 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h1><ul>
<li>先建好需要用的文件夹</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/08/4-1588926631369.png" alt="title"></p>
<ul>
<li>习惯性的限制下资源的使用</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/08/4-1588926371568.png" alt="title"></p>
<ul>
<li>进【高级设置】，【卷】的设置</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/08/6-1588929123790.png" alt="title"></p>
<ul>
<li>【端口】的设置</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/08/7-1588929135279.png" alt="title"></p>
<h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><p>在浏览器中输入 http://群晖IP:6080，当你看到下面这个界面，说明已经运行正常了。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/08/8-1588929147086.png" alt="title"></p>
<h1 id="集成"><a href="#集成" class="headerlink" title="集成"></a>集成</h1><p>接下来你可以继续在Docker中安装communityserver来搭建门户网站，将群晖变身成为集成了文档、电子邮件、事件、任务和客户关系管理工具的开源在线办公套件。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/08/83cbe-007rd8E4ly1g1ee0e0vjgj30mo0fsjxd-1588930691663.jpg" alt="title"><br>（图片来自：<span class="exturl" data-url="aHR0cHM6Ly9iYWl5dWUub25lL2FyY2hpdmVzLzQ1NS5odG1s77yJ">https://baiyue.one/archives/455.html）<i class="fa fa-external-link-alt"></i></span></p>
<p>也可以搭配云盘服务，比如nextcloud、owncloud、seafile、kodexplorer，实现office文档的在线预览和编辑。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/08/2500x1000-win-1588930210849.jpg" alt="title"></p>
<p>onlyoffice提供的在线创建，编辑和协作业务文档的方式，对于协同办公还是很有用的。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p> 群晖在线编辑文档方案-onlyoffice<br>地址：<span class="exturl" data-url="aHR0cDovL3d3dy5nZWJpMS5jbi90aHJlYWQtMjc4OTQ4LTEtMS5odG1s">http://www.gebi1.cn/thread-278948-1-1.html<i class="fa fa-external-link-alt"></i></span></p>
<p>折腾NAS 篇四：群晖Docker安装nextcloud私有云，以及onlyoffice、流程图和思维导图插件<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wLzczNTg3OS8=">https://post.smzdm.com/p/735879/<i class="fa fa-external-link-alt"></i></span></p>
<p>Docker快速搭建onlyoffice开源在线办公套件<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9iYWl5dWUub25lL2FyY2hpdmVzLzQ1NS5odG1s">https://baiyue.one/archives/455.html<i class="fa fa-external-link-alt"></i></span></p>
<p>Seafile服务器手册中文版–OnlyOffice 集成<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9tYW51YWwtY24tb3JpZ2luLnNlYWZpbGUuY29tL2RlcGxveV9wcm8vb2ZmaWNlLXdlbi1qaWFuLXl1LWxhbi1oZS1iaWFuLWppL29ubHlfb2ZmaWNl">https://manual-cn-origin.seafile.com/deploy_pro/office-wen-jian-yu-lan-he-bian-ji/only_office<i class="fa fa-external-link-alt"></i></span></p>
<p>使用可道云kodexplorer和ONLYOFFICE创建您的WebOffice云办公系统<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDAxMDk4Ni9hcnRpY2xlL2RldGFpbHMvODUwNTIwNTQ=">https://blog.csdn.net/weixin_44010986/article/details/85052054<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>docker</tag>
        <tag>onlyoffice</tag>
        <tag>nextcloud</tag>
        <tag>seafile</tag>
        <tag>owncloud</tag>
        <tag>kodexplorer</tag>
      </tags>
  </entry>
  <entry>
    <title>如何收藏微信内容到为知笔记</title>
    <url>/2020/06/30/%E5%A6%82%E4%BD%95%E6%94%B6%E8%97%8F%E5%BE%AE%E4%BF%A1%E5%86%85%E5%AE%B9%E5%88%B0%E4%B8%BA%E7%9F%A5%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>买了很多年的为知笔记，一直用来做个人的知识管理工具，对于微信中的好文章，无论是公众帐号推送的，还是朋友圈中分享的，都能一键保存到为知笔记，原本一直蛮顺手的，但是经过微信几次的接口调整，使用已经变的越来越麻烦了。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/30/1593516073900-1593516073906.png" alt="title"></p>
<p>4月份调整之后，在文章右上角的「…」弹出的分享菜单中，取消了所有公众号一键保存到第三方笔记的接口，使得我只能用「邮件」发送来保存。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/30/1593499220256-1593499220289.png" alt="title"></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/30/1593499291765-1593499291774.png" alt="title"></p>
<p>与调整之前比，需要多两个步骤：选联系人，发送确认。</p>
<p>但昨晚发现微信又调整了接口，这次连「邮件」都没有了。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/30/1593499506819-1593499506829.png" alt="title"></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/30/1593499543488-1593499543497.png" alt="title"></p>
<p>除了 「在浏览器打开」 外，清一色的全是腾讯自家产品。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/30/1593505015204-1593505015210.png" alt="title"></p>
<p>既然微信不能不用，笔记不能不记，那就只有再想办法咯。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/30/1593516272758-1593516272760.png" alt="title"></p>
<h1 id="方法一：「在浏览器打开」"><a href="#方法一：「在浏览器打开」" class="headerlink" title="方法一：「在浏览器打开」"></a>方法一：「在浏览器打开」</h1><p>以下操作在小米手机上验证通过。</p>
<ul>
<li><p>「在浏览器打开」</p>
</li>
<li><p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/30/1593518873637-1593518873640.png" alt="title"></p>
</li>
<li><p>打开浏览器的菜单</p>
</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/30/1593499839194-1593499839204.png" alt="title"></p>
<ul>
<li>选择分享</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/30/1593499914888-1593499914897.png" alt="title"></p>
<ul>
<li>选择更多</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/30/1593499979722-1593499979727.png" alt="title"></p>
<ul>
<li>「保存到为知笔记」</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/30/1593500074543-1593500074553.png" alt="title"></p>
<p>如果你用其他的笔记，道理应该是一样的。</p>
<p>这个方法虽然步骤较多，但不会中断目前的阅读，</p>
<h1 id="方案二：「复制链接」"><a href="#方案二：「复制链接」" class="headerlink" title="方案二：「复制链接」"></a>方案二：「复制链接」</h1><ul>
<li>复制文章链接</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/30/1593501144162-1593501144167.png" alt="title"></p>
<ul>
<li>向为知笔记服务号发送复制的链接</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/30/1593501177851-1593501177863.png" alt="title"></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/30/1593501238626-1593501238637.png" alt="title"></p>
<p>这个方法看起来步骤不多，但是因为都在微信中切换，所以会打断阅读，体验不好。</p>
<h1 id="方法三：「浮窗」"><a href="#方法三：「浮窗」" class="headerlink" title="方法三：「浮窗」"></a>方法三：「浮窗」</h1><p>利用微信「浮窗」功能，长期保存一篇含有「为知笔记」服务号二维码的文章.<br>如果你找不到的话，就用这篇吧。<span class="exturl" data-url="aHR0cHM6Ly93d3cud2l6LmNuL3poLWNuL3dlY2hhdGNsaXBwZXItd2VjaGF0aW50cm8=">https://www.wiz.cn/zh-cn/wechatclipper-wechatintro<i class="fa fa-external-link-alt"></i></span></p>
<ul>
<li>复制公众号文章链接后，点开浮窗。</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/30/1593504412601-1593504412639.png" alt="title"></p>
<ul>
<li>点出长期保存的带有「为知笔记」公众号二维码的文章，长按识别二维码进入「为知笔记」公众号</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/30/1593504517823-1593504517833.png" alt="title"></p>
<ul>
<li>再后面就和方法二一样了。</li>
</ul>
<p>比方法二强的地方在于不用切来切去。但是需要长按啥的，尤其是长期有个浮窗，反正我觉得很不爽，也许这就是强迫症吧。</p>
<h1 id="方法四：「收藏」"><a href="#方法四：「收藏」" class="headerlink" title="方法四：「收藏」"></a>方法四：「收藏」</h1><ul>
<li>先用微信「收藏」按钮来收藏内容</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/30/1593502327119-1593502327123.png" alt="title"></p>
<ul>
<li>当我们收藏了几篇文章以后，然后在「为知笔记」服务号，点击「加号」按钮，然后选择「收藏」按钮，把之前收藏的公众号文章发送给「为知笔记」。</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/30/1593502567727-1593502567732.png" alt="title"></p>
<ul>
<li>选中要发送的文章，点击「发送」即可</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/30/1593502636042-1593502636053.png" alt="title"></p>
<h1 id="方法五：微信双开"><a href="#方法五：微信双开" class="headerlink" title="方法五：微信双开"></a>方法五：微信双开</h1><p>再注册一个微信，重新将「为知笔记」服务号绑定到另一个微信，每次复制链接后切换到另一个双开微信里面去。</p>
<h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>暂时找到的方法就这些，相比较而言个人认为：</p>
<p>方法四 –&gt; 方法一 –&gt; 方法五 –&gt; 方法三 –&gt; 方法二</p>
<p>如果你有更好的方法，请告诉我！</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>更简单的收藏方法来了！快学起来<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvME5MY1JrclMyS3p2ZnRKUE83aVpMdw==">https://mp.weixin.qq.com/s/0NLcRkrS2KzvftJPO7iZLw<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>微信</tag>
        <tag>为知笔记</tag>
        <tag>WizNote</tag>
      </tags>
  </entry>
  <entry>
    <title>家庭多媒体中心（2）：管理篇</title>
    <url>/2020/05/01/%E5%AE%B6%E5%BA%AD%E5%A4%9A%E5%AA%92%E4%BD%93%E4%B8%AD%E5%BF%83%EF%BC%882%EF%BC%89%EF%BC%9A%E7%AE%A1%E7%90%86%E7%AF%87/</url>
    <content><![CDATA[<p><strong>什么是Kodi</strong></p>
<blockquote>
<p>Kodi (formerly XBMC) is a free and open source media player application developed by the XBMC/Kodi Foundation, a non-profit technology consortium. Kodi is available for multiple operating-systems and hardware platforms, featuring a 10-foot user interface for use with televisions and remote controls. It allows users to play and view most videos, music, podcasts, and other digital media files from local and network storage media and the internet.</p>
</blockquote>
<p><strong>什么是MediaElch</strong></p>
<blockquote>
<p>MediaElch is a free MediaManager for movies and tv shows. It supports generating of nfo files and also directly manipulating XBMCs database (SQLite). Posters, thumbnails, screenshots and actor images will be stored along movies and tv shows (when using nfos) or directly in XMBCs thumbnail folder. Built with Qt MediaElch is available for Mac OS X, Windows and Linux.</p>
</blockquote>
<p><strong>什么是tinyMediaManager</strong></p>
<blockquote>
<p>tinyMediaManager is a media management tool written in Java/Swing. It is written to provide metadata for the Kodi Media Center (formerly known as XBMC), MediaPortal and Plex media server. Due to the fact that it is written in Java, tinyMediaManager will run on Windows, Linux and macOS (and possible more OS).</p>
</blockquote>
<p><strong>什么是ZogVM</strong></p>
<blockquote>
<p>ZogVM 是一款专门针对大量音频、视频进行管理的工具，支持多硬盘、局域网 NAS、设备离线检索、匹配字幕并下载等功能。</p>
</blockquote>
<p><strong>什么是极影派</strong></p>
<blockquote>
<p>极影派是一款本地视频管理工具，能够帮你管理本地电脑上的视频、电影，并且可以自动获取电影信息，包括类型、导演、主演、简介、海报图片等资料，用来创建属于自己的电影视频库。</p>
</blockquote>
<p>电影下多了之后，会存在重复下载，或者同一个片源有多个格式、分辨率，这个比较浪费空间，也不利于查找，今天我们就聊聊电影的管理。</p>
<blockquote>
<ol>
<li>综合篇</li>
<li>管理篇（本文）</li>
<li>播放篇</li>
<li>流媒体服务</li>
<li>查询篇</li>
</ol>
</blockquote>
<h1 id="命名格式"><a href="#命名格式" class="headerlink" title="命名格式"></a>命名格式</h1><p>资料的组织和存放，必然要按照一定的规则，否则肯定乱糟糟的，不利于查找，所以Kodi给出了电影的命名规则( <span class="exturl" data-url="aHR0cHM6Ly9rb2RpLndpa2kvdmlldy9OYW1pbmdfdmlkZW9fZmlsZXMvTW92aWVz">https://kodi.wiki/view/Naming_video_files/Movies<i class="fa fa-external-link-alt"></i></span> )，我个人倾向于采用文件夹命名这样的结构：<br><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/01/Video-Movie_Folder_File_Structure-1588298537860.jpg" alt="title"></p>
<p>电视剧的命名规则（ <span class="exturl" data-url="aHR0cHM6Ly9rb2RpLndpa2kvdmlldy9OYW1pbmdfdmlkZW9fZmlsZXMvVFZfc2hvd3M=">https://kodi.wiki/view/Naming_video_files/TV_shows<i class="fa fa-external-link-alt"></i></span> ）</p>
<h1 id="管理软件"><a href="#管理软件" class="headerlink" title="管理软件"></a>管理软件</h1><h2 id="Kodi"><a href="#Kodi" class="headerlink" title="Kodi"></a>Kodi</h2><p>刮削器首选Kodi，功能强大、扩展性强、界面漂亮，为了电视等大屏设备做了特别优化，在家庭影音系统中倍受青睐。然而 Kodi 的劣势也很明显：比如默认情况下无法在不同设备上同步数据，这个我们放到查询篇再说。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/01/kodi-media-center-vulnerability-exposes-users-to-man-in-the-middle-attacks-600x315-1588300797866.png" alt="title"></p>
<p>界面效果展示</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/01/3536d9c54417375d82823002d2a3303-1588300950052.png" alt="title"></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/01/290fc0ece9c21758514fffef1573d78-1588308178290.png" alt="title"></p>
<h2 id="MediaElch"><a href="#MediaElch" class="headerlink" title="MediaElch"></a>MediaElch</h2><p>这是目前本人日常用的刮削器，感觉用的人不是很多，但是官方的文档还比较详细，主要是支持和Kodi同步，意味着可以共享媒体库，这一点对我来说很重要。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/27/icon-1587952393579.png" alt="title"></p>
<p>界面效果展示：</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/27/a7289ec6269856496b1be887ae3545f-1587995862868.png" alt="title"></p>
<p>同步设置界面</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/01/15fa93859f1e9326157980b4bcbe7b7-1588306523428.png" alt="title"></p>
<h2 id="tinyMediaManager"><a href="#tinyMediaManager" class="headerlink" title="tinyMediaManager"></a>tinyMediaManager</h2><p>这个软件用的人比较多，网上教程也很多。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/01/images-1588301699586.jpg" alt="title"></p>
<p>界面效果展示：</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/27/703e264d7d24a7da30834de23079124-1587998438949.png" alt="title"></p>
<p>看设置也支持和Kodi共享媒体库，但本人没实践过。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/01/image-5-1588305127636.png" alt="title"></p>
<p>（图片来自：<span class="exturl" data-url="aHR0cHM6Ly9rb2Z6aGFuZ2FuZ3VvLmhvbWUuYmxvZy8yMDE5LzA2LzA0LyVFNyVBQyVBQyVFNCVCOCU4MCVFNSVCQyVCOS10aW55bWVkaWFtYW5hZ2VyLSVFNSU5RiVCQSVFNiU5QyVBQyVFOCVBRSVCRSVFNyVCRCVBRSVFNyVBRiU4Ny/vvIk=">https://kofzhanganguo.home.blog/2019/06/04/%E7%AC%AC%E4%B8%80%E5%BC%B9-tinymediamanager-%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE%E7%AF%87/）<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="ZogVM"><a href="#ZogVM" class="headerlink" title="ZogVM"></a>ZogVM</h2><p>这个软件最大的特点就是搜索速度极快，据说可以媲美EveryThing，可惜 ZogVM2已经停止更新了，但是 ZogVM3 又跳票了几年了。界面效果展示：</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/01/zogvm2.0-1588303329930.jpg" alt="title"></p>
<p>（图片来自：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3pvZ3ZtL3pvZ3Zt77yJ">https://github.com/zogvm/zogvm）<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="极影派"><a href="#极影派" class="headerlink" title="极影派"></a>极影派</h2><p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/01/logo-2-1588302621835.png" alt="title"></p>
<p>界面效果展示</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/01/006D2KSdjw1fatuz0vokrj31e00nmne6-1588302889531.jpg" alt="title"></p>
<p>（图片来自：<span class="exturl" data-url="aHR0cHM6Ly93d3cud3V6dW93ZWkubmV0LzU1NzcuaHRtbO+8iQ==">https://www.wuzuowei.net/5577.html）<i class="fa fa-external-link-alt"></i></span></p>
<p>这些软件都很优秀，总会有一款适合你的需求。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a><strong>参考文档</strong></h1><blockquote>
<p>Kodi官网<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9rb2RpLnR2Lw==">https://kodi.tv/<i class="fa fa-external-link-alt"></i></span></p>
<p>MediaElch官网<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cua3ZpYmVzLmRlL21lZGlhZWxjaC8=">https://www.kvibes.de/mediaelch/<i class="fa fa-external-link-alt"></i></span></p>
<p>MediaElch官方文档<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9tZWRpYWVsY2guZ2l0aHViLmlvL21lZGlhZWxjaC1kb2Mv">https://mediaelch.github.io/mediaelch-doc/<i class="fa fa-external-link-alt"></i></span></p>
<p>tinyMediaManager官网<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cudGlueW1lZGlhbWFuYWdlci5vcmcv">https://www.tinymediamanager.org/<i class="fa fa-external-link-alt"></i></span></p>
<p>ZogVM – 支持多硬盘、NAS 的本地音/视频库管理工具[Win]<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuYXBwaW5uLmNvbS96b2d2bS8=">https://www.appinn.com/zogvm/<i class="fa fa-external-link-alt"></i></span></p>
<p>ZogVM 电影视频管理软件 - 影迷必备利器！整理/收集/管理硬盘 NAS 大量影音资源<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuaXBsYXlzb2Z0LmNvbS96b2d2bS5odG1s">https://www.iplaysoft.com/zogvm.html<i class="fa fa-external-link-alt"></i></span></p>
<p>极影派官网<br>地址：<span class="exturl" data-url="aHR0cDovL3d3dy5qZWVucGkuY29tLw==">http://www.jeenpi.com/<i class="fa fa-external-link-alt"></i></span></p>
<p>极影派 – 帮你管理本地电影视频库[Windows]<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuYXBwaW5uLmNvbS9qZWVucGkv">https://www.appinn.com/jeenpi/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>刮削器</tag>
        <tag>ZogVM</tag>
        <tag>极影派</tag>
        <tag>Kodi</tag>
        <tag>MediaElch</tag>
        <tag>tinyMediaManager</tag>
      </tags>
  </entry>
  <entry>
    <title>家庭多媒体中心（3）：播放篇</title>
    <url>/2020/05/01/%E5%AE%B6%E5%BA%AD%E5%A4%9A%E5%AA%92%E4%BD%93%E4%B8%AD%E5%BF%83%EF%BC%883%EF%BC%89%EF%BC%9A%E6%92%AD%E6%94%BE%E7%AF%87/</url>
    <content><![CDATA[<p><strong>什么是Samba</strong></p>
<blockquote>
<p>Samba是一套使用SMB(Server Message Block)协议的应用程序, 通过支持这个协议, Samba允许Linux服务器与Windows系统之间进行通信,使跨平台的互访成为可能。Samba采用C/S模式, 其工作机制是让NetBIOS( Windows 网上邻居的通信协议)和SMB两个协议运行于TCP/IP通信协议之上,并且用NetBEUI协议让Windows在“网上邻居”中能浏览Linux服务器。</p>
</blockquote>
<p>既然是家庭多媒体中心，主要的应用场景就是局域网，需求就是要能实现多屏幕的播放，包括：电视、机顶盒、PC电脑、Mac电脑、平板电脑、手机等。这些设备的操作系统涵盖了主流的Windows、Mac OS、Android和iOS。</p>
<blockquote>
<ol>
<li>综合篇</li>
<li>管理篇</li>
<li>播放篇（本文）</li>
<li>流媒体服务</li>
<li>查询篇</li>
</ol>
</blockquote>
<h1 id="协议"><a href="#协议" class="headerlink" title="协议"></a>协议</h1><p>目前常见的媒体共享方式主要有以下几种：Samba、ftp、upnp（DLNA）、NFS等，对于我们使用来说并不用关心具体的协议及其实现原理，只要简单好用就行。建议用Samba协议，需要在群晖中启用。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/01/7f7f0928e434e1601c44c74ebaad622-1588313906643.png" alt="title"></p>
<h1 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h1><table>
<thead>
<tr>
<th align="center">设备</th>
<th align="center">系统</th>
<th align="center">推荐的播放器</th>
<th align="center">主要操作方式</th>
</tr>
</thead>
<tbody><tr>
<td align="center">机顶盒</td>
<td align="center">Android平台</td>
<td align="center">小白文件管理器</td>
<td align="center">遥控器</td>
</tr>
<tr>
<td align="center">台式机、笔记本</td>
<td align="center">Windows平台</td>
<td align="center">PotPlayer</td>
<td align="center">鼠标+快捷键</td>
</tr>
<tr>
<td align="center">Mac电脑</td>
<td align="center">Mac OS平台</td>
<td align="center">IINA</td>
<td align="center">触控板+快捷键</td>
</tr>
<tr>
<td align="center">android手机或平板</td>
<td align="center">Android平台</td>
<td align="center">MX Player</td>
<td align="center">触控屏</td>
</tr>
<tr>
<td align="center">iOS手机或iPAD平板</td>
<td align="center">iOS平台</td>
<td align="center">nPlayer</td>
<td align="center">触控屏</td>
</tr>
</tbody></table>
<h2 id="小白文件管理器"><a href="#小白文件管理器" class="headerlink" title="小白文件管理器"></a>小白文件管理器</h2><p>小白文件管理器是完全针对电视进行设计、开发的，因此出色地适配了电视的各种操作方式，用电视遥控器也能快速完成文件管理操作。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/01/a8b893088d7386e8c21ba9952e190e3-1588315234306.jpg" alt="title"></p>
<p>只要选择左边的【家庭网络】，就能看到smb共享的影片了。</p>
<h2 id="PotPlayer"><a href="#PotPlayer" class="headerlink" title="PotPlayer"></a>PotPlayer</h2><p>PotPlayer 是 KMPlayer 的原作者姜勇囍進入 Daum 公司后的新一代作品，内置了解码器，支持支援 DXVA（DirectX Video Acceleration）、CUDA（Compute Unified Device Architecture）和 QSV（QuickSync Video Acceleratio）等硬件加速技术，也就是能够使用 GPU 来协助解码并播放影片。PotPlayer 启动迅速、功耗低、解码能力强大，所以在 Windows 平台上本人再没用过其他的播放器。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/01/scrNsaKUe-1588316745355.png" alt="title"></p>
<h2 id="IINA"><a href="#IINA" class="headerlink" title="IINA"></a>IINA</h2><p>IINA 是一款基于 mpv 的自由及开源的媒体播放器。从框架到界面、用户体验，都是非常与 MacOS 系统最搭的视频播放器，处处融入了 MacOS 的设计语言：简洁的画面、大量的毛玻璃元素、功能上可以结合Force Touch, Touch Bar等。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/01/sc-sky-1588316723371.png" alt="title"></p>
<h2 id="MX-Player"><a href="#MX-Player" class="headerlink" title="MX Player"></a>MX Player</h2><p>作为Android平台上最强悍的视频播放器，MX Player以超强的解码性能以及兼容性闻名，对字幕的支持更是堪称一绝，能够兼容特效字幕，支持在线字幕匹配，看外语片无需自己找字幕！强力的硬件加速，可以轻松的更改解码模式，安装后会根据CPU型号安装对应的解码包。如果你需要更多功能可以选择MX Player Pro。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/01/15081256088254927-1588317546356.jpg" alt="title"></p>
<h2 id="nPlayer"><a href="#nPlayer" class="headerlink" title="nPlayer"></a>nPlayer</h2><p>nPlayer 支持视频格式众多，支持WebDAV，FTP，SFTP，HTTP，SMB / CIFS，UPnP / DLNA（流媒体和下载）。支持与各种NAS设备同步。IOS端一共有三个版本：nPlayer Lite、nPlayer、nPlayer Plus。Lite免费版，基本使用没有问题，只是主界面底部有广告。后两者在产品使用上没有任何区别。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/01/570d01c0ce90ae898d44b06098879fd-1588318912746.jpg" alt="title"></p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a><strong>参考文档</strong></h1><blockquote>
<p>小白文件管理器<br>地址：<span class="exturl" data-url="aHR0cDovL2FwcC5zaGFmYS5jb20vYXBrL3hpYW9iYWl3ZW5qaWFuZ3VhbmxpcWkuaHRtbA==">http://app.shafa.com/apk/xiaobaiwenjianguanliqi.html<i class="fa fa-external-link-alt"></i></span></p>
<p>PotPlayer：最强播放器，无边框+4款简约皮肤<br>地址：<span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zNTc1NzE3Ng==">https://zhuanlan.zhihu.com/p/35757176<i class="fa fa-external-link-alt"></i></span></p>
<p>IINA官网<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9paW5hLmlvLw==">https://iina.io/<i class="fa fa-external-link-alt"></i></span></p>
<p>软件分享 篇十二：MXplayer Pro —— 安卓最强万能格式播放器<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2FyMDhyOTlxLw==">https://post.smzdm.com/p/ar08r99q/<i class="fa fa-external-link-alt"></i></span></p>
<p>nPlayer - 手机全能格式视频播放器<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9jaHJvbWVjai5jb20vaW9zLzIwMTktMDIvMTg4Ni5odG1s">https://chromecj.com/ios/2019-02/1886.html<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>Potplayer</tag>
        <tag>IINA</tag>
        <tag>nplayer</tag>
        <tag>MX Player</tag>
        <tag>小白文件管理器</tag>
        <tag>samba</tag>
      </tags>
  </entry>
  <entry>
    <title>家庭多媒体中心（4）：流媒体服务器篇</title>
    <url>/2020/05/01/%E5%AE%B6%E5%BA%AD%E5%A4%9A%E5%AA%92%E4%BD%93%E4%B8%AD%E5%BF%83%EF%BC%884%EF%BC%89%EF%BC%9A%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AF%87/</url>
    <content><![CDATA[<p>如果需要远程播放，上一篇提到的Samba协议也是可以的，但只能用Zerotier组网方式了，如果我们还想通过Web上观看电影的话就只能在群晖上搭建流媒体服务了。</p>
<blockquote>
<ol>
<li>综合篇</li>
<li>管理篇</li>
<li>播放篇</li>
<li>流媒体服务（本文）</li>
<li>查询篇</li>
</ol>
</blockquote>
<p>群晖上搭建媒体服务器的选择主要有自带的Video Station、Plex、Emby、Jellyfin等，除了Web方式外，还支持手机、TV等多种客户端方式。</p>
<p>网上别人总结的一些优缺点：</p>
<blockquote>
<ul>
<li><p>DS Video：群晖自带的Video Station支持的格式没有其他软件的多。比如群晖没有取得 DTS 音效格式的授权，导致很多格影片格式不能看。</p>
</li>
<li><p>Plex：1）专业版收费。2）免费版不支持硬件解码。3）不支持蓝光原盘。</p>
</li>
<li><p>Emby：Emby从3.6开始闭源后，越来越多的设置需要使用收费了。当然也包括硬件解码。</p>
</li>
<li><p>Jellyfin：Jellyfin和Emby是类似的，（原emby的部分社区开发者fork了emby 3.5.2的存储库，新建了jellyfin项目），目前所有功能都是免费的，而且支持硬件解码。</p>
</li>
</ul>
</blockquote>
<h1 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h1><h2 id="DS-Video"><a href="#DS-Video" class="headerlink" title="DS Video"></a>DS Video</h2><p>DS Video可以在群晖的【套件中心】中找到并安装，安装设置都比较简单，界面效果图：</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/01/2020-02-21_221218-1588338398920.jpg" alt="title"></p>
<p>至于格式少的问题，可以通过安装第三方插件来解决，如果你在【套件中心】添加了第三方源【 <span class="exturl" data-url="aHR0cDovL3BhY2thZ2VzLnN5bm9jb21tdW5pdHkuY29t">http://packages.synocommunity.com<i class="fa fa-external-link-alt"></i></span> 】，就可以直接搜索ffmpeg，安装完成后，Video Station将可以支持更多格式。</p>
<h2 id="Plex"><a href="#Plex" class="headerlink" title="Plex"></a>Plex</h2><p>在群晖上Plex可以通过【套件中心】安装，官方支持的版本相对较低，如果想要高版本的也可以通过Docker来安装，界面效果图：</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/01/plex-full-library-500x500-1588340022437.jpg" alt="title"></p>
<h2 id="Emby"><a href="#Emby" class="headerlink" title="Emby"></a>Emby</h2><p>在群晖上Emby需要通过Docker来安装，当然也可以通过给【套件中心】增加第三方源的方式</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/01/5c124c17ba3232683.png_e680-1588340165884.png" alt="title"></p>
<p>界面效果图：</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/01/unnamed-1588340581645.jpg" alt="title"></p>
<h2 id="Jellyfin"><a href="#Jellyfin" class="headerlink" title="Jellyfin"></a>Jellyfin</h2><p>个人推荐使用Jellyfin，主要是因为它是开源软件，所有功能都是免费的，界面效果图：</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/01/38650d9efcdc7b0bf3cfccd2de83ef6-1588340701890.png" alt="title"></p>
<h1 id="远程访问"><a href="#远程访问" class="headerlink" title="远程访问"></a>远程访问</h1><p>以Jellyfin为例，来看看Docker的设置，端口默认是8096。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/01/fa7f1efca6ff367f2c42ea5814a8530-1588341241086.png" alt="title"></p>
<ul>
<li>如果你是有公网IP的幸运儿，只要在路由器中将8096映射出去即可；</li>
<li>如果你和我一样用frp，需要在frpc.ini中增加一段设置：</li>
</ul>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[movie]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">192.168</span>.<span class="number">0.200</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">8096</span></span><br><span class="line"><span class="attr">custom_domains</span> = movie.abc.ml</span><br></pre></td></tr></table></figure>


<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a><strong>参考文档</strong></h1><blockquote>
<p>[NAS] 如何安裝 FFmpeg 套件，解決 DS Video 電影格式不支援的問題<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9hbWJlcjEwMDIucGl4bmV0Lm5ldC9ibG9nL3Bvc3QvMzQ2NDY4ODEtJTVCbmFzJTVELSVFNSVBNiU4MiVFNCVCRCU5NSVFNSVBRSU4OSVFOCVBMyU5RC1mZm1wZWctJUU1JUE1JTk3JUU0JUJCJUI2JUVGJUJDJThDJUU4JUE3JUEzJUU2JUIxJUJBLWRzLXZpZGVvLSVFOSU5QiVCQiVFNSVCRCVCMSVFNiVBMCVCQw==">https://amber1002.pixnet.net/blog/post/34646881-%5Bnas%5D-%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%9D-ffmpeg-%E5%A5%97%E4%BB%B6%EF%BC%8C%E8%A7%A3%E6%B1%BA-ds-video-%E9%9B%BB%E5%BD%B1%E6%A0%BC<i class="fa fa-external-link-alt"></i></span></p>
<p>推荐-群晖第三方套件如何安装-第三方套件推荐等<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9pLmlwYW5zaXIuY29tLzEyMDkuaHRtbA==">https://i.ipansir.com/1209.html<i class="fa fa-external-link-alt"></i></span></p>
<p>群晖NAS搭建Plex影音中心<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC83NTk2YjllNTM4OTk=">https://www.jianshu.com/p/7596b9e53899<i class="fa fa-external-link-alt"></i></span></p>
<p>折腾笔记 篇二：群晖+Kodi+emby一步一步打造家庭多媒体中心<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2FvbzZ6dms2Lw==">https://post.smzdm.com/p/aoo6zvk6/<i class="fa fa-external-link-alt"></i></span></p>
<p>群晖使用docker安装&amp;使用EMBY全流程教程-长文<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9zbGVlbGUuY29tLzIwMjAvMDIvMTUvZW1ieS8=">https://sleele.com/2020/02/15/emby/<i class="fa fa-external-link-alt"></i></span></p>
<p>手把手教你搭建群晖系统下影音软件Jellyfin<br>地址：<span class="exturl" data-url="aHR0cDovL3pob25nY2Uuc2luYS5jb20uY24vYXJ0aWNsZS92aWV3LzM3Mjg1Lw==">http://zhongce.sina.com.cn/article/view/37285/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>Emby</tag>
        <tag>Plex</tag>
        <tag>流媒体服务器</tag>
        <tag>Jellyfin</tag>
        <tag>威动影音</tag>
      </tags>
  </entry>
  <entry>
    <title>小米手机降级记录</title>
    <url>/2020/09/26/%E5%B0%8F%E7%B1%B3%E6%89%8B%E6%9C%BA%E9%99%8D%E7%BA%A7%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>MIUI 12 新增了大量功能特性，看起来也很炫酷，所以收到推送后第一时间就升了级</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/26/1601119035746-1601119035780.png" alt="title"></p>
<p>可是用了几天后发现，我的小米8一天3冲变成了常态，最要命的是手机会变身暖手宝，时不时的发发烫，就看见电量蹭蹭的往下掉，不带个充电宝都不敢出门，最后纠结了半天还是决定刷机降级</p>
<h1 id="备份手机"><a href="#备份手机" class="headerlink" title="备份手机"></a>备份手机</h1><p>既然要刷机，首先就应该先备份数据</p>
<p>在设置中，找到备份与恢复</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/26/1601120094811-1601120094813.png" alt="title"></p>
<p>当应用比较多的时候还是比较花时间的，尤其是微信，居然占用了 20 个 G，但是备份出来应该是进行了压缩，只有 5~6 个 G 了</p>
<p>这里只备份了数据和程序，没有包含照片、文档等内容，需要我们另外备份。当然如果你买了小米的会员，应该就简单多了</p>
<h1 id="手机解锁"><a href="#手机解锁" class="headerlink" title="手机解锁"></a>手机解锁</h1><p>因为不熟悉小米，所以我是上来就直接刷机的，结果显示锁定状态下不允许擦除</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/26/1601120894277-1601120894280.png" alt="title"></p>
<p>结果跑去解锁又失败了，告诉我要先绑定</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/26/1601122238697-1601122238698.png" alt="title"></p>
<p>所以走了一堆弯路后，让我们捋一下流程：要解锁，首先要绑定设备和账号，而要完成绑定的话，先得打开开发者模式</p>
<h2 id="开发者模式"><a href="#开发者模式" class="headerlink" title="开发者模式"></a>开发者模式</h2><p>打开 <code>系统设置</code>，依次点击<code>我的设备</code> –&gt; <code>全部参数</code> 后进入到参数界面，在参数界面连续点击 5 次 MIUI 版本，开启成功会弹出提示 “开发者模式成功开启” 。</p>
<h2 id="绑定账号和设备"><a href="#绑定账号和设备" class="headerlink" title="绑定账号和设备"></a>绑定账号和设备</h2><p>在系统设置界面下依次点击 <code>更多设置</code> –&gt; <code>开发者选项</code> 进入到开发者选项设置。</p>
<p>在 <code>开发者选项</code> 界面下拉找到 <code>设备解锁状态</code> 进入到 <code>绑定账号</code> 界面，点击<code>绑定账号和设备</code>，绑定成功会提示绑定成功</p>
<blockquote>
<p>如果使用 WIFI 会提示关闭 WIFI 后使用移动数据进行绑定<br>如果关闭 WIFI 提示绑定不成功，退出小米账号重新登录一下小米账号再次尝试绑定<br>如果还是失败，尝试关闭 <code>小米云服务</code> 中的 <code>查找手机</code> 功能</p>
</blockquote>
<p>再不好使我也不知道了，因为我关闭 <code>查找手机</code> 功能之后就绑定成功了</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/26/1601121827476-1601121827481.png" alt="title"></p>
<h2 id="解锁手机"><a href="#解锁手机" class="headerlink" title="解锁手机"></a>解锁手机</h2><p>访问官网进行解锁 ，地址是 <span class="exturl" data-url="aHR0cDovL3d3dy5taXVpLmNvbS91bmxvY2svaW5kZXguaHRtbA==">http://www.miui.com/unlock/index.html<i class="fa fa-external-link-alt"></i></span></p>
<p>下载解锁工具后，按流程操作</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/26/1601122064798-1601122064800.png" alt="title"></p>
<p>手机进入 BootLoader 模式，用 USB 数据线和电脑连接，连接成功后会提示你用户数据将被清除，所以切记一定要先备份，备份，备份</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/26/1601122598833-1601122598834.png" alt="title"></p>
<p>开始解锁了会再次提醒</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/26/1601122754136-1601122754137.png" alt="title"></p>
<p>解锁成功</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/26/1601122803641-1601122803642.png" alt="title"></p>
<h1 id="下载固件"><a href="#下载固件" class="headerlink" title="下载固件"></a>下载固件</h1><p>小米各机型的固件可以在这里找到 <span class="exturl" data-url="aHR0cHM6Ly9taXVpdmVyLmNvbS8=">https://miuiver.com/<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/26/1601122964973-1601122964975.png" alt="title"></p>
<p>我的是小米8屏下指纹透明版，所以我下载 <code>小米8 探索版</code> 的线刷包</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/26/1601123076315-1601123076318.png" alt="title"></p>
<p>可是加载后告诉我不匹配</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/26/1601123152292-1601123152293.png" alt="title"></p>
<p>后来才搞明白，我应该下 <code>小米8 Pro</code> 的线刷包</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/26/1601123233085-1601123233086.png" alt="title"></p>
<p>我直接下载了最古老的版本，这样后续还可以用 OTA 进行升级</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/26/1601123378479-1601123378482.png" alt="title"></p>
<h1 id="开始刷机"><a href="#开始刷机" class="headerlink" title="开始刷机"></a>开始刷机</h1><p>MIUI 的刷机工具可以在这里下载 <span class="exturl" data-url="aHR0cDovL3d3dy5taXVpLmNvbS9zaHVhamktMzkzLmh0bWw=">http://www.miui.com/shuaji-393.html<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/26/1601123585907-1601123585908.png" alt="title"></p>
<p>手机进入 BootLoader 模式，用 USB 数据线和电脑连接，首先会需要安装驱动</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/26/1601125278343-1601125278344.png" alt="title"></p>
<p>选择 <code>全部删除并lock</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/26/1601125329482-1601125329483.png" alt="title"></p>
<p>完成后手机会重启，按向导设置好就可以使用了。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>小米手机MIUI系统降级任意版本通用教程，MIUI12→MIUI9<br>地址：<span class="exturl" data-url="aHR0cDovL3d3dy4zNjBkb2MuY29tL2NvbnRlbnQvMjAvMDUyNS8yMS80MDUyMDA3OV85MTQ1MjcwMDkuc2h0bWw=">http://www.360doc.com/content/20/0525/21/40520079_914527009.shtml<i class="fa fa-external-link-alt"></i></span></p>
<p>小米手机解锁 Bootloader 教程 - 小米社区<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cueGlhb21pLmNuL3Bvc3QvMTg4NzM1MzU=">https://www.xiaomi.cn/post/18873535<i class="fa fa-external-link-alt"></i></span></p>
<p>通过线刷升级<br>地址：<span class="exturl" data-url="aHR0cDovL3d3dy5taXVpLmNvbS9zaHVhamktMzkzLmh0bWw=">http://www.miui.com/shuaji-393.html<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>小米手机</tag>
        <tag>MIUI</tag>
        <tag>刷机</tag>
      </tags>
  </entry>
  <entry>
    <title>手动安装WordPress</title>
    <url>/2020/04/28/%E6%89%8B%E5%8A%A8%E5%AE%89%E8%A3%85WordPress/</url>
    <content><![CDATA[<p>原本以为下载了源代码，丢到群晖的web就OK了，但是很快就被打脸了</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/20/405-not-allowed-error-nginx-chrome-1587372276790.png" alt="title"></p>
<p>换浏览器，用Safari<br><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/20/405-not-allowed-error-nginx-safari-1587372451916.png" alt="title"></p>
<p>算了，没力气折腾，还是把Nginx换成Apache试试吧</p>
<p><strong>安装组件</strong></p>
<ul>
<li>之前已经安装过Web Station、PHP5.6、PHP7.2、MariaDB 5、phpMyAdmin，所以主要再装个Apache2.4即可</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/20/Jietu20200420-165729-1587373072541.jpg" alt="title"></p>
<ul>
<li>进入Web Satation修改http后端服务器</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/20/Jietu20200420-165544-1587373005801.jpg" alt="title"></p>
<ul>
<li><p>对PHP7.2进行设置<br><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/20/Jietu20200420-170053-1587373282769.jpg" alt="title"></p>
</li>
<li><p>安装PHP7.2必要的组件，安装curl，gd，mysqli，openssl，下图中直接打钩就行；<br><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/20/Jietu20200420-170401-1587373473543.jpg" alt="title"></p>
</li>
<li><p>在phpMyAdmin，用root账户登录，新建WordPress的数据库</p>
</li>
<li><p>将wp-config-sample.php复制一份，重命名为wp-config.php，按下图进行修改：<br><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/20/WechatIMG3869-1587373734970.png" alt="title"></p>
</li>
<li><p>访问<span class="exturl" data-url="aHR0cDovL0lQL3dvcmRwcmVzc++8jOaMieatpemqpOaTjeS9nOWNs+WPr++8mw==">http://IP/wordpress，按步骤操作即可；<i class="fa fa-external-link-alt"></i></span></p>
</li>
</ul>
<p>到这里，已经可以在局域网中通过IP使用了，可以根据自己的喜好设置主题等；<br><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/20/WechatIMG3870-1587373941561.png" alt="title"></p>
<p><strong>参考文档</strong></p>
<blockquote>
<p>1、<span class="exturl" data-url="aHR0cHM6Ly9raW5zdGEuY29tL2Jsb2cvNDA1LW1ldGhvZC1ub3QtYWxsb3dlZC1lcnJvci8=">How to Fix the 405 Method Not Allowed Error on Your WordPress Site<i class="fa fa-external-link-alt"></i></span><br>2、<span class="exturl" data-url="aHR0cHM6Ly9vZGNuLnRvcC8yMDE4LzEwLzA2LzU0LyVFNyVCRSVBNCVFNiU5OSU5NmRzbS02LTIlRUYlQkMlOEMlRTYlODklOEIlRTUlOEElQTglRTUlQUUlODklRTglQTMlODV3b3JkcHJlc3MlRUYlQkMlOENhcGFjaGUtMi00cGhwLTctMC8=">群晖DSM 6.2，手动安装WordPress，Apache 2.4+PHP 7.0<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>MariaDB</tag>
        <tag>WordPress</tag>
        <tag>PHP</tag>
        <tag>Nginx</tag>
        <tag>Apache</tag>
      </tags>
  </entry>
  <entry>
    <title>家庭多媒体中心（5）：查询篇</title>
    <url>/2020/05/02/%E5%AE%B6%E5%BA%AD%E5%A4%9A%E5%AA%92%E4%BD%93%E4%B8%AD%E5%BF%83%EF%BC%885%EF%BC%89%EF%BC%9A%E6%9F%A5%E8%AF%A2%E7%AF%87/</url>
    <content><![CDATA[<p>Kodi（以前叫XBMC）是一款强大的开源媒体播放器软件，支持 MacOS、Windows、Linux、Android等多系统平台。Kodi 的局域网视频播放功能异常强大；默认情况下 Kodi 的资料库是独立的，这就带来一个很大的问题，当家里有多个Kodi终端的话，资料的同步是个很大的问题。</p>
<blockquote>
<ol>
<li>综合篇</li>
<li>管理篇</li>
<li>播放篇</li>
<li>流媒体服务</li>
<li>查询篇（本文）</li>
</ol>
</blockquote>
<h1 id="提出问题"><a href="#提出问题" class="headerlink" title="提出问题"></a>提出问题</h1><p>Kodi 刮削的内容默认都是存在设备本地存储上的，而电影都是统一存储在 NAS 里的，如果想要每台安装了 Kodi 的设备都显示一样的资料库该怎么办？</p>
<h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>首先我们想到的就是能不能用数据库来统一管理？结果还真是可行的，只需要我们在群晖上安装数据库和共享刮削资料的文件夹即可。具体的步骤略过，只要仔细阅读参考文档即可。这里只提示关键的步骤。</p>
<blockquote>
<ul>
<li>从【套件中心】安装MariaDB数据库；<br><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/02/f8a3e8aa9c7485c1714e77cc02f2bdf-1588402683571.png" alt="title"></li>
<li>从【套件中心】安装PHPMyAdmin，用于管理MariaDB数据库；<br><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/02/99fdd953b382d4ed4dae5b41b9ae658-1588402708642.png" alt="title"></li>
<li>为Kodi注册一个数据库用户，当然你也可以用root，但从安全性考虑，强烈不建议这么做。</li>
<li>如果你已经用了Kodi，选择具有最新库的机器，打开Kodi并进入设置&gt;媒体设置&gt;导出库。</li>
<li>创建advancedsettings.xml文件</li>
</ul>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" standalone="yes" ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">advancedsettings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">services</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">esallinterfaces</span>&gt;</span>true<span class="tag">&lt;/<span class="name">esallinterfaces</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">webserver</span>&gt;</span>true<span class="tag">&lt;/<span class="name">webserver</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">zeroconf</span>&gt;</span>false<span class="tag">&lt;/<span class="name">zeroconf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">services</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">videodatabase</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">type</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">type</span>&gt;</span>                //数据库类型mysql</span><br><span class="line">        <span class="tag">&lt;<span class="name">host</span>&gt;</span>192.168.0.199<span class="tag">&lt;/<span class="name">host</span>&gt;</span>        //数据库所在设备IP地址</span><br><span class="line">        <span class="tag">&lt;<span class="name">port</span>&gt;</span>3306<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">user</span>&gt;</span>kodi<span class="tag">&lt;/<span class="name">user</span>&gt;</span>                 //数据库用户名</span><br><span class="line">        <span class="tag">&lt;<span class="name">pass</span>&gt;</span>123456<span class="tag">&lt;/<span class="name">pass</span>&gt;</span>               //数据库密码</span><br><span class="line">    <span class="tag">&lt;/<span class="name">videodatabase</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">musicdatabase</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">type</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">host</span>&gt;</span>192.168.0.199<span class="tag">&lt;/<span class="name">host</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">port</span>&gt;</span>3306<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">user</span>&gt;</span>kodi<span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pass</span>&gt;</span>123456<span class="tag">&lt;/<span class="name">pass</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">musicdatabase</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">videolibrary</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">importwatchedstate</span>&gt;</span>true<span class="tag">&lt;/<span class="name">importwatchedstate</span>&gt;</span>      //导入观看状态</span><br><span class="line">        <span class="tag">&lt;<span class="name">importresumepoint</span>&gt;</span>true<span class="tag">&lt;/<span class="name">importresumepoint</span>&gt;</span>        //导入播放记录点</span><br><span class="line">    <span class="tag">&lt;/<span class="name">videolibrary</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">pathsubstitution</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">substitute</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">from</span>&gt;</span>special://profile/Thumbnails/<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">to</span>&gt;</span>smb://192.168.0.199/kodi/XBMCData/Thumbnails/<span class="tag">&lt;/<span class="name">to</span>&gt;</span> //替换刮削所得图片保存路径</span><br><span class="line">        <span class="tag">&lt;/<span class="name">substitute</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pathsubstitution</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">pathsubstitution</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">substitute</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">from</span>&gt;</span>special://profile/sources.xml/<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">to</span>&gt;</span>smb://192.168.0.199/kodi/XBMCData/sources.xml/<span class="tag">&lt;/<span class="name">to</span>&gt;</span> //源文件的设置</span><br><span class="line">        <span class="tag">&lt;/<span class="name">substitute</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pathsubstitution</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">pathsubstitution</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">substitute</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">from</span>&gt;</span>special://profile/mediasources.xml/<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">to</span>&gt;</span>smb://192.168.0.199/kodi/XBMCData/mediasources.xml/<span class="tag">&lt;/<span class="name">to</span>&gt;</span> //源文件的设置</span><br><span class="line">        <span class="tag">&lt;/<span class="name">substitute</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pathsubstitution</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">pathsubstitution</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">substitute</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">from</span>&gt;</span>special://profile/passwords.xml/<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">to</span>&gt;</span>smb://192.168.0.199/kodi/XBMCData/passwords.xml/<span class="tag">&lt;/<span class="name">to</span>&gt;</span> //源文件的设置</span><br><span class="line">        <span class="tag">&lt;/<span class="name">substitute</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pathsubstitution</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">memorysize</span>&gt;</span>52428800<span class="tag">&lt;/<span class="name">memorysize</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">buffermode</span>&gt;</span>1<span class="tag">&lt;/<span class="name">buffermode</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">readfactor</span>&gt;</span>10<span class="tag">&lt;/<span class="name">readfactor</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">cache</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">advancedsettings</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<ul>
<li>拷贝advancedsettings.xml文件到相应的目录。对于Windows系统，按win+r，输入%APPDATA%\kodi\userdata，回车。</li>
<li>一旦advancedsettings.xml文件准备就绪，请在该机器上打开Kodi导入之前备份的库（从设置&gt;媒体设置&gt;导入库）</li>
<li>其他Kodi终端只要拷贝advancedsettings.xml到相应的目录（参见下表）即可。</li>
</ul>
</blockquote>
<table>
<thead>
<tr>
<th align="center">系统</th>
<th align="center">目录</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Android</td>
<td align="center">Android/data/org.xbmc.kodi/files/.kodi/userdata/</td>
</tr>
<tr>
<td align="center">iOS</td>
<td align="center">/private/var/mobile/Library/Preferences/Kodi/userdata/</td>
</tr>
<tr>
<td align="center">Linux</td>
<td align="center">~/.kodi/userdata/</td>
</tr>
<tr>
<td align="center">Mac</td>
<td align="center">/Users/<your_user_name>/Library/Application Support/Kodi/userdata/</td>
</tr>
<tr>
<td align="center">LibreELEC/OpenELEC</td>
<td align="center">/storage/.kodi/userdata/</td>
</tr>
<tr>
<td align="center">Windows</td>
<td align="center">Start - type %APPDATA%\kodi\userdata - press <Enter></td>
</tr>
</tbody></table>
<p>至此我们已经实现了全屋Kodi终端的同步，不仅仅是刮削的图片及信息，还包括了播放状态。</p>
<h1 id="进阶应用"><a href="#进阶应用" class="headerlink" title="进阶应用"></a>进阶应用</h1><p>我们现在已经可以在任何一台Kodi终端上进行查询，但是Kodi的查询不太好用，而且也不可能为了查询而打开Kodi，再说有时候我们会需要远程查询，所以能基于Web是最理想的。</p>
<h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><p>MariaDB数据库、和PHPMyAdmin前面已经安装了，接下来需要从【套件中心】安装PHP和Web Station。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/02/816c05d5313a68e99234695ebf78a6f-1588402805299.png" alt="title"><br><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/02/fe636d2f5f8971058ed3f8bfade9a87-1588402810188.png" alt="title"></p>
<h2 id="网站设置"><a href="#网站设置" class="headerlink" title="网站设置"></a>网站设置</h2><p>只勾选了几个和数据库相关的</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/02/6a842f85a55830b598617b20cb5a80f-1588403067065.png" alt="title"></p>
<h2 id="下载代码"><a href="#下载代码" class="headerlink" title="下载代码"></a>下载代码</h2><p>在github上找到一个叫KodiWebPortal的项目，据介绍可以用于浏览，显示，搜索并最终下载已编入索引的Kodi多媒体内容。此Web应用程序非常轻巧，没有框架（JQuery除外）和依赖项。</p>
<p>非常符合我的需求，源代码地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3lhbm5jYW0vS29kaVdlYlBvcnRhbOOAgg==">https://github.com/yanncam/KodiWebPortal。<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/02/853e05544ae0e66946ed7e91543d5c9-1588403790202.png" alt="title"></p>
<h2 id="代码部署"><a href="#代码部署" class="headerlink" title="代码部署"></a>代码部署</h2><p>把下载的 KodiWebPortal-master.zip，解压后拷贝到群晖的 web 目录，并修改目录中的config.php中数据库相关部分</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/02/f1d7de9ded895589c0449da92bbbe58-1588404859631.png" alt="title"></p>
<h3 id="取消强制https"><a href="#取消强制https" class="headerlink" title="取消强制https"></a>取消强制https</h3><p>打开index.php，找到</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Security-Policy"</span> <span class="attr">content</span>=<span class="string">"upgrade-insecure-requests"</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>将其注释掉</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- meta http-equiv="Content-Security-Policy" content="upgrade-insecure-requests" / --&gt;</span></span><br></pre></td></tr></table></figure>
<p>直接删掉也可以</p>
<h3 id="界面汉化"><a href="#界面汉化" class="headerlink" title="界面汉化"></a>界面汉化</h3><p>在 \i18n 目录中的lang_en.php 复制一份并重新命名为 lang_cn.php，用百度翻译一下。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/02/1c9c34307d96ba6228c040a34bf3d67-1588405228352.png" alt="title"></p>
<p>在config.php中，将121行的 lang_en.php ，改成 lang_cn.php 即可。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/02/3f214214eef410972765867bac25a43-1588407528986.png" alt="title"></p>
<h3 id="适应手机"><a href="#适应手机" class="headerlink" title="适应手机"></a>适应手机</h3><p>偶尔我们会在手机上打开查询页面，但原始的界面在手机上没法看，所以需要做个简单的适配，在前面注释掉的代码后面加一行。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=0.95"</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>最后上个效果图</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/02/0-1588409261368.jpg" alt="title"></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/27/Jietu20200427-135747-1587967110918.jpg" alt="title"></p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a><strong>参考文档</strong></h1><blockquote>
<p>如何利用MySQL数据库让多个XBMC客户端显示一样的媒体库资料<br>地址：<span class="exturl" data-url="aHR0cDovL3d3dy5oZHBmYW5zLmNvbS90aHJlYWQtNjAwMTM5LTEtMS5odG1s">http://www.hdpfans.com/thread-600139-1-1.html<i class="fa fa-external-link-alt"></i></span></p>
<p>如何使用MySQL在多个设备上同步Kodi库<br>地址：<span class="exturl" data-url="aHR0cDovL3d3dy5ob3d0b2lwLmNvbS9ob3ctdG8tc3luYy15b3VyLW1lZGlhLWFjcm9zcy15b3VyLWVudGlyZS1ob3VzZS13aXRoLXhibWMv">http://www.howtoip.com/how-to-sync-your-media-across-your-entire-house-with-xbmc/<i class="fa fa-external-link-alt"></i></span></p>
<p>多个XBMC终端利用MariaDB数据库共享媒体库刮削资料<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuY2hpcGhlbGwuY29tL3RocmVhZC0xMzc0MTkzLTEtMS5odG1s">https://www.chiphell.com/thread-1374193-1-1.html<i class="fa fa-external-link-alt"></i></span></p>
<p>KodiWebPortal主页<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3lhbm5jYW0vS29kaVdlYlBvcnRhbA==">https://github.com/yanncam/KodiWebPortal<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>Kodi</tag>
        <tag>MariaDB</tag>
        <tag>NAS</tag>
        <tag>KodiWebPortal</tag>
      </tags>
  </entry>
  <entry>
    <title>打造一个可以随身携带的“藏书阁”</title>
    <url>/2020/05/03/%E6%89%93%E9%80%A0%E9%9A%8F%E8%BA%AB%E6%90%BA%E5%B8%A6%E7%9A%84%E2%80%9C%E8%97%8F%E4%B9%A6%E9%98%81%E2%80%9D/</url>
    <content><![CDATA[<p><strong>什么是calibre？</strong></p>
<blockquote>
<p>calibre是一個自由開源的電子書軟體套裝，可以用來組織、存放、以及管理電子書，支援大多數的電子書格式。同時也支援與許多流行的電子書閱讀器進行同步，並可能在DRM的限制下轉換電子書的格式。 【維基百科】</p>
</blockquote>
<p><strong>什么是Calibre-Web？</strong></p>
<blockquote>
<p>Calibre-Web is a web app providing a clean interface for browsing, reading and downloading eBooks <strong>using an existing Calibre database</strong>.</p>
</blockquote>
<p><strong>什么是OPDS？</strong></p>
<blockquote>
<p>OPDS全称是Open Publication Distribution System开放式出版发布系统，使用 Atom 格式，意在为电子书在线目录建立一个公开标准。<br>OPDS 将 RSS 信息源，替换为电子书目录，包括链接到书籍封面和简短摘要的可选链接。使用 OPDS，用户无需到处点击链接，通过电子书应用程序，只需订阅并搜索这些目录，然后就可以将电子书下载到 ebook 阅读器中，不需要再使用浏览器或其他应用程序。<br>OPDS 标准核心功能是支持 EPUB 标准和基于 Atom XML 的目录格式。【百度百科】</p>
</blockquote>
<h1 id="构建本地图书库"><a href="#构建本地图书库" class="headerlink" title="构建本地图书库"></a>构建本地图书库</h1><p>Calibre是一个“一站式”的电子书解决方案，它可以全面满足你的电子书需求。Calibre是免费的，源代码开放，拥有跨平台的设计，可在Linux，OS X和Windows操作系统中运行。</p>
<p>它是一个完整的电子图书馆，包括图书馆管理，格式转换，新闻，将材料转换为电子书，以及电子书阅读器同步功能、整合进电子图书阅读器。</p>
<p>Calibre是电子书管理软件，支持Amazon、Apple、Bookeen、Ectaco、Endless Ideas、Google/HTC、Hanlin Song设备及格式，功能十分强大。它可以将你书库中的电子书非常方便地“发送”或同步导入到这些设备上进行阅读。</p>
<p>已经不记得是哪一年开始使用Calibre来管理我的电子书的，反正这些年也存了不少书。电脑、硬盘已经不记得换了几个，但是电子书库还一直保存着，毕竟是花了时间下载、整理。</p>
<p>用了这么多年也逐渐发现了一些Calibre的缺点：体积庞大、速度慢。最重要的是不利于多设备的共享，虽然calibre本身提供共享服务器服务，但不是我想要的，毕竟要开着电脑，还要开着calibre，既然我们有了7*24小时的群晖NAS，能不能让calibre在群晖上运行呢？</p>
<h1 id="打造Web书库"><a href="#打造Web书库" class="headerlink" title="打造Web书库"></a>打造Web书库</h1><p>经过一番调研，我们找到了Calibre-Web和calibre-webserver，不仅提供web界面，更重要的是可以使用已经存在的Calibre的数据库，这意味着我们原来的电子书库可以直接通过Web访问，这实在是个好消息，毕竟书库的整理是件非常花时间的事情。</p>
<p>目前尝试过这两个版本的Docker，功能上大同小异，但是界面差异较大。</p>
<h2 id="oldiy-my-calibre-webserver-docker"><a href="#oldiy-my-calibre-webserver-docker" class="headerlink" title="oldiy/my-calibre-webserver-docker"></a>oldiy/my-calibre-webserver-docker</h2><p>calibre-webserver是国人开发的，基于calibre-webserver做这个Docker镜像也是国人。</p>
<p>打开群晖Docker—注册表—搜 oldiy 找到 my-calibre-webserver-docker 双击下载，tag选择 latest</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/03/1-12-1588492282423.jpg" alt="title"></p>
<p>（图片来自：<span class="exturl" data-url="aHR0cHM6Ly9vZGNuLnRvcC8yMDE5LzAyLzI2LzI3MzQvJUU3JUJFJUE0JUU2JTk5JTk2ZG9ja2VyJUU1JUFFJTg5JUU4JUEzJTg1JUU0JUI4JTgwJUU0JUI4JUFBJUU1JUJDJTgwJUU2JUJBJTkwJUU3JTlBJTg0JUU3JUJFJThFJUU4JUE3JTgyY2FsaWJyZS13ZWJzZXJ2ZXIlRTQlQjglQUQlRTYlOTYlODclRTclQkQlOTElRTklQTElQjUlRTclODklODglRUYlQkMlOEMlRTclQUUlQTElRTclOTAlODYv77yJ">https://odcn.top/2019/02/26/2734/%E7%BE%A4%E6%99%96docker%E5%AE%89%E8%A3%85%E4%B8%80%E4%B8%AA%E5%BC%80%E6%BA%90%E7%9A%84%E7%BE%8E%E8%A7%82calibre-webserver%E4%B8%AD%E6%96%87%E7%BD%91%E9%A1%B5%E7%89%88%EF%BC%8C%E7%AE%A1%E7%90%86/）<i class="fa fa-external-link-alt"></i></span></p>
<p>安装完成后的界面效果：</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/03/6-7-1588492302725.jpg" alt="title"></p>
<p>（图片来自：<span class="exturl" data-url="aHR0cHM6Ly9vZGNuLnRvcC8yMDE5LzAyLzI2LzI3MzQvJUU3JUJFJUE0JUU2JTk5JTk2ZG9ja2VyJUU1JUFFJTg5JUU4JUEzJTg1JUU0JUI4JTgwJUU0JUI4JUFBJUU1JUJDJTgwJUU2JUJBJTkwJUU3JTlBJTg0JUU3JUJFJThFJUU4JUE3JTgyY2FsaWJyZS13ZWJzZXJ2ZXIlRTQlQjglQUQlRTYlOTYlODclRTclQkQlOTElRTklQTElQjUlRTclODklODglRUYlQkMlOEMlRTclQUUlQTElRTclOTAlODYv77yJ">https://odcn.top/2019/02/26/2734/%E7%BE%A4%E6%99%96docker%E5%AE%89%E8%A3%85%E4%B8%80%E4%B8%AA%E5%BC%80%E6%BA%90%E7%9A%84%E7%BE%8E%E8%A7%82calibre-webserver%E4%B8%AD%E6%96%87%E7%BD%91%E9%A1%B5%E7%89%88%EF%BC%8C%E7%AE%A1%E7%90%86/）<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="linuxserver-calibre-web"><a href="#linuxserver-calibre-web" class="headerlink" title="linuxserver/calibre-web"></a>linuxserver/calibre-web</h2><p>打开群晖Docker—注册表—搜 calibre-web 找到 calibre-web 双击下载，tag选择 latest</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/03/54533fc73c8f0235e303fa5538f4ff0-1588492697150.png" alt="title"></p>
<p>安装完成后的界面效果：</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/03/3-1588492779826.png" alt="title"></p>
<h1 id="导入本地书库"><a href="#导入本地书库" class="headerlink" title="导入本地书库"></a>导入本地书库</h1><p>将本地书库中的library目录，也就是包含了metadata.db的目录，拷贝到calibre-web或者my-calibre-webserver-docker的相应目录即可，拷贝前先停止Docker，等拷贝完成后再启动Docker。</p>
<h1 id="书库的维护"><a href="#书库的维护" class="headerlink" title="书库的维护"></a>书库的维护</h1><p>不管是my-calibre-webserver-docker还是calibre-web，都可以只使用Web进行管理，包括增、删、改、查操作，但是有时候涉及到批量等，还是可以用Calibre客户端，毕竟客户端的功能更丰富、也更强大，我们只需要将远程书库的目录用Samba协议共享出来即可，对于Calibre客户端来说，映射的目录和本地目录操作起来是一样的。</p>
<h1 id="远程访问"><a href="#远程访问" class="headerlink" title="远程访问"></a>远程访问</h1><p>如果要远程访问，还需要用frp把内网映射到我们的域名上了，修改frpc.ini文件：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[calibre-webserver]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">192.168</span>.<span class="number">0.199</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">8001</span></span><br><span class="line"><span class="attr">custom_domains</span> = book.abc.xy</span><br><span class="line"></span><br><span class="line"><span class="section">[calibre-web]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">192.168</span>.<span class="number">0.199</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">8083</span></span><br><span class="line"><span class="attr">custom_domains</span> = novel.abc.xy</span><br></pre></td></tr></table></figure>

<h1 id="OPDS订阅"><a href="#OPDS订阅" class="headerlink" title="OPDS订阅"></a>OPDS订阅</h1><p>my-calibre-webserver-docker和calibre-web均支持OPDS，以Android平台静读天下（Moon+ Reader）为例</p>
<p>左侧菜单【网上书库】–&gt;右上角【增加新书库】，可以输入calibre书库的IP，也可以输入域名。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/03/14134c4cdafb657213b9c2d1e80ae4f-1588496692241.jpg" alt="title"></p>
<p>许墨茗书桌（ <span class="exturl" data-url="aHR0cDovL3p1cmUuZnVuL2Jvb2svb3Bkcw==">http://zure.fun/book/opds<i class="fa fa-external-link-alt"></i></span> ）opds源添加的效果图：</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/03/38dc84274076c3e9c1d7b5073fe2223-1588500681004.jpg" alt="title"></p>
<p>夜读客（ <span class="exturl" data-url="aHR0cHM6Ly93d3cueWVkdWsuY29t">https://www.yeduk.com<i class="fa fa-external-link-alt"></i></span> ）网站添加的效果图：</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/03/f93a5a3c8faa278bada58c4cfe831b1-1588496993633.jpg" alt="title"></p>
<h2 id="可用的OPDS源"><a href="#可用的OPDS源" class="headerlink" title="可用的OPDS源"></a>可用的OPDS源</h2><blockquote>
<ul>
<li>许墨茗书桌   <span class="exturl" data-url="aHR0cDovL3p1cmUuZnVuL2Jvb2svb3Bkcw==">http://zure.fun/book/opds<i class="fa fa-external-link-alt"></i></span></li>
<li>cbeta电子佛典   <span class="exturl" data-url="aHR0cDovL3d3dy5jYmV0YS5vcmcvb3Bkcy8=">http://www.cbeta.org/opds/<i class="fa fa-external-link-alt"></i></span></li>
</ul>
</blockquote>
<h2 id="推荐几个书库"><a href="#推荐几个书库" class="headerlink" title="推荐几个书库"></a>推荐几个书库</h2><p>最后推荐几个可用的书库作为福利吧。如果你用静读天下（Moon+ Reader）的话，也可以直接和OPDS源一样，加到【网上书库】中。</p>
<blockquote>
<ul>
<li>夜读客   <span class="exturl" data-url="aHR0cHM6Ly93d3cueWVkdWsuY29t">https://www.yeduk.com<i class="fa fa-external-link-alt"></i></span></li>
<li>天涯客   <span class="exturl" data-url="aHR0cHM6Ly93d3cuY2hpbmp1YS5jb20=">https://www.chinjua.com<i class="fa fa-external-link-alt"></i></span></li>
<li>文渊阁   <span class="exturl" data-url="aHR0cHM6Ly93ZW55dWFuZ2Uub3Jn">https://wenyuange.org<i class="fa fa-external-link-alt"></i></span></li>
<li>kindle推送小站   <span class="exturl" data-url="aHR0cHM6Ly93d3cuYXp3My50aw==">https://www.azw3.tk<i class="fa fa-external-link-alt"></i></span></li>
<li>螺丝丁报告   <span class="exturl" data-url="aHR0cHM6Ly93d3cuaHVnaGxpYi5jbg==">https://www.hughlib.cn<i class="fa fa-external-link-alt"></i></span></li>
<li>书伴   <span class="exturl" data-url="aHR0cHM6Ly9ib29rZmVyZS5jb20vYm9va3M=">https://bookfere.com/books<i class="fa fa-external-link-alt"></i></span></li>
<li>内酷网    <span class="exturl" data-url="aHR0cDovL25laWt1dy5jb20=">http://neikuw.com<i class="fa fa-external-link-alt"></i></span></li>
<li>ePUBw    <span class="exturl" data-url="aHR0cHM6Ly9lcHVidy54eXo=">https://epubw.xyz<i class="fa fa-external-link-alt"></i></span></li>
<li>雅读    <span class="exturl" data-url="aHR0cDovL3d3dy5haXlhZHUuY29t">http://www.aiyadu.com<i class="fa fa-external-link-alt"></i></span></li>
<li>雅书    <span class="exturl" data-url="aHR0cHM6Ly95YWJvb2sub3Jn">https://yabook.org<i class="fa fa-external-link-alt"></i></span></li>
</ul>
</blockquote>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>calibre官网<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9jYWxpYnJlLWVib29rLmNvbS8=">https://calibre-ebook.com/<i class="fa fa-external-link-alt"></i></span></p>
<p>最强大的本地电子书管理工具：Calibre 使用指南<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9zc3BhaS5jb20vcG9zdC80Mzg0Mw==">https://sspai.com/post/43843<i class="fa fa-external-link-alt"></i></span></p>
<p>calibre-web官网<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2phbmVjemt1L2NhbGlicmUtd2Vi">https://github.com/janeczku/calibre-web<i class="fa fa-external-link-alt"></i></span></p>
<p>calibre-webserver官网<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RhbGVib29rL2NhbGlicmUtd2Vic2VydmVy">https://github.com/talebook/calibre-webserver<i class="fa fa-external-link-alt"></i></span></p>
<p>群晖Docker安装一个开源的美观calibre-webserver中文网页版，管理你的图书，推送到Kindle<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9vZGNuLnRvcC8yMDE5LzAyLzI2LzI3MzQvJUU3JUJFJUE0JUU2JTk5JTk2ZG9ja2VyJUU1JUFFJTg5JUU4JUEzJTg1JUU0JUI4JTgwJUU0JUI4JUFBJUU1JUJDJTgwJUU2JUJBJTkwJUU3JTlBJTg0JUU3JUJFJThFJUU4JUE3JTgyY2FsaWJyZS13ZWJzZXJ2ZXIlRTQlQjglQUQlRTYlOTYlODclRTclQkQlOTElRTklQTElQjUlRTclODklODglRUYlQkMlOEMlRTclQUUlQTElRTclOTAlODYv">https://odcn.top/2019/02/26/2734/%E7%BE%A4%E6%99%96docker%E5%AE%89%E8%A3%85%E4%B8%80%E4%B8%AA%E5%BC%80%E6%BA%90%E7%9A%84%E7%BE%8E%E8%A7%82calibre-webserver%E4%B8%AD%E6%96%87%E7%BD%91%E9%A1%B5%E7%89%88%EF%BC%8C%E7%AE%A1%E7%90%86/<i class="fa fa-external-link-alt"></i></span></p>
<p>折腾NAS 篇三：群晖Docker搭建网页版Calibre书库<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2E2bDhvdnhlLw==">https://post.smzdm.com/p/a6l8ovxe/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>Calibre</tag>
        <tag>Calibre-Web</tag>
        <tag>calibre-webserver</tag>
        <tag>my-calibre-webserver-docker</tag>
        <tag>OPDS</tag>
      </tags>
  </entry>
  <entry>
    <title>开源的音乐流媒体服务器koel</title>
    <url>/2020/08/18/%E5%BC%80%E6%BA%90%E7%9A%84%E9%9F%B3%E4%B9%90%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8koel/</url>
    <content><![CDATA[<p><strong>什么是koel？</strong></p>
<blockquote>
<p>koel是一款网页版的开源个人音乐流媒体播放器，前端基于 vue , 后端基于 laravel PHP Framework 。采用了现代 Web 技术，例如 CSS 网格、音频和拖放 API 等等。遵守 MIT 开源协议。安装 PHP 环境后，可采用 MYSQL 数据库，搭建在服务器上，也可部署到 Docker 上。</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/09/1596953637215-1596953637241.png" alt="title"></p>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>之前我们介绍并搭建过 <code>airsonic</code>， 一款基于 Java 开发的 Web 音乐应用，今天是另外一款​</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/09/1596975148546-1596975148548.png" alt="title"></p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>先建好数据库</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/09/1596972977127-1596972977128.png" alt="title"></p>
<p>接下来用 Docker 安装 koel</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/09/1596958725025-1596958725026.png" alt="title"></p>
<h2 id="卷"><a href="#卷" class="headerlink" title="卷"></a>卷</h2><table>
<thead>
<tr>
<th align="center">文件夹</th>
<th align="center">装载路径</th>
</tr>
</thead>
<tbody><tr>
<td align="center">/docker/koel/covers</td>
<td align="center">/var/www/html/public/img/covers</td>
</tr>
<tr>
<td align="center">/docker/koel/music</td>
<td align="center">/music</td>
</tr>
</tbody></table>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/09/1596972065366-1596972065391.png" alt="title"></p>
<h2 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h2><p>默认是80，别冲突就可以</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/09/1596972146683-1596972146685.png" alt="title"></p>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><table>
<thead>
<tr>
<th align="center">可变</th>
<th align="center">值</th>
</tr>
</thead>
<tbody><tr>
<td align="center">DB_CONNECTION</td>
<td align="center">mysql</td>
</tr>
<tr>
<td align="center">DB_HOST</td>
<td align="center">192.168.0.199</td>
</tr>
<tr>
<td align="center">DB_DATABASE</td>
<td align="center">koel</td>
</tr>
<tr>
<td align="center">DB_USERNAME</td>
<td align="center">koel</td>
</tr>
<tr>
<td align="center">DB_PASSWORD</td>
<td align="center">LALZTx6mxba7</td>
</tr>
</tbody></table>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/09/1596974907068-1596974907070.png" alt="title"></p>
<h1 id="第一次运行"><a href="#第一次运行" class="headerlink" title="第一次运行"></a>第一次运行</h1><p>SSH 连接到群晖，运行</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># docker exec -it &lt;container_name_for_koel&gt; bash</span></span><br><span class="line">docker <span class="built_in">exec</span> -it hyzual-koel1 bash</span><br></pre></td></tr></table></figure>

<p>连接成功后，接着运行</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 初始化项目，包括设置账号和密码</span></span><br><span class="line">php artisan koel:init</span><br></pre></td></tr></table></figure>

<blockquote>
<p>【已知问题】koel:init will fail at the stage where it checks front-end assets. This is known and is due to the absence of node.js and yarn. koel’s frontend assets are already built in this image so this step is not necessary.</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/09/1596977266710-1596977266712.png" alt="title"></p>
<p>浏览器中打开 <code>http://群晖IP:2080</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/09/1596977079654-1596977079656.png" alt="title"></p>
<p>登录成功后</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/09/1596977010631-1596977010633.png" alt="title"></p>
<h1 id="遇到问题"><a href="#遇到问题" class="headerlink" title="遇到问题"></a>遇到问题</h1><p>用 <code>https://域名</code> 访问，返回空白页面，查看网页源代码，发现均为 <code>http</code> 协议，怀疑是不支持 https 协议导致的，根据 <code>Laravel</code> 的特性，应该有单独的设置项。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># docker exec -it &lt;container_name_for_koel&gt; bash</span></span><br><span class="line">docker <span class="built_in">exec</span> -it hyzual-koel1 bash</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/11/1597153839744-1597153839749.png" alt="title"></p>
<p>因为 <code>Docker</code> 中未安装 <code>vi</code>，所以需要先安装编辑器</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/11/1597149967253-1597149967259.png" alt="title"></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">apt-get install vi</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/11/1597150104653-1597150104658.png" alt="title"></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">apt-get update</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/11/1597150138920-1597150138924.png" alt="title"></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">apt-get install vim</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/11/1597150204755-1597150204757.png" alt="title"></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 编辑 .env 文件</span></span><br><span class="line">vi .env</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/11/1597153234326-1597153234328.png" alt="title"></p>
<p>重启容器后，一切正常。</p>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>歌曲的上传</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/11/1597157118561-1597157118563.png" alt="title"></p>
<p>临时用 XLD 转码一张孙露的专辑《一抹伤》做测试</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/12/1597218246423-1597218246426.png" alt="title"></p>
<p>或者直接放到 <code>/music</code> 目录，再扫描</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/11/1597157235681-1597157235684.png" alt="title"></p>
<p>播放列表</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/11/1597157280779-1597157280781.png" alt="title"></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>颜值不错，很像 Spotify，可惜音乐格式只支持 <code>mp3</code>，这点肯定比不上 <code>airsonic</code>，但是系统占用小于 <code>airsonic</code>，如果你的收藏是 <code>mp3</code>，那这款应用值得一试。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/12/1597193888864-1597193888906.png" alt="title"></p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>koel 官方代码<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2tvZWwva29lbA==">https://github.com/koel/koel<i class="fa fa-external-link-alt"></i></span>)</p>
<p>Koel:一款超酷的私有音乐面板（基于larvel+vue）<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9iYWl5dWUub25lL2FyY2hpdmVzLzExOTguaHRtbA==">https://baiyue.one/archives/1198.html<i class="fa fa-external-link-alt"></i></span></p>
<p>开源音乐流媒体应用：Koel<br>地址：<span class="exturl" data-url="aHR0cDovL3d3dy5zaXlhODkuY29tL2Jsb2cva29lbA==">http://www.siya89.com/blog/koel<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>音乐</tag>
        <tag>Laravel</tag>
      </tags>
  </entry>
  <entry>
    <title>将 Draw.io 集成到 VS Code</title>
    <url>/2020/05/17/%E5%B0%86%20Draw.io%20%E9%9B%86%E6%88%90%E5%88%B0%20VS%20Code/</url>
    <content><![CDATA[<p>之前我们在《<a href="https://laosu.ml/2020/05/10/%E5%85%8D%E8%B4%B9%E5%9C%A8%E7%BA%BF%E6%B5%81%E7%A8%8B%E5%9B%BEDraw.io/">免费在线流程图Draw.io</a>》中介绍过Draw.io，今天要介绍的插件 <code>Draw.io Integration</code> 可以将 <code>Draw.io</code> 集成到 <code>VS Code</code> 中。</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="从网页安装"><a href="#从网页安装" class="headerlink" title="从网页安装"></a>从网页安装</h2><ul>
<li>在浏览器中输入 <code>https://marketplace.visualstudio.com/items?itemName=hediet.vscode-drawio</code></li>
<li>点击 <code>install</code></li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/17/1589700492041-1589700492044.png" alt="网页安装"></p>
<ul>
<li>点击 <code>打开Visual Studio Code</code></li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/17/1589700542017-1589700542019.png" alt="打开应用"></p>
<ul>
<li>点击 <code>安装</code></li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/17/1589700680356-1589700680363.png" alt="开始安装"></p>
<h2 id="在VS-Code中安装"><a href="#在VS-Code中安装" class="headerlink" title="在VS Code中安装"></a>在VS Code中安装</h2><ul>
<li>从VS Code左侧进入【扩展】，或用快捷键 <code>ctrl+shift+x</code></li>
<li>搜索draw，第一个 <code>Draw.io Integration</code> 就是。</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/17/1589701398663-1589701398667.png" alt="title"></p>
<h1 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h1><ul>
<li>在【扩展】中找到 <code>Draw.io Integration</code></li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/17/1589700813314-1589700813318.png" alt="扩展设置菜单"></p>
<ul>
<li>进入【扩展设置】</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/17/1589700910625-1589700910630.png" alt="设置界面"></p>
<ul>
<li><p>默认情况下使用 <code>Draw.io</code> 的脱机版本</p>
</li>
<li><p>支持更换主题</p>
</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/17/1589703506111-1589703506113.png" alt="title"></p>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><h2 id="新建"><a href="#新建" class="headerlink" title="新建"></a>新建</h2><ul>
<li>只要新建扩展名为 <code>.drawio</code>、<code>.dio</code> 、<code>.drawio.svg</code> 文件即可进入编辑 </li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/17/demo-1589701737138.gif" alt="编辑文档"></p>
<h2 id="编辑"><a href="#编辑" class="headerlink" title="编辑"></a>编辑</h2><ul>
<li>支持同一个 <code>*.drawio</code> 文件同时用 <code>Draw.io</code> 编辑器和 <code>xml</code> 编辑器打开，不仅是同步的，而且可以根据需要在编辑器间进行切换。</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/17/drawio-xml-1589702652016.gif" alt="同时编辑"></p>
<h2 id="保存"><a href="#保存" class="headerlink" title="保存"></a>保存</h2><ul>
<li>要将 Draw.io 文件从转换 <code>.drawio</code> 为 <code>.drawio.svg</code> ，请使用 <code>文件: 另存为</code> 命令</li>
</ul>
<h1 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h1><p>直接编辑 <code>.drawio.png</code> 文件的功能尚未发布，原因是使用了不稳定的VS Code API。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/17/drawio-png-1589702313563.gif" alt="未发布的新功能"></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>想想以后可以直接在VS Code中绘制流程图、脑图、UML图，是不是很拉风~~</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>vscode-drawio代码<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hlZGlldC92c2NvZGUtZHJhd2lv">https://github.com/hediet/vscode-drawio<i class="fa fa-external-link-alt"></i></span></p>
<p>vscode插件drawio安装主页<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9tYXJrZXRwbGFjZS52aXN1YWxzdHVkaW8uY29tL2l0ZW1zP2l0ZW1OYW1lPWhlZGlldC52c2NvZGUtZHJhd2lv">https://marketplace.visualstudio.com/items?itemName=hediet.vscode-drawio<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>draw.io</tag>
        <tag>VS Code</tag>
      </tags>
  </entry>
  <entry>
    <title>小苏同学的在线毕业秀</title>
    <url>/2020/08/06/%E5%B0%8F%E8%8B%8F%E5%90%8C%E5%AD%A6%E7%9A%84%E5%9C%A8%E7%BA%BF%E6%AF%95%E4%B8%9A%E7%A7%80/</url>
    <content><![CDATA[<h1 id="Yuyun-Su"><a href="#Yuyun-Su" class="headerlink" title="Yuyun Su"></a>Yuyun Su</h1><blockquote>
<p>Master of Design in Fashion, Body and Garment</p>
</blockquote>
<p>Duality is always the aesthetic of my projects. Changing my major from material chemistry to fashion design, I like to embrace technology and humanity thoughts, solid and softness, masculine and femininity in my practice. My work evolves in a space where theories, concepts, the ephemeral, ideas meet with material reality and processes of work.</p>
<p>I have been exploring shaping the construction and doing hands-on material manipulation for all time. Thinking of body and garment, but not limited to the male or female mannequin, a principle of my work is to be both wearable and playful. Garment, installation, even collaborating with performing, I am always looking for more possibilities of my work, and use it as my tool to speak my voice out loud to the world.</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/06/1596713451848-1596713451854.png" alt="title"></p>
<blockquote>
<p>Power Tools meets Chicago Women’s Park and Garden, 2019, Second mock-up, 10 looks garment, and installation, Photo by Yuyun Su</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/06/1596713513386-1596713513390.png" alt="title"></p>
<blockquote>
<p>Power Tools, 2020, 10 looks garment, Photo by Sonia Jia</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/06/1596713616052-1596713616056.png" alt="title"></p>
<blockquote>
<p>Power Tools, 2020, 10 looks garment, Photo by Sonia Jia</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/06/1596713713168-1596713713170.png" alt="title"></p>
<blockquote>
<p>Power Tools, 2020, 10 looks garment, Photo by Sonia Jia</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/06/1596713744194-1596713744197.png" alt="title"></p>
<blockquote>
<p>Power Tools, 2020, 10 looks garment, photo by Sonia Jia</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/06/1596713793149-1596713793153.png" alt="title"></p>
<blockquote>
<p>Power Tools, 2020, 10 looks garment, photo by Sonia Jia</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/06/1596713826261-1596713826264.png" alt="title"></p>
<blockquote>
<p>Power Tools, 2020, 10 looks garment, photo by Sonia Jia</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/06/1596713878072-1596713878074.png" alt="title"></p>
<blockquote>
<p>Power Tools, 2020, 10 looks garment, photo by Sonia Jia</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/06/1596713916218-1596713916220.png" alt="title"></p>
<blockquote>
<p>Power Tools, 2020, 10 looks garment, photo by Sonia Jia</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/06/1596713959207-1596713959209.png" alt="title"></p>
<blockquote>
<p>Power Tools, 2020, 10 looks garment, photo by Sonia Jia</p>
</blockquote>
<h1 id="Power-Tool"><a href="#Power-Tool" class="headerlink" title="Power Tool"></a><em>Power Tool</em></h1><p>There are always voices around us, saying that women and men have different abilities in different fields and are born to have a distinct personality and social function. However, as Simone de Beauvoir said in The Second Sex, “One is not born, but rather becomes, women…human are born free, create our own life’s meaning.” I am always challenging the way gender stereotypes want to shape us during grown-up.</p>
<p>For a long time, philosophers think “using tools” is a way to distinguish human and other species. In history, lots of women have been used tools. However, here, today, we are still unrespectfully treated when using power tools to create art pieces in the art school. Therefore, I took art, my most powerful tools to speak my voice out loud.</p>
<p>Clothes, to be considered as one kind of expression of yourself, are classified into menswear and womenswear. The power-tool pattern was enlarged and then used as the templates for my thesis collection, which contained classic “female” dresses and “men” suits since I want to remove this kind of limitation. I chose pink and blue, which traditionally have represented girls and boys, to be the main colors of the collection. To reinforces my intention for a human to wear whatever they want and be whoever they want to be. Different things can be “power tools” for different people. With my collection, I aim to challenge the systems and institutions that forbid or discourage people from picking up the power tools they need just to be themselves.</p>
<h1 id="gradshow-2020"><a href="#gradshow-2020" class="headerlink" title="gradshow 2020"></a>gradshow 2020</h1><p>小苏同学的在线毕业秀地址：<span class="exturl" data-url="aHR0cDovL3NpdGVzLnNhaWMuZWR1L2dyYWRzaG93MjAyMC9hcnRpc3RzL3l1eXVuLXN1Lw==">http://sites.saic.edu/gradshow2020/artists/yuyun-su/<i class="fa fa-external-link-alt"></i></span></p>
<p>gradshow 2020：<span class="exturl" data-url="aHR0cDovL3NpdGVzLnNhaWMuZWR1L2dyYWRzaG93MjAyMC8=">http://sites.saic.edu/gradshow2020/<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>苏玉云作品</category>
      </categories>
      <tags>
        <tag>服装设计</tag>
        <tag>gradshow</tag>
        <tag>毕业秀</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建你自己的RSS订阅服务器</title>
    <url>/2020/11/08/%E6%90%AD%E5%BB%BA%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84RSS%E8%AE%A2%E9%98%85%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<p>自2013年 <code>Google Reader</code> 关闭以来，一直都在用 <code>feedly</code> 作为新闻聚合平台，但是很多功能都是要收费的，比如保存，分享，关闭广告等等。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/06/1601968934729-1601968934731.png" alt="price"></p>
<p>当然可以通过一些其他的服务来曲线救国，例如通过 <code>feedly</code> 自带的 <code>Read Later</code> 功能来触发 <code>IFTTT</code>，从而实现保存到 <code>EverNote</code> 或者 <code>WizNote</code>，但现在 <code>IFTTT</code> 开始收费了，想要不受制约，还是自己搭建服务吧。</p>
<p>今天我们要安装的是 <code>Tiny Tiny RSS</code>，简称为 tt-rss 。</p>
<p>什么是 Tiny Tiny RSS?</p>
<blockquote>
<p>Tiny Tiny RSS 是免费的 RSS feed 阅读器，是一个开源 RSS / Atom 新闻提要阅读器和汇总器。它是一个 Web 应用程序，必须安装在 Web 服务器上。在Google 宣布将淘汰 Google Reader 之后，Tiny Tiny RSS 在主要的技术博客和在线杂志中被广泛评论为可能的替代品。</p>
</blockquote>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>在 docker 注册表中搜索 <code>tt-rss</code> ，选择第一个 <code>lunik1/tt-rss</code>，双击下载。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/05/1601908872300-1601908872301.png" alt="title"></p>
<h2 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h2><p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/05/1601909195672-1601909195673.png" alt="title"></p>
<h2 id="卷"><a href="#卷" class="headerlink" title="卷"></a>卷</h2><table>
<thead>
<tr>
<th align="center">文件夹</th>
<th align="center">装载路径</th>
</tr>
</thead>
<tbody><tr>
<td align="center">/docker/ttrss</td>
<td align="center">/config</td>
</tr>
</tbody></table>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/05/1601909148469-1601909148471.png" alt="title"></p>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><table>
<thead>
<tr>
<th align="center">可变</th>
<th align="center">值</th>
</tr>
</thead>
<tbody><tr>
<td align="center">SELF_URL_PATH</td>
<td align="center">TTRSS 实例地址</td>
</tr>
<tr>
<td align="center">DB_TYPE</td>
<td align="center">数据库类型</td>
</tr>
<tr>
<td align="center">DB_HOST</td>
<td align="center">数据库地址</td>
</tr>
<tr>
<td align="center">DB_PORT</td>
<td align="center">数据库端口</td>
</tr>
<tr>
<td align="center">DB_NAME</td>
<td align="center">数据库名称</td>
</tr>
<tr>
<td align="center">DB_USER</td>
<td align="center">数据库用户名</td>
</tr>
<tr>
<td align="center">DB_PASS</td>
<td align="center">数据库密码</td>
</tr>
</tbody></table>
<p>也可以先不配置，直接在网页上配置，这里我们选择先不配</p>
<h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:1818</code> ，可以看到设置界面</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/05/1601909362597-1601909362598.png" alt="title"></p>
<p>依次进行设置，数据库我选择了 <code>MySQL</code>，因为在群晖上已经安装了 <code>MariaDB 5</code>，并已经建好了用户和数据库，按官方的说明建议使用 <code>PostgreSQL</code></p>
<p>设置完成后，点最下面的 <code>test configuration</code> 按钮，如果测试通过，会在后面显示 <code>Initialize database</code></p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/05/1601909777569-1601909777572.png" alt="title"></p>
<p>初始化完成后</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/05/1601909832395-1601909832397.png" alt="title"></p>
<p>点击 <code>Save configuration</code></p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/05/1601909910600-1601909910602.png" alt="title"></p>
<p>回到 <code>http://群晖IP:1818</code></p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/05/1601910004356-1601910004358.png" alt="title"></p>
<p>默认的用户：<code>admin</code> ，密码：<code>password</code></p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/05/1601910433184-1601910433185.png" alt="title"></p>
<p>登录成功后，系统会提示修改密码，确认后会跳转到偏好设置</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/05/1601910507114-1601910507116.png" alt="title"></p>
<p>转到 <code>用户</code> ，点击 <code>admin</code></p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/05/1601910591592-1601910591593.png" alt="title"></p>
<p>改完密码需要重新登录，登录成功之后会看到默认订阅的 <code>https://tt-rss.org/forum/rss.php</code> 的信息</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/05/1601910729704-1601910729706.png" alt="title"></p>
<p>我直接给取消了</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/06/1601954004811-1601954004814.png" alt="title"></p>
<p>设置 <code>订阅信息源</code></p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/05/1601912083518-1601912083521.png" alt="title"></p>
<p>订阅成功后</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/05/1601912138965-1601912138967.png" alt="title"></p>
<p>如果要映射到公网，记得修改环境变量 <code>SELF_URL_PATH</code>，否则会报错</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/06/1601953779904-1601953779979.png" alt="title"></p>
<h1 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h1><p>阅读全文</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/06/1601955331176-1601955331178.png" alt="title"></p>
<p>启动插件后在后台全局设置中勾选为 <code>核心代码和其他插件提供全文服务</code>，然后对于需要全文输出的信息源勾选 <code>inline 文章内容</code>。没有勾选该功能的信息源也可以使用 <code>手动切换</code> 全文输出，如果需要在移动端直接查看全文的必须勾选 <code>inline 文章内容</code>。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/06/1601955507165-1601955507168.png" alt="title"></p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/06/1601956027764-1601956027767.png" alt="title"></p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/06/1601955796556-1601955796557.png" alt="title"></p>
<h1 id="Android-客户端"><a href="#Android-客户端" class="headerlink" title="Android 客户端"></a>Android 客户端</h1><p>如果你不能访问到 <code>Google Play</code>，那就只能到 <code>F-Droid</code> 下载了， <span class="exturl" data-url="aHR0cHM6Ly9mLWRyb2lkLm9yZy96aF9IYW5zL3BhY2thZ2VzL29yZy50dHJzc3JlYWRlci8=">https://f-droid.org/zh_Hans/packages/org.ttrssreader/<i class="fa fa-external-link-alt"></i></span> </p>
<p>先要在后台 <code>启用API</code></p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/06/1601963427559-1601963427561.png" alt="title"></p>
<p>否则会一直显示无法连接服务器</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/06/1601964313360-1601964313360.png" alt="title"></p>
<p>密码可以用主密码，也可以为app单独生成</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/06/1601964258484-1601964258487.png" alt="title"></p>
<p>登录成功后</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/06/1601964470467-1601964470469.png" alt="title"></p>
<p>tt-rss 支持插件，也支持主题，接下来就是持续的优化了。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>framasoft/ttrss: A PHP and Ajax feed reader<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2ZyYW1hc29mdC90dHJzcw==">https://github.com/framasoft/ttrss<i class="fa fa-external-link-alt"></i></span></p>
<p>linuxserver/docker-tt-rss<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2xpbnV4c2VydmVyL2RvY2tlci10dC1yc3M=">https://github.com/linuxserver/docker-tt-rss<i class="fa fa-external-link-alt"></i></span></p>
<p>Tiny Tiny RSS – Wiki<br>地址：<span class="exturl" data-url="aHR0cHM6Ly90dC1yc3Mub3JnL3dpa2kucGhw">https://tt-rss.org/wiki.php<i class="fa fa-external-link-alt"></i></span></p>
<p>Docker - Tiny Tiny RSS (TT-RSS) - Free and open source web-based news feed (RSS/Atom) reader and aggregator<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuc3lub2ZvcnVtLmNvbS9yZXNvdXJjZXMvdGlueS10aW55LXJzcy10dC1yc3MtZnJlZS1hbmQtb3Blbi1zb3VyY2Utd2ViLWJhc2VkLW5ld3MtZmVlZC1yc3MtYXRvbS1yZWFkZXItYW5kLWFnZ3JlZ2F0b3IuMzMv">https://www.synoforum.com/resources/tiny-tiny-rss-tt-rss-free-and-open-source-web-based-news-feed-rss-atom-reader-and-aggregator.33/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>群晖</tag>
        <tag>IFTTT</tag>
        <tag>RSS</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建自己的聊天服务器（Mattermost篇）</title>
    <url>/2020/08/28/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E8%81%8A%E5%A4%A9%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88Mattermost%E7%AF%87%EF%BC%89/</url>
    <content><![CDATA[<p><strong>什么是 Mattermost ？</strong></p>
<blockquote>
<p>Mattermost是一套開放原始碼、可自行架設的線上聊天服務，有分享檔案、搜尋與整合其他服務等功能。它被設計成用於組織與公司的內部溝通，且主要將其作為 Slack 與 Microsoft Teams 的開放原始碼替代品。 【維基百科】</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/20/1597906242753-1597906242757.png" alt="title"></p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>在群晖的 <code>Docker</code> 中搜索 <code>Mattermost</code>，选第一个，版本 <code>latest</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/20/1597904149405-1597904149407.png" alt="title"></p>
<p>安装超级简单，只要设置几个端口即可</p>
<h2 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h2><p>3306 是 <code>MySQL</code> 的端口，群晖已安装了 <code>MariaDB 5</code> ，所以要规避，重新分了个未使用的端口：3336</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/20/1597909780796-1597909780803.png" alt="title"></p>
<h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><p>安装完成后，在浏览器中输入  <code>http://群晖IP:8065</code> 即可</p>
<h1 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h1><p>注册用户</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/20/1597910944391-1597910944399.png" alt="title"></p>
<p>创建团队</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/20/1597913865453-1597913865460.png" alt="title"></p>
<p>设置团队名称</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/20/1597911129634-1597911129637.png" alt="title"></p>
<p>设置团队访问地址</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/20/1597911248289-1597911248297.png" alt="title"></p>
<p>首界面</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/20/1597914142805-1597914142839.png" alt="title"></p>
<blockquote>
<p>按照系统的设计，添加到新安装的 Mattermost 系统中的第一个用户会获得系统管理员角色。</p>
</blockquote>
<p>默认界面是英文的，但是支持中文</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/28/1598623635692-1598623635730.png" alt="title"></p>
<p>保存之后界面就是中文了，系统支持通过 <code>插件市场</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/28/1598623961302-1598623961324.png" alt="title"></p>
<p>和 <code>集成</code> 来扩展功能，这可以大大丰富平台的功能，这一点值得称赞，尤其是 <code>webhook</code>的引入</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/28/1598624034298-1598624034301.png" alt="title"></p>
<p>具体的设置和使用，可以参考 《Mattermost 用户指南》，地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cucW5hcC5jb20uY24vemgtY24vaG93LXRvL3R1dG9yaWFsL2FydGljbGUvbWF0dGVybW9zdC0lZTclOTQlYTglZTYlODglYjclZTYlOGMlODclZTUlOGQlOTcv">https://www.qnap.com.cn/zh-cn/how-to/tutorial/article/mattermost-%e7%94%a8%e6%88%b7%e6%8c%87%e5%8d%97/<i class="fa fa-external-link-alt"></i></span>，写的非常的详细。这里就不展开了。</p>
<h1 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h1><p>下载地址：<span class="exturl" data-url="aHR0cHM6Ly9tYXR0ZXJtb3N0LmNvbS9kb3dubG9hZC8jbWF0dGVybW9zdEFwcHM=">https://mattermost.com/download/#mattermostApps<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/20/1597914678065-1597914678102.png" alt="title"></p>
<p>Android移动端的GitHub下载地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21hdHRlcm1vc3QvbWF0dGVybW9zdC1tb2JpbGUvcmVsZWFzZXM=">https://github.com/mattermost/mattermost-mobile/releases<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/20/1597915150146-1597915150153.png" alt="title"></p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>團隊內的聊天工具，不可不知Mattermost<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmhlbGxvc2FudGEuY29tLnR3LyVFNyVCNiVCMiVFNyVBQiU5OSVFOCVBOCVBRCVFOCVBOCU4OC8lRTUlODUlQjYlRTQlQkIlOTYvJUU1JTlDJTk4JUU5JTlBJThBJUU1JTg1JUE3JUU3JTlBJTg0JUU4JTgxJThBJUU1JUE0JUE5JUU1JUI3JUE1JUU1JTg1JUI3JUVGJUJDJThDJUU0JUI4JThEJUU1JThGJUFGJUU0JUI4JThEJUU3JTlGJUE1bWF0dGVybW9zdA==">https://blog.hellosanta.com.tw/%E7%B6%B2%E7%AB%99%E8%A8%AD%E8%A8%88/%E5%85%B6%E4%BB%96/%E5%9C%98%E9%9A%8A%E5%85%A7%E7%9A%84%E8%81%8A%E5%A4%A9%E5%B7%A5%E5%85%B7%EF%BC%8C%E4%B8%8D%E5%8F%AF%E4%B8%8D%E7%9F%A5mattermost<i class="fa fa-external-link-alt"></i></span></p>
<p>Mattermost 用户指南<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cucW5hcC5jb20uY24vemgtY24vaG93LXRvL3R1dG9yaWFsL2FydGljbGUvbWF0dGVybW9zdC0lZTclOTQlYTglZTYlODglYjclZTYlOGMlODclZTUlOGQlOTcv">https://www.qnap.com.cn/zh-cn/how-to/tutorial/article/mattermost-%e7%94%a8%e6%88%b7%e6%8c%87%e5%8d%97/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>即时通讯</tag>
        <tag>IM</tag>
        <tag>Mattermost</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建自己的聊天服务器（Element篇）</title>
    <url>/2020/09/01/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E8%81%8A%E5%A4%A9%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88Element%E7%AF%87%EF%BC%89/</url>
    <content><![CDATA[<p><strong>什么是 Matrix 协议 ？</strong></p>
<blockquote>
<p>Matrix 是一種用於即時通訊的開放協定。它允許擁有一個通訊服務提供商帳戶的用戶與不同服務提供商的用戶進行網路聊天，IP語音和影片電話。也就是說，它旨在使不同服務提供商之間的即時通訊無縫工作，就像使用電子郵件一樣。採用該協定的軟體有Riot.im。 【維基百科】</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/22/1598077660389-1598077660394.png" alt="title"></p>
<p>上图展示了不同 Matrix home server 上的客户之间是如何通讯的，这是一种类似电子邮件的方式</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/22/1598081495380-1598081495382.png" alt="title"></p>
<p>架构图展示的是不同服务器之间的关系</p>
<p><strong>什么是 Element ？</strong></p>
<blockquote>
<p>Element 原来叫 Riot.im，是一个基于 Matrix 协议的协作平台，可以在 iOS、Android、Web 端运行，完全由自身控制的通用安全聊天应用程序。支持多大25种语言（支持中文），且还在不断地增加！可以应用到：即时通讯、视频会议、智能通知、机器人等。</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/21/1597997280169-1597997280181.png" alt="title"></p>
<p>您可以在 <span class="exturl" data-url="aHR0cHM6Ly9tYXRyaXgub3JnL2RvY3MvcHJvamVjdHMvdHJ5LW1hdHJpeC1ub3cv">https://matrix.org/docs/projects/try-matrix-now/<i class="fa fa-external-link-alt"></i></span> 找到支持 Matrix 协议的各种资源，包括服务器、客户端及 SDK 等等。</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>element 只是支持 Matrix 协议的客户端，其客户端涵盖了 Web, Android, iOS, macOS, Windows &amp; Linux等几个主流平台，所以我们需要自己搭建 Matrix 服务器，当然也可以直接加入已有的 Matrix 服务器。</p>
<p>公共服务器列表：<span class="exturl" data-url="aHR0cHM6Ly93d3cuaGVsbG8tbWF0cml4Lm5ldC9wdWJsaWNfc2VydmVycy5waHA=">https://www.hello-matrix.net/public_servers.php<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="安装服务端Synapse"><a href="#安装服务端Synapse" class="headerlink" title="安装服务端Synapse"></a>安装服务端Synapse</h2><p>在 <code>Docker</code> 注册表中搜索 <code>Synapse</code> ，选择 <code>matrixdotorg/synapse</code>，版本选择 <code>latest</code>。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/21/1597999012573-1597999012578.png" alt="title"></p>
<p>SSH 登录到群晖</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成配置文件</span></span><br><span class="line">docker run -it --rm \</span><br><span class="line">    -v /volume1/docker/matrix:/data \</span><br><span class="line">    -e SYNAPSE_SERVER_NAME=mx.xxsu.tk \</span><br><span class="line">    -e SYNAPSE_REPORT_STATS=yes \</span><br><span class="line">    matrixdotorg/synapse:latest generate</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行</span></span><br><span class="line">docker run -d --name synapse \</span><br><span class="line">    -v /volume1/docker/matrix:/data \</span><br><span class="line">    -p 8008:8008 \</span><br><span class="line">    matrixdotorg/synapse:latest</span><br></pre></td></tr></table></figure>

<h3 id="打开注册"><a href="#打开注册" class="headerlink" title="打开注册"></a>打开注册</h3><p>修改 <code>/volume1/docker/matrix/homeserver.yaml</code> 中的参数</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Enable registration for new users.</span></span><br><span class="line"><span class="comment"># 允许注册新用户，默认值是 false</span></span><br><span class="line"><span class="attr">enable_registration:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="新建用户"><a href="#新建用户" class="headerlink" title="新建用户"></a>新建用户</h3><p>当然你也可以关闭注册，自己在后台新建用户</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">register_new_matrix_user -c /data/homeserver.yaml http://localhost:8008</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/22/1598072386115-1598072386117.png" alt="title"></p>
<h2 id="安装-Web-端-riot-web"><a href="#安装-Web-端-riot-web" class="headerlink" title="安装 Web 端 riot-web"></a>安装 Web 端 riot-web</h2><p>在 <code>Docker</code> 注册表中搜索 <code>vectorim</code> ，选择 <code>vectorim/riot-web</code>，版本选择 <code>latest</code>。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/21/1597996900806-1597996900840.png" alt="title"></p>
<h3 id="卷"><a href="#卷" class="headerlink" title="卷"></a>卷</h3><p>关于 <code>config.json</code>，详细的说明文档在 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3ZlY3Rvci1pbS9lbGVtZW50LXdlYi9ibG9iL2RldmVsb3AvZG9jcy9jb25maWcubWQ=">https://github.com/vector-im/element-web/blob/develop/docs/config.md<i class="fa fa-external-link-alt"></i></span></p>
<p>可以在这里 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3ZlY3Rvci1pbS9lbGVtZW50LXdlYi9ibG9iL2RldmVsb3AvY29uZmlnLnNhbXBsZS5qc29u">https://github.com/vector-im/element-web/blob/develop/config.sample.json<i class="fa fa-external-link-alt"></i></span> 直接复制粘贴 <code>config.sample.json</code> 的内容。</p>
<p>之后直接在卷里 <code>添加文件</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/22/1598029798594-1598029798599.png" alt="title"></p>
<h3 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h3><p>端口只要不冲突即可</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/22/1598030925417-1598030925420.png" alt="title"></p>
<h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><p>第一次运行居然显示不支持浏览器</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/22/1598031227607-1598031227612.png" alt="title"></p>
<p>而实际上我的浏览器已经是最新版本的 <code>Chrome</code> 了</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/22/1598030814939-1598030814946.png" alt="title"></p>
<p>修改语言</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/22/1598032446000-1598032446005.png" alt="title"></p>
<p>中文看起来习惯多了</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/22/1598032629803-1598032629806.png" alt="title"></p>
<h2 id="登入"><a href="#登入" class="headerlink" title="登入"></a>登入</h2><p>如果已经在后台建好了账号，可以直接选择 <code>登入</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/22/1598073300784-1598073300787.png" alt="title"></p>
<p>需要手动修改服务器地址，如果没有备案，记得把端口也带上</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/22/1598073771395-1598073771398.png" alt="title"></p>
<p>输入账号、密码</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/22/1598073626932-1598073626934.png" alt="title"></p>
<p>登录成功后，需要设置安全备份</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/22/1598074032507-1598074032510.png" alt="title"></p>
<p>安全密钥是这样的</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/22/1598074091967-1598074091971.png" alt="title"></p>
<p>安全密码设置</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/22/1598074145492-1598074145495.png" alt="title"></p>
<p>如果密码不符合要求，会有相应的提示</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/22/1598074281177-1598074281179.png" alt="title"></p>
<p>这个密码够强悍，可自己也记不住，还是要靠 <code>bitwarden</code> 才行</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/22/1598074398221-1598074398224.png" alt="title"></p>
<p>个人感觉如果是在不同的机器上使用 <code>Element</code> ，还是安全密码更方便一些</p>
<p>首界面</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/22/1598074665651-1598074665653.png" alt="title"></p>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>除网页版之外，在 <span class="exturl" data-url="aHR0cHM6Ly9yb2NrZXQuY2hhdC9pbnN0YWxsLw==">https://element.io/get-started<i class="fa fa-external-link-alt"></i></span> 可以下载桌面和移动端应用</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/22/1598076807180-1598076807182.png" alt="title"></p>
<p>Android移动端如果下载存在问题，可以去 <code>F-Droid</code> 下载</p>
<p>下载地址：<span class="exturl" data-url="aHR0cHM6Ly9mLWRyb2lkLm9yZy9wYWNrYWdlcy9pbS52ZWN0b3IuYXBwLw==">https://f-droid.org/packages/im.vector.app/<i class="fa fa-external-link-alt"></i></span></p>
<p>可以拉到底直接下载 <code>apk</code> 文件，也可以先下载 <code>F-Droid</code> 客户端，不过速度有点慢，不行可以多下几次。</p>
<h2 id="网页版"><a href="#网页版" class="headerlink" title="网页版"></a>网页版</h2><h3 id="加联系人"><a href="#加联系人" class="headerlink" title="加联系人"></a>加联系人</h3><p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/22/1598078287029-1598078287030.png" alt="title"></p>
<h3 id="建聊天室"><a href="#建聊天室" class="headerlink" title="建聊天室"></a>建聊天室</h3><p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/22/1598078092973-1598078092977.png" alt="title"></p>
<p>邀请用户</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/22/1598078207415-1598078207418.png" alt="title"></p>
<h2 id="移动端"><a href="#移动端" class="headerlink" title="移动端"></a>移动端</h2><p>选 <code>Other</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/22/1598079470743-1598079470745.png" alt="title"></p>
<p>自己输入服务器地址</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/22/1598079499071-1598079499074.png" alt="title"></p>
<p>注册或者登陆</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/22/1598079659304-1598079659306.png" alt="title"></p>
<p>登陆后会收到邀请</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/22/1598079751509-1598079751511.png" alt="title"></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/22/1598079775395-1598079775397.png" alt="title"></p>
<h2 id="音视频呼叫"><a href="#音视频呼叫" class="headerlink" title="音视频呼叫"></a>音视频呼叫</h2><p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/22/1598079885811-1598079885816.png" alt="title"></p>
<p>不需要依赖第三方应用，开箱即用，这点比较方便。</p>
<h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>目前测试的几款通讯软件，虽然各有特点，但毕竟都号称是 <code>slack</code> 的替代品，所以用法大同小异，稍稍用用就习惯了</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>[资源分享] Riot-IM：是一个开源免费的即时通讯聊天协作工具，功能丰富且跨平台——Riot-IM<br>地址：<span class="exturl" data-url="aHR0cDovL3d3dy5zb29sY28uY29tL3Bvc3QvMzA5ODhfMV8xLmh0bWw=">http://www.soolco.com/post/30988_1_1.html<i class="fa fa-external-link-alt"></i></span></p>
<p>一款开源免费的多功能聊天室：Riot.im安装教程<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cubW9lcmF0cy5jb20vYXJjaGl2ZXMvNTk1Lw==">https://www.moerats.com/archives/595/<i class="fa fa-external-link-alt"></i></span></p>
<p>借美国禁用微信，再谈去中心化的即时通信与Matrix协议<br>地址：   <span class="exturl" data-url="aHR0cHM6Ly9tYXR0ZXJzLm5ld3MvQHd6bWtua2d6aGhuLyVFNSU4MCU5RiVFNyVCRSU4RSVFNSU5QiVCRCVFNyVBNiU4MSVFNyU5NCVBOCVFNSVCRSVBRSVFNCVCRiVBMS0lRTUlODYlOEQlRTglQjAlODglRTUlOEUlQkIlRTQlQjglQUQlRTUlQkYlODMlRTUlOEMlOTYlRTclOUElODQlRTUlOEQlQjMlRTYlOTclQjYlRTklODAlOUElRTQlQkYlQTElRTQlQjglOEVtYXRyaXglRTUlOEQlOEYlRTglQUUlQUUtYmFmeXJlaWZodW01c2l5Z3czemJiMnFzdW5zYmdzaTRvbDdraDJ5bGdnYzVxMnpjdmtkZWE3cHByaW0=">https://matters.news/@wzmknkgzhhn/%E5%80%9F%E7%BE%8E%E5%9B%BD%E7%A6%81%E7%94%A8%E5%BE%AE%E4%BF%A1-%E5%86%8D%E8%B0%88%E5%8E%BB%E4%B8%AD%E5%BF%83%E5%8C%96%E7%9A%84%E5%8D%B3%E6%97%B6%E9%80%9A%E4%BF%A1%E4%B8%8Ematrix%E5%8D%8F%E8%AE%AE-bafyreifhum5siygw3zbb2qsunsbgsi4ol7kh2ylggc5q2zcvkdea7pprim<i class="fa fa-external-link-alt"></i></span></p>
<p>安装Matrix系统（Riot.im）的服务端Synapse<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC81YzQ0NWQ4Njk4YTQ=">https://www.jianshu.com/p/5c445d8698a4<i class="fa fa-external-link-alt"></i></span></p>
<p>How to install Matrix Synapse Home Server<br>地址：<span class="exturl" data-url="aHR0cHM6Ly91cGNsb3VkLmNvbS9jb21tdW5pdHkvdHV0b3JpYWxzL2luc3RhbGwtbWF0cml4LXN5bmFwc2Uv">https://upcloud.com/community/tutorials/install-matrix-synapse/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>即时通讯</tag>
        <tag>IM</tag>
        <tag>element</tag>
      </tags>
  </entry>
  <entry>
    <title>把网页打包成桌面应用程序</title>
    <url>/2020/06/06/%E6%8A%8A%E7%BD%91%E9%A1%B5%E6%89%93%E5%8C%85%E6%88%90%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>现在的应用一般都需要多端，Android 端、iOS 端、PC 端、Web 端，PC 端还包括了3个不同的操作系统平台，所以要想降低开发成本和开发难度，就需要寻找成熟的跨平台方案。Electron 可以让你使用纯 JavaScript 调用丰富的原生 APIs 来创造跨平台的桌面应用。软件开发者只需一次编写程序，即可在 Windows、Linux、Mac 等平台运行，不仅大大降低了程序员的工作量，也大大降低了开发难度（相比QT），使公司的产品可以快速迭代。Android端和iOS端作为两种不同的移动端技术，可以考虑用Flutter，暂且不表，今天我们只讨论Electron。</p>
<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Electron 是由 Github 开发，用 HTML，CSS 和 JavaScript 来构建跨平台桌面应用程序的一个开源库。通过将 Chromium 和 Node.js 合并到同一个运行时环境中，并将其打包为 Mac ， Windows 和 Linux 系统下的应用。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/05/components-1591367317059.png" alt="title"><br>（ 图片来自于：<span class="exturl" data-url="aHR0cHM6Ly9qbG9yZC51cy9lc3NlbnRpYWwtZWxlY3Ryb24v">https://jlord.us/essential-electron/<i class="fa fa-external-link-alt"></i></span> ）</p>
<p>如上图所示，Electron 结合了 Chromium、Node.js 和用于调用操作系统本地功能的 API。</p>
<h1 id="Electron开发环境配置"><a href="#Electron开发环境配置" class="headerlink" title="Electron开发环境配置"></a>Electron开发环境配置</h1><h2 id="安装最新版本的Node-js"><a href="#安装最新版本的Node-js" class="headerlink" title="安装最新版本的Node.js"></a>安装最新版本的Node.js</h2><p>按官方的建议，推荐您安装最新的 <code>长期支持版本</code> 或者 <code>当前发行版本</code>，去 <span class="exturl" data-url="aHR0cHM6Ly9ub2RlanMub3JnL2VuL2Rvd25sb2FkLw==">nodejs.org<i class="fa fa-external-link-alt"></i></span> 下载相应平台的安装包即可。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/02/1591074602452-1591074602460.png" alt="title"></p>
<p>安装完成后执行如下命令确保正常展示版本号即可。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>

<h2 id="用-npm-安装-electron"><a href="#用-npm-安装-electron" class="headerlink" title="用 npm 安装 electron"></a>用 npm 安装 electron</h2><p>一般网上建议全局安装，但是局部安装可以让你在不同的 app 中使用不同的 Electron 版本，所以根据个人需要，在「<a href="https://laosu.ml/2020/06/02/%E8%87%AA%E5%B7%B1%E7%BC%96%E8%AF%91ntfstool/">自己编译ntfstool</a>」 一文中，我们强调过，国内用户建议先更换 electron 源，不然有可能会比较慢。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> electron_mirror https://cdn.npm.taobao.org/dist/electron/</span><br></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> electron_mirror https://npm.taobao.org/mirrors/electron/</span><br></pre></td></tr></table></figure>

<h3 id="全局安装"><a href="#全局安装" class="headerlink" title="全局安装"></a>全局安装</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 全局安装 需要的话追加上 --registry='http://registry.npm.taobao.org' 使用淘宝npm源安装</span></span><br><span class="line">sudo npm install electron -g --allow-root -unsafe-perm=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Windows使用下面语句 64位32位机器都是--win32</span></span><br><span class="line">npm install electron -g --platform=win32</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证安装</span></span><br><span class="line">electron -v</span><br></pre></td></tr></table></figure>

<h3 id="局部安装"><a href="#局部安装" class="headerlink" title="局部安装"></a>局部安装</h3><p>建议新建个文件夹，然后进入到该文件夹进行操作</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 局部安装 需要的话追加上 --registry='http://registry.npm.taobao.org' 使用淘宝npm源安装</span></span><br><span class="line">npm install electron --save-dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># Windows使用下面语句 64位32位机器都是--win32</span></span><br><span class="line">npm install electron --save-dev --platform=win32</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证安装</span></span><br><span class="line">node_modules/.bin/electron -v</span><br></pre></td></tr></table></figure>

<h1 id="文件准备"><a href="#文件准备" class="headerlink" title="文件准备"></a>文件准备</h1><p>为你的新Electron应用创建一个新的空文件夹。 打开你的命令行工具，然后从该文件夹运行</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">npm init</span><br></pre></td></tr></table></figure>

<p>会根据你的输入生成 <code>package.json</code> 文件，也可以自己新建。</p>
<p>你的项目目录/<br>└── package.json</p>
<p>新建 main.js、index.html 三个文件（注：其中的 index.html 是你的网页首页）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">你的项目目录&#x2F;</span><br><span class="line">├── package.json</span><br><span class="line">├── main.js</span><br><span class="line">└── index.html</span><br></pre></td></tr></table></figure>

<p>如果是打算局部安装，继续运行下面的命令：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">npm install --save-dev electron</span><br></pre></td></tr></table></figure>

<p>你的项目目录/<br>├── node_modules<br>├── package-lock.json<br>├── package.json<br>├── main.js<br>└── index.html</p>
<h2 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h2><p>如果你是自建，可以在 package.json 中添加如下内容</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>    : <span class="string">"app-name"</span>,</span><br><span class="line">  <span class="attr">"version"</span> : <span class="string">"0.1.0"</span>,</span><br><span class="line">  <span class="attr">"main"</span>    : <span class="string">"main.js"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="main-js"><a href="#main-js" class="headerlink" title="main.js"></a>main.js</h2><p>package.json 中 <code>&quot;main&quot;</code> 指定的入口点文件，即程序主文件，可根据需要修改</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123;app, BrowserWindow&#125; = <span class="built_in">require</span>(<span class="string">'electron'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> mainWindow</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建主窗口，设置了宽高等信息</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createWindow</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  mainWindow = <span class="keyword">new</span> BrowserWindow(&#123;</span><br><span class="line">    width: <span class="number">1000</span>,</span><br><span class="line">    height: <span class="number">600</span>,</span><br><span class="line">    webPreferences: &#123;</span><br><span class="line">      <span class="comment">// node集成，即是否注入node能力</span></span><br><span class="line">      nodeIntegration: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 加载主页面内容 index.html</span></span><br><span class="line">  mainWindow.loadFile(<span class="string">'index.html'</span>)</span><br><span class="line"></span><br><span class="line">  mainWindow.on(<span class="string">'closed'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    mainWindow = <span class="literal">null</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">app.on(<span class="string">'ready'</span>, createWindow)</span><br></pre></td></tr></table></figure>

<h2 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 此title会覆盖package.json中设置的name，作为应用顶部名称 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>my-app<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    Hello World!</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="启动app"><a href="#启动app" class="headerlink" title="启动app"></a>启动app</h1><h2 id="全局安装时"><a href="#全局安装时" class="headerlink" title="全局安装时"></a>全局安装时</h2><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"># 进入到包含 package.json 文件的目录，别忽略了后面的点</span><br><span class="line">electron .</span><br></pre></td></tr></table></figure>

<h2 id="局部安装时"><a href="#局部安装时" class="headerlink" title="局部安装时"></a>局部安装时</h2><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"># 进入到包含 package.json 文件的目录</span><br><span class="line">npm <span class="built_in">start</span></span><br><span class="line"></span><br><span class="line"># 或者直接使用脚本启动，别忽略了后面的点</span><br><span class="line">node_modules/.bin/electron .</span><br></pre></td></tr></table></figure>

<p>正常启动的话会出现如下界面代表成功，页面内容显示的就是index.html定义的页面</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/06/1591430690284-1591430690335.png" alt="title"></p>
<h1 id="打包网站"><a href="#打包网站" class="headerlink" title="打包网站"></a>打包网站</h1><h2 id="修改-main-js"><a href="#修改-main-js" class="headerlink" title="修改 main.js"></a>修改 main.js</h2><p>让我们来试试把 draw.io 打包成桌面 app，只要将 <code>main.js</code> 中的 <code>mainWindow.loadFile(&#39;index.html&#39;)</code> 改成 <code>mainWindow.loadURL(&#39;https://app.diagrams.net/&#39;)</code>就行。</p>
<p>完整的 main.js 如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123;app, BrowserWindow&#125; = <span class="built_in">require</span>(<span class="string">'electron'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> mainWindow</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建主窗口，设置了宽高等信息</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createWindow</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  mainWindow = <span class="keyword">new</span> BrowserWindow(&#123;</span><br><span class="line">    width: <span class="number">1000</span>,</span><br><span class="line">    height: <span class="number">600</span>,</span><br><span class="line">    webPreferences: &#123;</span><br><span class="line">      <span class="comment">// node集成，即是否注入node能力</span></span><br><span class="line">      nodeIntegration: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 加载主页面内容 index.html</span></span><br><span class="line">  <span class="comment">// 改为使用loadURL加载 draw.io 的url地址</span></span><br><span class="line">  mainWindow.loadURL(<span class="string">'https://app.diagrams.net/'</span>)</span><br><span class="line"></span><br><span class="line">  mainWindow.on(<span class="string">'closed'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    mainWindow = <span class="literal">null</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">app.on(<span class="string">'ready'</span>, createWindow)</span><br></pre></td></tr></table></figure>

<h2 id="重新启动app"><a href="#重新启动app" class="headerlink" title="重新启动app"></a>重新启动app</h2><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"># 全局安装</span><br><span class="line">electron .</span><br><span class="line"></span><br><span class="line"># 局部安装</span><br><span class="line">node_modules/.bin/electron .</span><br><span class="line"># or</span><br><span class="line">npm <span class="built_in">start</span></span><br></pre></td></tr></table></figure>

<p>第一次运行可能有点慢，毕竟是国外网站</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/06/1591431030553-1591431030560.png" alt="title"></p>
<h1 id="程序打包发布"><a href="#程序打包发布" class="headerlink" title="程序打包发布"></a>程序打包发布</h1><h2 id="安装electron-builder"><a href="#安装electron-builder" class="headerlink" title="安装electron-builder"></a>安装electron-builder</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install --save-dev electron-builder</span><br></pre></td></tr></table></figure>

<h2 id="开始打包"><a href="#开始打包" class="headerlink" title="开始打包"></a>开始打包</h2><p>以Mac为例</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 在Mac环境下执行</span><br><span class="line">node_modules&#x2F;.bin&#x2F;electron-builder -m dmg</span><br></pre></td></tr></table></figure>

<p>打包好的程序在当前目录dist文件夹下</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/06/1591433294803-1591433294822.png" alt="title"></p>
<p>如果你担心源代码泄漏，可以用 asar 来进行简单的加密，更复杂的还是要靠对代码进行加密混淆才行。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>Electron 文档<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuZWxlY3Ryb25qcy5vcmcvZG9jcw==">https://www.electronjs.org/docs<i class="fa fa-external-link-alt"></i></span></p>
<p>Electron入门指南 | 一篇文章看懂Electron封装网页并打包应用<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9xaWk0MDQubWUvMjAxOS8wNy8xMC9lbGVjdHJvbi5odG1s">https://qii404.me/2019/07/10/electron.html<i class="fa fa-external-link-alt"></i></span></p>
<p>【最简单】Electron 怎么将网页打包成桌面应用（web前端页面怎么生成exe可执行文件）<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2E3Mjc5MTE0MzgvYXJ0aWNsZS9kZXRhaWxzLzcwODM0NDY3">https://blog.csdn.net/a727911438/article/details/70834467<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>Github</tag>
        <tag>Electron</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建自己的聊天服务器（Rocket.Chat上篇）</title>
    <url>/2020/08/22/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E8%81%8A%E5%A4%A9%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88Rocket.Chat%E4%B8%8A%E7%AF%87%EF%BC%89/</url>
    <content><![CDATA[<p>什么是 Rocket.Chat？</p>
<blockquote>
<p>Rocket.Chat 是特性最丰富的 Slack 开源替代品之一。主要功能：群组聊天，直接通信，私聊群，桌面通知，媒体嵌入，链接预览，文件上传，语音/视频 聊天，截图等等。</p>
</blockquote>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>因为 Rocket.Chat 用了 Meteor 框架，所以需要安装 MongoDB。这次我们还是采用 Docker 方式安装，想要把 Rocket.Chat 跑起来，需要下载2个镜像，分别是 MongoDB 镜像和 Rocket.Chat 镜像。</p>
<h2 id="安装-MongoDB"><a href="#安装-MongoDB" class="headerlink" title="安装 MongoDB"></a>安装 MongoDB</h2><p>在 Docker 的注册表中搜索 <code>mongodb</code>，选第一个 <code>mongo</code>，版本选 <code>latest</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/15/1597479748364-1597479748397.png" alt="title"></p>
<h3 id="卷"><a href="#卷" class="headerlink" title="卷"></a>卷</h3><table>
<thead>
<tr>
<th align="center">文件夹</th>
<th align="center">装载路径</th>
</tr>
</thead>
<tbody><tr>
<td align="center">your/path/to/mongodb/mongo.conf</td>
<td align="center">/etc/mongod.conf</td>
</tr>
<tr>
<td align="center">your/path/to/mongodb/db</td>
<td align="center">/data/db</td>
</tr>
</tbody></table>
<blockquote>
<p>以上2个均为文件夹，而不是文件</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/15/1597480704031-1597480704034.png" alt="title"></p>
<h3 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h3><p>直接用的默认端口 27017</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/15/1597480332031-1597480332033.png" alt="title"></p>
<h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><table>
<thead>
<tr>
<th align="center">可变</th>
<th align="center">值</th>
</tr>
</thead>
<tbody><tr>
<td align="center">MONGO_INITDB_DATABASE</td>
<td align="center">db</td>
</tr>
<tr>
<td align="center">MONGO_INITDB_ROOT_USERNAME</td>
<td align="center">root</td>
</tr>
<tr>
<td align="center">MONGO_INITDB_ROOT_PASSWORD</td>
<td align="center">YourPASSWORD</td>
</tr>
</tbody></table>
<p>必须要记得，在 <code>命令</code> 行中输入下面的指令</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">mongod --oplogSize 128 --replSet rs01</span><br></pre></td></tr></table></figure>

<blockquote>
<p>一旦容器创建成功，就不能再添加命令行，所以切记一定要在创建之前添加。</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/15/1597498900708-1597498900710.png" alt="title"></p>
<p>完成上述设置后，就可以启动了</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/15/1597481566725-1597481566726.png" alt="title"></p>
<p>直接启动容器，右键进入「详情」</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/15/1597496795183-1597496795185.png" alt="title"></p>
<p>「终端机」 =&gt; 「新增」 =&gt; 「通过命令启动」=&gt; 「请输入一个命令」=&gt; 「sh」</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/15/1597496861985-1597496861986.png" alt="title"></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># mongo -u root -p &lt;pass&gt; --authenticationDatabase admin</span></span><br><span class="line">mongo -u root -p test123 --authenticationDatabase admin</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/15/1597498591125-1597498591126.png" alt="title"></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">rs.initiate(&#123; _id: <span class="string">'rs01'</span>, members: [ &#123; _id: 0, host: <span class="string">'localhost:27017'</span> &#125; ]&#125;)</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/15/1597498680666-1597498680668.png" alt="title"></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 切换用户</span></span><br><span class="line">use admin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新增用户</span></span><br><span class="line">db.createUser(&#123;user: <span class="string">"admin"</span>, <span class="built_in">pwd</span>: passwordPrompt(), roles: [&#123;role: <span class="string">"readWrite"</span>, db: <span class="string">"db"</span>&#125;]&#125;)</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/15/1597500116669-1597500116671.png" alt="title"></p>
<h2 id="安装-Rocket-Chat"><a href="#安装-Rocket-Chat" class="headerlink" title="安装 Rocket.Chat"></a>安装 Rocket.Chat</h2><p>在 Docker 的注册表中搜索 <code>rocket</code>，选第二个 <code>rocketchat/rocket.chat</code>，版本选 <code>latest</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/15/1597500528568-1597500528570.png" alt="title"></p>
<h3 id="端口-1"><a href="#端口-1" class="headerlink" title="端口"></a>端口</h3><p>直接用的默认端口 3000</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/15/1597501192888-1597501192890.png" alt="title"></p>
<h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/15/1597501373724-1597501373725.png" alt="title"></p>
<h3 id="环境-1"><a href="#环境-1" class="headerlink" title="环境"></a>环境</h3><table>
<thead>
<tr>
<th align="center">可变</th>
<th align="center">值</th>
</tr>
</thead>
<tbody><tr>
<td align="center">MONGO_URL</td>
<td align="center">mongodb://root:yourRootPass@db:27017/db?authSource=admin​</td>
</tr>
<tr>
<td align="center">MONGO_OPLOG_URL</td>
<td align="center">mongodb://root:yourRootPass@db:27017/local?authSource=admin​</td>
</tr>
</tbody></table>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/15/1597504535631-1597504535633.png" alt="title"></p>
<p>启动容器，查看日志，已经正常启动了</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/15/1597503732726-1597503732728.png" alt="title"></p>
<p>资源占用有点高，不过还能接受</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/15/1597504637174-1597504637177.png" alt="title"></p>
<h1 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h1><p>在浏览器中访问 <code>http://群晖IP:3000</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/15/1597503929896-1597503929897.png" alt="title"></p>
<p>后面跟随设置向导完成一些常规设定即可，没有什么难度。设置完后就能看到聊天室界面了：</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/15/1597504330671-1597504330673.png" alt="title"></p>
<p>在管理员工作区，可以添加用户、查看系统日志等操作</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/15/1597504893751-1597504893753.png" alt="title"></p>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>除网页版之外，在 <code>https://rocket.chat/install/</code> 可以下载桌面和移动端应用</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/16/1597546415237-1597546415273.png" alt="title"></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/15/1597505843326-1597505843328.png" alt="title"></p>
<h2 id="Windows-客户端"><a href="#Windows-客户端" class="headerlink" title="Windows 客户端"></a>Windows 客户端</h2><p>输入服务器地址</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/15/1597506559117-1597506559120.png" alt="title"></p>
<p>连接成功后需要输入账号和密码</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/15/1597506597299-1597506597301.png" alt="title"></p>
<p>登录成功</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/15/1597506661250-1597506661251.png" alt="title"></p>
<h2 id="Android-客户端"><a href="#Android-客户端" class="headerlink" title="Android 客户端"></a>Android 客户端</h2><p>因为国内市场需要软著，所以不管应用宝还是小米市场，肯定是没有的，但是 <code>google play</code> 又访问不到，所以只能去github下载。</p>
<p>移动客户端的发布地址：<br> <code>https://github.com/RocketChat/Rocket.Chat.ReactNative/releases</code></p>
<p>我们会看到有带 <code>rc</code> 和不带 <code>rc</code> 的版本</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/16/1597547894567-1597547894571.png" alt="title"></p>
<blockquote>
<p>RC版本含义 RC=Release Candidate,含义是”发布候选版”，它不是最终的版本，而是最终版(RTM=Release To Manufacture)之前的最后一个版本。</p>
</blockquote>
<p>所以一般我们要找不带 <code>rc</code> 的版本，例如这样的</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/16/1597548138501-1597548138507.png" alt="title"></p>
<p>下拉到下面的 Assets，展开前面的小三角</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/16/1597548181530-1597548181533.png" alt="title"></p>
<p>其中 <code>apk</code>结尾的是 Android 版本，<code>ipa</code>结尾的是 iOS 版本，把链接复制到手机浏览器里下载安装</p>
<p>开始运行</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/16/1597557062335-1597557062338.png" alt="title"></p>
<p>输入服务器地址</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/16/1597557115165-1597557115167.png" alt="title"></p>
<p>输入账号、密码</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/16/1597557143591-1597557143593.png" alt="title"></p>
<p>登录成功后</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/16/1597558665257-1597558665261.png" alt="title"></p>
<p>第一件事就是设置成中文界面</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/16/1597557424599-1597557424601.png" alt="title"></p>
<p>可以切换服务器</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/16/1597557450600-1597557450601.png" alt="title"></p>
<p>接下来可以创建频道等操作，开始进行各种花式聊天了</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/16/1597558117486-1597558117488.png" alt="title"></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/16/1597559329658-1597559329662.png" alt="title"></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/16/1597559298020-1597559298022.png" alt="title"></p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>官方文档<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9kb2NzLnJvY2tldC5jaGF0Lw==">https://docs.rocket.chat/<i class="fa fa-external-link-alt"></i></span></p>
<p>CentOS7使用RocketChat自建即时聊天服务器<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cueGllYnJ1Y2UudG9wLzExMjMuaHRtbA==">https://www.xiebruce.top/1123.html<i class="fa fa-external-link-alt"></i></span>)</p>
<p>使用宝塔面板安装Rocket.Chat多功能团队聊天室<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cubW9lcmF0cy5jb20vYXJjaGl2ZXMvOTYwLw==">https://www.moerats.com/archives/960/<i class="fa fa-external-link-alt"></i></span></p>
<p>Rocket.Chat 开源 IM 系统部署<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9qdWVqaW4uaW0vZW50cnkvNjg0NDkwMzUyMDEzOTczOTE0OQ==">https://juejin.im/entry/6844903520139739149<i class="fa fa-external-link-alt"></i></span></p>
<p>Rocket.Chat 开源免费企业级聊天工具<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cucnVsdHIuY29tL3R1dG9yaWFscy9wcm94eS80MDgzLmh0bWw=">https://www.rultr.com/tutorials/proxy/4083.html<i class="fa fa-external-link-alt"></i></span></p>
<p>rocket-chat使用教程<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTI3MjI2OS9hcnRpY2xlL2RldGFpbHMvMTA0ODI2Mzk2">https://blog.csdn.net/weixin_41272269/article/details/104826396<i class="fa fa-external-link-alt"></i></span></p>
<p>Install Rocket.Chat with Docker as a Slack alternative<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnNzZG5vZGVzLmNvbS9ibG9nL3R1dG9yaWFsLXJvY2tldC1jaGF0LWRvY2tlci8=">https://blog.ssdnodes.com/blog/tutorial-rocket-chat-docker/<i class="fa fa-external-link-alt"></i></span></p>
<p>Docker Rocket.Chat - SLACK alternative (with MongoDB as backend)<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuc3lub2ZvcnVtLmNvbS9yZXNvdXJjZXMvcm9ja2V0LWNoYXQtc2xhY2stYWx0ZXJuYXRpdmUtd2l0aC1tb25nb2RiLWFzLWJhY2tlbmQuMTkv">https://www.synoforum.com/resources/rocket-chat-slack-alternative-with-mongodb-as-backend.19/<i class="fa fa-external-link-alt"></i></span></p>
<p>Rocket.Chat Installation on Synology DS415+<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuZHVhbmVub2xhbmQuY29tL2hvbWUtbGFiL3JvY2tldGNoYXQtc3lub2xvZ3kv">https://www.duanenoland.com/home-lab/rocketchat-synology/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>即时通讯</tag>
        <tag>IM</tag>
        <tag>Rocket.Chat</tag>
      </tags>
  </entry>
  <entry>
    <title>用Wallabag搭建稍后阅读</title>
    <url>/2020/09/13/%E7%94%A8Wallabag%E6%90%AD%E5%BB%BA%E7%A8%8D%E5%90%8E%E9%98%85%E8%AF%BB/</url>
    <content><![CDATA[<p><strong>什么是稍后阅读?</strong></p>
<blockquote>
<p>稍后阅读即是将网页（文字、图片、多媒体）等内容，通过用户操作，在网络浏览器及服务器中进行保存，或发送到指定云存储平台及邮箱，可以满足用户的移动阅读需求。【百度百科】</p>
</blockquote>
<p><strong>什么是Wallabag？</strong></p>
<blockquote>
<p>wallabag 是一款可自行托管的 PHP 应用程序，可以让你不会丢失任何内容。只需要点击保存，然后在你有时间时阅读。wallabag 同时包含各种第三方开发的浏览器扩展和手机应用，可进入软件下载页面获取。</p>
</blockquote>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>在群晖的 <code>Docker</code> 中搜索 <code>Wallabag</code>，选第一个，这是官方的版本，版本 <code>latest</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/30/1598788179972-1598788179997.png" alt="title"></p>
<h2 id="卷"><a href="#卷" class="headerlink" title="卷"></a>卷</h2><table>
<thead>
<tr>
<th align="center">文件/文件夹</th>
<th align="center">装载路径</th>
</tr>
</thead>
<tbody><tr>
<td align="center">/docker/wallabag/images</td>
<td align="center">/var/www/wallabag/web/assets/images</td>
</tr>
<tr>
<td align="center">/docker/wallabag/data</td>
<td align="center">/var/www/wallabag/data</td>
</tr>
</tbody></table>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/11/w%E5%8D%B7ok.png-1599836898992.png" alt="title"></p>
<h2 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h2><p>不冲突就行</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/11/w%E7%AB%AF%E5%8F%A3-1599836943100.png" alt="title"></p>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>数据库支持 <code>SQLite</code>、<code>MariaDB / MySQL</code>、<code>PostgreSQL</code>、<code>Redis</code>，本来想用群晖套件原来已安装的 <code>MariaDB</code> ，但一直报错，按照官方对于<code>SYMFONY__ENV__DATABASE_HOST</code> 的描述，当使用 <code>MySQL</code> 时，这个字段只能填<code>the name of the mariadb container</code>，所以最后还是用了 <code>SQLite</code></p>
<table>
<thead>
<tr>
<th align="center">可变</th>
<th align="center">值</th>
</tr>
</thead>
<tbody><tr>
<td align="center">SYMFONY__ENV__DOMAIN_NAME</td>
<td align="center">缺省值 “<span class="exturl" data-url="aHR0cHM6Ly95b3VyLXdhbGxhYmFnLXVybC1pbnN0YW5jZS5jb23igJ0=">https://your-wallabag-url-instance.com”<i class="fa fa-external-link-alt"></i></span></td>
</tr>
</tbody></table>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/11/w%E7%8E%AF%E5%A2%83ok-1599837032541.png" alt="title"></p>
<p>这个参数必须要填，不然web界面是这样的</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/11/login_error-1599837069108.png" alt="title"></p>
<p>从代码看，当你不设置的时候，用了缺省值，因此导致了图片等异常</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/11/link_error-1599837097748.png" alt="title"></p>
<p>设置正确的域名后，登录界面已经可以正常显示</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/11/login-1599837114901.png" alt="title"></p>
<p>默认用户名和密码均为 <code>wallabag</code></p>
<h1 id="客户端安装"><a href="#客户端安装" class="headerlink" title="客户端安装"></a>客户端安装</h1><p>可以在后台找到浏览器插件和移动端的下载地址</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/13/1600007262033-1600007262064.png" alt="title"></p>
<h2 id="浏览器插件安装"><a href="#浏览器插件安装" class="headerlink" title="浏览器插件安装"></a>浏览器插件安装</h2><p>后台生成 <code>Client ID</code> 和 <code>Client secret</code>，这个在配置Chrome插件时会用到</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/11/Client_ID-1599837147646.png" alt="title"></p>
<p>设置界面</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/11/w%E6%8F%92%E4%BB%B6-1599837169391.png" alt="title"></p>
<p>填入参数</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/11/ID_%E5%AF%86%E7%A0%81ok-1599837194398.png" alt="title"></p>
<h2 id="移动端安装"><a href="#移动端安装" class="headerlink" title="移动端安装"></a>移动端安装</h2><p>因为是自建的，所以要选<code>其他</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/11/android_wallabag1-1599837226877.jpg" alt="title"></p>
<p>填写地址、账号和密码</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/11/android_wallabag2-1599837239484.jpg" alt="title"></p>
<h1 id="使用和设置"><a href="#使用和设置" class="headerlink" title="使用和设置"></a>使用和设置</h1><h2 id="图片保存到本地"><a href="#图片保存到本地" class="headerlink" title="图片保存到本地"></a>图片保存到本地</h2><p>这样可以确保即便源站删除了，你这里的图片也不会因为源站的改变而受到影响。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/11/local_image-1599837343381.png" alt="title"></p>
<p>测试的时候发现，因为 <code>加载 wallabag API...</code> 明显时间变长了</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/11/save_image-1599837406757.png" alt="title"></p>
<p>有时候容易出现错误</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/11/save_error-1599837432884.png" alt="title"></p>
<p>猜测可能跟网络、SQLite 等等相关，Android 上要好很多。</p>
<h2 id="保存文章的方式"><a href="#保存文章的方式" class="headerlink" title="保存文章的方式"></a>保存文章的方式</h2><ul>
<li>通过chrome插件收藏，在浏览器上点击图标 </li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/13/1600007553618-1600007553621.png" alt="title"></p>
<ul>
<li>在wallabag的后台，直接输入要保存的网页的 url</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/13/1600007735441-1600007735443.png" alt="title"></p>
<ul>
<li>手机上公众号的文章收藏方法，和之前我们分享的《<a href="https://laosu.ml/2020/06/30/%E5%A6%82%E4%BD%95%E6%94%B6%E8%97%8F%E5%BE%AE%E4%BF%A1%E5%86%85%E5%AE%B9%E5%88%B0%E4%B8%BA%E7%9F%A5%E7%AC%94%E8%AE%B0/">如何收藏微信内容到为知笔记</a>》一样，需要通过浏览器打开之后，再分享到 <code>wallabag</code></li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/11/android_wallabag4-1599837273111.jpg" alt="title"></p>
<p>最后展示一张完整的首页界面</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/11/first-1599837298400.png" alt="title"></p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>保存网页、稍后阅读，自建 Wallabag 服务也是一种选择 - 少数派<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9zc3BhaS5jb20vcG9zdC81Mjk3OQ==">https://sspai.com/post/52979<i class="fa fa-external-link-alt"></i></span></p>
<p>自建稍后阅读服务之 Wallabag<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9idXN5LmltL3Bvc3QvcmVhZC1pdC1sYXRlci13YWxsYWJhZy8=">https://busy.im/post/read-it-later-wallabag/<i class="fa fa-external-link-alt"></i></span></p>
<p>重温 wallabag：Instapaper 的开源替代品 - 知乎<br>地址：<span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80MjY2NTk4OA==">https://zhuanlan.zhihu.com/p/42665988<i class="fa fa-external-link-alt"></i></span></p>
<p>【NAS玩机十一年高阶玩家教程系列其二：wallabag】_NAS存储_什么值得买<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2Fvb3cycm05Lw==">https://post.smzdm.com/p/aoow2rm9/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖,稍后阅读]</tag>
      </tags>
  </entry>
  <entry>
    <title>用portainer管理docker服务</title>
    <url>/2020/09/16/%E7%94%A8portainer%E7%AE%A1%E7%90%86docker%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<p><strong>什么是portainer？</strong></p>
<blockquote>
<p>portainer 是一个轻量级的 docker 图形化管理方案，可以用来管理 docker 宿主机和 docker swarm 集群。提供状态显示面板、应用模板快速部署、容器镜像网络数据卷的基本操作（包括上传下载镜像，创建容器等操作）、事件日志显示、容器控制台操作、Swarm集群和服务等集中管理和操作、登录用户管理和控制等功能。</p>
</blockquote>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>设备多了，服务多了，docker 的管理就是一个问题，而 portainer 就是一个让 docker 管理更简单的软件，能实现多设备的集中管理，这是 portainer ​比群晖自带的 docker GUI 工具强的地方。</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>在 docker 注册表中搜索 <code>portainer</code> ，选择第一个 <code>portainer/portainer</code>，版本 <code>latest</code>。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/download-1600227637102.png" alt="title"></p>
<h2 id="卷"><a href="#卷" class="headerlink" title="卷"></a>卷</h2><table>
<thead>
<tr>
<th align="center">文件夹</th>
<th align="center">装载路径</th>
</tr>
</thead>
<tbody><tr>
<td align="center">/docker/portainer</td>
<td align="center">/data</td>
</tr>
</tbody></table>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/volume-1600227674616.png" alt="title"></p>
<h2 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h2><p>端口直接用默认的9000</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/port-1600227701031.png" alt="title"></p>
<h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:9000</code> ，会看到正在载入中</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/first_run-1600227735006.png" alt="title"></p>
<p>完成后，需要新建用户</p>
<h2 id="新建管理员"><a href="#新建管理员" class="headerlink" title="新建管理员"></a>新建管理员</h2><p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/login-1600227767242.png" alt="title"></p>
<blockquote>
<p>注意：如果你设置了反向代理，并通过反向代理去访问，这一步会报错<br>参考：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BvcnRhaW5lci9wb3J0YWluZXIvaXNzdWVzLzEzNTI=">https://github.com/portainer/portainer/issues/1352<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/error-1600227819185.png" alt="title"></p>
<p>所以这里有2点需要注意：</p>
<ul>
<li>在创建好管理员账号之前，不要走反向代理</li>
<li>密码必须超过8位，否则不能设置成功</li>
</ul>
<h2 id="连接Docker服务"><a href="#连接Docker服务" class="headerlink" title="连接Docker服务"></a>连接Docker服务</h2><p>用管理员登录后，需要配置连接到 docker 服务</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/setup01-1600227838611.png" alt="title"></p>
<p>首先我们需要让群晖的docker服务允许通过TCP进行连接，用 SSH 连到群晖上，编辑文件 <code>/var/packages/Docker/etc/dockerd.json</code> ，并新增一行：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"hosts" : [ "tcp://192.168.0.199:2375", "unix:///var/run/docker.sock" ],</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/setup02-1600227865839.png" alt="title"></p>
<p>其中的 IP 需要改成群晖主机的 IP 地址，然后用保存。接下来重启群晖的 docker 服务：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">synoservice --restart pkgctl-Docker</span><br></pre></td></tr></table></figure>

<p>在之前的连接 docker 终端的界面，<code>Name</code> 随便填写，<code>Endpoint URL</code> 填写群晖的 IP 和端口2375，TLS 选择关闭，然后点击 <code>Connect</code> 按钮。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/setup03-1600227888287.png" alt="title"></p>
<p>连接之后就能看到我们新建的 <code>Endpoint</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/setup04-1600227909597.png" alt="title"></p>
<p>进入 <code>Endpoint info</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/setup05-1600227930799.png" alt="title"></p>
<h2 id="再添加另一台群晖"><a href="#再添加另一台群晖" class="headerlink" title="再添加另一台群晖"></a>再添加另一台群晖</h2><p>把蜗牛星际也加进去，当然也同样需要先修改 <code>/var/packages/Docker/etc/dockerd.json</code> 文件，记得要重启，然后回到 Web界面 <code>Add Endpoint</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/setup06-1600227952921.png" alt="title"></p>
<p>只要填名字和 IP 即可</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/setup07-1600227966361.png" alt="title"></p>
<p>右上角出现</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/setup08-1600227981114.png" alt="title"></p>
<p>在主界面会看到刚建的 <code>docker-woniu</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/setup09-1600227998902.png" alt="title"></p>
<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="汉化"><a href="#汉化" class="headerlink" title="汉化"></a>汉化</h2><p>可以在 <span class="exturl" data-url="aHR0cDovL3d3dy5uYXNnZS5jb20vYXJjaGl2ZXMvNTkuaHRtbA==">http://www.nasge.com/archives/59.html<i class="fa fa-external-link-alt"></i></span> 找到汉化的版本</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/cn_download-1600228017165.png" alt="title"></p>
<p>在 <code>/docker/portainer</code> 中新建 <code>public</code> 目录</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/cn01-1600228038540.png" alt="title"></p>
<p>将汉化包解压到 <code>public</code> 目录，重新启动镜像，再次访问已经是中文了</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/cn02-1600228056170.png" alt="title"></p>
<p>如果要恢复英文，只要停止镜像，并删除装载路径 <code>public</code>，再重新启动就行了</p>
<h2 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h2><p>左下角显示有新版本，打开官方网站显示已经有了 v2.0.0，但是官方的镜像还只能下载到 v1.24.1，看来还得等等</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/16/version-1600228072498.png" alt="title"></p>
<p>大致用了一下，Portainer基本上可以实现对 docker 的各种操作，详细的功能还需要慢慢探索。</p>
<p>如果你希望实现 docker 镜像在有新版本后自动升级，可以关注即将推出的用 <code>watchtower</code> 自动更新 docker 镜像。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>Portainer – Docker可视化管理工具的安装配置及使用_Aurora Silent-CSDN博客<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0E2MzIxODkwMDcvYXJ0aWNsZS9kZXRhaWxzLzc4Nzc5OTIw">https://blog.csdn.net/A632189007/article/details/78779920<i class="fa fa-external-link-alt"></i></span></p>
<p>Portainer一个轻量级的Docker环境管理UI_Kubernetes中文社区<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cua3ViZXJuZXRlcy5vcmcuY24vNTg4My5odG1s">https://www.kubernetes.org.cn/5883.html<i class="fa fa-external-link-alt"></i></span></p>
<p>家庭云不一样的玩法：集中管理群晖与威联通NAS上的docker服务_NAS存储_什么值得买<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2F2N203bTM0Lw==">https://post.smzdm.com/p/av7m7m34/<i class="fa fa-external-link-alt"></i></span></p>
<p>手把手带你玩转NAS 篇十九：简单易用的docker可视化管理工具——portainer简明使用教程_NAS存储_什么值得买<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2FwejNsZHcwLw==">https://post.smzdm.com/p/apz3ldw0/<i class="fa fa-external-link-alt"></i></span></p>
<p>Setup and Install Portainer on Synology NAS – NAS Hosted<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9uYXNob3N0ZWQuY29tL3NldHVwLWFuZC1pbnN0YWxsLXBvcnRhaW5lci1vbi1zeW5vbG9neS1uYXMv">https://nashosted.com/setup-and-install-portainer-on-synology-nas/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>运维</tag>
        <tag>可视化</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建自己的聊天服务器（Rocket.Chat下篇）</title>
    <url>/2020/08/25/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E8%81%8A%E5%A4%A9%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88Rocket.Chat%E4%B8%8B%E7%AF%87%EF%BC%89/</url>
    <content><![CDATA[<p>在各种 <code>Rocket.Chat</code> 的介绍中都有支持语音/视频聊天功能的描述，但是刚安装好的 <code>Rocket.Chat</code> 中是找不到的，需要我们进一步的安装、设置。</p>
<p>要支持视频，有几个选择，一个是 <code>Jitsi Meet</code>，一个是 <code>RocketChat Meet</code>，还有一个 <code>BigBlueButton</code>。之前我们在《<a href="https://laosu.ml/2020/07/22/%E5%9C%A8%E7%BE%A4%E6%99%96%E4%B8%8A%E6%90%AD%E5%BB%BA%E4%B8%93%E5%B1%9E%E7%9A%84%E8%A7%86%E9%A2%91%E4%BC%9A%E8%AE%AE/">在群晖上搭建专属的视频会议</a>》里已经安装过 <code>Jitsi Meet</code>，所以就先以 <code>Jitsi Meet</code> 为例看看如何设置</p>
<h1 id="Jitsi-Meet"><a href="#Jitsi-Meet" class="headerlink" title="Jitsi Meet"></a><code>Jitsi Meet</code></h1><p>网页版进入 <code>管理</code> 模块</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/16/1597580612683-1597580612684.png" alt="title"></p>
<p>左侧菜单项找到 <code>视频会议</code> ，展开 <code>Jitsi</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/16/1597580763324-1597580763329.png" alt="title"></p>
<ul>
<li>首先肯定要启用</li>
<li>域名：填入 <code>Jitsi</code> 的域名（有端口要带上端口），当然，如果你并没有自己搭建 <code>Jitsi Meet</code>，也可以用公网的。如果准备用公网的，这项不用做任何修改</li>
<li>SSL：因为浏览器中要使用音视频必须支持 SSL ，所以不管是你架设的 <code>Jitsi Meet</code> 服务还是公网，都必须启用</li>
<li>总是在新窗口打开：建议启用，否则有可能会看不全</li>
<li>在频道中启用：建议启用，这样在频道中也可以使用视频会议了</li>
<li>JWT 认证：不建议启用，但启用了会更安全。如果启用需要在 <code>Jitsi Meet</code> 安装相应的插件并做相应的设置，具体设置过程可以参考文档： <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2ppdHNpL2xpYi1qaXRzaS1tZWV0L2Jsb2IvbWFzdGVyL2RvYy90b2tlbnMubWQ=">https://github.com/jitsi/lib-jitsi-meet/blob/master/doc/tokens.md<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<blockquote>
<p>JSON Web Token（JWT）是一个开放的标准（RFC 7519），它定义了一个紧凑且自包含的方式，用于在各方之间作为JSON对象安全地传输信息。由于此信息是经过数字签名的，因此可以被验证和信任。</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/17/1597653305651-1597653305658.png" alt="title"></p>
<p>在 <code>Android</code> 客户端，频道中选中一个用户，会发现多了 <code>视频电话</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/16/1597581723420-1597581723425.png" alt="title"></p>
<p>在 <code>Windows</code> 客户端也是一样的</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/16/1597582112898-1597582112900.png" alt="title"></p>
<p>开始视频呼叫</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/16/1597582165207-1597582165208.png" alt="title"></p>
<p>对方会收到一条信息，点击后即可进入视频</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/17/1597653028583-1597653028590.png" alt="title"></p>
<p>呼通之后</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/25/1598353886290-1598353886321.png" alt="title"></p>
<h1 id="BigBlueButton"><a href="#BigBlueButton" class="headerlink" title="BigBlueButton"></a><code>BigBlueButton</code></h1><blockquote>
<p><code>BigBlueButton</code> 是一款专门为了「老师、学生教学需求」而设计的免费、开源的网络会议系统，支持实时共享音频、视频、幻灯片(带有白板控件)、聊天和屏幕。教师可以使用投票、表情符号、多用户白板和分会议室来远程和学生进行互动。演示者也可以记录和回放内容，供以后与他人共享。</p>
</blockquote>
<p>关于 <code>BigBlueButton</code> 的安装使用，简单测试了一下，网上的 Docker 镜像都是2年前的，尝试后发现存在很多错误，未能成功运行，有空再研究。</p>
<p>网页版进入 <code>管理</code> 模块，找到 <code>视频会议</code> ，展开 <code>BigBlueButton</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/18/1597716754750-1597716754758.png" alt="title"></p>
<p>想用 <code>https://demo.bigbluebutton.org</code> 测试，但没有 <code>Shared Secret</code>，所以启用之后可以看到按钮，但启动 <code>Start Meeting</code> 后没有任何看到任何提示</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/20/1597891966310-1597891966339.png" alt="title"></p>
<p>在管理后台的日志菜单中会能看到 <code>Exception while invoking method bbbJoin Error</code> 这类的错误。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/20/1597903170705-1597903170711.png" alt="title"></p>
<h1 id="RocketChat-Meet"><a href="#RocketChat-Meet" class="headerlink" title="RocketChat Meet"></a><code>RocketChat Meet</code></h1><p><code>RocketChat Meet</code> 就是 <code>WebRTC</code> ，网页版进入 <code>管理</code> 模块，左侧菜单项找到 <code>WebRTC</code>，启用后在用户信息会出现 <code>开始视频对话</code> 和 <code>开始音频对话</code> 两个按钮</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/17/1597679868033-1597679868119.png" alt="title"></p>
<p>开始视频对话</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/20/1597900818119-1597900818128.png" alt="title"></p>
<p>对端的手机端没反应，但是网页端会弹出提示</p>
<blockquote>
<p>当同一个账号登录多个网页端时，都会收到通话的消息，但是接通只能是一个</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/20/1597901073110-1597901073113.png" alt="title"></p>
<p>接受之后</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/20/1597901656377-1597901656387.png" alt="title"></p>
<p><code>chrome</code> 浏览器中，屏幕共享需要另外安装插件</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/20/1597901842936-1597901842942.png" alt="title"></p>
<p>而在 <code>Safari</code> 浏览器上并不支持屏幕共享功能</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/20/1597901938358-1597901938363.png" alt="title"></p>
<p>如果是音频对话，本地和远端都是黑框</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/20/1597901762769-1597901762776.png" alt="title"></p>
<h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p><code>Rocket.Chat</code> 功能非常强大，能够和很多系统进行整合，而视频只是其中的一项，感兴趣的可以深入研究。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>官方文档<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9kb2NzLnJvY2tldC5jaGF0Lw==">https://docs.rocket.chat/<i class="fa fa-external-link-alt"></i></span></p>
<p>Video Conferencing<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9kb2NzLnJvY2tldC5jaGF0L2d1aWRlcy9hZG1pbmlzdHJhdG9yLWd1aWRlcy9zZXR0aW5nLXVwLXZpZGVvLWNvbmZlcmVuY2luZw==">https://docs.rocket.chat/guides/administrator-guides/setting-up-video-conferencing<i class="fa fa-external-link-alt"></i></span></p>
<p>Voice and Video Conferencing<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9kb2NzLnJvY2tldC5jaGF0L2d1aWRlcy91c2VyLWd1aWRlcy92b2ljZS1hbmQtdmlkZW8tY29uZmVyZW5jaW5n">https://docs.rocket.chat/guides/user-guides/voice-and-video-conferencing<i class="fa fa-external-link-alt"></i></span></p>
<p>Rocket Chat part 3: Installing Jitsi with JWT for secure video conferencing<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9tZWRpdW0uY29tL0BzemV3b25nL3JvY2tldC1jaGF0LXBhcnQtMy1pbnN0YWxsaW5nLWppdHNpLXdpdGgtand0LWZvci1zZWN1cmUtdmlkZW8tY29uZmVyZW5jaW5nLWI2ZjkwOWU3ZjkyYw==">https://medium.com/@szewong/rocket-chat-part-3-installing-jitsi-with-jwt-for-secure-video-conferencing-b6f909e7f92c<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>即时通讯</tag>
        <tag>IM</tag>
        <tag>Rocket.Chat</tag>
      </tags>
  </entry>
  <entry>
    <title>用Bitwarden自建密码管理系统</title>
    <url>/2020/07/18/%E7%94%A8bitwarden%E8%87%AA%E5%BB%BA%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p><strong>什么是Bitwarden?</strong></p>
<blockquote>
<p>Bitwarden 是一款自由且开源的密码管理服务，用户可在加密的保管库中存储敏感信息（例如网站登录凭据）。Bitwarden平台提供有多种客户端应用程序，包括网页用户界面、桌面应用，浏览器扩展、移动应用以及命令行界面。Bitwarden 提供云托管服务，并支持自行部署解决方案。【维基百科】</p>
</blockquote>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>用户信息泄露事件时有发生，连 facebook 这样的大网站也不可避免，当你多个网站使用了同一个密码，假如你使用了 chrome 浏览器自动保存填充密码时，在密码被泄露后它会给出提醒。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/13/1594570093933-1594570093937.png" alt="title"></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/13/1594602446840-1594602446869.png" alt="title"></p>
<p>所以每个网站、每个应用使用独立的密码是非常必要的。那为什么不用 chrome 自带的密码管理器呢？因为它无法自主添加网站，所以还需要配合其他记录工具使用。</p>
<p>在上一篇中我们介绍了<a href="https://laosu.ml/2020/07/11/%E5%85%8D%E8%B4%B9%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86%E5%99%A8KeePass/">《免费跨平台密码管理器KeePass》</a>，其使用本地密码数据库保存，通过云盘同步的方式。属于一个去中心化的方案，也可以说是个离线版的方案。而今天要介绍的 bitwarden 正好相反，是基于服务器的一个方案，今天我们就来介绍如何在群晖上，用 bitwarden 自建密码管理服务器，来保障自己的数据安全。</p>
<h1 id="为什么要自建服务器"><a href="#为什么要自建服务器" class="headerlink" title="为什么要自建服务器"></a>为什么要自建服务器</h1><p>Bitwarden自己的服务器安全性肯定是没问题的，但是放在别人服务器上总是有点担忧，万一服务器挂了呢？（最近onedrive for business就一直用不了），另一方面国内访问国外网站，总是不太友好，所以干脆自建。</p>
<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ol>
<li>一个公网IP；</li>
<li>一个域名和SSL证书；</li>
<li>支持Docker的群晖主机（黑白无所谓）；</li>
</ol>
<h1 id="服务端安装"><a href="#服务端安装" class="headerlink" title="服务端安装"></a>服务端安装</h1><p><code>bitwarden/setup</code> 是官方镜像，因 Bitwarden 服务器使用 .Net 开发，Docker 镜像体积过大，此外它使用 Microsoft SQL Server 数据库，这个数据库对服务器性能要求比较高。</p>
<p>有人利用 Rust 重写了一遍，这个项目的 Docker 镜像叫做<br> <code>bitwardenrs/server</code>，这个镜像体积比较小，对服务器性能要求比较低，还可以使用 SQLite 或 MariaDB/MySQL 数据库，而无需像官方服务器那样使用专有的 Microsoft SQL Server。</p>
<p>所以本次部署采用该镜像。代码地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2RhbmktZ2FyY2lhL2JpdHdhcmRlbl9ycw==">https://github.com/dani-garcia/bitwarden_rs<i class="fa fa-external-link-alt"></i></span></p>
<p>打开群晖Docker — 注册表 — 搜 bitwarden ，第一个 <code>bitwardenrs/server</code> 就是，双击下载，tag选择 latest</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/12/1594540732235-1594540732239.png" alt="title"></p>
<h2 id="卷"><a href="#卷" class="headerlink" title="卷"></a>卷</h2><p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/12/1594542615497-1594542615499.png" alt="title"></p>
<h2 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h2><p>因为 80 端口被占用了，所以需要另外指定。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/12/1594542209311-1594542209315.png" alt="title"></p>
<h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><p>新增四个变量</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 设置是否开启 Web 客户端。如果开启，可以通过访问你的域名来打开 Web 客户端，用户登录后即可通过网页管理密码。因为注册用户需要，所以也暂且先打开；</span></span><br><span class="line"><span class="attr">WEB_VAULT_ENABLED</span> = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 控制是否开放用户注册，因为你必须先注册才能存储数据，所以暂且先打开；搭建好注册后改成false</span></span><br><span class="line"><span class="attr">SIGNUPS_ALLOWED</span> = <span class="literal">true</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否开启WebSocket</span></span><br><span class="line"><span class="attr">WEBSOCKET_ENABLED</span> = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志保存文件路径</span></span><br><span class="line"><span class="attr">LOG_FILE</span> = /data/bitwarden.log</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/12/1594558929684-1594558929685.png" alt="title"></p>
<h1 id="服务端设置"><a href="#服务端设置" class="headerlink" title="服务端设置"></a>服务端设置</h1><p>虽然 <code>bitwardenrs</code> 已经可以运行起来，但是 <code>bitwardenrs</code> 必须要通过https 访问，否则无法进行注册、登陆等一系列的操作。</p>
<h2 id="反向代理设置"><a href="#反向代理设置" class="headerlink" title="反向代理设置"></a>反向代理设置</h2><p>进入群晖的 “控制面板” - “Synology 应用程序门户” - “反向代理服务器” 页面 (找不到的话请点击高级模式) ，如图添加一条 “反向代理服务器规则”。（“来源端口” 你自己定义，“目的地端口” ）</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/15/1594824175603-1594824175604.png" alt="title"></p>
<ul>
<li>来源处协议必须选择 https，主机名为你在外网访问群晖的域名，端口填写你想要外网访问的端口，这里假如为 9443；</li>
<li></li>
<li>目的地处协议选择 http，主机名填写 localhost，对应上面配置容器参数步骤中设置的本地端口 8880；</li>
<li></li>
<li>完成后点击确定。</li>
</ul>
<h2 id="上传证书"><a href="#上传证书" class="headerlink" title="上传证书"></a>上传证书</h2><p>进入群晖的 “控制面板” - “安全性” - “证书” 页面，将你的域名证书文件和私钥文件导入群晖中。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/15/1594824544185-1594824544188.png" alt="title"></p>
<p>以 dnspod 申请的证书为例。将下载下来的证书文件压缩包解压。如图导入群晖中：</p>
<blockquote>
<ul>
<li>Nginx 文件夹里的 2_域名.key 文件放入 “私钥” 中</li>
<li>Nginx 文件夹里的 1_域名_bundle.crt 文件放入 “证书” 中</li>
<li>“中间证书” 留空</li>
</ul>
</blockquote>
<p>或者</p>
<blockquote>
<ul>
<li>Apache 文件夹里的 3_域名.key 文件放入 “私钥” 中</li>
<li>Apache 文件夹里的 2_域名.crt 文件放入 “证书” 中</li>
<li>Apache 文件夹里的 1_域名.crt 放入 “中间证书” 中</li>
</ul>
</blockquote>
<p>在” 证书 “页面设置刚才添加的反向代理服务器规则使用此证书。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/15/1594824926962-1594824926964.png" alt="title"></p>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><h2 id="Web端"><a href="#Web端" class="headerlink" title="Web端"></a>Web端</h2><p>至此，Bitwarden 服务端基本就搭建好了。启动 Bitwarden 容器后，浏览器输入 https://群晖的 ip:9443，应该就可以进入登录页面了。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/12/1594566250628-1594566250631.png" alt="title"></p>
<p>然后点击注册按钮填写我们的邮箱和主密码，请务必牢记你的主密码，因为一旦遗失，你保存的密码就再也找不回来了。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/15/1594785522592-1594785522644.png" alt="title"></p>
<p>主界面</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/12/1594567089388-1594567089390.png" alt="title"></p>
<p>注册完成后如果不想其他用户进行注册的需要关闭注册及邀请功能。在群晖中停止一下容器，选择编辑容器</p>
<p>添加环境变量 </p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment">#关闭注册</span></span><br><span class="line"><span class="attr">SIGNUPS_ALLOWED</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#关闭邀请</span></span><br><span class="line"><span class="attr">INVITATIONS_ALLOWED</span> = <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>应用后重启容器。</p>
<h2 id="chrome插件"><a href="#chrome插件" class="headerlink" title="chrome插件"></a>chrome插件</h2><p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/12/1594540953735-1594540953737.png" alt="title"></p>
<p>点击左上角的齿轮图标进入服务器设置界面。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/15/1594825860759-1594825860763.png" alt="title"></p>
<p>在服务器URL中填入服务器地址(如：https://群晖的 ip:9443)后保存。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/15/1594825962671-1594825962673.png" alt="title"></p>
<p>返回主界面后点击登录按钮，用自己注册的账号进行登录。</p>
<p>安装完插件后，在浏览器中鼠标右键会增加 Bitwarden 。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/15/1594828358678-1594828358682.png" alt="title"></p>
<h2 id="android-app"><a href="#android-app" class="headerlink" title="android app"></a>android app</h2><p>“设置” - “自动填写” - “自动填充服务” - “启用”</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/15/1594785703887-1594785703894.png" alt="title"></p>
<p>其他用法和设置可以自行探索。</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul>
<li>这个docker镜像对于服务器的要求不高；</li>
<li>除了最基本的密码保存、上传附件等，官方需要付费使用的 TOTP 、密码检测等功能也都是可以直接使用的；</li>
<li>如果之前用过其他的密码管理器，可以导入到 Bitwarden；</li>
<li>最好启用两步登录，安全性更高一点；</li>
<li>数据在自己手里，可能会感觉会更安全点吧。</li>
</ul>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>官网主页<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9iaXR3YXJkZW4uY29tLw==">https://bitwarden.com/<i class="fa fa-external-link-alt"></i></span></p>
<p>放弃付费1Password改用免费开源的bitwarden_rs自建密码管理系统-安装,使用和备份<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93emZvdS5jb20vYml0d2FyZGVuLXJzLw==">https://wzfou.com/bitwarden-rs/<i class="fa fa-external-link-alt"></i></span></p>
<p>使用群晖搭建第三方 Bitwarden 密码服务器<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9wZW5wZW5ndWFuZ3Vhbi5jb20vMTAyNzEuaHRtbA==">https://penpenguanguan.com/10271.html<i class="fa fa-external-link-alt"></i></span></p>
<p>使用群晖 Docker 搭建 bitwarden_rs 密码服务器<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnd4bG9zdC5jb20vZG9ja2VyX2JpdHdhcmRlbl9ycy5odG1s">https://blog.wxlost.com/docker_bitwarden_rs.html<i class="fa fa-external-link-alt"></i></span></p>
<p>群晖可以这么玩 - 自建Bitwarden服务从此告别忘记密码<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2E0d2t3dzNsLw==">https://post.smzdm.com/p/a4wkww3l/<i class="fa fa-external-link-alt"></i></span></p>
<p>Installing bitwarden on Synology Diskstation<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cua2FydG9sby5kZS8yMDIwLzAyLzAzL2luc3RhbGxpbmctYml0d2FyZGVuLW9uLXN5bm9sb2d5LWRpc2tzdGF0aW9uLw==">https://www.kartolo.de/2020/02/03/installing-bitwarden-on-synology-diskstation/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>密码</tag>
        <tag>bitwarden</tag>
      </tags>
  </entry>
  <entry>
    <title>百兆升千兆家庭组网方案（续1）</title>
    <url>/2020/05/21/%E7%99%BE%E5%85%86%E5%8D%87%E5%8D%83%E5%85%86%E5%AE%B6%E5%BA%AD%E7%BB%84%E7%BD%91%E6%96%B9%E6%A1%88%EF%BC%88%E7%BB%AD1%EF%BC%89/</url>
    <content><![CDATA[<h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><p><a href="https://laosu.ml/2020/05/16/%E7%99%BE%E5%85%86%E5%8D%87%E5%8D%83%E5%85%86%E5%AE%B6%E5%BA%AD%E7%BB%84%E7%BD%91%E6%96%B9%E6%A1%88/">上一篇</a> 中讲到买了一对 Netgear PLP1200S 有线版，因为网上介绍 Netgear PLP1200 采用了美国高通 QCA7500+AR1450 芯片组，有线端口能到到千兆，当时我的预期是能达到百兆就行，毕竟原来埋的网线也就这样了。</p>
<p>等了两天收到了，送了两根六类线</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/21/3941590041289_.pic-1590041349685.jpg" alt="title"></p>
<p>网上只搜到一本 PLP1200 的说明书，从外观看基本一样，估计也就 iphone6 和 iphone 6S 的区别吧？所以带不带 S 个人觉得功能应该是一样的。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3dic3UyMDAzL2dpdG5vdGUtaW1hZ2VzL21hc3Rlci9teW5vdGUvMjAyMC8wNS8yMS8yMDItMTE1NjYtMDFwb3dlcmxpbmVfMTIwMF91c2VyX21hbnVhbDEzSmFuMjAxNS0xNTkwMDQzMjg0NzkxLnBkZg==">PLP1200操作手册（英文版）<i class="fa fa-external-link-alt"></i></span></p>
<p>手册中比较关键的就是下面这张图，第三个灯红色，连接速度 &lt; 50Mbps，只有绿色才会 &gt; 80Mbps。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/21/1590043441077-1590043441080.png" alt="title"></p>
<p>测试时，电力猫都是直接插墙上的插座，而不是通过接线板，这样可以最大限度的避免干扰。</p>
<p>但从我的测试情况看，只有在一个房间的时候第三个灯才会是绿色的，其他时候都是红色，红灯时实测的速度在 20Mbps 左右。</p>
<p>不停的排列组合，但是无论插在哪个墙插，距离只要超过3米，只要不是一个房间，基本上就是红灯，所以测了两天还是跟老板商量给退了。</p>
<h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>从网友关于电力猫的使用看，估计速率上不去的原因可能是这几条：</p>
<ul>
<li>跟家庭布线有很大关系，可能是不同的房间过了空气开关</li>
<li>可能使用了带有滤波、防浪涌功能的插座，比如防雷插座</li>
<li>线路上有大功率的电器</li>
</ul>
<h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>下回再试试WDS，带宽应该问题不大，就看能否长时间稳定运行。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>理想很丰满，现实很骨感—腾达/TP-LINK千兆电力猫使用手记<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2F4MDh3d3oyLw==">https://post.smzdm.com/p/ax08wwz2/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>路由器</tag>
        <tag>千兆</tag>
        <tag>电力猫</tag>
        <tag>WDS</tag>
      </tags>
  </entry>
  <entry>
    <title>用旧电脑做监控主机</title>
    <url>/2020/07/10/%E7%94%A8%E6%97%A7%E7%94%B5%E8%84%91%E5%81%9A%E7%9B%91%E6%8E%A7%E4%B8%BB%E6%9C%BA/</url>
    <content><![CDATA[<p><strong>什么是iSpy</strong></p>
<blockquote>
<p>iSpy 是国外的一款开源免费的视频监控，是一套相当实用的自动监控录像工具，可以同时接入、管理多个不同的摄像头、IP CAM 或者其他的影音输入设备，让我们用一台电脑就可以录下多个不同摄像头拍的画面。</p>
</blockquote>
<p>主要核心功能：</p>
<ol>
<li>把摄像头通过代码嵌入到你自己的网站；</li>
<li>支持不同品牌摄像头，电脑usb摄像头，通过 onvif 协议，http，rtsp 等方式添加摄像头；</li>
<li>实时监看，录像回放，电视墙功能；</li>
<li>支持云存储，ftp 上传，上传录像到 YouTube, Dropbox 以及 Google Drive 等；</li>
<li>各种不同的录像方式，定时，手动，报警录像等；</li>
<li>支持Email, SMS等；</li>
<li>支持插件扩展，车牌识别(ALPR),人脸探测(Face Detection)等；</li>
<li>提供api,支持二次开发。</li>
<li>支持多语言。</li>
</ol>
<h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><p>家里有一台女儿留下的 acer aspire p3，触摸屏已经坏了，正好可以用来做 iSpy 的主机。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/10/1594384838057-1594384838091.png" alt="title"></p>
<p>另外还有一个朋友送的巨峰 IP CAM，需要加载 ocx ，所以只能用古老的 IE 浏览器。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/10/1594385024560-1594385024562.png" alt="title"></p>
<h1 id="安装设置"><a href="#安装设置" class="headerlink" title="安装设置"></a>安装设置</h1><p>iSpy 软件根据需要下载32位或者64位</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/10/1594385445247-1594385445251.png" alt="title"></p>
<p>安装比较简单，就不上图了</p>
<h2 id="设置为中文"><a href="#设置为中文" class="headerlink" title="设置为中文"></a>设置为中文</h2><p>【option】–&gt;【setting】</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/10/1594386499576-1594386499580.png" alt="title"></p>
<p>选择【中文】即可，不需要重启</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/10/1594386562373-1594386562375.png" alt="title"></p>
<p>中文翻译相当的差，可能是用 google 机翻的吧 </p>
<h2 id="添加本地摄像头"><a href="#添加本地摄像头" class="headerlink" title="添加本地摄像头"></a>添加本地摄像头</h2><p>【添加对象】–&gt;【当地拍摄器】</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/10/1594386824994-1594386824996.png" alt="title"></p>
<p>因为笔记本支持前后摄像头，所以需要进行选择，这里用了前置摄像头</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/10/1594386770378-1594386770380.png" alt="title"></p>
<h2 id="添加-IP-CAM"><a href="#添加-IP-CAM" class="headerlink" title="添加 IP CAM"></a>添加 IP CAM</h2><p>摄像机的 http 或者 rtsp 调用地址可以咨询摄像头厂家，可以使用iSpy提供的这个数据库 Camera Connection Database（<span class="exturl" data-url="aHR0cHM6Ly93d3cuaXNweWNvbm5lY3QuY29tL3NvdXJjZXMuYXNweA==">https://www.ispyconnect.com/sources.aspx<i class="fa fa-external-link-alt"></i></span>） 查询到收录的各大品牌摄像机的 rtsp 连接地址。知道地址后可以直接用【IP拍摄器】添加，如果不知道怎么设，可以尝试【使用向导的IP摄像机】，支持的设备列表相当丰富。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/10/1594388460255-1594388460257.png" alt="title"></p>
<p>我试了下向导，比较容易崩溃，而且需要自己用 VLC 测试是否能出图像。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/10/1594387851335-1594387851338.png" alt="title"></p>
<p>我的巨峰是这样的：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rtsp:&#x2F;&#x2F;192.168.0.81&#x2F;user&#x3D;admin&amp;password&#x3D;&amp;channel&#x3D;1&amp;stream&#x3D;0.sdp?</span><br></pre></td></tr></table></figure>

<h2 id="添加-ONVIF-摄像头"><a href="#添加-ONVIF-摄像头" class="headerlink" title="添加 ONVIF 摄像头"></a>添加 ONVIF 摄像头</h2><p>可以通过 onvif 工具(ONVIF Device Manager)获取到网络地址。软件下载地址：<span class="exturl" data-url="aHR0cHM6Ly9zb3VyY2Vmb3JnZS5uZXQvcHJvamVjdHMvb252aWZkbS8=">https://sourceforge.net/projects/onvifdm/<i class="fa fa-external-link-alt"></i></span></p>
<h1 id="移动侦测"><a href="#移动侦测" class="headerlink" title="移动侦测"></a>移动侦测</h1><p>在图像上右键–&gt;【编辑】–&gt;【移动侦测】，画一个矩形的检测区域即可。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/10/1594390669310-1594390669311.png" alt="title"></p>
<p>当这个区域中有物体移动时，可以触发自动录像。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/10/1594392218848-1594392218851.png" alt="title"></p>
<h1 id="录像存储"><a href="#录像存储" class="headerlink" title="录像存储"></a>录像存储</h1><p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/10/1594392022977-1594392022980.png" alt="title"></p>
<h1 id="Web访问"><a href="#Web访问" class="headerlink" title="Web访问"></a>Web访问</h1><p>广域网的访问需要注册账号，这部分的功能是收费功能，但我们可以在局域网实现 web 访问，然后通过内网穿透实现远程访问，或者将其集成到 HomeAssistant 中，目前我采用的是后者。不仅能远程访问，还能用手机访问。</p>
<p>采用了两种不同的方法来接入巨峰 IPC，一种是通过 rtsp 协议直连 IPC 获取巨峰 IPC 的图像，另一种是连 iSpy 服务器来获取巨峰 IPC 的图像。</p>
<p>记得需要设置 ip 白名单，方可通过Homeassistant，或浏览器访问摄像头。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/10/1594394580202-1594394580204.png" alt="title"></p>
<p>在 <code>configuration.yaml</code> 中增加以下内容：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">camera:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">platform:</span> <span class="string">generic</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">jufeng</span></span><br><span class="line">      <span class="attr">stream_source:</span> <span class="string">rtsp://192.168.0.81/user=admin&amp;password=&amp;channel=1&amp;stream=0.sdp?</span></span><br><span class="line">      <span class="attr">still_image_url:</span> <span class="string">http://192.168.0.81/webcapture.jpg?command=snap&amp;channel=1</span></span><br><span class="line">      <span class="attr">verify_ssl:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">admin</span> </span><br><span class="line">      <span class="attr">authentication:</span> <span class="string">basic</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">platform:</span> <span class="string">mjpeg</span></span><br><span class="line">      <span class="attr">mjpeg_url:</span> <span class="string">http://192.168.0.203:8080/mjpegfeed?oid=3&amp;full</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">acer_ispy_jufeng</span></span><br><span class="line">  </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">platform:</span> <span class="string">mjpeg</span></span><br><span class="line">      <span class="attr">mjpeg_url:</span> <span class="string">http://192.168.0.203:8080/mjpegfeed?oid=2&amp;full</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">acer_ispy_front</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/10/1594393909407-1594393909410.png" alt="title"></p>
<p>打开前置摄像头</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/07/10/1594393986811-1594393986814.png" alt="title"></p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>官网主页<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuaXNweWNvbm5lY3QuY29tLw==">https://www.ispyconnect.com/<i class="fa fa-external-link-alt"></i></span></p>
<p>[新奇玩法] Ispy【PC摄像头】【接入HA】【mjpeg】<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9iYnMuaGFzc2JpYW4uY29tL3RocmVhZC00ODQzLTEtMS5odG1s">https://bbs.hassbian.com/thread-4843-1-1.html<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>iSpy</tag>
        <tag>监控</tag>
        <tag>rtsp</tag>
        <tag>onvif</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建自己的聊天服务器（Synology Chat篇）</title>
    <url>/2020/08/12/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E8%81%8A%E5%A4%A9%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88Synology%20Chat%E7%AF%87%EF%BC%89/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>上周M国的禁令，让很多留学生开始教父母使用 skype，毕竟那是为数不多未被两国禁用的社交类软件，但未来会如何发展尚不可知，所以我们必须未雨绸缪，开始研究私有化部署的聊天服务器，这样才能不惧怕任何的风云变化。</p>
<p>聊天服务器的私有化的部署既能满足即时沟通的需要，也不用担心第三方平台有泄露隐私的隐患，聊天的内容都在自己的 NAS 里，更加的安全、放心。</p>
<p>今天首先登场的，是群晖的亲儿子 Synology Chat，Synology Chat 套件是一款针对团队协作开发的沟通互动与即时通讯工具。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/12/1597196106957-1597196106991.png" alt="title"></p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>在「套件中心」搜索 <code>chat</code> ，就能找到「Synology Chat Server」套件</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/10/1597036227271-1597036227301.png" alt="title"></p>
<p>点击「安装套件」按钮进行安装</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/10/1597036680235-1597036680237.png" alt="title"></p>
<p>安装完成后，「主菜单」里会多出两个图标</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/10/1597036763940-1597036763946.png" alt="title"></p>
<p>控制台设置</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/10/1597037764353-1597037764360.png" alt="title"></p>
<p>看了眼自己 <code>Drive</code> 的版本，找时间该升个级了</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/10/1597037881181-1597037881188.png" alt="title"></p>
<h1 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h1><h2 id="Web-网页版"><a href="#Web-网页版" class="headerlink" title="Web 网页版"></a>Web 网页版</h2><p>可以不用单独下载客户端，只要有账号即可，此举一方面保证了聊天的私密性(避免陌生人随意加入，仅管理员授权的帐号方可加入 Chat )，也降低了使用 Chat 的学习成本(管理员可以设置或邀请参与讨论的成员与帐号，团队成员仅需登陆 Chat 即可参与)。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/10/1597040342246-1597040342252.png" alt="title"></p>
<h2 id="Windows-客户端"><a href="#Windows-客户端" class="headerlink" title="Windows 客户端"></a>Windows 客户端</h2><p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/12/1597237565887-1597237565928.png" alt="title"></p>
<h2 id="Mac-客户端"><a href="#Mac-客户端" class="headerlink" title="Mac 客户端"></a>Mac 客户端</h2><p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/10/1597039977191-1597039977199.png" alt="title"></p>
<h2 id="Android-客户端"><a href="#Android-客户端" class="headerlink" title="Android 客户端"></a>Android 客户端</h2><p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/10/1597040014403-1597040014407.png" alt="title"></p>
<h2 id="其他客户端"><a href="#其他客户端" class="headerlink" title="其他客户端"></a>其他客户端</h2><p>还包括 iOS 和 Linux，只是手上没有相应的设备，通过截图可以看到，界面的一致性相当高，有利于用户降低学习的成本。</p>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><h2 id="用户界面"><a href="#用户界面" class="headerlink" title="用户界面"></a>用户界面</h2><p>用户界面有三个不同的区域：</p>
<ol>
<li><p>顶部全局栏：包括套件标志、搜索框和配置文件图像。</p>
</li>
<li><p>左侧边栏：包括三个区域，即已加星标、频道和会话。</p>
<ul>
<li><p>已加星标：您加星标的频道和会话将出现在此列表中。</p>
</li>
<li><p>频道：频道是用于使类似目的人群聚在一起。频道没有成员限制。</p>
</li>
<li><p>会话：会话是一个私密的信息系统，您可在此与一个人或一小组人聊天。会话有九个成员的限制（包括创建者）。</p>
</li>
</ul>
</li>
<li><p>主窗口：包括进入要放入文章和书签区域的信息和选项。</p>
</li>
</ol>
<h2 id="频道"><a href="#频道" class="headerlink" title="频道"></a>频道</h2><p>频道就是群组的概念，分为“公共频道”和“专用频道”，前者所有用户都能看到且不用受邀即可加入，后者只有受邀用户才能看到。</p>
<p>两者前面的图标也不一样，专用频道为一把锁的图标。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/12/1597202129407-1597202129411.png" alt="title"></p>
<h2 id="会话"><a href="#会话" class="headerlink" title="会话"></a>会话</h2><p>能将对话设置加密，多一层安全级别。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/12/1597202034404-1597202034408.png" alt="title"></p>
<h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><p>在每个人的讨论内容旁，单击“#”添加主题标签，通过搜索就可以找到相应的主题内容。</p>
<h2 id=""><a href="#" class="headerlink" title="@"></a>@</h2><p>和微信类似，你可以通过@来找到相应的人或者直接通知所有人。</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>对于个人用户而言，你可以和家人朋友用 Synology Chat 套件打造一个隐私度高的聊天环境，更多用法，可以看参考文档，有非常详细的描述。</p>
<p>接下来我们会再找几个其他的 IM 服务器软件，最后确定最优的家庭方案​。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>給企業專注、純粹的即時溝通平台 – Synology Chat<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93YWxrZXItYS5jb20vYXJjaGl2ZXMvMzk5Ng==">https://walker-a.com/archives/3996<i class="fa fa-external-link-alt"></i></span>)</p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>即时通讯</tag>
        <tag>IM</tag>
        <tag>Synology Chat</tag>
      </tags>
  </entry>
  <entry>
    <title>百兆升千兆家庭组网方案</title>
    <url>/2020/05/16/%E7%99%BE%E5%85%86%E5%8D%87%E5%8D%83%E5%85%86%E5%AE%B6%E5%BA%AD%E7%BB%84%E7%BD%91%E6%96%B9%E6%A1%88/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>下午接到中国电信的客服电话，让我把带宽从100M升到300M，每月好像只要增加20元，这才想起多年前墙里埋的还是五类线，难怪之前玩客云到顶了也就8M左右的下载速度，今天我们先从理论上来研究下怎么把百兆的家庭网络升级成千兆的家庭网络。</p>
<h1 id="家庭网络的组成"><a href="#家庭网络的组成" class="headerlink" title="家庭网络的组成"></a>家庭网络的组成</h1><p>家庭网络涉及到的主要组成包括：光猫、路由器、网线、网卡，一般来说光猫是运营商提供的，而路由器和网线则是需要我们自己准备的。当然有些套餐也会提供路由器，但对路由器的性能不要有太大的期待。</p>
<h2 id="光猫"><a href="#光猫" class="headerlink" title="光猫"></a>光猫</h2><p>运营商会根据你的套餐进行更换，我印象中已经更换过3次，从中兴的到华为的，现在用的是Nokia的，对了现在已经改叫电信SDN网关了。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/16/1589633647537-1589633647539.png" alt="title"></p>
<blockquote>
<p><strong>什么是SDN？</strong><br>軟體定義網路 (Software-defined networking)是一種新型網路架構。它利用OpenFlow協定將路由器的控制平面從資料平面中分離，改以軟體方式實作。該架構可使網路管理員在不更動硬體裝置的前提下，以中央控制方式用程式重新規劃網路，為控制網路流量提供了新方案，也為核心網路和應用創新提供了良好平台。 【維基百科】</p>
</blockquote>
<h2 id="网线"><a href="#网线" class="headerlink" title="网线"></a>网线</h2><p>最好的办法是在装修的时候就预先铺设好，但是技术的发展飞快，就像我这样，虽然预埋了能支持100Mbps的五类线，而当时的ADSL才几兆而已，也才几年功夫现在已经不够用了。</p>
<p>理论上超五类（CAT5e）的传输速率可达到250Mbps，六类线（CAT6）的传输速率可达到1Gbps，七类线（CAT7）的传输速率可达10Gbps，但从网上很多人的测试效果看，超五类（CAT5e）不仅能上千兆，万兆似乎也不是没可能。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/16/1589631764532-1589631764534.png" alt="title"></p>
<p>（图片来自： <span class="exturl" data-url="aHR0cHM6Ly93d3cuYWN3aWZpLm5ldC82MTkwLmh0bWw=">https://www.acwifi.net/6190.html<i class="fa fa-external-link-alt"></i></span> ）</p>
<p>当然你不差钱，也可以直接上八类线。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/16/1589632645267-1589632645271.png" alt="title"></p>
<p>（图片来自： 淘宝 ）</p>
<p>现在这种情况下重新布线显然不可能，但是如果走明线又实在太难看，所以暂时不考虑。</p>
<h2 id="路由器"><a href="#路由器" class="headerlink" title="路由器"></a>路由器</h2><p>从20M升到100M时，电信送了个千兆的路由，还算比较稳定，但是一个无线路由覆盖不到房间的边边角角，所以在淘宝上又淘了2个二手的，组成了一个低成本的无缝漫游方案。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/16/1589634936336-1589634936339.png" alt="title"></p>
<p>因这货支持黑科技802.11k/v/r协议，解决了 AP 切换的问题，但房间之间的拷贝速度始终受到五类网线的限制。</p>
<p>在没有NAS以前，这都不是事，但是现在必须要考虑了。</p>
<h2 id="网卡"><a href="#网卡" class="headerlink" title="网卡"></a>网卡</h2><p>网卡现在一般都是千兆的，但是无线网卡就未必了，这个看需要吧。</p>
<h1 id="无线解决方案"><a href="#无线解决方案" class="headerlink" title="无线解决方案"></a>无线解决方案</h1><h2 id="使用无线桥接"><a href="#使用无线桥接" class="headerlink" title="使用无线桥接"></a>使用无线桥接</h2><p>最先想到的办法就是WDS桥接，一般来说桥接最好是同一品牌的，但从个人经验看，无线网桥接并不稳定，丢包比较多，这是最大的问题。</p>
<blockquote>
<p><strong>什么是WDS？</strong><br>WDS是无线分布式系统（Wireless Distribution System）的英文缩写，無線分散系統指的是一個能讓無線區域網路中的存取點透過無線方式互相連結的一套系統。它可以讓多個存取點無需傳統的有線骨幹連接需求即可延伸一個無線網路。相較於其他解決方案，WDS值得注意的優點是它在各個存取點傳遞中仍能儲存客戶端的MAC位址，每個存取點可以為三個角色之一：主要、中繼或是遠端基地台： 【維基百科】</p>
</blockquote>
<h2 id="使用Mesh路由器"><a href="#使用Mesh路由器" class="headerlink" title="使用Mesh路由器"></a>使用Mesh路由器</h2><p>很早就开始关注，但是价格太喜人了，尤其是WIFI 6 Mesh路由，所有产品中个人觉得<strong>华为AX3 Pro WiFi 6+</strong> 最值得关注，关注的理由只有一个，那就是便宜，但是目前还没看到用这款产品Mesh组网的案例，也许是因为上市时间短的缘故吧。</p>
<blockquote>
<p><strong>什么是WIFI 6？</strong><br>WIFI 6 其实就是 802.11ax，也就是 802.11ac 的升级版标准。WiFi 6 又被称为 AX WiFi 或<br> 802.11ax WiFi。</p>
</blockquote>
<blockquote>
<p><strong>什么是Mesh路由器？</strong><br>Mesh路由器除了具有传统的无线路由器的网关、中继功能外，还具有支持 Mesh 网络互连的路由功能，可以通过无线多跳通信，以低得多的发射功率获得同样的无线覆盖范围。 客户端 Mesh 结构是由<br> Mesh 用户端之间互连构成一个小型对等通信网络，在用户设备间提供点到点的服务。</p>
</blockquote>
<h2 id="使用电力猫"><a href="#使用电力猫" class="headerlink" title="使用电力猫"></a>使用电力猫</h2><p>这个玩意一直没用过，据说容易受大电器设备的干扰，看着看着手一滑在咸鱼上买了一对 Netgear PLP1200S 有线版，等到手了测测看效果如何。</p>
<blockquote>
<p><strong>什么是电力猫？</strong><br>电力猫全称为电力猫路由器，是通过电线传输网络信号的。 电力猫一套为2只，一主为路由，一扩展器。 电力猫用的传输技术是正交频分复用(OFDM)，简单点说就是把互联网信号和电力信号叠加到一起。 主路由器插上电，接上网线，此时主路由已经把网络信号传输到了电信中。</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/16/1589642760585-1589642760588.png" alt="title"></p>
<p>（图片来自： 淘宝 ）</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul>
<li>家庭网络如果要升级到千兆，网线，路由器，网卡全部都需要升级到千兆。任何一个环节没跟上，都会影响到网络的速度。</li>
<li>有线永远比无线稳定，没办法的情况下，无线也是一种选择。</li>
</ul>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>也许是性价比最高的家用路由无缝漫游方案<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9iYnMubmdhLmNuL3JlYWQucGhwP3RpZD0xMzAxNTI0MiZhbXA7cmFuZD03MzI=">https://bbs.nga.cn/read.php?tid=13015242&amp;rand=732<i class="fa fa-external-link-alt"></i></span></p>
<p>可能是最便宜的WiFi无缝漫游方案<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2FrbXJkZDdrLw==">https://post.smzdm.com/p/akmrdd7k/<i class="fa fa-external-link-alt"></i></span></p>
<p>华为路由AX3 Pro评测：Wi-Fi 6+加持 300元价位最超值<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9ub3RlYm9vay5wY29ubGluZS5jb20uY24vMTMzOS8xMzM5OTUwNC5odG1s">https://notebook.pconline.com.cn/1339/13399504.html<i class="fa fa-external-link-alt"></i></span></p>
<p>WiFi6 路由器推荐汇总<br>地址：<span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xMDY3MzE4NjQ=">https://zhuanlan.zhihu.com/p/106731864<i class="fa fa-external-link-alt"></i></span></p>
<p>地上最强电力猫——NETGEAR 网件 PLW1010 千兆电力猫 使用体验 兼谈家庭组网<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wLzQzNjQwOS8=">https://post.smzdm.com/p/436409/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>路由器</tag>
        <tag>千兆</tag>
        <tag>电力猫</tag>
        <tag>WDS</tag>
        <tag>Mesh路由</tag>
        <tag>wifi6</tag>
        <tag>光猫</tag>
      </tags>
  </entry>
  <entry>
    <title>给hexo博客的https证书续期</title>
    <url>/2020/08/09/%E7%BB%99hexo%E5%8D%9A%E5%AE%A2%E7%9A%84https%E8%AF%81%E4%B9%A6%E7%BB%AD%E6%9C%9F/</url>
    <content><![CDATA[<p>题图来自：<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuYWxpeXVuLmNvbS9hcnRpY2xlLzcxMDg5MA==">https://developer.aliyun.com/article/710890<i class="fa fa-external-link-alt"></i></span></p>
<h1 id="发现问题"><a href="#发现问题" class="headerlink" title="发现问题"></a>发现问题</h1><p>突然发现博客的 https 证书失效了，网站又被标记成了不安全</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/10/1597071199125-1597071199127.png" alt="title"></p>
<p>查看证书，显示已经无效</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/10/1597067376151-1597067376188.png" alt="title"></p>
<p>可是从时间看，还有1个多月呢</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/10/1597067515305-1597067515308.png" alt="title"></p>
<p>进到 <code>coding.net</code> 后台设置查看，显示证书状态为<code>申请失败</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/10/1597067546952-1597067546953.png" alt="title"></p>
<h1 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h1><p>从错误信息看，<code>185.199.108.153</code> 是 github的 IP 地址，根据之前 DNSPOD 设置的域名解析规则，Coding Pages 的解析线路是默认，Github Pages 解析线路是境外，所以根据域名解析规则，Let’s Encrypt 在境外只能访问到 Github Pages 的域名验证信息，而无法访问 Coding Pages 的域名验证信息。所以 Coding Pages 在帮我们申请证书时，就无法通过 Let’s Encrypt 的域名验证，证书也就申请不到了。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/10/1597067649105-1597067649109.png" alt="title"></p>
<p>这个问题在《<a href="https://laosu.ml/2020/05/12/%E5%9C%A8Coding%E4%B8%8A%E9%83%A8%E7%BD%B2Hexo%E5%B9%B6%E5%AE%9E%E7%8E%B0%E5%92%8CGithub%E5%8F%8C%E7%BA%BF%E8%AE%BF%E9%97%AE/">在Coding上部署Hexo并实现和Github双线访问</a>》遇到并解决过，方法很简单：那就是在给 Coding Pages 申请证书时，需要先把 Github Pages 的解析暂停掉。果然证书状态正常了</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/10/1597070519165-1597070519167.png" alt="title"></p>
<p>再看证书，又有3个月了</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/10/1597070461350-1597070461399.png" alt="title"></p>
<p>最后要记得把 Github Pages 的解析重新启动，否则就变成单线了。</p>
<h1 id="一点猜测"><a href="#一点猜测" class="headerlink" title="一点猜测"></a>一点猜测</h1><p>会不会是 Coding 网站支持 SSL 证书自动延期，但因为我们设置了双线导致其申请失败的？如果是这样的话就有点麻烦了，再观察观察。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>在Coding上部署Hexo并实现和Github双线访问<br>地址：<a href="https://laosu.ml/2020/05/12/%E5%9C%A8Coding%E4%B8%8A%E9%83%A8%E7%BD%B2Hexo%E5%B9%B6%E5%AE%9E%E7%8E%B0%E5%92%8CGithub%E5%8F%8C%E7%BA%BF%E8%AE%BF%E9%97%AE/">https://laosu.ml/2020/05/12/%E5%9C%A8Coding%E4%B8%8A%E9%83%A8%E7%BD%B2Hexo%E5%B9%B6%E5%AE%9E%E7%8E%B0%E5%92%8CGithub%E5%8F%8C%E7%BA%BF%E8%AE%BF%E9%97%AE/</a>)</p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>证书</tag>
        <tag>博客</tag>
        <tag>hexo</tag>
        <tag>https</tag>
      </tags>
  </entry>
  <entry>
    <title>给群晖安装firefox浏览器</title>
    <url>/2020/11/01/%E7%BB%99%E7%BE%A4%E6%99%96%E5%AE%89%E8%A3%85firefox%E6%B5%8F%E8%A7%88%E5%99%A8/</url>
    <content><![CDATA[<p>当你因为需要访问家里的路由器、监控时，原来我用的办法：</p>
<ul>
<li>最早是用 <code>TeamViewer</code> 、<code>向日葵</code> 、<code>千千桌面</code> 、<code>ToDesk</code> 、<code>Guacamole</code> 这类远程桌面软件来登录到家里的台式机，再通过台式机去访问路由器，但是台式机不可能一直开着，所以还需要远程开机或者远程开关，总之越搞越复杂</li>
<li>后来是将路由器通过 <code>frp</code> 映射到公网，虽然方便但是安全性堪忧</li>
</ul>
<p>正因为有了上述不便，所以才有了这篇文章，毕竟群晖本身是 <code>7*24</code> 小时开机的，所以在群晖上安装 <code>web</code> 浏览器个人感觉才是最正确的姿势。</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>在 docker 注册表中搜索 <code>firefox</code> ，选择第一个 <code>jlesage/firefox</code>，版本 <code>latest</code>。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/04/1601815201326-1601815201327.png" alt="title"></p>
<h2 id="常规设置"><a href="#常规设置" class="headerlink" title="常规设置"></a>常规设置</h2><p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/04/1601817819191-1601817819195.png" alt="title"></p>
<h2 id="卷"><a href="#卷" class="headerlink" title="卷"></a>卷</h2><table>
<thead>
<tr>
<th align="center">文件夹</th>
<th align="center">装载路径</th>
<th align="center">备注</th>
</tr>
</thead>
<tbody><tr>
<td align="center">/docker/firefox/config</td>
<td align="center">/config</td>
<td align="center">配置文件和下载文件的目录</td>
</tr>
</tbody></table>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201027203527.png" alt=""></p>
<h2 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h2><p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/04/1601817265176-1601817265177.png" alt="title"></p>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><table>
<thead>
<tr>
<th align="center">可变</th>
<th align="center">值</th>
<th align="center">备注</th>
</tr>
</thead>
<tbody><tr>
<td align="center">ENABLE_CJK_FONT</td>
<td align="center">1</td>
<td align="center">支持中、日、韩文</td>
</tr>
</tbody></table>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201027203440.png" alt=""></p>
<p>分辨率只能设置为 <code>1280*768</code>，猜测跟性能有关系</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/picgo/20201101204800.png" alt=""></p>
<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>在浏览器中输入 <code>http://群晖IP:5800</code> 即可看到主界面，应该是分辨率的缘故，所以有白边。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/04/1601818071945-1601818071948.png" alt="title"></p>
<p>打开一个中文网站，比如 <code>百度</code> ，中文显示正常</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/04/1601820155413-1601820155419.png" alt="title"></p>
<p>访问路由器</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/04/1601820327350-1601820327352.png" alt="title"></p>
<p>虽然路由器页面本身有密码，但是浏览器没有任何保护显然是不行的，毕竟这个 <code>web</code> 浏览器是要映射到公网的，要想增加密码保护需要我们在 <code>docker</code> 容器的环境变量中增加 <code>VNC_PASSWORD</code> 字段，按官方的说法</p>
<blockquote>
<p>ATTENTION: Password is limited to 8 characters. This limitation comes from the Remote Framebuffer Protocol RFC (see section 7.2.2). Any characters beyond the limit are ignored.<br>密码限制为8个字符。此限制来自远程帧缓冲协议RFC（请参阅第7.2.2节）。超出限制的任何字符都将被忽略。</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">可变</th>
<th align="center">值</th>
</tr>
</thead>
<tbody><tr>
<td align="center">VNC_PASSWORD</td>
<td align="center">你的密码</td>
</tr>
</tbody></table>
<p>重启容器后再次打开网页，会先需要输入密码</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/04/1601820733552-1601820733553.png" alt="title"></p>
<h1 id="性能"><a href="#性能" class="headerlink" title="性能"></a>性能</h1><p>感觉资源消耗略高</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/04/1601822078885-1601822078888.png" alt="title"></p>
<p>稍微开了几个页面之后</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/04/1601824112137-1601824112138.png" alt="title"></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>除了 <code>VNC</code> 版本外</p>
<blockquote>
<p>VNC（Virtual Network Computing）)是虚拟网络控制台的缩写。它 是一款优秀的远程控制工具软件，由著名的 AT&amp;T 的欧洲研究实验室开发的。VNC 是在基于 UNIX 和 Linux 操作系统的免费的开源软件，远程控制能力强大，高效实用，其性能可以和 Windows 和 MAC 中的任何远程控制软件媲美。 在 Linux 中，VNC 包括以下四个命令：vncserver，vncviewer，vncpasswd，和 vncconnect。大多数情况下用户只需要其中的两个命令：vncserver 和 vncviewer。【百度百科】</p>
</blockquote>
<p>记得开始搜索的时候看到过 <code>RDP</code> 的版本</p>
<blockquote>
<p>RDP (Remote Desktop Protocol 远程桌面协议)，是一个多通道（multi-channel）的协议，让使用者(所在计算机称为用户端或’本地计算机’)连上提供微软终端机服务的计算机(称为服务端或’远程计算机’)。【百度百科】</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/05/1601866206076-1601866206078.png" alt="title"></p>
<p>另外还查到基于 <code>WebRTC</code> 的版本，项目叫 <code>n.eko</code> ，<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL251cmRpc20vbmVrbw==">https://github.com/nurdism/neko<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/05/1601869966724-1601869966726.png" alt="title"></p>
<p>这个应用程序使用 <code>WebRTC</code> 在 <code>docker</code> 容器中传输桌面视频流，按官方文档描述需要比较高的配置，毕竟要对桌面进行编码/传输，而且浏览器本身还要消耗性能，有兴趣的可以去研究研究。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>jlesage/docker-firefox<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2psZXNhZ2UvZG9ja2VyLWZpcmVmb3g=">https://github.com/jlesage/docker-firefox<i class="fa fa-external-link-alt"></i></span></p>
<p>使用docker在群晖/普通linux服务器中安装web浏览器_软件应用_什么值得买<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2E5OTJlNHJvLw==">https://post.smzdm.com/p/a992e4ro/<i class="fa fa-external-link-alt"></i></span></p>
<p>在群晖里使用浏览器，通过Docker安装火狐/Chrome浏览器+Enpass，可以外网访问群晖所在内网路由等！ &gt; oD^Blog<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9vZGNuLnRvcC8yMDE5LzAyLzAxLzIzNzMvJUU1JTlDJUE4JUU3JUJFJUE0JUU2JTk5JTk2JUU5JTg3JThDJUU0JUJEJUJGJUU3JTk0JUE4JUU2JUI1JThGJUU4JUE3JTg4JUU1JTk5JUE4JUVGJUJDJThDJUU5JTgwJTlBJUU4JUJGJTg3ZG9ja2VyJUU1JUFFJTg5JUU4JUEzJTg1JUU3JTgxJUFCJUU3JThCJTkwJUU2JUI1JThGJUU4JUE3JTg4JUU1JTk5JUE4ZW5wYXNzJUVGJUJDJThDLw==">https://odcn.top/2019/02/01/2373/%E5%9C%A8%E7%BE%A4%E6%99%96%E9%87%8C%E4%BD%BF%E7%94%A8%E6%B5%8F%E8%A7%88%E5%99%A8%EF%BC%8C%E9%80%9A%E8%BF%87docker%E5%AE%89%E8%A3%85%E7%81%AB%E7%8B%90%E6%B5%8F%E8%A7%88%E5%99%A8enpass%EF%BC%8C/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>浏览器</tag>
        <tag>VNC</tag>
        <tag>noVNC</tag>
      </tags>
  </entry>
  <entry>
    <title>神奇的WeChatTweak</title>
    <url>/2020/06/01/%E7%A5%9E%E5%A5%87%E7%9A%84WeChatTweak/</url>
    <content><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>WeChatTweak 是偶然在 github 上找到的神奇软件，除了在Mac上支持多开，还支持免认证登陆、消息防撤回。先看看官网的整体效果图：</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/01/1591002382459-1591002382465.png" alt="title"></p>
<p>( 图片来自：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1N1bm55eW91bmcvV2VDaGF0VHdlYWstbWFjT1M=">https://github.com/Sunnyyoung/WeChatTweak-macOS<i class="fa fa-external-link-alt"></i></span> )</p>
<p>似乎现在功能又有增强哦</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/01/1591002520308-1591002520310.png" alt="title"></p>
<p>已经在最新版本下测试成功</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/01/1591003838394-1591003838399.png" alt="title"></p>
<p>作者的 releases 中只提供了源代码的下载，需要我们自己编译</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/01/1591002762398-1591002762404.png" alt="title"></p>
<h1 id="拉代码"><a href="#拉代码" class="headerlink" title="拉代码"></a>拉代码</h1><p>打开系统自带「终端」，用系统自带搜索 <strong>终端</strong> 即可；</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/01/1591003013086-1591003013092.png" alt="title"></p>
<p>在 <strong>终端</strong> 中拉取最新的源码：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/Sunnyyoung/WeChatTweak-macOS.git</span><br></pre></td></tr></table></figure>

<p>进入插件目录</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> WeChatTweak-macOS</span><br></pre></td></tr></table></figure>

<p>然后在源码目录中进行编译、安装</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo make install</span><br></pre></td></tr></table></figure>

<h1 id="安装开发环境"><a href="#安装开发环境" class="headerlink" title="安装开发环境"></a>安装开发环境</h1><p>如果没有安装开发环境，会有提示</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/01/1591004378337-1591004378339.png" alt="title"></p>
<p>同时会弹出提示框</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/01/1591004466516-1591004466518.png" alt="title"></p>
<p>当然要点 <strong>安装</strong></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/01/1591004546495-1591004546502.png" alt="title"></p>
<p>点 <strong>同意</strong> 开始安装</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/01/1591004603712-1591004603718.png" alt="title"></p>
<p>安装时间要看网络的情况</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/01/1591004733850-1591004733856.png" alt="title"></p>
<p>反正我这里挺快的，前后也就10多分钟</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/01/1591004937101-1591004937102.png" alt="title"></p>
<h1 id="编译代码"><a href="#编译代码" class="headerlink" title="编译代码"></a>编译代码</h1><p>安装完了开发环境，再编译一次，编译完成后重启微信即可启用插件。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/01/1591005142351-1591005142355.png" alt="title"></p>
<h1 id="多开登录"><a href="#多开登录" class="headerlink" title="多开登录"></a>多开登录</h1><p>登录第一个是一样的</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/01/1591005245143-1591005245149.png" alt="title"></p>
<p>再次在微信图标上右键，多了 <strong>登录新的账号</strong></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/01/1591005338797-1591005338803.png" alt="title"></p>
<p>打开微信的偏好设置，会发现多了一个新的 Tweak 选项卡</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/01/1591002520308-1591002520310.png" alt="title"></p>
<h1 id="查看撤回消息"><a href="#查看撤回消息" class="headerlink" title="查看撤回消息"></a>查看撤回消息</h1><p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/01/1591010141839-1591010141868.png" alt="title"></p>
<h1 id="卸载WeChatTweak插件"><a href="#卸载WeChatTweak插件" class="headerlink" title="卸载WeChatTweak插件"></a>卸载WeChatTweak插件</h1><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo make uninstall</span><br></pre></td></tr></table></figure>

<h1 id="失效时的处理"><a href="#失效时的处理" class="headerlink" title="失效时的处理"></a>失效时的处理</h1><p>有网友说更新微信后，插件功能会失效，理论上只需要重新安装一次 WeChatTweak，也就是在 <strong>终端</strong> 里再次执行</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo make install</span><br></pre></td></tr></table></figure>

<h1 id="卸载开发环境"><a href="#卸载开发环境" class="headerlink" title="卸载开发环境"></a>卸载开发环境</h1><p>如果你真的要卸载，可以在 <strong>访达</strong> –&gt; 前往 –&gt; 前往文件夹 中输入</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">/Library/Developer/</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/01/1591006231628-1591006231635.png" alt="title"></p>
<p>删除 <code>CommandLineTools</code> 文件夹 即可。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/01/1591006176260-1591006176260.png" alt="title"></p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>WeChatTweak-macOS源代码主页<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1N1bm55eW91bmcvV2VDaGF0VHdlYWstbWFjT1M=">https://github.com/Sunnyyoung/WeChatTweak-macOS<i class="fa fa-external-link-alt"></i></span></p>
<p>在 Mac 上多开微信，还能看到朋友撤回的信息：WeChatTweak<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9zc3BhaS5jb20vcG9zdC80MDc4NQ==">https://sspai.com/post/40785<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>微信</tag>
        <tag>WeChatTweak</tag>
      </tags>
  </entry>
  <entry>
    <title>给群晖弄个漂亮的导航页（下）</title>
    <url>/2020/08/16/%E7%BB%99%E7%BE%A4%E6%99%96%E5%BC%84%E4%B8%AA%E6%BC%82%E4%BA%AE%E7%9A%84%E5%AF%BC%E8%88%AA%E9%A1%B5%EF%BC%88%E4%B8%8B%EF%BC%89/</url>
    <content><![CDATA[<h1 id="高级篇"><a href="#高级篇" class="headerlink" title="高级篇"></a>高级篇</h1><h2 id="查看后台版本"><a href="#查看后台版本" class="headerlink" title="查看后台版本"></a>查看后台版本</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看后台版本</span></span><br><span class="line">php artisan admin</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/04/1596506082290-1596506082297.png" alt="title"></p>
<p>可以看到这个镜像默认安装的后台 <code>Laravel-admin</code> 版本为1.6.9，右下角也有</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/05/1596607537785-1596607537791.png" alt="title"></p>
<h2 id="后台版本的更新"><a href="#后台版本的更新" class="headerlink" title="后台版本的更新"></a>后台版本的更新</h2><p>升级主要是解决漏洞而不全是为了新的功能，所以看个人的需要。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 更新到最新版本</span></span><br><span class="line">composer require encore/laravel-admin -vvv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新到开发版本</span></span><br><span class="line">composer require encore/laravel-admin:dev-master -vvv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新指定版本</span></span><br><span class="line">composer require encore/laravel-admin:1.6.15 -vvv</span><br></pre></td></tr></table></figure>

<p>这里我们直接更新到最新版本，按照官方给的 <strong>「注意事项」</strong>：</p>
<blockquote>
<p>由于每个版本的静态资源或者语言包都有可能会有更新，所以升级版本之后最好运行下面的命令</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 强制发布静态资源文件</span></span><br><span class="line">php artisan vendor:publish --tag=laravel-admin-assets --force</span><br><span class="line"></span><br><span class="line"><span class="comment"># 强制发布语言包文件</span></span><br><span class="line">php artisan vendor:publish --tag=laravel-admin-lang --force</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清理视图缓存</span></span><br><span class="line">php artisan view:clear</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/04/1596507644238-1596507644239.png" alt="title"></p>
<p>重启镜像，最后不要忘记清理浏览器缓存。再次查看，版本已升级为1.8.1</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/04/1596521187248-1596521187285.png" alt="title"></p>
<h2 id="数据备份"><a href="#数据备份" class="headerlink" title="数据备份"></a>数据备份</h2><p>上传的图片在容器内的 <code>/opt/navi/public/uploads/images</code> 目录，备份只需要备份这些图片和数据库即可。</p>
<p>SSH 登录到群晖，在命令行执行文件拷贝操作。</p>
<table>
<thead>
<tr>
<th align="center">参数</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><code>arvon2014-webstack-laravel1</code></td>
<td align="center">容器名称</td>
</tr>
<tr>
<td align="center"><code>/opt/navi/public/uploads/images</code></td>
<td align="center">容器内目录</td>
</tr>
<tr>
<td align="center"><code>/volume1/docker/webstack</code></td>
<td align="center">群晖目录</td>
</tr>
</tbody></table>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 从容器内拷贝到群晖</span></span><br><span class="line">docker cp arvon2014-webstack-laravel1:/opt/navi/public/uploads/images  /volume1/docker/webstack</span><br></pre></td></tr></table></figure>

<h2 id="排错"><a href="#排错" class="headerlink" title="排错"></a>排错</h2><h3 id="问题1：”Failed-to-initialize-global-composer”"><a href="#问题1：”Failed-to-initialize-global-composer”" class="headerlink" title="问题1：”Failed to initialize global composer”"></a>问题1：”Failed to initialize global composer”</h3><p>“Failed to initialize global composer: Composer could not find the config file: / root/.composer/composer.json”</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/05/1596603912327-1596603912335.png" alt="title"></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建一个空的json object</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&#123;&#125;"</span> &gt; ~/.composer/composer.json</span><br></pre></td></tr></table></figure>


<h3 id="问题2：”Content-Length-mismatch”"><a href="#问题2：”Content-Length-mismatch”" class="headerlink" title="问题2：”Content-Length mismatch”"></a>问题2：”Content-Length mismatch”</h3><p>“Content-Length mismatch,received xxxxxx bytes out of the expected xxxxxx”</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 诊断</span></span><br><span class="line">composer diagnose</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/05/1596599212921-1596599212947.png" alt="title"></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 升级 key</span></span><br><span class="line">composer self-update --update-keys</span><br></pre></td></tr></table></figure>

<p>在 <span class="exturl" data-url="aHR0cHM6Ly9jb21wb3Nlci5naXRodWIuaW8vcHVia2V5cy5odG1s">https://composer.github.io/pubkeys.html<i class="fa fa-external-link-alt"></i></span>  能找到需要的 <code>key</code>， 按提示依次输入 <code>Dev / Snapshot Public Key</code> 和 <code>Tags Public Key</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/05/1596599534922-1596599534930.png" alt="title"></p>
<p>再次诊断</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 诊断</span></span><br><span class="line">composer diagnose</span><br></pre></td></tr></table></figure>

<p>一切正常</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/05/1596599903901-1596599903908.png" alt="title"></p>
<h3 id="问题3：“Carbon-1-is-deprecated”"><a href="#问题3：“Carbon-1-is-deprecated”" class="headerlink" title="问题3：“Carbon 1 is deprecated”"></a>问题3：“Carbon 1 is deprecated”</h3><p>“Carbon 1 is deprecated, see how to migrate to Carbon 2.”</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 升级到 Carbon 2</span></span><br><span class="line">./vendor/bin/upgrade-carbon</span><br></pre></td></tr></table></figure>


<h1 id="修改篇"><a href="#修改篇" class="headerlink" title="修改篇"></a>修改篇</h1><h2 id="网站管理"><a href="#网站管理" class="headerlink" title="网站管理"></a>网站管理</h2><p>在使用中发现一个严重的问题，那就是居然不能排序。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/09/1596942603240-1596942603276.png" alt="title"></p>
<p>前端显示的顺序始终是添加的顺序，这显然严重不符合我们的需求，我们希望的是能按我们的要求排序并显示。</p>
<p>但是在网上查了半天也没有找到现成的解决，所以只能自己想办法:</p>
<ul>
<li>首先，要修改数据库，增加排序的字段</li>
<li>其次，要安装 <code>laravel-admin-sortable</code> 插件</li>
<li>最后，要修改前后端的代码，实现自定义的排序效果</li>
</ul>
<blockquote>
<p>以下代码修改基于 1.6.9 版本，其他版本上未测试。</p>
</blockquote>
<h3 id="修改数据库"><a href="#修改数据库" class="headerlink" title="修改数据库"></a>修改数据库</h3><ul>
<li>一定先要清空 <code>categories</code> 表和 <code>sites</code> 表中的数据</li>
<li>给 <code>sites</code> 表增加排序字段 <code>status</code></li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`status`</span> <span class="keyword">ADD</span> <span class="string">`sites`</span> <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">AFTER</span> <span class="string">`updated_at`</span>;</span><br></pre></td></tr></table></figure>

<h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><p>代码地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3hpYW94dWFuNi9sYXJhdmVsLWFkbWluLXNvcnRhYmxl">https://github.com/xiaoxuan6/laravel-admin-sortable<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装插件</span></span><br><span class="line">composer require james.xue/laravel-admin-sortable</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/07/1596789186910-1596789186918.png" alt="title"></p>
<h3 id="修改后端代码"><a href="#修改后端代码" class="headerlink" title="修改后端代码"></a>修改后端代码</h3><p>修改 <code>app/Site.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">James</span>\<span class="title">Sortable</span>\<span class="title">SortableTrait</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">James</span>\<span class="title">Sortable</span>\<span class="title">Sortable</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span> <span class="keyword">extends</span> <span class="title">Model</span> <span class="keyword">implements</span> <span class="title">Sortable</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">SortableTrait</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> $sortable = [</span><br><span class="line">        <span class="string">'sort_field'</span> =&gt; <span class="string">'status'</span>,       <span class="comment">// 排序字段</span></span><br><span class="line">        <span class="string">'sort_when_creating'</span> =&gt; <span class="keyword">true</span>,   <span class="comment">// 新增是否自增，默认自增</span></span><br><span class="line">    ];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/09/1596950917898-1596950917900.png" alt="title"></p>
<p>修改 <code>app/Admin/Controllers/SiteController.php</code> 增加2行</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 这个很重要，否则页面显示顺序不正确</span></span><br><span class="line">$grid-&gt;model()-&gt;orderBy(<span class="string">'status'</span>, <span class="string">'asc'</span>);            </span><br><span class="line"></span><br><span class="line"><span class="comment">// sortableColumn 里面必须填入当前模型的 namespace</span></span><br><span class="line">$grid-&gt;status(<span class="string">'状态'</span>)-&gt;sortableColumn(<span class="string">'\App\Site'</span>);</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/07/1596791936105-1596791936112.png" alt="title"></p>
<p>这个时候，后端虽然不支持拖拽操作，但已经支持排序了。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/09/1596949206841-1596949206844.png" alt="title"></p>
<h3 id="修改前端代码"><a href="#修改前端代码" class="headerlink" title="修改前端代码"></a>修改前端代码</h3><p>但是在前端还是不行，还需要继续改造。</p>
<p>修改 <code>resources/views/layouts/content.blade.php</code> 文件，增加下面两行</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$sorted = $sites-&gt;sortBy(<span class="string">'status'</span>);                             </span><br><span class="line">$sorted-&gt;values()-&gt;all();</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/09/1596949674625-1596949674628.png" alt="title"></p>
<p>再刷新前端，已经和修改后的顺序一致了</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/09/1596949800211-1596949800215.png" alt="title"></p>
<h2 id="分类管理"><a href="#分类管理" class="headerlink" title="分类管理"></a>分类管理</h2><h3 id="后端代码"><a href="#后端代码" class="headerlink" title="后端代码"></a>后端代码</h3><p>本身就支持排序功能，<code>categories</code>表本身有排序字段 <code>order</code>，只是默认值均为零</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/09/1596962767919-1596962767921.png" alt="title"></p>
<p>支持通过拖拽更改顺序</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/09/1596962924553-1596962924555.png" alt="title"></p>
<p>保存之后，<code>order</code>字段就有值了</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/09/1596963314493-1596963314496.png" alt="title"></p>
<h3 id="修改前端代码-1"><a href="#修改前端代码-1" class="headerlink" title="修改前端代码"></a>修改前端代码</h3><p>前端显示的效果表明，其不支持后台的排序</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/09/1596966863844-1596966863846.png" alt="title"></p>
<p>先修改 <code>resources/views/layouts/sidebar.blade.php</code></p>
<p>将</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">@<span class="keyword">foreach</span> ($categories <span class="keyword">as</span> $categorie)</span><br></pre></td></tr></table></figure>

<p>改为</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">@<span class="keyword">foreach</span> ($categories-&gt;sortBy(<span class="string">'order'</span>) <span class="keyword">as</span> $categorie)</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/09/1596966567983-1596966567985.png" alt="title"></p>
<p>接着要修改 <code>resources/views/layouts/content.blade.php</code></p>
<p>同样将</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">@<span class="keyword">foreach</span>($categories <span class="keyword">as</span> $category)</span><br></pre></td></tr></table></figure>

<p>改为</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">@<span class="keyword">foreach</span>($categories-&gt;sortBy(<span class="string">'order'</span>) <span class="keyword">as</span> $category)</span><br></pre></td></tr></table></figure>

<p>再刷新前端，已经和修改后的顺序一致了</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/09/1596967376484-1596967376486.png" alt="title"></p>
<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>更多用法可以查阅 <code>laravel-admin</code> 的帮助文档。 <span class="exturl" data-url="aHR0cHM6Ly9sYXJhdmVsLWFkbWluLm9yZy9kb2NzL3poLw==">https://laravel-admin.org/docs/zh/<i class="fa fa-external-link-alt"></i></span> </p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>WebStack-Laravel官方代码<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2h1aS1oby9XZWJTdGFjay1MYXJhdmVs">https://github.com/hui-ho/WebStack-Laravel<i class="fa fa-external-link-alt"></i></span></p>
<p>Laravel 函数手册<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9sYXJhdmVsLmNvbS9kb2NzLzUuNS9jb2xsZWN0aW9ucw==">https://laravel.com/docs/5.5/collections<i class="fa fa-external-link-alt"></i></span>)</p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>Laravel</tag>
        <tag>WebStack</tag>
      </tags>
  </entry>
  <entry>
    <title>给群晖弄个漂亮的导航页（上）</title>
    <url>/2020/08/14/%E7%BB%99%E7%BE%A4%E6%99%96%E5%BC%84%E4%B8%AA%E6%BC%82%E4%BA%AE%E7%9A%84%E5%AF%BC%E8%88%AA%E9%A1%B5%EF%BC%88%E4%B8%8A%EF%BC%89/</url>
    <content><![CDATA[<h1 id="部署篇"><a href="#部署篇" class="headerlink" title="部署篇"></a>部署篇</h1><p>还是在群晖上以 Docker 方式安装。</p>
<p>在注册表中搜索 <code>webstack-Laravel</code> ，选择 <code>arvon2014/webstack-laravel</code>，下载镜像。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/04/1596512543973-1596512543980.png" alt="title"></p>
<p>安装比较简单，端口如果不冲突，可以直接用默认的 <code>8000</code> ，只要修改环境中的几个参数即可。</p>
<p>参数说明</p>
<table>
<thead>
<tr>
<th align="center">参数</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">INSTALL_DIR</td>
<td align="center">容器内的部署目录</td>
</tr>
<tr>
<td align="center">DB_HOST</td>
<td align="center">数据库地址，默认127.0.0.1</td>
</tr>
<tr>
<td align="center">DB_PORT</td>
<td align="center">数据库端口，默认3306</td>
</tr>
<tr>
<td align="center">DB_DATABASE</td>
<td align="center">数据库名称,默认homestead</td>
</tr>
<tr>
<td align="center">DB_USERNAME</td>
<td align="center">数据库用户名,默认homestead</td>
</tr>
<tr>
<td align="center">DB_PASSWORD</td>
<td align="center">数据库密码,默认secret</td>
</tr>
<tr>
<td align="center">LOGIN_COPTCHA</td>
<td align="center">是否启动控制台验证码，默认true</td>
</tr>
</tbody></table>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>请根据实际情况填写相应的内容，我在群晖已经安装了 <code>MariaDB 5</code>，所以可以直接用。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/03/1596438632222-1596438632223.png" alt="title"></p>
<h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p>直接启动容器，右键进入「详情」</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/04/1596513747566-1596513747572.png" alt="title"></p>
<p>「终端机」 =&gt; 「新增」 =&gt; 「通过命令启动」=&gt; 「请输入一个命令」=&gt; 「sh」</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/03/1596428483404-1596428483411.png" alt="title"></p>
<p>进入命令行模式。后文中如无特别说明，所有命令都在这个模式下执行。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/04/1596514083397-1596514083404.png" alt="title"></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#生成 KEY</span></span><br><span class="line">php artisan key:generate</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/03/1596428851677-1596428851686.png" alt="title"></p>
<p>用 <code>phpMyAdmin</code> 在 <code>MariaDB</code> 数据库中新建用户和库，勾选「创建与用户同名的数据库并授予所有权限」</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/04/1596503924253-1596503924289.png" alt="title"></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#迁移数据</span></span><br><span class="line">php artisan migrate:refresh --seed</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/03/1596433754582-1596433754585.png" alt="title"></p>
<p>重启容器！重启容器！重启容器！否则页面会有错误信息。</p>
<h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><p>前端地址：<code>http://群晖IP:8000/</code> </p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/03/1596433908716-1596433908726.png" alt="title"></p>
<h2 id="后台"><a href="#后台" class="headerlink" title="后台"></a>后台</h2><p>后台地址：<code>http://群晖IP:8000/admin</code><br>默认账号：<code>admin</code><br>默认密码：<code>admin</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/06/1596691411909-1596691411942.png" alt="title"></p>
<h2 id="排错"><a href="#排错" class="headerlink" title="排错"></a>排错</h2><h3 id="问题1：数据库报错"><a href="#问题1：数据库报错" class="headerlink" title="问题1：数据库报错"></a>问题1：数据库报错</h3><p>类似这样的问题</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/03/1596429756119-1596429756125.png" alt="title"></p>
<p>这需要我们先建好 <code>homestead</code> 库。</p>
<p>其他还可能会遇到数据库权限等问题，需要我们根据提示仔细排查。</p>
<h3 id="问题2：网页报错"><a href="#问题2：网页报错" class="headerlink" title="问题2：网页报错"></a>问题2：网页报错</h3><p>遇到下面这种情况</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/03/1596428080642-1596428080682.png" alt="title"></p>
<p>需要执行生成 KEY 操作</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#生成 KEY</span></span><br><span class="line">php artisan key:generate</span><br></pre></td></tr></table></figure>

<p>这个 KEY 会写入到 <code>.env</code> 文件的 <code>APP_KEY</code> 字段</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/04/1596518949046-1596518949078.png" alt="title"></p>
<h1 id="进阶篇"><a href="#进阶篇" class="headerlink" title="进阶篇"></a>进阶篇</h1><h2 id="图标显示异常"><a href="#图标显示异常" class="headerlink" title="图标显示异常"></a>图标显示异常</h2><p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/05/1596607378688-1596607378696.png" alt="title"></p>
<p>后台中图片显示异常，需要我们将 <code>.env</code> 中 <code>APP_URL=</code> 后面的 <code>http://localhost</code> 删除</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 编辑环境文件</span></span><br><span class="line">vi .env</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/04/1596514973420-1596514973422.png" alt="title"></p>
<p>保存退出后，需重启容器才能生效</p>
<h2 id="支持-https"><a href="#支持-https" class="headerlink" title="支持 https"></a>支持 https</h2><p>需要修改 <code>admin.php</code> 文件</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 编辑 config/admin.php 文件 中 'https' =&gt; env('ADMIN_HTTPS', true),</span></span><br><span class="line">vi config/admin.php</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/04/1596511457683-1596511457690.png" alt="title"></p>
<p>保存退出后，需重启容器才能生效</p>
<h2 id="修改-composer-镜像源"><a href="#修改-composer-镜像源" class="headerlink" title="修改 composer 镜像源"></a>修改 composer 镜像源</h2><p>由于默认情况下执行 composer 各种命令是去国外的 composer 官方镜像源获取需要安装的具体软件信息，所以在不使用代理、不翻墙的情况下，从国内访问国外服务器的速度相对比较慢</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 更换阿里巴巴提供的 Composer 全量镜像源</span></span><br><span class="line">composer config repo.packagist composer https://mirrors.aliyun.com/composer/</span><br></pre></td></tr></table></figure>

<h2 id="插件应用"><a href="#插件应用" class="headerlink" title="插件应用"></a>插件应用</h2><p>laravel-admin 支持安装扩展工具来帮助丰富你的后台功能，目前在<span class="exturl" data-url="aHR0cHM6Ly9sYXJhdmVsLWFkbWluLm9yZy9leHRlbnNpb25z">https://laravel-admin.org/extensions<i class="fa fa-external-link-alt"></i></span> 下面已经有了几十个扩展可供安装使用。</p>
<h3 id="文件管理插件"><a href="#文件管理插件" class="headerlink" title="文件管理插件"></a>文件管理插件</h3><p>基于web接口的本地文件管理插件，代码主页：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2xhcmF2ZWwtYWRtaW4tZXh0ZW5zaW9ucy9tZWRpYS1tYW5hZ2Vy">https://github.com/laravel-admin-extensions/media-manager<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装插件</span></span><br><span class="line">composer require laravel-admin-ext/media-manager -vvv</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/05/1596603782860-1596603782868.png" alt="title"></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 导入插件</span></span><br><span class="line">php artisan admin:import media-manager</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/05/1596608187858-1596608187860.png" alt="title"></p>
<p>编辑 <code>config/admin.php</code>，增加下列内容</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* media-manager */</span></span><br><span class="line"><span class="string">'extensions'</span> =&gt; [</span><br><span class="line"></span><br><span class="line">    <span class="string">'media-manager'</span> =&gt; [</span><br><span class="line">    </span><br><span class="line">        <span class="comment">// Select a local disk that you configured in `config/filesystem.php`</span></span><br><span class="line">        <span class="string">'disk'</span> =&gt; <span class="string">'public'</span></span><br><span class="line">    ],</span><br><span class="line">],</span><br></pre></td></tr></table></figure>

<p>刷新后台页面，菜单栏会多出 <code>Media manager</code> ,打开地址： <code>http://localhost/admin/media</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/05/1596608468380-1596608468387.png" alt="title"></p>
<h3 id="汉化插件"><a href="#汉化插件" class="headerlink" title="汉化插件"></a>汉化插件</h3><p>一个将操作按钮汉化的插件</p>
<p>代码主页：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3hpYW94dWFuNi9sYXJhdmVsLWFkbWluLWdyaWQ=">https://github.com/xiaoxuan6/laravel-admin-grid<i class="fa fa-external-link-alt"></i></span></p>
<p>生效前</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/07/1596788238118-1596788238125.png" alt="title"></p>
<p>生效后</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/07/1596786540985-1596786540992.png" alt="title"></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line">composer require james.xue/laravel-admin-sortable</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装插件</span></span><br><span class="line">Laravel-Admin &gt;= 1.7 安装 1.2.0</span><br><span class="line">composer require james.xue/laravel-admin-grid:1.2.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># Laravel-Admin &lt; 1.7 安装 1.1.0</span></span><br><span class="line">composer require james.xue/laravel-admin-grid:1.1.0</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/07/1596785403585-1596785403589.png" alt="title"></p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>WebStack-Laravel官方代码<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2h1aS1oby9XZWJTdGFjay1MYXJhdmVs">https://github.com/hui-ho/WebStack-Laravel<i class="fa fa-external-link-alt"></i></span></p>
<p>Webstack网址导航<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1dlYlN0YWNrUGFnZS9XZWJTdGFja1BhZ2UuZ2l0aHViLmlv">https://github.com/WebStackPage/WebStackPage.github.io<i class="fa fa-external-link-alt"></i></span></p>
<p>后台框架：laravel-admin<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3otc29uZy9sYXJhdmVsLWFkbWlu">https://github.com/z-song/laravel-admin<i class="fa fa-external-link-alt"></i></span></p>
<p>在 Synology NAS 上使用 Laravel Framework<br>地址：<span class="exturl" data-url="aHR0cDovL3NhbW1peG9mdC5ibG9nc3BvdC5jb20vMjAxOC8wMS9zeW5vbG9neS1uYXMtbGFyYXZlbC1mcmFtZXdvcmsuaHRtbA==">http://sammixoft.blogspot.com/2018/01/synology-nas-laravel-framework.html<i class="fa fa-external-link-alt"></i></span></p>
<p>laravel-admin自动生成模块，及相关基础配置<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2MTAwNzYzL2FydGljbGUvZGV0YWlscy84MzA4OTgxOA==">https://blog.csdn.net/qq_36100763/article/details/83089818<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>Laravel</tag>
        <tag>WebStack</tag>
      </tags>
  </entry>
  <entry>
    <title>给路由器加个风扇</title>
    <url>/2020/06/22/%E7%BB%99%E8%B7%AF%E7%94%B1%E5%99%A8%E5%8A%A0%E4%B8%AA%E9%A3%8E%E6%89%87/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>家里的老路由日常温度一般都在80°朝上，据说温度太高会导致网络卡顿、断线，但是说实话平时没啥感觉，可能主要是因为没打游戏，实时性要求不高吧。但是不管怎么样，高温容易导致老化，为了让它能寿命长一点，撸了一个 12cm 的 USB 静音风扇，毕竟马上就要天热了。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/22/1592828575232-1592828575274.png" alt="title"></p>
<p>之所以选 USB 风扇，是因为路由器本身有2个 USB 接口，3.0 的接了 U 盘用于跑 Entware ，侧面还有个 2.0 的空闲着。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/22/1592834034877-1592834034879.png" alt="title"></p>
<h2 id="吹风还是吸气？"><a href="#吹风还是吸气？" class="headerlink" title="吹风还是吸气？"></a>吹风还是吸气？</h2><p>网上有人说吹风效果好，有人说吸气效果好，这还真是个问题，买之前根本没想那么多，以为装上有风就行了。但是这难不倒我们爱折腾的人，毕竟实践才是检验真理的唯一办法。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/22/1592832489943-1592832489947.png" alt="title"></p>
<h2 id="吹风测试"><a href="#吹风测试" class="headerlink" title="吹风测试"></a>吹风测试</h2><p>先按吹气的方式，为了保证效果，模拟了实际使用的情景，用自锁式尼龙扎带做了固定。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/22/1592831703491-1592831703494.png" alt="title"></p>
<p>光记着拍照忘记截图了，直接说结论，最终温度稳定在65°左右。</p>
<h2 id="吸气测试"><a href="#吸气测试" class="headerlink" title="吸气测试"></a>吸气测试</h2><p>把扎带剪了重新安装，这回只记得截图忘记拍照了，补了一张已经把铁网装上了。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/22/6-1592835788703.png" alt="title"></p>
<p>不到2分钟，温度降到了70°</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/22/1592828592120-1592828592123.png" alt="title"></p>
<p>再过了2分多钟，温度降到了60°</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/22/1592828626786-1592828626789.png" alt="title"></p>
<p>最终基本稳定在55°左右</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/22/1592828695079-1592828695082.png" alt="title"></p>
<h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>不管吸气或者吹风，估计都和实际空间、接触面等等很多因素有关，很难说哪种更有效，但是在我这，显然是吸气的效果更好一些，相比吹风温度低了将近10°，而且个人感觉吸气的话可能路由器里的积灰会少一点。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>R6300V2 路由器无痛改装风扇<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9haXNrLm1lL2FkZC1jcHUtZmFuLW9uLXI2MzAwdjItcm91dGVyLw==">https://aisk.me/add-cpu-fan-on-r6300v2-router/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>路由器</tag>
        <tag>R6300v2</tag>
        <tag>USB风扇</tag>
      </tags>
  </entry>
  <entry>
    <title>群晖上的Zerotier GUI一直显示offline的原因</title>
    <url>/2020/04/28/%E7%BE%A4%E6%99%96%E4%B8%8A%E7%9A%84Zerotier%20GUI%E4%B8%80%E7%9B%B4%E6%98%BE%E7%A4%BAoffline%E7%9A%84%E5%8E%9F%E5%9B%A0/</url>
    <content><![CDATA[<p>两台黑群晖，因为共用了frps，所以为了避免端口冲突，一台保留了端口：5000，另一台启用了端口：5002。</p>
<p>其中在局域网一台正常：</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/20/Jietu20200420-150636-1587366421033.jpg" alt="title"></p>
<p>之所以强调局域网是因为在用域名访问时，也同样出现了offline</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/20/Jietu20200420-150235-1587366203005.jpg" alt="title"></p>
<p>用ssh登录后发现可以正常使用<br><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/20/WechatIMG3868-1587366673982.png" alt="title"></p>
<p>说明我们下载的包是没问题的，有问题的只是WEB GUI而已。</p>
<p>参考文档：</p>
<blockquote>
<p>1、<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3plcm90aWVyL1plcm9UaWVyTkFTL2lzc3Vlcy8xOA==">Zerotier GUI on Synology shows offline #18<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>文档中有一段描述，可以证明其只能连接端口：5000<br><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/20/Jietu20200420-151837-1587367148388.jpg" alt="title"></p>
<p>而在使用frp后，所有域名是不带端口的，所以才会导致局域网正常而使用frp后又显示offline的原因。</p>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>frp</tag>
        <tag>NAS</tag>
        <tag>ngrok</tag>
        <tag>ZeroTier</tag>
        <tag>GUI</tag>
      </tags>
  </entry>
  <entry>
    <title>群晖app访问遇到的端口问题</title>
    <url>/2020/04/28/%E7%BE%A4%E6%99%96app%E8%AE%BF%E9%97%AE%E9%81%87%E5%88%B0%E7%9A%84%E7%AB%AF%E5%8F%A3%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p><strong>什么是 NAS</strong></p>
<blockquote>
<p>NAS（网络连接存储）是与家庭或办公室网络连接的智能存储设备。可以将所有家人和同事的文件存储在 NAS 上（从重要文档到珍贵的照片、音乐和视频集）。使用网页浏览器或移动应用程序可以通过 Internet 访问文件并使用 NAS 提供的各种服务。</p>
</blockquote>
<p><strong>什么是 黑群</strong></p>
<blockquote>
<p>黑群指的是，非正规购买的群晖nas 而是在普通电脑上装群晖nas的系统。作者并不鼓励或支持使用盗版，只是用于研究和了解群晖系统，强烈不建议正式的使用，尤其是用于重要的数据备份。</p>
</blockquote>
<p>既然是NAS那必须要支持远程访问，要想从外网访问家庭内网，目前可用的有这么几个方案：</p>
<blockquote>
<ol>
<li><p>官方提供了QuickConnect（简称QC），但咱用的是黑裙，能用各种软件已经不错了，哪好意思再去蹭群晖的QC资源；</p>
</li>
<li><p>非常幸运的一个有公网 IPv4 地址，只要在路由器做端口映射就能解决问题，但目前好像基本不可能了，毕竟 IPv4 的资源都快用完了； </p>
</li>
<li><p>用frp、ngrok类的内网穿透软件，这个有免费的，也有收费的，当然如果你有VPS主机，也可以自己来搭建，只是做起来有一定的门槛；</p>
</li>
<li><p>用ZeroTier组个虚拟局域网，100个设备内免费，可是需要在每个入网的设备安装虚拟服务和网卡（如果有支持OpenWRT的路由器应该就没这么麻烦了），弄不好有可能还需要自己来架设moon服务器来协助P2P打洞；</p>
</li>
<li><p>购买内网穿透的硬件，比如花生棒、公网IP盒子一类的，操作简单，但是有流量方面的限制；</p>
</li>
</ol>
</blockquote>
<p>今天我们讨论的是frp方案，群晖里已安装了frpc客户端，下面是frpc.ini里的相关设置：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[www]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">192.168</span>.<span class="number">31.198</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">80</span></span><br><span class="line"><span class="attr">custom_domains</span> = www.abc.ml</span><br><span class="line"></span><br><span class="line"><span class="section">[nas]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">192.168</span>.<span class="number">31.198</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">5000</span></span><br><span class="line"><span class="attr">custom_domains</span> = nas.abc.ml</span><br></pre></td></tr></table></figure>

<p>用Moments、DS note、Drive都挺正常的，以Drive为例</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/25/8cee490a2dc91ed32bcdcbedc3b1e28-1587802236285.jpg" alt="title"></p>
<p>登录成功</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/25/0e03e7c66bdb97b4d9be64175f24577-1587802254924.jpg" alt="title"></p>
<p>同样的设置，群晖管家、DS file却一直登录失败</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/25/f958c9513503734d3fc4049d307a592-1587802269940.jpg" alt="title"></p>
<p>最后借用了之前发的一篇文章《RaiDrive挂载frp映射的webdav网盘》中的思路，给地址后面了加了个80端口。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/25/3591e2f12d305de65f4d38f403d74af-1587802297733.jpg" alt="title"></p>
<p>大功告成！</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/25/7f33abd8283a829d413e1f445ec66e2-1587802344202.jpg" alt="title"></p>
<blockquote>
<p> <strong>总结</strong>：看来以后类似的问题要多试试80端口大法，包治百病啊，呵呵~</p>
</blockquote>
<p>参考文档</p>
<blockquote>
<p>群晖官网的介绍，<span class="exturl" data-url="aHR0cHM6Ly93d3cuc3lub2xvZ3kuY24vemgtY24vc29sdXRpb24vd2hhdF9pc19uYXM=">https://www.synology.cn/zh-cn/solution/what_is_nas<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>frp</tag>
        <tag>VPS</tag>
        <tag>NAS</tag>
        <tag>ngrok</tag>
        <tag>ZeroTier</tag>
        <tag>黑群</tag>
        <tag>QuickConnect</tag>
      </tags>
  </entry>
  <entry>
    <title>群晖上用docker安装homeassistant</title>
    <url>/2020/05/24/%E7%BE%A4%E6%99%96%E4%B8%8A%E7%94%A8docker%E5%AE%89%E8%A3%85homeassistant/</url>
    <content><![CDATA[<p><strong>什么是Home Assistant？</strong></p>
<blockquote>
<p>Home Assistant 是一个基于Python 3开发的开源家庭自动化平台。可以跟踪和控制家庭中的所有设备，并实现自动化控制。后面简称为HA。</p>
</blockquote>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最早安装的是0.82版，后来升级到了0.93版，正好遇到HA进行了一次较大的调整，导致很多插件无法使用，所以后来基本上不再主动升级，目前最新docker版本好像已经到了0.99版。</p>
<p>这篇是大概一年前写的安装记录，做了一些调整，图片全部是重新截取的。</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>在注册表中搜索 <code>homeassistant</code>，第一个就是我们要安装的。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/24/1590325699443-1590325699446.png" alt="title"></p>
<p>双击下载，选择标签也就是版本，如果你有选择困难症，建议直接选 <code>latest</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/24/2-1590326402698.png" alt="title"></p>
<p>这个docker镜像比较大，约2G，如果你没有修改成国内源的话，可能要等待的时间会非常长。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/24/1590326564593-1590326564595.png" alt="title"></p>
<h1 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h1><h2 id="常规设置"><a href="#常规设置" class="headerlink" title="常规设置"></a>常规设置</h2><p>容器名称随意，一般都用的默认的。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/24/1590326787591-1590326787592.png" alt="title"></p>
<h2 id="卷"><a href="#卷" class="headerlink" title="卷"></a>卷</h2><p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/24/1590326896505-1590326896507.png" alt="title"></p>
<p>初始化后，会在 <code>config</code> 目录中存储配置文件、日志文件等</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/24/1590327043067-1590327043068.png" alt="title"></p>
<h2 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h2><p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/24/1590327200325-1590327200326.png" alt="title"></p>
<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/24/1590327253144-1590327253145.png" alt="title"></p>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/24/1590327851525-1590327851527.png" alt="title"></p>
<p>这里需要我们点 <code>+</code> 号，左边 <code>可变</code> 输入 TZ（Time Zone，也就是时区），右边 <code>值</code> 输入 Asia/Shanghai。</p>
<h1 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h1><p>在浏览器中打开 http://群晖IP:8123即可。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/24/1590328555243-1590328555245.png" alt="title"></p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>智能家居从新出发： 第一篇 群晖docker安装homeassistant<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2F2N2s5cDVuLw==">https://post.smzdm.com/p/av7k9p5n/<i class="fa fa-external-link-alt"></i></span></p>
<p>智能家居探索 篇八：nas群晖套件直接安装hassio/homeassistant<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2E4Mzkya2w2Lw==">https://post.smzdm.com/p/a8392kl6/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>docker</tag>
        <tag>homeassistant</tag>
        <tag>HA</tag>
        <tag>智能家居</tag>
      </tags>
  </entry>
  <entry>
    <title>苏玉云2019年度作品（6P）</title>
    <url>/2020/04/28/%E8%8B%8F%E7%8E%89%E4%BA%912019%E5%B9%B4%E5%BA%A6%E4%BD%9C%E5%93%81%EF%BC%886P%EF%BC%89/</url>
    <content><![CDATA[<blockquote>
<p>发发去年的。<br>还记得那天的大风<br>哈哈哈哈特别感谢两位老板的拍摄</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/25/3337c9233db603d3f300ef2519858d0-1587792802356.jpg" alt="title"></p>
<ul>
<li><p>1<br><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/25/3aec30a6931aed5eb32f587d48cdfdb-1587792834165.jpg" alt="title"></p>
</li>
<li><p>2<br><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/25/b6affe0acbf5a5508a238cec29d657e-1587792968015.jpg" alt="title"></p>
</li>
<li><p>3<br><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/25/b31faf2adf0762bf39970b352d3efa7-1587793000684.jpg" alt="title"></p>
</li>
<li><p>4<br><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/25/03d0e5250f59f94f20a08be01210977-1587793027028.jpg" alt="title"></p>
</li>
<li><p>5<br><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/25/26584dcfb8a84af4ba98feb03c4854b-1587793063468.jpg" alt="title"></p>
</li>
<li><p>6<br><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/04/25/5a833d3e767bcc8e8c236f0dcf90135-1587793090589.jpg" alt="title"></p>
</li>
</ul>
]]></content>
      <categories>
        <category>苏玉云作品</category>
      </categories>
      <tags>
        <tag>服装设计</tag>
      </tags>
  </entry>
  <entry>
    <title>自建Speedtest网络测速服务器</title>
    <url>/2020/10/27/%E8%87%AA%E5%BB%BASpeedtest%E7%BD%91%E7%BB%9C%E6%B5%8B%E9%80%9F%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<p>Speedtest 是开源项目，github 上的代码地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2xpYnJlc3BlZWQvc3BlZWR0ZXN0">https://github.com/librespeed/speedtest<i class="fa fa-external-link-alt"></i></span></p>
<p>官网地址：<span class="exturl" data-url="aHR0cHM6Ly9saWJyZXNwZWVkLm9yZy8=">https://librespeed.org/<i class="fa fa-external-link-alt"></i></span>，即开即用，不需要注册，也没有广告，干净又清爽</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/03/1601703563672-1601703563674.png" alt="title"></p>
<p>没找到国内的服务器，除了美国就是欧洲</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/03/1601703851361-1601703851363.png" alt="title"></p>
<p>选个 <code>New York</code> 的随便试试</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/03/1601704256390-1601704256392.png" alt="title"></p>
<p>这样的结果让我说什么呢？</p>
<p>既然是开源的，我们也可以自己搭建，正好可以用来测试外网访问群晖的速度。</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>在 docker 注册表中搜索 <code>speedtest</code> ，选择第一个 <code>adolfintel/speedtest</code>，双击直接下载。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/03/1601694882991-1601694882992.png" alt="title"></p>
<h2 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h2><p>找一个空闲的端口</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/03/1601695165788-1601695165789.png" alt="title"></p>
<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>在浏览器中输入 <code>http://群晖IP:8180</code> 就能看到主界面</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/03/1601695344304-1601695344306.png" alt="title"></p>
<p>先试试局域网，测试机和群晖接在同一个千兆路由上，理论上应该是可以到千兆的，事实上也确实如此</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/03/1601695416780-1601695416782.png" alt="title"></p>
<p>接下来我们设置反代，从外网来访问</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/03/1601695685888-1601695685890.png" alt="title"></p>
<p>618 时买的腾讯主机是 <code>1Mbps</code> 带宽的，上面就跑了个 <code>frp server</code></p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/03/1601701187551-1601701187553.png" alt="title"></p>
<p>从结果看下载带宽跑满了，但是上传为啥是 0 呢？再来一次</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/03/1601704804665-1601704804666.png" alt="title"></p>
<p>看来上传确实不行，下回换个时间段再来测试。</p>
<h1 id="Android-客户端"><a href="#Android-客户端" class="headerlink" title="Android 客户端"></a>Android 客户端</h1><p>Android 客户端也是开源的，github 上的代码地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2xpYnJlc3BlZWQvc3BlZWR0ZXN0LWFuZHJvaWQ=">https://github.com/librespeed/speedtest-android<i class="fa fa-external-link-alt"></i></span></p>
<p>下载的版本是对应官方公网服务器的，要想测试自己的服务器，需要修改 <code>ServerList.json</code> 文件，具体的修改方法请参考 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2xpYnJlc3BlZWQvc3BlZWR0ZXN0LWFuZHJvaWQvYmxvYi9tYXN0ZXIvZG9jLm1k">https://github.com/librespeed/speedtest-android/blob/master/doc.md<i class="fa fa-external-link-alt"></i></span></p>
<p>个人觉得没啥必要，所以就这样吧。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>LibreSpeed - Speedtest 官网主页<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9saWJyZXNwZWVkLm9yZy8=">https://librespeed.org/<i class="fa fa-external-link-alt"></i></span></p>
<p>librespeed/speedtest 代码主页<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2xpYnJlc3BlZWQvc3BlZWR0ZXN0">https://github.com/librespeed/speedtest<i class="fa fa-external-link-alt"></i></span></p>
<p>NAS折腾笔记 篇二：打造专属测速服务器，群晖/威联通安装speedtest 自建 测速服务器 方便内外网测速_NAS存储_什么值得买<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2EwNzhwNHc5Lw==">https://post.smzdm.com/p/a078p4w9/<i class="fa fa-external-link-alt"></i></span></p>
<p>网络测速工具 | speedtest测速工具搭建指南_什么值得买<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wLzcwMjc0NC8=">https://post.smzdm.com/p/702744/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>网络</tag>
        <tag>测速</tag>
        <tag>Speedtest</tag>
      </tags>
  </entry>
  <entry>
    <title>自己编译ntfstool</title>
    <url>/2020/06/02/%E8%87%AA%E5%B7%B1%E7%BC%96%E8%AF%91ntfstool/</url>
    <content><![CDATA[<blockquote>
<p><strong>什么是 ntfstool</strong><br>一群热爱生活热爱编程的软件技术从业者，利用零散时间，针对 Mac 电脑无法很好的支持 NTFS 格式的硬盘和 USB 而开发的免费的 NTFS Tool for Mac 工具。支持 NTFS 磁盘读写、挂载，推出、管理等功能。需 FUSE for macOS 支持。</p>
</blockquote>
<blockquote>
<p><strong>什么是 FUSE</strong><br>FUSE for Mac 是 MacFUSE 的继承者，基于FUSE为MacOS用户提供除系统外的第三方文件系统的支持。</p>
</blockquote>
<blockquote>
<p><strong>什么是 Electron</strong><br>Electron 是 GitHub 開發的一個開源框架。它允許使用 Node.js 和 Chromium 完成桌面 GUI 應用程式的開發。Electron 現已被多個開源 Web 應用程式用於前端與後端的開發，著名專案包括 GitHub 的 Atom 和微軟的 Visual Studio Code。 【維基百科】</p>
</blockquote>
<h1 id="Mac-OS-平台-NTFS-读写软件"><a href="#Mac-OS-平台-NTFS-读写软件" class="headerlink" title="Mac OS 平台 NTFS 读写软件"></a>Mac OS 平台 NTFS 读写软件</h1><h2 id="Tuxera-NTFS-for-Mac"><a href="#Tuxera-NTFS-for-Mac" class="headerlink" title="Tuxera NTFS for Mac"></a>Tuxera NTFS for Mac</h2><p>商业软件，能够在Mac上对所有 Windows 格式化的移动硬盘进行完全读写操作。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/02/1591099316069-1591099316070.png" alt="title"></p>
<h2 id="Paragon-NTFS-for-Mac"><a href="#Paragon-NTFS-for-Mac" class="headerlink" title="Paragon NTFS for Mac"></a>Paragon NTFS for Mac</h2><p>商业软件，是 Mac 上最知名的一款 NTFS 读写工具，能够让我们读写 NTFS 分区，完全兼容 Windows NTFS 文件，让我们简单自如读写 NTFS 外置存储文件。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/02/1591099282316-1591099282354.png" alt="title"></p>
<h2 id="Mounty-for-NTFS"><a href="#Mounty-for-NTFS" class="headerlink" title="Mounty for NTFS"></a>Mounty for NTFS</h2><p>完全免费，但据不少网友反馈，Mounty 的稳定性，准确来说是 Mac 隐藏的 ntfs 原生读写功能的稳定性和性能都不算特别的好，有过一些出问题丢数据的例子。<code>这一点非常致命，果断放弃。</code></p>
<h2 id="FUSE-for-Mac"><a href="#FUSE-for-Mac" class="headerlink" title="FUSE for Mac"></a>FUSE for Mac</h2><p>完全免费，是一款开源软件，允许你通过第三方文件系统来扩展 macOS。需要敲命令把苹果原来的 NTFS 挂载工具替换为 NTFS-3g 提供的，易用性有点差。</p>
<h2 id="ntfstool"><a href="#ntfstool" class="headerlink" title="ntfstool"></a>ntfstool</h2><p>完全免费，是一款 MacOS 下的免费开源 NTFS 磁盘格式读写工具，需 FUSE for macOS 支持，提供一个简单易用的磁盘管理界面。</p>
<p>我们可以直接下载官方编译好的版本，<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL250ZnN0b29sL250ZnN0b29sL3JlbGVhc2Vz">GitHub Releases<i class="fa fa-external-link-alt"></i></span>，现在的最新版本是v2.3.2</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/18/1589792613895-1589792613901.png" alt="title"></p>
<h1 id="自己动手，丰衣足食"><a href="#自己动手，丰衣足食" class="headerlink" title="自己动手，丰衣足食"></a>自己动手，丰衣足食</h1><p>除了直接下载编译好的版本外，我们也可以尝试自己编译。</p>
<h2 id="开发环境安装"><a href="#开发环境安装" class="headerlink" title="开发环境安装"></a>开发环境安装</h2><p>比较简单的办法就是从 <span class="exturl" data-url="aHR0cHM6Ly9ub2RlanMub3JnLw==">nodejs.org<i class="fa fa-external-link-alt"></i></span> 下载 MacOS<br> 安装包</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/02/1591074602452-1591074602460.png" alt="title"></p>
<p>最新的版本已经是14.3.0</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/02/1591075832661-1591075832668.png" alt="title"></p>
<p>检查一下安装是否成功，<code>终端</code> 中依次输入可以看到版本号</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/18/1589786699474-1589786699481.png" alt="title"></p>
<h2 id="下载源代码"><a href="#下载源代码" class="headerlink" title="下载源代码"></a>下载源代码</h2><p>在 <code>终端模式</code> 下输入：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:ntfstool/ntfstool.git</span><br></pre></td></tr></table></figure>

<p>或者直接打包下载源代码</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/18/1589792907225-1589792907231.png" alt="title"></p>
<h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ntfstool</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>

<p>下载的各种包在 <code>node_modules</code> 目录中</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/02/1591088847070-1591088847119.png" alt="title"></p>
<h2 id="调试模式"><a href="#调试模式" class="headerlink" title="调试模式"></a>调试模式</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm run dev</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/02/1591089358970-1591089358973.png" alt="title"></p>
<h2 id="发布模式"><a href="#发布模式" class="headerlink" title="发布模式"></a>发布模式</h2><p>国内用户建议先更换 electron 源，不然有可能会比较慢</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> electron_mirror https://cdn.npm.taobao.org/dist/electron/</span><br></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> electron_mirror https://npm.taobao.org/mirrors/electron/</span><br></pre></td></tr></table></figure>

<p>接着执行</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/18/1589787487804-1589787487807.png" alt="title"></p>
<p>会安装 electron-builder  </p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/02/1591077850276-1591077850284.png" alt="title"></p>
<p>过程中会生成 <code>build</code> 和 <code>dist</code> 目录</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/02/1591090348903-1591090348915.png" alt="title"></p>
<h2 id="开始运行程序"><a href="#开始运行程序" class="headerlink" title="开始运行程序"></a>开始运行程序</h2><p>运行 <code>build</code> 目录下生成的安装包 <code>NTFSool-2.3.3.dmg</code> 进行安装</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/02/1591090613669-1591090613676.png" alt="title"></p>
<p>运行 <code>NTFSTool</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/18/1589786803079-1589786803088.png" alt="title"></p>
<h2 id="第一次运行会提示安装FUSE"><a href="#第一次运行会提示安装FUSE" class="headerlink" title="第一次运行会提示安装FUSE"></a>第一次运行会提示安装FUSE</h2><p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/18/1589786711420-1589786711426.png" alt="title"></p>
<p>一路按图执行</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/18/1589786724367-1589786724374.png" alt="title"></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/18/1589786736666-1589786736675.png" alt="title"></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/18/1589786748283-1589786748284.png" alt="title"></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/18/1589786759671-1589786759674.png" alt="title"></p>
<p>需要设置一下权限，这里需要我们 <code>允许</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/18/1589786771459-1589786771468.png" alt="title"></p>
<p>安装完成</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/18/1589786782795-1589786782804.png" alt="title"></p>
<p>第一次可能会需要权限</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/02/1591090835448-1591090835449.png" alt="title"></p>
<p>接入一块250G的移动硬盘，被识别到了</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/18/1589786814886-1589786814894.png" alt="title"></p>
<p>不过这块硬盘不是 ntfs 格式的</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/18/1589786827713-1589786827720.png" alt="title"></p>
<p>工具栏上</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/18/1589786838242-1589786838249.png" alt="title"></p>
<p>退出前先卸载</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/18/1589786849388-1589786849395.png" alt="title"></p>
<p>换一个 ntfs 格式的 U 盘</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/02/1591079278757-1591079278769.png" alt="title"></p>
<p>软件的功能，自己慢慢发掘吧。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/02/1591092240270-1591092240325.png" alt="title"></p>
<p>动动手就省了100多块，是不是很开心呢？</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>ntfstool源代码<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL250ZnN0b29sL250ZnN0b29s">https://github.com/ntfstool/ntfstool<i class="fa fa-external-link-alt"></i></span></p>
<p>FUSE for macOS源代码<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL29zeGZ1c2Uvb3N4ZnVzZS8=">https://github.com/osxfuse/osxfuse/<i class="fa fa-external-link-alt"></i></span></p>
<p>MacOS下开启NTFS读写 - FUSE for Mac<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9hNzcwYzY2YmRkZGY=">https://www.jianshu.com/p/a770c66bdddf<i class="fa fa-external-link-alt"></i></span></p>
<p>Mac os catalina使用FUSE for macOS开启ntfs<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2J5dGlnZS9hcnRpY2xlL2RldGFpbHMvMTAzNTM1MTg0">https://blog.csdn.net/bytige/article/details/103535184<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>ntfs</tag>
        <tag>ntfstool</tag>
        <tag>FUSE</tag>
        <tag>electron</tag>
      </tags>
  </entry>
  <entry>
    <title>自带过滤功能的Hexo首页生成器插件</title>
    <url>/2020/05/10/%E8%87%AA%E5%B8%A6%E8%BF%87%E6%BB%A4%E5%8A%9F%E8%83%BD%E7%9A%84Hexo%E9%A6%96%E9%A1%B5%E7%94%9F%E6%88%90%E5%99%A8%E6%8F%92%E4%BB%B6/</url>
    <content><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>带过滤功能的Hexo首页生成器插件。在官方的首页生成器基础上添加了过滤指定分类/标签的功能。比如，在首页只显示指定分类下面的文章列表。 除此之外，它还在指定的目录下生成指定类型的文章，比如在web目录下生成Web相关的文章。</p>
<h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><p>先卸载官方的插件，不然会引起一些冲突。</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>在博客目录下打开终端（windows下cmd模式），输入以下命令：</p>
<blockquote>
<p>$ npm install hexo-generator-index2 –save<br>$ npm uninstall hexo-generator-index –save</p>
</blockquote>
<h1 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h1><p>打开hexo博客根目录下的<code>_config.yml</code>，添加以下内容，过滤分类或者标签为hide的文章。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment"># index2 generator是否包含官方的hexo-generator-index，默认true（包含）</span></span><br><span class="line">index2_include_index: true # defult is true</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置index2 generator，可以是数组或对象</span></span><br><span class="line">index2_generator:</span><br><span class="line">  per_page: 10</span><br><span class="line">  order_by: -date # 按发布时间排序</span><br><span class="line">  exclude:</span><br><span class="line">    - tag  hide # 不包含标签为hide的文章</span><br><span class="line">    - category hide # 不包含分类为hide的文章</span><br></pre></td></tr></table></figure>
<h1 id="测试结论"><a href="#测试结论" class="headerlink" title="测试结论"></a>测试结论</h1><p>确实也就只能隐藏首页，但是你可以通过tags标签中的hide来找到所有隐藏的文档。所以实用价值不大。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>hexo-generator-index官网<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvLWdlbmVyYXRvci1pbmRleA==">https://github.com/hexojs/hexo-generator-index<i class="fa fa-external-link-alt"></i></span></p>
<p>hexo-generator-index2官网<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0phbWxpbmcvaGV4by1nZW5lcmF0b3ItaW5kZXgy">https://github.com/Jamling/hexo-generator-index2<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>蜗牛星际C单的网路唤醒</title>
    <url>/2020/05/30/%E8%9C%97%E7%89%9B%E6%98%9F%E9%99%85C%E5%8D%95%E7%9A%84%E7%BD%91%E8%B7%AF%E5%94%A4%E9%86%92/</url>
    <content><![CDATA[<h1 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h1><blockquote>
<p>网路都说需要用把蜗牛真实 MAC 地址写到引导盘的 grub.cfg 中，但从实际测试看并不需要，因为无论是 Synology Assistant 还是路由器中识别的蜗牛的 MAC 地址，都和 grub.cfg 中的是一致的。</p>
</blockquote>
<h2 id="主板的设置"><a href="#主板的设置" class="headerlink" title="主板的设置"></a>主板的设置</h2><p>BIOS设置Advanced –&gt; ACPI Settings –&gt; Resume By Onboard LAN –&gt; Enabled</p>
<p>忘记拍照了，囧~~</p>
<h2 id="群晖的设置"><a href="#群晖的设置" class="headerlink" title="群晖的设置"></a>群晖的设置</h2><p>控制面板 –&gt; 硬件和电源 –&gt; 常规 –&gt; 电源自动回复</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/30/1590840044831-1590840044858.png" alt="title"></p>
<h1 id="局域网唤醒"><a href="#局域网唤醒" class="headerlink" title="局域网唤醒"></a>局域网唤醒</h1><h2 id="用-Synology-Assistant"><a href="#用-Synology-Assistant" class="headerlink" title="用 Synology Assistant"></a>用 Synology Assistant</h2><p>首先要绑定群晖的MAC。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/30/1590850708234-1590850708235.png" alt="title"></p>
<p>唤醒时只要选中需要唤醒的设备，右键选 WOL –&gt; 唤醒即可</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/31/1590900153275-1590900153278.png" alt="title"></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/30/1590851045065-1590851045068.png" alt="title"></p>
<p>唤醒成功</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/30/1590850411818-1590850411820.png" alt="title"></p>
<h2 id="用路由器"><a href="#用路由器" class="headerlink" title="用路由器"></a>用路由器</h2><p>网络工具 –&gt; 通过网络（LAN）唤醒</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/30/1590850947122-1590850947125.png" alt="title"></p>
<p>如果不想每次输入MAC地址，可以把要蜗牛加到离线列表中。</p>
<h1 id="远程唤醒"><a href="#远程唤醒" class="headerlink" title="远程唤醒"></a>远程唤醒</h1><h2 id="群晖管家APP"><a href="#群晖管家APP" class="headerlink" title="群晖管家APP"></a>群晖管家APP</h2><p>群晖管家APP支持局域网和远程唤醒，白裙通过 QuickConnect 连接，黑裙需要先用 frp 将端口 5000 映射到域名，再通过域名连到群晖。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/31/1590854795867-1590854795871.png" alt="title"></p>
<p><strong>要确保以前成功登陆过。</strong></p>
<p>选中需要唤醒的离线设备</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/31/1590854980536-1590854980540.png" alt="title"></p>
<p>局域网唤醒（WOL）</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/31/1590855195202-1590855195203.png" alt="title"></p>
<p>发送成功</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/31/1590855165367-1590855165368.png" alt="title"></p>
<h2 id="Android网络唤醒工具"><a href="#Android网络唤醒工具" class="headerlink" title="Android网络唤醒工具"></a>Android网络唤醒工具</h2><p>同样支持局域网和远程唤醒，局域网测试OK</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/31/1590898111757-1590898111797.png" alt="title"></p>
<p>广域网用 frp 映射的方式没成功，尝试了zerotier也没搞定，<strong>需要注意的是zerotier中的MAC和路由器中识别到的MAC是不同的</strong></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/31/1590900396930-1590900396931.png" alt="title"></p>
<p>先埋个坑，等有闲心了再来研究，反正有群晖管家APP也就够了。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>群辉相关 篇二：实现群辉Nas的外网远程唤醒，以手机外网唤醒群晖Nas为例<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2EzZ3Zrd3Y1Lw==">https://post.smzdm.com/p/a3gvkwv5/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>蜗牛星际</tag>
        <tag>WOL</tag>
      </tags>
  </entry>
  <entry>
    <title>能构建知识库的笔记软件obsidian试用</title>
    <url>/2020/09/09/%E8%83%BD%E6%9E%84%E5%BB%BA%E7%9F%A5%E8%AF%86%E5%BA%93%E7%9A%84%E7%AC%94%E8%AE%B0%E8%BD%AF%E4%BB%B6obsidian%E8%AF%95%E7%94%A8/</url>
    <content><![CDATA[<p><strong>什么是obsidian？</strong></p>
<blockquote>
<p>Obsidian 是一款支持 macOS、Windows、Linux 多平台的 Markdown 编辑器，同时也支持双向链接，带有效果相当惊艳的网状笔记视图，它还支持标签管理、多种插件（例如日记、实时预览、星标、自定义CSS 样式等），是一款功能强大的知识库软件。</p>
</blockquote>
<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Obisidian 最主要的特点是采用纯文本的 <code>Markdown</code> 文件，而且所有文件均存放于本地，可以使用任何形式的网盘/Git 进行同步，并且免费使用，当然如果你想的话，官方也即将提供加密同步服务——$4/月。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/29/1598697978047-1598697978050.png" alt="title"></p>
<p>除此之外官方还提供发布分享服务，当然也是需要付费的，对我而言，<code>Obsidian</code> 的本地功能用于资料的梳理已完全足够了。</p>
<p>我目前同步用的是 <code>Syncthing</code>，关于  <code>Syncthing</code> 可以参考上一篇文章 《<a href="https://laosu.ml/2020/09/04/Syncthing%E6%96%87%E4%BB%B6%E5%A4%B9%E5%90%8C%E6%AD%A5%E7%A5%9E%E5%99%A8/">Syncthing文件夹同步神器</a>》</p>
<p>至于发布，除了一个月发几篇公众号之外，其他都是工作笔记，不存在发布的问题，所以暂时可以不用考虑。</p>
<h1 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h1><h2 id="设置库"><a href="#设置库" class="headerlink" title="设置库"></a>设置库</h2><p>第一次运行</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/27/1598492776803-1598492776810.png" alt="title"></p>
<p>新建</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/27/1598494497636-1598494497643.png" alt="title"></p>
<p>首次首界面</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/27/1598494543978-1598494543986.png" alt="title"></p>
<h2 id="设置中文"><a href="#设置中文" class="headerlink" title="设置中文"></a>设置中文</h2><p>左下角【Setting】-&gt;【About】-&gt;【Language】，设置为中文</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/27/1598494727192-1598494727200.png" alt="title"></p>
<p><code>relaunch</code> 之后就是中文界面了</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/27/1598495816906-1598495816914.png" alt="title"></p>
<h2 id="中文的使用帮助"><a href="#中文的使用帮助" class="headerlink" title="中文的使用帮助"></a>中文的使用帮助</h2><p>在 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0phY2tpZXhpYW8vb2JzaWRpYW4=">https://github.com/Jackiexiao/obsidian<i class="fa fa-external-link-alt"></i></span> 可以找到中文版的帮助</p>
<p>直接下载 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0phY2tpZXhpYW8vb2JzaWRpYW4vYXJjaGl2ZS9tYXN0ZXIuemlw">https://github.com/Jackiexiao/obsidian/archive/master.zip<i class="fa fa-external-link-alt"></i></span></p>
<p>解压后用 <code>obsidian</code> 打开。左下角 <code>打开其他库</code> 或者 <code>Open another vault</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/27/1598496641899-1598496641901.png" alt="title"></p>
<p>我是直接将 <code>中文帮助</code> 目录丢到了刚才新建的库 <code>KW</code> 里</p>
<blockquote>
<p>但是这样会导致图看不到，所以最好还是把整个文件夹丢进去比较好</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/27/1598496774941-1598496774949.png" alt="title"></p>
<p>返回到 <code>obsidian</code> 主界面</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/27/1598496813275-1598496813280.png" alt="title"></p>
<h2 id="图谱"><a href="#图谱" class="headerlink" title="图谱"></a>图谱</h2><p>选中 <code>插件列表</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/27/1598496925268-1598496925278.png" alt="title"></p>
<p>点击圆点</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/27/1598496988239-1598496988249.png" alt="title"></p>
<h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/27/1598497122956-1598497122966.png" alt="title"></p>
<h2 id="尝试最新版"><a href="#尝试最新版" class="headerlink" title="尝试最新版"></a>尝试最新版</h2><p>在 <code>Obsidian</code> 的首页 <span class="exturl" data-url="aHR0cHM6Ly9vYnNpZGlhbi5tZC8=">https://obsidian.md/<i class="fa fa-external-link-alt"></i></span>，就能看到和自己平台对应的版本</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/09/download-1599651894564.png" alt="title"></p>
<p>但是如果你想吃螃蟹，参与内部版本的测试，则需要在GitHub才能找到：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL29ic2lkaWFubWQvb2JzaWRpYW4tcmVsZWFzZXMvcmVsZWFzZXM=">https://github.com/obsidianmd/obsidian-releases/releases<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/09/github_download-1599651943859.png" alt="title"></p>
<p>但是我们解压出来是 <code>.asar</code>要怎么样使用呢？以 <code>Mac</code> 为例，选中 <code>Obsidian</code> 的图标右键 –&gt; 显示包内容</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/09/content-1599651978786.png" alt="title"></p>
<p>进入 <code>Contents</code> 目录 –&gt;  <code>Resources</code> 目录， 替换掉 <code>obsidian.asar</code> 文件，在替换前记得备份，完成后再看版本</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/09/version-1599652013356.png" alt="title"></p>
<h1 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h1><p>工具本身作为一个 <code>Markdown</code> 编辑器还是很容易上手的，但是想要提高也不太容易，B站有些关于 <code>Obsidian</code> 的视频还是不错的，重要的不是工具，而是方法，<code>Obsidian</code>背后的逻辑是卡片盒笔记法，这需要我们持续不断的实践。</p>
<h1 id="chrome插件"><a href="#chrome插件" class="headerlink" title="chrome插件"></a>chrome插件</h1><p>插件本身和 <code>Obsidian</code> 没啥关系，但是对于记笔记这件事却有很大的帮助，当然如果你访问不了 <code>Chrome 应用商店</code>，那我也爱莫能助，还是直接跳过这个部分吧。</p>
<h2 id="TabCopy"><a href="#TabCopy" class="headerlink" title="TabCopy"></a>TabCopy</h2><p>TabCopy 能够一键复制网页的标题和网址，这对需要记录一些资料的标题及链接或需要将网页分享给他人查看时非常方便。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/29/1598712218798-1598712218800.png" alt="title"></p>
<p>像我的参考文档中的引用格式</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/09/Quote-1599652050068.png" alt="title"></p>
<p>下载地址：<span class="exturl" data-url="aHR0cHM6Ly9jaHJvbWUuZ29vZ2xlLmNvbS93ZWJzdG9yZS9kZXRhaWwvdGFiY29weS9taWNkbGxpaGdvcHBtZWpwZWNta2lsZ2dtYWFnZmRtYj91dG1fc291cmNlPWNocm9tZS1udHAtaWNvbg==">https://chrome.google.com/webstore/detail/tabcopy/micdllihgoppmejpecmkilggmaagfdmb?utm_source=chrome-ntp-icon<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="Roam-Highlighter"><a href="#Roam-Highlighter" class="headerlink" title="Roam-Highlighter"></a>Roam-Highlighter</h2><p>这应该是为 <code>Roam Research</code> 做的插件，可以方便的将 Web 中的文字高亮并导入到  <code>Roam Researc</code> 中，也支持 <code>Obsidian</code> 标签，也能很方便的导入 <code>Obsidian</code> 。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/29/1598712191795-1598712191797.png" alt="title"></p>
<p>下载地址：<span class="exturl" data-url="aHR0cHM6Ly9jaHJvbWUuZ29vZ2xlLmNvbS93ZWJzdG9yZS9kZXRhaWwvcm9hbS1oaWdobGlnaHRlci9tY29pbWllZ2xtaGRqZG9wbGhwY21pZmdwbGtiZmlicD91dG1fc291cmNlPWNocm9tZS1udHAtaWNvbg==">https://chrome.google.com/webstore/detail/roam-highlighter/mcoimieglmhdjdoplhpcmifgplkbfibp?utm_source=chrome-ntp-icon<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="Web-Clipper"><a href="#Web-Clipper" class="headerlink" title="Web Clipper"></a>Web Clipper</h2><p>支持 Notion、GitHub、OneNote、我来等各种笔记，也可以将网页转成 <code>Markdown</code> 格式直接下载到本地，这是个开源的插件。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/08/29/1598712361844-1598712361846.png" alt="title"></p>
<p>下载地址：<span class="exturl" data-url="aHR0cHM6Ly9jaHJvbWUuZ29vZ2xlLmNvbS93ZWJzdG9yZS9kZXRhaWwvd2ViLWNsaXBwZXIvbWhmYm9maW9rbXBwZ2RsaWFrbWluYmdkZ2NtYmhiYWM/dXRtX3NvdXJjZT1jaHJvbWUtbnRwLWljb24=">https://chrome.google.com/webstore/detail/web-clipper/mhfbofiokmppgdliakminbgdgcmbhbac?utm_source=chrome-ntp-icon<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="GitHub加速"><a href="#GitHub加速" class="headerlink" title="GitHub加速"></a>GitHub加速</h2><p>这个插件和笔记都没关系，只是如果你经常要去下载 <code>Obsidian</code> 内测版的话，有了这个插件可能会快一些吧。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/09/09/github-1599652092868.png" alt="title"></p>
<p>下载地址：<span class="exturl" data-url="aHR0cHM6Ly9jaHJvbWUuZ29vZ2xlLmNvbS93ZWJzdG9yZS9kZXRhaWwvZ2l0aHViJUU1JThBJUEwJUU5JTgwJTlGL21mbmtmbGlkam5sYWRua2xkZm9ubmFpY2xqcHBhaHBnP3V0bV9zb3VyY2U9Y2hyb21lLW50cC1pY29u">https://chrome.google.com/webstore/detail/github%E5%8A%A0%E9%80%9F/mfnkflidjnladnkldfonnaicljppahpg?utm_source=chrome-ntp-icon<i class="fa fa-external-link-alt"></i></span></p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>官网<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9vYnNpZGlhbi5tZC8=">https://obsidian.md/<i class="fa fa-external-link-alt"></i></span></p>
<p>How I use Obsidian to manage my goals, tasks, notes, and software development knowledge base<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuYW5pc2FuZXdzLmNvbS9ob3ctaS11c2Utb2JzaWRpYW4tdG8tbWFuYWdlLW15LWdvYWxzLXRhc2tzLW5vdGVzLWFuZC1zb2Z0d2FyZS1kZXZlbG9wbWVudC1rbm93bGVkZ2UtYmFzZS8=">https://www.anisanews.com/how-i-use-obsidian-to-manage-my-goals-tasks-notes-and-software-development-knowledge-base/<i class="fa fa-external-link-alt"></i></span></p>
<p>从卡片链接到大脑联想，基于 Obsidian 的卡片盒笔记法实践 - 少数派<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9zc3BhaS5jb20vcG9zdC82MDgwMg==">https://sspai.com/post/60802<i class="fa fa-external-link-alt"></i></span></p>
<p>Chrome扩展程序——TabCopy：一键复制网页标题和网址_Erik_ly的博客-CSDN博客<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTIzMTgwNzQvYXJ0aWNsZS9kZXRhaWxzLzc3NDM1NzI0">https://blog.csdn.net/u012318074/article/details/77435724<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>双向链接</tag>
      </tags>
  </entry>
  <entry>
    <title>跨平台的工具箱uTools</title>
    <url>/2020/06/17/%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%9A%84%E5%B7%A5%E5%85%B7%E7%AE%B1uTools/</url>
    <content><![CDATA[<p><strong>什么是uTools？</strong></p>
<blockquote>
<p>uTools 是一个极简、插件化、跨平台的现代化桌面软件。通过自由选配丰富的插件，打造你得心应手的工具集合。<br>通过快捷键（默认 alt+space ）就可以快速呼出这个搜索框。它相当聪明，可以支持输入、拖拽、自动粘贴等作为输入源，相应的插件也早已准备就绪，统一的设计风格和操作方式，助你高效的得到结果。</p>
</blockquote>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>第一次接触 uTools 应该是在一年多之前，因为搜索内网穿透软件找到了它，功能简单好用，让我印象非常深刻。时隔一年，插件中心已经有了上百个，功能也已经涵盖了方方面面。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/17/1592398983061-1592398983093.png" alt="title"></p>
<p>目前已经支持的客户端版本涵盖了主流的 Windows、Linux 和 MacOS，顺便提一下，uTools 是基于 electron 开发的。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/17/1592399196029-1592399196033.png" alt="title"></p>
<h1 id="功能简介"><a href="#功能简介" class="headerlink" title="功能简介"></a>功能简介</h1><h2 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h2><h3 id="主界面"><a href="#主界面" class="headerlink" title="主界面"></a>主界面</h3><p>uTools 作为一个快速的程序启动器，界面非常简单，和 Mac 上的 Spotlight 、Alfred 非常相似，当然 Windows 下也有类似的应用，比如 Wox 、 Listary 等。</p>
<p>默认 alt+space 就可以快速呼出这个搜索框</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/17/1592399937316-1592399937321.png" alt="title"></p>
<h3 id="状态栏图标"><a href="#状态栏图标" class="headerlink" title="状态栏图标"></a>状态栏图标</h3><p>工具栏上 uTools 图标上鼠标右键</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/17/1592400446491-1592400446494.png" alt="title"></p>
<p>最上面是微信账号，通过微信登录后可以同步一些使用数据到云端，非常方便。</p>
<h2 id="快速启动"><a href="#快速启动" class="headerlink" title="快速启动"></a>快速启动</h2><p>在没有安装任何插件的情况下，uTools 和 Mac 上的 Spotlight 很像，强大的快速启动，支持首字母检索等。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/17/1592401324638-1592401324640.png" alt="title"></p>
<h2 id="插件中心"><a href="#插件中心" class="headerlink" title="插件中心"></a>插件中心</h2><p>可以从工具条的右键菜单进，也可以呼出主界面输入 <code>cj</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/17/1592401432429-1592401432435.png" alt="title"></p>
<p>一开始是空空如也的</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/17/1592401522853-1592401522856.png" alt="title"></p>
<p>先试试我们之前提到的内外穿透，在插件中心搜索 <code>内网</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/17/1592401610163-1592401610165.png" alt="title"></p>
<p>点击会弹出插件的简介</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/17/1592401656579-1592401656580.png" alt="title"></p>
<p>点右上方蓝色的 <code>下载</code> 按钮，安装完成后会变成红色 <code>移除</code>。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/17/1592402040543-1592402040545.png" alt="title"></p>
<p>点红框中的 <code>NAT</code> 或者 <code>内网穿透</code> 进入插件的设置界面。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/17/1592402156235-1592402156236.png" alt="title"></p>
<p>设置好之后点 <code>连接</code> 即可。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/17/1592402242685-1592402242687.png" alt="title"></p>
<p>接下来我们在浏览器中输入 <code>http://mynas.utools.club/</code> 就可以访问了，非常适合web开发的远程演示，小程序开发等。当然这个插件不仅仅可以穿透web服务，也可以用于远程调试。</p>
<p>打开连接方式，我们可以看到除了http外，还有本地目录和 tcp 服务<br><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/17/1592402493861-1592402493864.png" alt="title"></p>
<h2 id="自定义插件"><a href="#自定义插件" class="headerlink" title="自定义插件"></a>自定义插件</h2><p>uTools 一切皆插件的设计，使得我们可以开发属于自己的插件，官方提供了 【<span class="exturl" data-url="aHR0cHM6Ly91LnRvb2xzL2RvY3MvZGV2ZWxvcGVyL3dlbGNvbWUuaHRtbA==">开发文档<i class="fa fa-external-link-alt"></i></span>】</p>
<h2 id="数据同步"><a href="#数据同步" class="headerlink" title="数据同步"></a>数据同步</h2><p>微信登录后可一键开启，便于在不同设备之间共享数据，或是预防重装系统造成数据丢失，目前是免费的。</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>插件非常多，需要根据各人的需要慢慢摸索，当你熟悉之后，它会成为你专属的生产力工具集！</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>uTools官网<br>地址：<span class="exturl" data-url="aHR0cHM6Ly91LnRvb2xzLw==">https://u.tools/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>electron</tag>
        <tag>utool</tag>
        <tag>效率</tag>
      </tags>
  </entry>
  <entry>
    <title>超好用的Mac截图软件iShot</title>
    <url>/2020/06/27/%E8%B6%85%E5%A5%BD%E7%94%A8%E7%9A%84Mac%E6%88%AA%E5%9B%BE%E8%BD%AF%E4%BB%B6iShot/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>因为日常写文档经常要截图，所以一款好的截图软件对于提升工作效率有很大的帮助，之前一直用的腾讯的截图（Jietu），虽然只有一个简单的选框截图模式，但具备丰富的标注功能，完全可以胜任工作需要，只是自从升级到最新版本后，遇到了包括热键不响应等各种问题，老的安装包又找不到了，所以只能重新寻找新的替代方案。</p>
<p>网上有各种推荐，但从介绍看功能大同小异，最终我选择了 iShot，因为免费，因为体积小巧，因为支持截长图。</p>
<h1 id="iShot-功能简介"><a href="#iShot-功能简介" class="headerlink" title="iShot 功能简介"></a>iShot 功能简介</h1><p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/27/1593246810177-1593246810217.png" alt="title"></p>
<blockquote>
<ul>
<li>区域截图、窗口截图、快捷键截图。智能识别窗口，自动倒圆角、可自定义快捷键快速截图</li>
<li>长截图、滚动截图</li>
<li>延时全屏截图，支持倒计时声音播放，截取不易选取的窗口</li>
<li>快捷键快速标注，可根据习惯自定义截图标注工具快捷键</li>
<li>标注功能：矩形、圆形、横线、箭头、画笔、马赛克、文字标记、序号标签、局部高亮</li>
<li>自定义配色，标注工具默认提供5种颜色，另外提供自定义调色板，可自定义配色</li>
<li>标注工具提供多种样式选择：箭头、马赛克等标注工具，提供多款样式选择，让你的标注不再单一</li>
<li>支持高清、标清两种图像质量</li>
<li>支持jpg、png、tiff截图保存格式</li>
<li>支持隐藏菜单栏图标</li>
</ul>
</blockquote>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>直接在 App Store 中搜索 <code>ishot</code> 安装即可。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/27/1593260644354-1593260644366.png" alt="title"></p>
<p>安装完成后，需要在【系统偏好设置】 –&gt; 【安全性与隐私】 –&gt; 【隐私】 –&gt; 【屏幕录制】 中勾选 ishot</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/27/1593261908347-1593261908354.png" alt="title"></p>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>打开 <code>偏好设置</code> 进行设置，这里我都用的默认值。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/27/1593261276504-1593261276510.png" alt="title"></p>
<p>菜单栏菜单</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/27/1593262248875-1593262248881.png" alt="title"></p>
<p>截图功能菜单比较丰富，包括标注线框、箭头、文字、打码等等，而且都可以用快捷键操作。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/27/1593262956124-1593262956128.png" alt="title"></p>
<p>上图中红框为 <code>长截图</code> 按钮，第一次尝试未成功，查阅了官方文档，有3个原因：</p>
<ol>
<li>框选区域有不可滚动部分</li>
<li>滚动截图的部分包含动图、动态表情、动画等动态部分</li>
<li>下滚动过程中，产生了左右滚动</li>
</ol>
<p>避免上面提到的情况，多尝试几次就知道怎么回事了。其他的截图功能留给大家慢慢研究吧！</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>官网<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuYmV0dGVyMzY1LmNuLw==">https://www.better365.cn/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>Mac</tag>
        <tag>截图</tag>
      </tags>
  </entry>
  <entry>
    <title>蜗牛星际C单的网路唤醒（续）</title>
    <url>/2020/06/05/%E8%9C%97%E7%89%9B%E6%98%9F%E9%99%85C%E5%8D%95%E7%9A%84%E7%BD%91%E8%B7%AF%E5%94%A4%E9%86%92%EF%BC%88%E7%BB%AD%EF%BC%89/</url>
    <content><![CDATA[<p>在<a href="https://laosu.ml/2020/05/30/%E8%9C%97%E7%89%9B%E6%98%9F%E9%99%85C%E5%8D%95%E7%9A%84%E7%BD%91%E8%B7%AF%E5%94%A4%E9%86%92/">上一篇</a>中，尝试用 Android 网络唤醒工具进行远程唤醒时没成功。所以今天从原理上开始研究。</p>
<p><strong>什么是网络唤醒</strong></p>
<blockquote>
<ul>
<li>网络唤醒（Wake-on-LAN，WOL）是一种计算机局域网唤醒技术，使局域网内处于关机或休眠状态的计算机，将状态转换成引导（Boot Loader）或运行状态。</li>
<li>网络唤醒在一般的局域网环境里使用有限广播地址（255.255.255.255）即可，由于路由器都不转发目的地址为有限广播地址的数据报，因此在复杂网络情况下通常使用子网定向广播地址。</li>
<li>魔法数据包是一个广播帧，包含目标计算机的MAC地址。由于 MAC 地址的唯一性，使数据包可以在网络中被唯一的识别。魔法数据包发送通常使用无连接的传输协议，如 UDP ，发送端口为 7 或 9 ，这只是通常做法，没有限制。</li>
<li>在魔法数据包内，每次都会先有连续6个”FF”（十六进制，换算成二进制即：11111111）的数据，即：FF FF FF FF FF FF，在连续6个”FF”后则开始带出MAC地址信息，有时还会带出4字节或6字节的密码，一旦经由网卡侦测、解读、研判（广播）魔法数据包的内容，内容中的MAC地址、密码若与电脑自身的地址、密码吻合，就会引导唤醒、引导的程序。</li>
</ul>
</blockquote>
<p>考虑到 LAN 模式下是OK的，先看看。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/31/1590920333622-1590920333626.png" alt="title"></p>
<p>点击边上的魔术棒，能看到广播地址。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/31/1590920373468-1590920373470.png" alt="title"></p>
<p>既然 LAN 模式没问题，接下来我们要做的就是想办法把广播地址给映射到外网去。</p>
<p>第一步：在 <code>frpc.ini</code> 中，增加一段，</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[wol_wn]</span></span><br><span class="line"><span class="attr">type</span> = udp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">192.168</span>.<span class="number">0.255</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">9</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">20495</span></span><br><span class="line"><span class="attr">use_encryption</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">use_compression</span> = <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>第二步：在 WolOn app 中 进行设置</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/31/1590918052034-1590918052036.png" alt="title"></p>
<p>当然填域名也是可以的，只要是指向 frps 公网 IP 的域名都行。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>网络唤醒（WOL）全解指南：原理篇<br>地址：<span class="exturl" data-url="aHR0cHM6Ly95cS5hbGl5dW4uY29tL2FydGljbGVzLzY0MDg5OQ==">https://yq.aliyun.com/articles/640899<i class="fa fa-external-link-alt"></i></span></p>
<p>网络唤醒<br>地址：<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU3JUI2JUIyJUU4JUI3JUFGJUU1JTk2JTlBJUU5JTg2JTky">https://zh.wikipedia.org/wiki/%E7%B6%B2%E8%B7%AF%E5%96%9A%E9%86%92<i class="fa fa-external-link-alt"></i></span></p>
<p>如何远程开启你的电脑：WoL的原理和陷阱<br>地址：<span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8yODg1OTYyMA==">https://zhuanlan.zhihu.com/p/28859620<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>蜗牛星际</tag>
        <tag>WOL</tag>
      </tags>
  </entry>
  <entry>
    <title>部署Guacamole远程桌面网关服务</title>
    <url>/2020/10/16/%E9%83%A8%E7%BD%B2Guacamole%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E7%BD%91%E5%85%B3%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<p><strong>什么是Guacamole？</strong></p>
<blockquote>
<p>Apache Guacamole 是无客户端远程桌面网关，是基于 HTML5 的远程桌面控制框架。它支持标准协议，例如 VNC，RDP和SSH。</p>
</blockquote>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>使用 guacamole 的主要原因是可以从任何地方远程访问一个或多个桌面，而无需安装客户端，这给我们带来了很大的便利，几乎可以在带有网络浏览器的任何设备上使用 guacamole，而且代理或防火墙的存在不会阻止 guacamole 的使用。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/%E6%9E%B6%E6%9E%84-1600260803126.png" alt="title"></p>
<p>关于 guacamole 更多的介绍，可以到这里看看：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1RlbERyYWdvbi9ndWFjYW1vbGU=">https://github.com/TelDragon/guacamole<i class="fa fa-external-link-alt"></i></span></p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>根据 apache guacamole 官方文档，官方的 docker 涉及到3个独立的容器，分别是 <code>guacamole/guacd</code>、<code>guacamole/guacamol</code>、<code>mysql</code> 或者 <code>postgresql</code>，这种遵循单一原则的分离更有利于升级、维护，但是我们只是临时的测试环境，即便是使用也是偶尔和数量很少的用户，所以我个人更喜欢用单容器，有点类似虚拟机，在一个容器中跑多个应用，就算是挂了，重启容器就行了。</p>
<p>基于上述的原因，我们今天选择的镜像是 <code>oznu/guacamole</code>，这是一个多合一的镜像，包含了 <code>guacd server</code> ，<code>guacamole web client</code> 和 <code>postgres database</code>，支持 x64 和 ARM 平台。 </p>
<p>之前我们已经安装过 portainer 来管理 docker，所以我们今天尝试用 portainer 来安装 guacamole。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/docker1-1600260893774.png" alt="title"></p>
<p>其中</p>
<blockquote>
<p>① 是容器的名称<br>② 是镜像的名称<br>③ 前面是主机的端口，不冲突就可，后面是容器的端口<br>④ 是重启的策略<br>⑤ 是部署按钮</p>
</blockquote>
<p>点击⑤开始部署，部署的时间取决于网络</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/docker2-1600260918381.png" alt="title"></p>
<h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><p>在浏览器中输入 <code>http://群晖IP:3080</code>，就可以看到登录界面</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/login-1600260935535.png" alt="title"></p>
<p>缺省的用户名和密码都是 <code>guacadmin</code></p>
<p>右上角 <code>guacadmin</code> –&gt; <code>设置</code> –&gt; <code>连接</code></p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/setup1-1600260977020.png" alt="title"></p>
<h2 id="SSH-连接"><a href="#SSH-连接" class="headerlink" title="SSH 连接"></a>SSH 连接</h2><p>选择 <code>SSH</code> 协议</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/setup2-1600261007887.png" alt="title"></p>
<p>只要输入主机IP和端口即可，我这里输入了群晖的IP</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/setup3-1600261022509.png" alt="title"></p>
<p>输入账号、密码就能成功看到界面</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/setup4-1600261045349.png" alt="title"></p>
<p>如果连不上，检查下是否勾选了 <code>启用 SSH 功能</code>，以及 <code>端口</code> 是否正确</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/10/16/1602860097377-1602860097436.png" alt="title"></p>
<p>除了命令，还支持常用的 tab 补全和 vi，这不就是个 web 版的 ssh 吗？</p>
<h2 id="RDP-连接"><a href="#RDP-连接" class="headerlink" title="RDP 连接"></a>RDP 连接</h2><p>windows主机新建用于远程登录的用户</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/windows1-1600261074886.png" alt="title"></p>
<p>远程桌面中 <code>允许远程连接到此计算机</code>，选择用户</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/windows2-1600261094711.png" alt="title"></p>
<p>选择添加</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/windows3-1600261120369.png" alt="title"></p>
<p>文本框中输入用户 <code>RDP</code> 之后，点检查名称，会自动补全，确定就可以了 </p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/windows4-1600261132672.png" alt="title"></p>
<p>自动返回上一个界面，确定即可</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/windows5-1600261144014.png" alt="title"></p>
<p>回到 <code>guacamole</code> 的 <code>连接</code> 设置界面，这次选择 <code>RDP</code> 协议</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/setup5-1600261158041.png" alt="title"></p>
<p>同样只要输入主机IP和端口即可</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/setup6-1600261172647.png" alt="title"></p>
<p>选择用户</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/windows6-1600261187005.png" alt="title"></p>
<p>输入密码</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/windows7-1600261198341.png" alt="title"></p>
<p>登录成功后</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/windows8-1600261210725.png" alt="title"></p>
<p>从操作看还是比较流畅的</p>
<h2 id="主机切换"><a href="#主机切换" class="headerlink" title="主机切换"></a>主机切换</h2><p>在后台首页能看到登录过的主机</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/web1-1600261225206.png" alt="title"></p>
<p>可以通过点击主机界面的右下角在不同的主机间进行切换</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/web2-1600261236854.png" alt="title"><br><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/web3-1600261245798.png" alt="title"></p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>从协议看，还支持 <code>VNC</code>、<code>Telnet</code>、<code>Kubernetes</code>，有兴趣的可以自行研究。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wbsu2003/gitnote-images/mynote/2020/09/16/%E5%8D%8F%E8%AE%AE-1600261262006.png" alt="title"></p>
<p>对我而言，支持 <code>SSH</code> 和  <code>RDP</code> 已经足够了， <code>TeamViewer</code> 和 <code>向日葵</code> 都可以卸了。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>Apache Guacamole™<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9ndWFjYW1vbGUuYXBhY2hlLm9yZy8=">https://guacamole.apache.org/<i class="fa fa-external-link-alt"></i></span></p>
<p>oznu/docker-guacamole: A self-contained guacamole docker container for x64 and ARM. Remotely connect over SSH, RDP or VNC using HTML5.<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL296bnUvZG9ja2VyLWd1YWNhbW9sZQ==">https://github.com/oznu/docker-guacamole<i class="fa fa-external-link-alt"></i></span></p>
<p>Using Portainer to Deploy Guacamole Docker- Web-based Remote Access Gateway - Info Security Memo<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuNTFzZWMub3JnLzIwMTkvMDgvMDMvdXNpbmctcG9ydGFpbmVyLXRvLWRlcGxveS1ndWFjYW1vbGUtZG9ja2VyLXdlYi1iYXNlZC1yZW1vdGUtYWNjZXNzLWdhdGV3YXkv">https://www.51sec.org/2019/08/03/using-portainer-to-deploy-guacamole-docker-web-based-remote-access-gateway/<i class="fa fa-external-link-alt"></i></span></p>
<p>Guacamole桌面虚拟化介绍和安装使用 - ❤️ 我洋洋 - OSCHINA - 中文开源技术交流社区<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9teS5vc2NoaW5hLm5ldC96ZXl1cGhvZW5peC9ibG9nLzUzMDc4MA==">https://my.oschina.net/zeyuphoenix/blog/530780<i class="fa fa-external-link-alt"></i></span></p>
<p>Apache Guacamole多个漏洞分析 - 安全客，安全资讯平台<br>地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuYW5xdWFua2UuY29tL3Bvc3QvaWQvMjA5NzIx">https://www.anquanke.com/post/id/209721<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>VNC</tag>
        <tag>远程桌面</tag>
        <tag>SSH</tag>
        <tag>RDP</tag>
      </tags>
  </entry>
  <entry>
    <title>轻量级内网穿透代理服务器nps试用</title>
    <url>/2020/06/21/%E8%BD%BB%E9%87%8F%E7%BA%A7%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8nps%E8%AF%95%E7%94%A8/</url>
    <content><![CDATA[<p><strong>什么是 nps</strong></p>
<blockquote>
<p>一款轻量级、高性能、功能强大的内网穿透代理服务器，几乎支持所有协议，支持内网http代理、内网socks5代理、p2p等，简洁但功能强大的WEB管理界面，支持服务端、客户端同时控制，扩展功能强大，全平台兼容，一键注册为服务。【官网中文说明：<span class="exturl" data-url="aHR0cHM6Ly9laGFuZy1pby5naXRodWIuaW8vbnBzLyMvP2lkPW5wcw==">https://ehang-io.github.io/nps/#/?id=nps<i class="fa fa-external-link-alt"></i></span>】</p>
</blockquote>
<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>1、一台具有公网IP的服务器，系统可以是Windows、Linux。<br>2、根据自己服务器和客户端的系统，下载对应的源码、安装包或者镜像文件；<br>3、准备一个有效的域名，国内主机可能需要备案。</p>
<h1 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>官方提供了三种安装方式，包括用安装包安装、源码安装和docker安装。我们用最省事的安装包，下载地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NubGgvbnBzL3JlbGVhc2Vz">https://github.com/cnlh/nps/releases<i class="fa fa-external-link-alt"></i></span></p>
<p>因为是 VPS 是 CentOS 7，所以下载了 <code>linux_amd64_server.tar.gz</code>，目前最新的版本是v0.26.8</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/21/1592712013620-1592712013672.png" alt="title"></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下载安装包</span></span><br><span class="line">https://github.com/ehang-io/nps/releases/download/v0.26.8/linux_amd64_server.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建目录</span></span><br><span class="line">mkdir /usr/<span class="built_in">local</span>/nps</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压缩</span></span><br><span class="line">tar -zxvf  linux_amd64_server.tar.gz -C /usr/<span class="built_in">local</span>/nps/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入 nps 目录</span></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/nps/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注册为服务</span></span><br><span class="line">./npc install</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/21/1592714295496-1592714295502.png" alt="title"></p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>上图显示配置文件在 <code>/etc/nps</code>。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">vi /etc/nps/conf/nps.conf</span><br></pre></td></tr></table></figure>

<p>关于服务端配置文件，在<span class="exturl" data-url="aHR0cHM6Ly9laGFuZy1pby5naXRodWIuaW8vbnBzLyMvc2VydmVyX2NvbmZpZz9pZD0lRTYlOUMlOEQlRTUlOEElQTElRTclQUIlQUYlRTklODUlOEQlRTclQkQlQUU=">官网文档<i class="fa fa-external-link-alt"></i></span>有详细的注释，这里只针对几个要改的做了简单说明</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 因为云主机还有 web 服务，所以 80 和 443 端口已经被占用了，</span></span><br><span class="line"><span class="comment"># 所以域名代理监听端口不能使用默认的 80 和 443，而是改成了 8080 和 8443 端口。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#HTTP(S) proxy port, no startup if empty</span></span><br><span class="line"><span class="attr">http_proxy_ip</span>=<span class="number">0.0</span>.<span class="number">0.0</span></span><br><span class="line"><span class="attr">http_proxy_port</span>=<span class="number">8080</span></span><br><span class="line"><span class="attr">https_proxy_port</span>=<span class="number">8443</span></span><br><span class="line"><span class="attr">https_just_proxy</span>=<span class="literal">true</span></span><br><span class="line"><span class="comment">#default https certificate setting</span></span><br><span class="line"><span class="attr">https_default_cert_file</span>=conf/server.pem</span><br><span class="line"><span class="attr">https_default_key_file</span>=conf/server.key</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这段是关于 web 管理页面的设置，同样不能用已占用的端口，所以改成了 8081。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#web</span></span><br><span class="line"><span class="attr">web_host</span>=laosu.ml</span><br><span class="line"><span class="attr">web_username</span>=admin</span><br><span class="line"><span class="attr">web_password</span>=<span class="number">1111111</span></span><br><span class="line"><span class="attr">web_port</span> = <span class="number">8081</span></span><br><span class="line"><span class="attr">web_ip</span>=<span class="number">0.0</span>.<span class="number">0.0</span></span><br><span class="line"><span class="attr">web_base_url</span>=</span><br><span class="line"><span class="attr">web_open_ssl</span>=<span class="literal">false</span></span><br><span class="line"><span class="attr">web_cert_file</span>=conf/server.pem</span><br><span class="line"><span class="attr">web_key_file</span>=conf/server.key</span><br><span class="line"><span class="comment"># if web under proxy use sub path. like http://host/nps need this.</span></span><br><span class="line"><span class="comment">#web_base_url=/nps</span></span><br></pre></td></tr></table></figure>

<p>其他的根据需要修改，比如 <code>public_vkey</code> 等。</p>
<h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启动 nps</span></span><br><span class="line">nps start</span><br></pre></td></tr></table></figure>

<p>这个时候在浏览器中输入 <code>http://laosu.ml:8081</code>，就可以看到 web 管理界面了</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/21/1592719175374-1592719175376.png" alt="title"></p>
<p>第一次建议不带 <code>start</code> 参数，可以进到 console 模式，实时显示运行状态。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/21/1592719764128-1592719764132.png" alt="title"></p>
<h2 id="web-设置"><a href="#web-设置" class="headerlink" title="web 设置"></a>web 设置</h2><p>新增客户端</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/21/1592719828417-1592719828420.png" alt="title"></p>
<p>先用 nas 试试</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/21/1592723368417-1592723368419.png" alt="title"></p>
<p>添加成功</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/21/1592723486512-1592723486517.png" alt="title"></p>
<p>因为还没有安装客户端，所以添加完成后，连接显示还是 <code>离线</code> 的。</p>
<h1 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h1><h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><p>这次我们下载群晖的版本</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/21/1592723959630-1592723959633.png" alt="title"></p>
<p>打开 <code>套件中心</code>，选择 <code>手动安装</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/21/1592724340683-1592724340686.png" alt="title"></p>
<p>选择刚才下载的 <code>npc_syno.spk</code></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/21/1592724392925-1592724392927.png" alt="title"></p>
<p>安装完成后，运行 nps 客户端</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/21/1592724048862-1592724048864.png" alt="title"></p>
<p>返回 web 管理界面。可以看到客户端已经在线了</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/21/1592724174737-1592724174741.png" alt="title"></p>
<h2 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h2><p>添加隧道，把 nas 的后台管理界面映射到公网</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/21/1592725120087-1592725120091.png" alt="title"></p>
<p>填写 nas 后台管理页面的端口 5000</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/21/1592725481508-1592725481512.png" alt="title"></p>
<p>添加成功</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/21/1592725602665-1592725602667.png" alt="title"></p>
<p>在浏览器中输入 <code>http://laosu.ml:5000</code> 就可以看到 nas的后台了，效果和我们在局域网中访问<br> <code>192.168.0.199:5000</code> 是一样的。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/21/1592725777524-1592725777528.png" alt="title"></p>
<h1 id="卸载-nps"><a href="#卸载-nps" class="headerlink" title="卸载 nps"></a>卸载 nps</h1><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 停止 nps 服务</span></span><br><span class="line">nps stop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 搜索 nps 目录</span></span><br><span class="line">whereis nps</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除相关目录</span></span><br><span class="line">rm -rf /usr/bin/nps</span><br><span class="line">rm -rf /etc/nps</span><br><span class="line">rm -rf /usr/<span class="built_in">local</span>/nps</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/06/21/1592713556221-1592713556224.png" alt="title"></p>
<h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>具备可视化操作界面，而且增加隧道只要在服务器端操作即可，这些都比 frp 强，但是感觉目前还没有 frp 成熟，文档也不多，遇到问题有点抓瞎。等有空了再慢慢研究其他功能。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>nps官网<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9laGFuZy1pby5naXRodWIuaW8vbnBzLyMv">https://ehang-io.github.io/nps/#/<i class="fa fa-external-link-alt"></i></span></p>
<p>IT男的VPS系列教程 篇七：超强内网穿透nps 解决所有无公网IP问题（上）<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2EwN21kMm5yLw==">https://post.smzdm.com/p/a07md2nr/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>内网穿透</tag>
        <tag>nps</tag>
        <tag>nas</tag>
      </tags>
  </entry>
  <entry>
    <title>适合小团队的Kanboard项目管理软件</title>
    <url>/2020/05/10/%E9%80%82%E5%90%88%E5%B0%8F%E5%9B%A2%E9%98%9F%E7%9A%84Kanboard%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E8%BD%AF%E4%BB%B6/</url>
    <content><![CDATA[<p><strong>什么是kanban？</strong></p>
<blockquote>
<p>看板管理(Kanban)，常作「Kanban管理」，是豐田生產模式中的重要概念，指為了達到及時生產方式控制現場生產流程的工具。及時生產方式中的拉式生產系統可以使信息的流程縮短，並配合定量、固定裝貨容器等方式，而使生產過程中的物料流動順暢。 在看板標示系統中常將塑料或紙製成薄板，將產品名稱及數量寫於其上，故此得名。 【維基百科】</p>
</blockquote>
<p><strong>什么是Kanboard？</strong></p>
<blockquote>
<p>Kanboard专注于看板管理的项目管理软件。</p>
</blockquote>
<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Kanboard是一个php的开源看板web程序，非常适合异地办公的小型团队使用。</p>
<h1 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h1><p>没有用代码部署方式，而是继续采用了Docker部署的方式。</p>
<ul>
<li>在docker注册表中搜索“kanboard”，第一个即为官方提供的image文件。</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/10/1589094844528-1589094844529.png" alt="title"></p>
<ul>
<li>双击开始安装，选“latest”</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/10/1589094926401-1589094926404.png" alt="title"></p>
<h1 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h1><ul>
<li>先建好需要用的文件夹</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/10/1589095223433-1589095223434.png" alt="title"></p>
<ul>
<li>进【高级设置】，【卷】的设置</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/10/1589095278692-1589095278694.png" alt="title"></p>
<ul>
<li>【端口】的设置，只要避免冲突就可以</li>
</ul>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/10/1589095325676-1589095325679.png" alt="title"></p>
<h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><p>在浏览器中输入 http://群晖IP:9080，默认的账号/密码是：admin/admin</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/10/1589095579595-1589095579597.png" alt="title"></p>
<p>Kanboard 是一个简单的可视化任务板 Web 应用程序，它能使你的项目管理更加简单有效。直观清晰的任务概览看板是视觉上了解项目当前状态的最佳方法。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/10/1589096078814-1589096078818.png" alt="title"></p>
<p>Kanboard还能通过安装一些plugins扩展来扩展Kanboard的功能。插件下载地址：<span class="exturl" data-url="aHR0cHM6Ly9rYW5ib2FyZC5vcmcvcGx1Z2lucy5odG1s">https://kanboard.org/plugins.html<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/10/1589096806531-1589096806532.png" alt="title"></p>
<p>目前Kanboard已经支持超过30种语言，其中包括了简体中文，基本上不需要培训就会使用。</p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>Kanboard官网<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9rYW5ib2FyZC5vcmcv">https://kanboard.org/<i class="fa fa-external-link-alt"></i></span></p>
<p>Kanboard代码<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2thbmJvYXJkL2thbmJvYXJk">https://github.com/kanboard/kanboard<i class="fa fa-external-link-alt"></i></span></p>
<p>KANBOARD：免费开源项目管理工具<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9zaGVzaHVpLm1lL2RvY3Mva2FuYm9hcmQtcHJvamVjdC1tYW5hZ2VtZW50">https://sheshui.me/docs/kanboard-project-management<i class="fa fa-external-link-alt"></i></span></p>
<p>open source软件：kanboard介绍(项目看板）<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p1bm1pbmdfemhhby9hcnRpY2xlL2RldGFpbHMvOTAyOTUzNTQ=">https://blog.csdn.net/junming_zhao/article/details/90295354<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>看板</tag>
        <tag>Kanboard</tag>
        <tag>kanban</tag>
        <tag>项目管理软件</tag>
      </tags>
  </entry>
  <entry>
    <title>遇到“Error spawn failed”错误</title>
    <url>/2020/05/05/%E9%81%87%E5%88%B0%E2%80%9CError%20spawn%20failed%E2%80%9D%E9%94%99%E8%AF%AF/</url>
    <content><![CDATA[<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>昨晚在修改_config.yml后，执行hexo g -d时遇到了错误：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Error</span>: Spawn failed</span><br><span class="line">at ChildProcess. (D:\develop\hexo-home\node_modules\hexo-util\lib\spawn.js:<span class="number">52</span>:<span class="number">19</span>)</span><br><span class="line">at ChildProcess.emit (events.js:<span class="number">198</span>:<span class="number">13</span>)</span><br><span class="line">at ChildProcess.cp.emit (D:\develop\hexo-home\node_modules\cross-spawn\lib\enoent.js:<span class="number">40</span>:<span class="number">29</span>)</span><br><span class="line">at Process.ChildProcess._handle.onexit (internal/child_process.js:<span class="number">248</span>:<span class="number">12</span>)</span><br></pre></td></tr></table></figure>

<p>开始以为是改配置文件导致的，回退后发现问题并没有得到有效的解决，问了度娘才知道，原因可能是因为上传中断，导致本地blog和远端blog的版本不一致，解决办法是删除blog根目录下的 <code>.deploy_git</code>文件夹，然后再依次执行：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo  g</span><br><span class="line">hexo  d</span><br></pre></td></tr></table></figure>

<p>问题解决了，不过忘记了截图，在网上找了一张。</p>
<p><img src="https://raw.githubusercontent.com/wbsu2003/gitnote-images/master/mynote/2020/05/05/20190404135506907-1588655512017.png" alt="title"></p>
<p>（图片来源：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25qY19zZWMvYXJ0aWNsZS9kZXRhaWxzLzg5MDIxMDgz77yJ">https://blog.csdn.net/njc_sec/article/details/89021083）<i class="fa fa-external-link-alt"></i></span></p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><blockquote>
<p>hexo 踩过的坑<br>地址：<span class="exturl" data-url="aHR0cHM6Ly95YW5pc3lvdW5nLmNvbS8yMDE5LzA5LzIxL2hleG8tJUU4JUI4JUE5JUU4JUJGJTg3JUU3JTlBJTg0JUU1JTlEJTkxLw==">https://yanisyoung.com/2019/09/21/hexo-%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91/<i class="fa fa-external-link-alt"></i></span></p>
<p>Error spawn failed<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9sc3R5Lnh5ei8yMDE5LzEwLzAxL0Vycm9yJTIwc3Bhd24lMjBmYWlsZWQv">https://lsty.xyz/2019/10/01/Error%20spawn%20failed/<i class="fa fa-external-link-alt"></i></span></p>
<p>hexo 搭建个人博客部署环节spawn failed及解决<br>地址：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25qY19zZWMvYXJ0aWNsZS9kZXRhaWxzLzg5MDIxMDgz">https://blog.csdn.net/njc_sec/article/details/89021083<i class="fa fa-external-link-alt"></i></span></p>
<p>hexo发生error：spawn failed错误的解决方法<br>地址：<span class="exturl" data-url="aHR0cHM6Ly8xMTg3MTAwNTQ2LmdpdGh1Yi5pby8yMDE5LzExLzI0L3NwYXduLWZhaWxlZC8=">https://1187100546.github.io/2019/11/24/spawn-failed/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>各种折腾</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>blog</tag>
        <tag>deploy_git</tag>
      </tags>
  </entry>
</search>
